{"version":3,"names":["propDefaultValues","Utils","BarChartDefaultValues","mainTitle","subTitle","text","height","width","margin","top","bottom","right","left","padding","localization","ordinalAccessor","valueAccessor","groupAccessor","highestHeadingLevel","layout","accessibility","animationConfig","sortOrder","xAxis","xAxisBarChart","yAxis","yAxisBarChart","wrapLabel","colorPalette","colorPaletteSingle","hoverStyle","clickStyle","referenceStyle","cursor","roundedCorner","barIntervalRatio","hoverOpacity","dataLabel","dataLabelBar","legend","categoryLegend","tooltipLabel","showTooltip","suppressEvents","referenceLines","annotations","clickHighlight","barChartCss","BarChartStyle0","getGlobalInstances","configLocalization","getActiveLanguageString","prepareStrokeColorsFromScheme","calculateLuminance","verifyTextHasSpace","checkAttributeTransitions","createTextStrokeFilter","drawHoverStrokes","removeHoverStrokes","buildStrokes","convertColorsToTextures","initializeElementAccess","initializeDescriptionRoot","setElementFocusHandler","setElementAccessID","setAccessibilityController","hideNonessentialGroups","setAccessTitle","setAccessSubtitle","setAccessLongDescription","setAccessExecutiveSummary","setAccessPurpose","setAccessContext","setAccessStatistics","setAccessChartCounts","setAccessXAxis","setAccessYAxis","setAccessStructure","setAccessAnnotation","retainAccessFocus","checkAccessFocus","setElementInteractionAccessState","setAccessibilityDescriptionWidth","autoTextColor","annotate","chartAccessors","checkInteraction","checkClicked","checkHovered","checkLabelDisplayOnly","convertVisaColor","drawAxis","drawGrid","drawLegend","setSubTitle","setReferenceLine","setLegendInteractionState","drawTooltip","formatDataLabel","getColors","getLicenses","getPadding","getScopedData","initTooltipStyle","placeDataLabels","overrideTitleTooltip","transitionEndAll","scopeDataKeys","visaColors","validateAccessibilityProps","validateLocalizationProps","findTagLevel","prepareRenderChange","roundTo","resolveLabelCollision","halve","BarChart","exports","this","shouldValidateAccessibility","shouldValidateLocalization","updated","shouldUpdateXAxis","shouldUpdateYAxis","shouldUpdateXGrid","shouldUpdateYGrid","shouldValidate","shouldUpdateData","shouldUpdateLayoutVariables","shouldUpdateScales","shouldUpdateTableData","shouldUpdateAnnotations","shouldDrawInteractionState","shouldValidateClickStyle","shouldValidateHoverStyle","shouldSetSelectionClass","shouldUpdateCursor","shouldSetColors","shouldSetSubTitle","shouldUpdateGeometries","shouldUpdateLegend","shouldUpdateReferenceLines","shouldBindInteractivity","shouldUpdateLegendInteractivity","shouldResetRoot","shouldUpdateBaseline","shouldValidateInteractionKeys","shouldUpdateLabelData","shouldUpdateLegendData","shouldCheckValueAxis","shouldCheckLabelAxis","shouldUpdateCorners","shouldEnterUpdateExit","shouldSetGlobalSelections","shouldSetTestingAttributes","shouldValidateLabelPlacement","shouldValidateDataLabelAccessor","shouldCheckLabelColor","shouldSetLabelOpacity","shouldSetLabelPosition","shouldSetLabelContent","shouldUpdateDescriptionWrapper","shouldSetChartAccessibilityTitle","shouldSetChartAccessibilitySubtitle","shouldSetChartAccessibilityLongDescription","shouldSetChartAccessibilityExecutiveSummary","shouldSetChartAccessibilityStatisticalNotes","shouldSetChartAccessibilityStructureNotes","shouldSetParentSVGAccessibility","shouldSetGeometryAccessibilityAttributes","shouldSetGeometryAriaLabels","shouldSetGroupAccessibilityAttributes","shouldSetGroupAccessibilityLabel","shouldSetChartAccessibilityPurpose","shouldSetChartAccessibilityContext","shouldSetLegendCursor","shouldRedrawWrapper","shouldSetTagLevels","shouldSetChartAccessibilityCount","shouldSetYAxisAccessibility","shouldSetXAxisAccessibility","shouldSetAnnotationAccessibility","shouldSetStrokes","shouldSetTextures","shouldSetLocalizationConfig","topLevel","bottomLevel","strokes","textTreatmentHandler","d","i","n","colorsArray","_this","preparedColors","range","scheme","length","includes","colorScale","hideTextures","showExperimentalTextures","bgColor","innerInteractionKeys","innerClickStyle","color","hoverHighlight","innerHoverStyle","me","select","autoPlacementBackgroundColor","placement","collisionPlacement","attr","y","dark_text","classed","root","svg","node","id","chartID","class_1","prototype","dataWatcher","_newVal","_oldVal","sortWatcher","groupAccessorWatcher","interactionKeys","ordinalAccessorWatcher","valueAccessorWatcher","valueOverrideWatcher","headingWatcher","titleWatcher","subtitleWatcher","xAxisWatcher","newGridVal","gridVisible","oldGridVal","newTickInterval","tickInterval","oldTickInterval","newCenterBaseline","centerBaseline","oldCenterBaseline","yAxisWatcher","wrapLabelWatcher","colorsWatcher","layoutWatcher","dimensionWatcher","cornerWatcher","intervalRatioWatcher","labelWatcher","newPlacementVal","oldPlacementVal","newCollisionPlacementVal","oldCollisionPlacementVal","newVisibleVal","visible","oldVisibleVal","newAccessor","labelAccessor","oldAccessor","newFormatVal","format","oldFormatVal","newCollisionHideOnlyVal","collisionHideOnly","oldCollisionHideOnlyVal","newDisplayOnlyVal","displayOnly","oldDisplayOnlyVal","legendWatcher","newInteractiveVal","interactive","oldInteractiveVal","tooltipLabelWatcher","showTooltipWatcher","hoverOpacityWatcher","clickStyleWatcher","hoverStyleWatcher","clickWatcher","hoverWatcher","interactionWatcher","dataKeyNamesWatcher","cursorWatcher","accessibilityWatcher","newTitle","title","oldTitle","newExecutiveSummary","executiveSummary","oldExecutiveSummary","newPurpose","purpose","oldPurpose","newLongDescription","longDescription","oldLongDescription","newContext","contextExplanation","oldContext","newStatisticalNotes","statisticalNotes","oldStatisticalNotes","newStructureNotes","structureNotes","oldStructureNotes","newincludeDataKeyNames","includeDataKeyNames","oldincludeDataKeyNames","newElementDescriptionAccessor","elementDescriptionAccessor","oldElementDescriptionAccessor","newTextures","oldTextures","newExTextures","oldExTextures","newSmallValue","showSmallLabels","oldSmallValue","newStrokes","hideStrokes","oldStrokes","newKeyNav","keyboardNavConfig","disabled","oldKeyNav","newInterface","elementsAreInterface","oldInterface","referenceLinesWatcher","annotationsWatcher","localizationWatcher","newLanguage","language","oldLanguage","newNumeralLocale","numeralLocale","oldNumeralLocale","idWatcher","newVal","console","error","suppressWatcher","unitTestWatcher","componentWillLoad","uniqueID","uuid","initialLoadEvent","emit","Promise","resolve","duration","defaults","barChartEl","setLocalizationConfig","setTagLevels","prepareData","prepareLegendData","prepareLabelData","updateChartVariable","prepareScales","validateInteractionKeys","setTableData","shouldValidateAccessibilityProps","shouldValidateLocalizationProps","validateClickStyle","validateHoverStyle","setColors","componentWillUpdate","componentDidLoad","renderRootElements","setTooltipInitialStyle","setChartDescriptionWrapper","setChartAccessibilityTitle","setChartAccessibilitySubtitle","setChartAccessibilityLongDescription","setChartAccessibilityExecutiveSummary","setChartAccessibilityPurpose","setChartAccessibilityContext","setChartAccessibilityStatisticalNotes","setChartAccessibilityStructureNotes","setParentSVGAccessibility","reSetRoot","setTextures","setStrokes","setSubTitleElements","drawXGrid","drawYGrid","setGlobalSelections","setTestingAttributes","validateDataLabelAccessor","enterGeometries","updateGeometries","exitGeometries","enterLabels","updateLabels","exitLabels","drawGeometries","setChartCountAccessibility","setGeometryAccessibilityAttributes","setGeometryAriaLabels","setRoundedCorners","drawLegendElements","validateLabelPlacement","setLabelContent","processLabelPosition","updatingLabels","drawReferenceLines","setSelectedClass","checkLabelColorAgainstBackground","updateCursor","bindInteractivity","bindLegendInteractivity","drawXAxis","setXAxisAccessibility","drawYAxis","setYAxisAccessibility","drawAnnotations","setAnnotationAccessibility","drawBaseline","onChangeHandler","bars","setGroupAccessibilityAttributes","setGroupAccessibilityID","then","initialLoadEndEvent","componentDidUpdate","setLabelPosition","updateInteractionState","setLabelOpacity","setLegendCursor","drawEndEvent","windowInstances","languageString","i18Next","languageObject","getResourceBundle","numeralObject","numeral","localeData","skipValidation","Object","assign","disableValidation","data","context","onClickEvent","undefined","clickEvent","innerLabelAccessor","getLanguageString","innerHeight","innerWidth","innerPaddedHeight","innerPaddedWidth","preppedData","__spreadArray","sort","a","b","parseFloat","map","nested","nest","key","entries","legendData","forEach","el","push","values","minIdx","minIndex","minItem","maxIdx","maxIndex","maxItem","firstItem","find","val","lastItem","reverse","displayOnlyLabelData","first","last","min","max","subTitleG","colorFromProps","colors","minValue","maxValue","scaleOrdinal","domain","strokeColors","backgroundColors","half","Math","ceil","isDiverging","isDark","colorsMatchingScheme","fillLuminance","fillColor","strokeLuminance","textureColor","darkerColor","lighterColor","fillColors","copy","colorArr","textures","rootSVG","disableTransitions","strokeOverride","keys","tableData","tableColumns","shouldCenterBaseline","minBarValue","maxValueOverride","minValueOverride","maxBarValue","scaleLinear","x","scaleBand","changeSvg","selection","namespace","easing","easeCircleIn","changeRoot","concat","changeRootG","rootG","checkHideAxisState","axisName","relevantLayout","axisAccessor","axisLabel","label","dataKeyNames","axisScale","dateFormat","hide","markOffset","rootEle","hasXAxis","xAxisLabel","hasYAxis","yAxisLabel","gridG","enter","interrupt","ordinalAxis","ordinalDimension","innerPaddedOrdinalDimension","toUpperCase","substring","valueAxis","valueDimension","choice","on","onClickHandler","onHoverHandler","onMouseOutHandler","abs","each","_d","bandwidth","shift","update","order","transition","ease","exit","axisOfShift","dimensionOfShift","innerPaddedDimension","self","call","focusDidExist","remove","parentGNode","geometryIsUpdating","numeric","newValue","transitionEndEvent","dataBoundToGeometries","selectAll","append","merge","exitSize","size","enterSize","dataBoundToLabels","labels","enteringLabels","exitingLabels","unitTest","legendG","tooltipG","referencesG","strokeWidth","clicked","hovered","baseColor","state","inputElement","fill","addCollisionClass","hideOnly","processLabelOpacity","labelsAdded","filter","_","labelsRemoved","bitmaps","labelSelection","avoidMarks","validPositions","offsets","accessors","removeOnly","fullBandwidth","prevOpacity","styleVisibility","style","dimensions","hasRoom","fontSize","targetOpacity","selected","selectable","Number","EPSILON","enterTransition","enteringOnly","updatingOnly","runTransition","redrawBitmap","suppressMarkDraw","textHeight","collisionSettings","vertical","middle","horizontal","boundsScope","textElement","getComputedStyle","changeLabels","xScale","yScale","labelOffset","chartType","avoidCollision","runOccupancyBitmap","groupName","baseColorArr","type","labelKey","source","xAccessor","yAccessor","chartTag","redraw","disableKeyNav","hideDataTable","hideDataTableButton","description","geomType","includeKeyNames","dataKeys","onChangeFunc","added","removed","target","isLegend","hoverEvent","eventsTooltip","evt","event","isToShow","mouseOutEvent","_a","render","drawStartEvent","theme","init","h","class","display","isInteractive","hasCousinNavigation","isCompact","exceptions","exception","window"],"sources":["src/components/bar-chart/bar-chart-default-values.ts","src/components/bar-chart/bar-chart.scss?tag=bar-chart","src/components/bar-chart/bar-chart.tsx"],"sourcesContent":["/**\n * Copyright (c) 2020, 2021, 2022, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport Utils from '@visa/visa-charts-utils';\n\nconst { propDefaultValues } = Utils;\n\nexport class BarChartDefaultValues {\n  static readonly mainTitle = 'This is bar chart title';\n  static readonly subTitle = propDefaultValues.subTitle.text;\n  static readonly height = 325;\n  static readonly width = 675;\n  static readonly margin = {\n    top: 325 * 0.01,\n    bottom: 325 * 0.01,\n    right: 675 * 0.01,\n    left: 675 * 0.01\n  };\n  static readonly padding = {\n    top: 20,\n    bottom: 50,\n    right: 60,\n    left: 60\n  };\n\n  static readonly localization = propDefaultValues.localization;\n\n  static readonly ordinalAccessor = 'label';\n  static readonly valueAccessor = 'value';\n  static readonly groupAccessor = '';\n\n  static readonly highestHeadingLevel = propDefaultValues.highestHeadingLevel;\n  static readonly layout = propDefaultValues.layout;\n  static readonly accessibility = propDefaultValues.accessibility;\n  static readonly animationConfig = propDefaultValues.animationConfig;\n  static readonly sortOrder = propDefaultValues.sortOrder;\n  static readonly xAxis = propDefaultValues.xAxisBarChart;\n\n  static readonly yAxis = propDefaultValues.yAxisBarChart;\n  static readonly wrapLabel = propDefaultValues.wrapLabel;\n  static readonly colorPalette = propDefaultValues.colorPaletteSingle;\n\n  static readonly hoverStyle = propDefaultValues.hoverStyle;\n  static readonly clickStyle = propDefaultValues.clickStyle;\n\n  static readonly referenceStyle = propDefaultValues.referenceStyle;\n  static readonly cursor = propDefaultValues.cursor;\n  static readonly roundedCorner = propDefaultValues.roundedCorner;\n  static readonly barIntervalRatio = propDefaultValues.barIntervalRatio;\n  static readonly hoverOpacity = propDefaultValues.hoverOpacity;\n\n  static readonly dataLabel = propDefaultValues.dataLabelBar;\n  static readonly dataKeyNames;\n  static readonly legend = propDefaultValues.categoryLegend;\n  static readonly tooltipLabel = propDefaultValues.tooltipLabel;\n\n  static readonly showTooltip = propDefaultValues.showTooltip;\n  static readonly suppressEvents = propDefaultValues.suppressEvents;\n  static readonly referenceLines = propDefaultValues.referenceLines;\n  static readonly annotations = propDefaultValues.annotations;\n\n  static readonly hoverHighlight;\n  static readonly clickHighlight = propDefaultValues.clickHighlight;\n}\n","/**\n * Copyright (c) 2020, 2021, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nbar-chart {\n  .annotations {\n    pointer-events: none;\n    .handle {\n      pointer-events: all;\n    }\n  }\n\n  .screen-reader-info {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n\n  .data-table-link {\n    color: #767676;\n    text-decoration: none;\n    font-size: 12px;\n    margin-left: 5%;\n  }\n\n  .hidden {\n    display: none;\n  }\n\n  cursor: default;\n  .light {\n    .grid {\n      line {\n        stroke: #c9c9c9;\n        stroke-opacity: 1;\n        stroke-width: 0.8;\n        // shape-rendering: crispEdges;\n        // stroke-dasharray: 4, 4;\n      }\n      path {\n        stroke-width: 0;\n      }\n    }\n    .axis {\n      font-size: 12px;\n      .tick {\n        text {\n          fill: #767676;\n        }\n        line {\n          stroke: #767676;\n        }\n      }\n\n      &-label {\n        // axis label\n        text-anchor: middle;\n        font: 1rem sans-serif;\n      }\n      &-mark {\n        // axis mark\n        color: #949494;\n        stroke-width: 2px;\n      }\n    }\n\n    .y.axis {\n      path {\n        stroke: #767676;\n        opacity: 0;\n      }\n    }\n    .x.axis {\n      path {\n        stroke: transparent;\n      }\n    }\n\n    .o-layout--chart {\n      .bar-dataLabel-vertical {\n        // fill: #767676;\n        text-anchor: middle;\n      }\n      .bar-dataLabel-horizontal {\n        // fill: #767676;\n        text-anchor: start;\n      }\n    }\n  }\n  .dark {\n    .grid {\n      line {\n        stroke: lightgrey;\n        stroke-opacity: 0.7;\n        shape-rendering: crispEdges;\n      }\n      path {\n        stroke-width: 0;\n      }\n    }\n    .axis {\n      font-size: 12px;\n      .tick {\n        line {\n          stroke: lightgrey;\n        }\n        text {\n          fill: grey;\n        }\n      }\n      path {\n        stroke: black;\n      }\n\n      &-label {\n        text-anchor: middle;\n        font: 1rem sans-serif;\n      }\n    }\n    .o-layout--chart svg {\n      background: black;\n      .bar-dataLabel-vertical {\n        text-anchor: middle;\n      }\n      .bar-dataLabel-horizontal {\n        text-anchor: start;\n      }\n    }\n  }\n\n  //TBD: add color based on scheme\n  // .r.axis circle {\n  //   stroke: #cccccc;\n  //   stroke-width: 1px;\n  //   fill: none;\n  // }\n\n  //Text alignment, not impacted by color theme\n  // .a.axis text {\n  //   text-anchor: middle;\n  //   font-size: 10pt;\n  // }\n  //\n  // .r.axis text {\n  //   text-anchor: end;\n  //   font-size: 8pt;\n  // }\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport { Component, Element, Prop, Watch, h, Event, EventEmitter } from '@stencil/core';\nimport { select, event } from 'd3-selection';\nimport { max, min, minIndex, maxIndex } from 'd3-array';\nimport { scaleBand, scaleLinear, scaleOrdinal } from 'd3-scale';\nimport { easeCircleIn } from 'd3-ease';\nimport { nest } from 'd3-collection';\nimport {\n  IBoxModelType,\n  ILocalizationType,\n  IHoverStyleType,\n  IClickStyleType,\n  IAxisType,\n  IReferenceStyleType,\n  IDataLabelType,\n  ITooltipLabelType,\n  IAccessibilityType,\n  IAnimationConfig,\n  ILegendType,\n  ISubTitleType\n} from '@visa/charts-types';\nimport { BarChartDefaultValues } from './bar-chart-default-values';\nimport { v4 as uuid } from 'uuid';\nimport 'd3-transition';\nimport Utils from '@visa/visa-charts-utils';\n\nconst {\n  getGlobalInstances,\n  configLocalization,\n  getActiveLanguageString,\n  prepareStrokeColorsFromScheme,\n  calculateLuminance,\n  verifyTextHasSpace,\n  checkAttributeTransitions,\n  createTextStrokeFilter,\n  drawHoverStrokes,\n  removeHoverStrokes,\n  buildStrokes,\n  convertColorsToTextures,\n  initializeElementAccess,\n  initializeDescriptionRoot,\n  setElementFocusHandler,\n  setElementAccessID,\n  setAccessibilityController,\n  hideNonessentialGroups,\n  setAccessTitle,\n  setAccessSubtitle,\n  setAccessLongDescription,\n  setAccessExecutiveSummary,\n  setAccessPurpose,\n  setAccessContext,\n  setAccessStatistics,\n  setAccessChartCounts,\n  setAccessXAxis,\n  setAccessYAxis,\n  setAccessStructure,\n  setAccessAnnotation,\n  retainAccessFocus,\n  checkAccessFocus,\n  setElementInteractionAccessState,\n  setAccessibilityDescriptionWidth,\n  autoTextColor,\n  annotate,\n  chartAccessors,\n  checkInteraction,\n  checkClicked,\n  checkHovered,\n  checkLabelDisplayOnly,\n  convertVisaColor,\n  drawAxis,\n  drawGrid,\n  drawLegend,\n  setSubTitle,\n  setReferenceLine,\n  setLegendInteractionState,\n  drawTooltip,\n  formatDataLabel,\n  getColors,\n  getLicenses,\n  getPadding,\n  getScopedData,\n  initTooltipStyle,\n  placeDataLabels,\n  overrideTitleTooltip,\n  transitionEndAll,\n  scopeDataKeys,\n  visaColors,\n  validateAccessibilityProps,\n  validateLocalizationProps,\n  findTagLevel,\n  prepareRenderChange,\n  roundTo,\n  resolveLabelCollision,\n  halve\n} = Utils;\n\n@Component({\n  tag: 'bar-chart',\n  styleUrl: 'bar-chart.scss'\n})\nexport class BarChart {\n  @Event() clickEvent: EventEmitter;\n  @Event() hoverEvent: EventEmitter;\n  @Event() mouseOutEvent: EventEmitter;\n  @Event() initialLoadEvent: EventEmitter;\n  @Event() initialLoadEndEvent: EventEmitter;\n  @Event() drawStartEvent: EventEmitter;\n  @Event() drawEndEvent: EventEmitter;\n  @Event() transitionEndEvent: EventEmitter;\n\n  // Chart Attributes (1/7)\n  @Prop({ mutable: true }) localization: ILocalizationType = BarChartDefaultValues.localization;\n  @Prop({ mutable: true }) mainTitle: string = BarChartDefaultValues.mainTitle;\n  @Prop({ mutable: true }) subTitle: string | ISubTitleType = BarChartDefaultValues.subTitle;\n  @Prop({ mutable: true }) height: number = BarChartDefaultValues.height;\n  @Prop({ mutable: true }) width: number = BarChartDefaultValues.width;\n  @Prop({ mutable: true }) layout: string = BarChartDefaultValues.layout;\n  @Prop({ mutable: true }) highestHeadingLevel: string | number = BarChartDefaultValues.highestHeadingLevel;\n\n  @Prop({ mutable: true }) margin: IBoxModelType = BarChartDefaultValues.margin;\n  @Prop({ mutable: true }) padding: IBoxModelType = BarChartDefaultValues.padding;\n\n  // Data (2/6)\n  @Prop() data: object[];\n  @Prop() uniqueID: string;\n  @Prop({ mutable: true }) ordinalAccessor: string = BarChartDefaultValues.ordinalAccessor;\n  @Prop({ mutable: true }) valueAccessor: string = BarChartDefaultValues.valueAccessor;\n  @Prop({ mutable: true }) groupAccessor: string = BarChartDefaultValues.groupAccessor;\n  @Prop({ mutable: true }) sortOrder: string = BarChartDefaultValues.sortOrder;\n\n  // Axis (3/3)\n  @Prop({ mutable: true }) xAxis: IAxisType = BarChartDefaultValues.xAxis;\n  @Prop({ mutable: true }) yAxis: IAxisType = BarChartDefaultValues.yAxis;\n  @Prop({ mutable: true }) wrapLabel: boolean = BarChartDefaultValues.wrapLabel;\n\n  // Color & Shape (4/10)\n  @Prop({ mutable: true }) colorPalette: string = BarChartDefaultValues.colorPalette;\n  @Prop({ mutable: true }) colors: string[];\n  @Prop({ mutable: true }) hoverStyle: IHoverStyleType = BarChartDefaultValues.hoverStyle;\n  @Prop({ mutable: true }) clickStyle: IClickStyleType = BarChartDefaultValues.clickStyle;\n  @Prop({ mutable: true }) referenceStyle: IReferenceStyleType = BarChartDefaultValues.referenceStyle;\n  @Prop({ mutable: true }) cursor: string = BarChartDefaultValues.cursor;\n  @Prop({ mutable: true }) roundedCorner: number = BarChartDefaultValues.roundedCorner;\n  @Prop({ mutable: true }) barIntervalRatio: number = BarChartDefaultValues.barIntervalRatio;\n  @Prop({ mutable: true }) hoverOpacity: number = BarChartDefaultValues.hoverOpacity;\n  @Prop({ mutable: true }) animationConfig: IAnimationConfig = BarChartDefaultValues.animationConfig;\n\n  // Data label (5/7)\n  @Prop({ mutable: true }) dataLabel: IDataLabelType = BarChartDefaultValues.dataLabel;\n  @Prop({ mutable: true }) dataKeyNames: object;\n  @Prop({ mutable: true }) showTooltip: boolean = BarChartDefaultValues.showTooltip;\n  @Prop({ mutable: true }) tooltipLabel: ITooltipLabelType = BarChartDefaultValues.tooltipLabel;\n  @Prop({ mutable: true }) accessibility: IAccessibilityType = BarChartDefaultValues.accessibility;\n  @Prop({ mutable: true }) legend: ILegendType = BarChartDefaultValues.legend;\n  @Prop({ mutable: true }) annotations: object[] = BarChartDefaultValues.annotations;\n\n  // Calculation (6/7)\n  @Prop() maxValueOverride: number;\n  @Prop() minValueOverride: number;\n  @Prop({ mutable: true }) referenceLines: object[] = BarChartDefaultValues.referenceLines;\n\n  // Interactivity (7/7)\n  @Prop({ mutable: true }) suppressEvents: boolean = BarChartDefaultValues.suppressEvents;\n  @Prop({ mutable: true }) hoverHighlight: object;\n  @Prop({ mutable: true }) clickHighlight: object[] = BarChartDefaultValues.clickHighlight;\n  @Prop({ mutable: true }) interactionKeys: string[];\n\n  // Testing (8/7)\n  @Prop() unitTest: boolean = false;\n  //  @Prop() debugMode: boolean = false;\n\n  // Element\n  @Element()\n  barChartEl: HTMLElement;\n  shouldValidateAccessibility: boolean = true;\n  shouldValidateLocalization: boolean = true;\n  svg: any;\n  root: any;\n  rootG: any;\n  gridG: any;\n  bars: any;\n  labels: any;\n  nest: any;\n  referencesG: any;\n  defaults: boolean;\n  duration: number;\n  enter: any;\n  exit: any;\n  update: any;\n  enteringLabels: any;\n  exitingLabels: any;\n  updatingLabels: any;\n  x: any;\n  y: any;\n  innerHeight: number;\n  innerWidth: number;\n  innerPaddedHeight: number;\n  innerPaddedWidth: number;\n  colorArr: any;\n  preppedData: any;\n  displayOnlyLabelData: any;\n  placement: string;\n  legendG: any;\n  subTitleG: any;\n  tooltipG: any;\n  legendData: any;\n  // these are added for accessibility\n  updated: boolean = true;\n  enterSize: number;\n  exitSize: number;\n  tableData: any;\n  tableColumns: any;\n  chartID: string;\n  innerClickStyle: any;\n  innerHoverStyle: any;\n  innerInteractionKeys: any;\n  preparedColors: any;\n  fillColors: any;\n  strokeColors: any;\n  innerLabelAccessor: string;\n  shouldUpdateXAxis: boolean = false;\n  shouldUpdateYAxis: boolean = false;\n  shouldUpdateXGrid: boolean = false;\n  shouldUpdateYGrid: boolean = false;\n  shouldValidate: boolean = false;\n  shouldUpdateData: boolean = false;\n  shouldUpdateLayoutVariables: boolean = false;\n  shouldUpdateScales: boolean = false;\n  shouldUpdateTableData: boolean = false;\n  shouldUpdateAnnotations: boolean = false;\n  shouldDrawInteractionState: boolean = false;\n  shouldValidateClickStyle: boolean = false;\n  shouldValidateHoverStyle: boolean = false;\n  shouldSetSelectionClass: boolean = false;\n  shouldUpdateCursor: boolean = false;\n  shouldSetColors: boolean = false;\n  shouldSetSubTitle: boolean = false;\n  shouldUpdateGeometries: boolean = false;\n  shouldUpdateLegend: boolean = false;\n  shouldUpdateReferenceLines: boolean = false;\n  shouldBindInteractivity: boolean = false;\n  shouldUpdateLegendInteractivity: boolean = false;\n  shouldResetRoot: boolean = false;\n  shouldUpdateBaseline: boolean = false;\n  shouldValidateInteractionKeys: boolean = false;\n  shouldUpdateLabelData: boolean = false;\n  shouldUpdateLegendData: boolean = false;\n  shouldCheckValueAxis: boolean = false;\n  shouldCheckLabelAxis: boolean = false;\n  shouldUpdateCorners: boolean = false;\n  shouldEnterUpdateExit: boolean = false;\n  shouldSetGlobalSelections: boolean = false;\n  shouldSetTestingAttributes: boolean = false;\n  shouldValidateLabelPlacement: boolean = false;\n  shouldValidateDataLabelAccessor: boolean = false;\n  shouldCheckLabelColor: boolean = false;\n  shouldSetLabelOpacity: boolean = false;\n  shouldSetLabelPosition: boolean = false;\n  shouldSetLabelContent: boolean = false;\n  shouldUpdateDescriptionWrapper: boolean = false;\n  shouldSetChartAccessibilityTitle: boolean = false;\n  shouldSetChartAccessibilitySubtitle: boolean = false;\n  shouldSetChartAccessibilityLongDescription: boolean = false;\n  shouldSetChartAccessibilityExecutiveSummary: boolean = false;\n  shouldSetChartAccessibilityStatisticalNotes: boolean = false;\n  shouldSetChartAccessibilityStructureNotes: boolean = false;\n  shouldSetParentSVGAccessibility: boolean = false;\n  shouldSetGeometryAccessibilityAttributes: boolean = false;\n  shouldSetGeometryAriaLabels: boolean = false;\n  shouldSetGroupAccessibilityAttributes: boolean = false;\n  shouldSetGroupAccessibilityLabel: boolean = false;\n  shouldSetChartAccessibilityPurpose: boolean = false;\n  shouldSetChartAccessibilityContext: boolean = false;\n  shouldSetLegendCursor: boolean = false;\n  shouldRedrawWrapper: boolean = false;\n  shouldSetTagLevels: boolean = false;\n  shouldSetChartAccessibilityCount: boolean = false;\n  shouldSetYAxisAccessibility: boolean = false;\n  shouldSetXAxisAccessibility: boolean = false;\n  shouldSetAnnotationAccessibility: boolean = false;\n  shouldSetStrokes: boolean = false;\n  shouldSetTextures: boolean = false;\n  shouldSetLocalizationConfig: boolean = false;\n  topLevel: string = 'h2';\n  bottomLevel: string = 'p';\n  strokes: any = {};\n  bitmaps: any;\n\n  @Watch('data')\n  dataWatcher(_newVal, _oldVal) {\n    this.updated = true;\n    this.shouldUpdateData = true;\n    this.shouldUpdateLabelData = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldSetColors = true;\n    this.shouldSetTextures = true;\n    // this.shouldDrawInteractionState = true; // called from updateGeometries\n    // this.shouldCheckLabelColor = true; // called from updateGeometries\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldSetLabelContent = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateLegendData = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldValidate = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('sortOrder')\n  sortWatcher(_newVal, _oldVal) {\n    this.updated = true;\n    this.shouldUpdateData = true;\n    this.shouldUpdateLabelData = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldSetLabelContent = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('groupAccessor')\n  groupAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLegendData = true;\n    this.shouldSetColors = true;\n    this.shouldSetTextures = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateLegend = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetStrokes = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('ordinalAccessor')\n  ordinalAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldCheckLabelAxis = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetStrokes = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('valueAccessor')\n  valueAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetColors = true;\n    this.shouldSetTextures = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckValueAxis = true;\n    this.shouldValidateDataLabelAccessor = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelContent = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('maxValueOverride')\n  @Watch('minValueOverride')\n  valueOverrideWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldCheckValueAxis = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('highestHeadingLevel')\n  headingWatcher(_newVal, _oldVal) {\n    this.shouldRedrawWrapper = true;\n    this.shouldSetTagLevels = true;\n    this.shouldSetChartAccessibilityCount = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('mainTitle')\n  titleWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('subTitle')\n  subtitleWatcher(_newVal, _oldVal) {\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('xAxis')\n  xAxisWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateXGrid = true;\n    }\n    const newCenterBaseline = _newVal && _newVal.centerBaseline;\n    const oldCenterBaseline = _oldVal && _oldVal.centerBaseline;\n    if (newCenterBaseline !== oldCenterBaseline) {\n      this.shouldValidateLabelPlacement = true;\n      this.shouldUpdateScales = true;\n      this.shouldResetRoot = true;\n      this.shouldUpdateGeometries = true;\n      this.shouldSetGeometryAccessibilityAttributes = true;\n      this.shouldUpdateXAxis = true;\n      this.shouldUpdateYAxis = true;\n      this.shouldUpdateXGrid = true;\n      this.shouldUpdateYGrid = true;\n      this.shouldSetLabelPosition = true;\n      this.shouldCheckLabelColor = true;\n      this.shouldUpdateLegend = true;\n      this.shouldUpdateReferenceLines = true;\n      this.shouldUpdateBaseline = true;\n      this.shouldUpdateAnnotations = true;\n    }\n  }\n\n  @Watch('yAxis')\n  yAxisWatcher(_newVal, _oldVal) {\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateYGrid = true;\n    }\n    const newCenterBaseline = _newVal && _newVal.centerBaseline;\n    const oldCenterBaseline = _oldVal && _oldVal.centerBaseline;\n    if (newCenterBaseline !== oldCenterBaseline) {\n      this.shouldValidateLabelPlacement = true;\n      this.shouldUpdateScales = true;\n      this.shouldResetRoot = true;\n      this.shouldUpdateGeometries = true;\n      this.shouldSetGeometryAccessibilityAttributes = true;\n      this.shouldUpdateXAxis = true;\n      this.shouldUpdateYAxis = true;\n      this.shouldUpdateXGrid = true;\n      this.shouldUpdateYGrid = true;\n      this.shouldSetLabelPosition = true;\n      this.shouldCheckLabelColor = true;\n      this.shouldUpdateLegend = true;\n      this.shouldUpdateReferenceLines = true;\n      this.shouldUpdateBaseline = true;\n      this.shouldUpdateAnnotations = true;\n    }\n  }\n\n  @Watch('wrapLabel')\n  wrapLabelWatcher(_newVal, _oldVal) {\n    this.shouldCheckLabelAxis = true;\n  }\n\n  @Watch('colors')\n  @Watch('colorPalette')\n  colorsWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldSetTextures = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateLegend = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('layout')\n  layoutWatcher(_newVal, _oldVal) {\n    this.shouldValidateLabelPlacement = true;\n    this.shouldUpdateScales = true;\n    this.shouldResetRoot = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('height')\n  @Watch('width')\n  @Watch('padding')\n  @Watch('margin')\n  dimensionWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLayoutVariables = true;\n    this.shouldUpdateScales = true;\n    this.shouldResetRoot = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('roundedCorner')\n  cornerWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCorners = true;\n  }\n\n  @Watch('barIntervalRatio')\n  intervalRatioWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldCheckLabelAxis = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('dataLabel')\n  labelWatcher(_newVal, _oldVal) {\n    const newPlacementVal = _newVal && _newVal.placement ? _newVal.placement : false;\n    const oldPlacementVal = _oldVal && _oldVal.placement ? _oldVal.placement : false;\n    const newCollisionPlacementVal = _newVal && _newVal.collisionPlacement ? _newVal.collisionPlacement : false;\n    const oldCollisionPlacementVal = _oldVal && _oldVal.collisionPlacement ? _oldVal.collisionPlacement : false;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    const newAccessor = _newVal && _newVal.labelAccessor ? _newVal.labelAccessor : false;\n    const oldAccessor = _oldVal && _oldVal.labelAccessor ? _oldVal.labelAccessor : false;\n    const newFormatVal = _newVal && _newVal.format ? _newVal.format : false;\n    const oldFormatVal = _oldVal && _oldVal.format ? _oldVal.format : false;\n    const newCollisionHideOnlyVal = _newVal && _newVal.collisionHideOnly ? _newVal.collisionHideOnly : false;\n    const oldCollisionHideOnlyVal = _oldVal && _oldVal.collisionHideOnly ? _oldVal.collisionHideOnly : false;\n    const newDisplayOnlyVal = _newVal && _newVal.displayOnly;\n    const oldDisplayOnlyVal = _oldVal && _oldVal.displayOnly;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetLabelOpacity = true;\n    }\n    if (newDisplayOnlyVal !== oldDisplayOnlyVal) {\n      this.shouldUpdateLabelData = true;\n      this.shouldSetLabelOpacity = true;\n    }\n    if (\n      newPlacementVal !== oldPlacementVal ||\n      newCollisionPlacementVal !== oldCollisionPlacementVal ||\n      newCollisionHideOnlyVal !== oldCollisionHideOnlyVal\n    ) {\n      this.shouldValidateLabelPlacement = true;\n      this.shouldSetLabelPosition = true;\n      this.shouldCheckLabelColor = true;\n    }\n    if (newAccessor !== oldAccessor || newFormatVal !== oldFormatVal) {\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldSetLabelContent = true;\n      this.shouldCheckLabelColor = true;\n    }\n  }\n\n  @Watch('legend')\n  legendWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLegend = true;\n    const newInteractiveVal = _newVal && _newVal.interactive;\n    const oldInteractiveVal = _oldVal && _oldVal.interactive;\n    if (newInteractiveVal !== oldInteractiveVal) {\n      this.shouldSetLegendCursor = true;\n      this.shouldUpdateLegendInteractivity = true;\n    }\n  }\n\n  @Watch('tooltipLabel')\n  tooltipLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('showTooltip')\n  showTooltipWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('hoverOpacity')\n  hoverOpacityWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n  }\n\n  @Watch('clickStyle')\n  clickStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldValidateClickStyle = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('hoverStyle')\n  hoverStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldValidateHoverStyle = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('clickHighlight')\n  clickWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetSelectionClass = true;\n  }\n\n  @Watch('hoverHighlight')\n  hoverWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n  }\n\n  @Watch('interactionKeys')\n  interactionWatcher(_newVal, _oldVal) {\n    this.shouldValidateInteractionKeys = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateTableData = true;\n  }\n\n  @Watch('dataKeyNames')\n  dataKeyNamesWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('cursor')\n  cursorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCursor = true;\n    this.shouldSetLegendCursor = true;\n  }\n\n  @Watch('accessibility')\n  accessibilityWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    const newTitle = _newVal && _newVal.title ? _newVal.title : false;\n    const oldTitle = _oldVal && _oldVal.title ? _oldVal.title : false;\n    if (newTitle !== oldTitle) {\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newExecutiveSummary = _newVal && _newVal.executiveSummary ? _newVal.executiveSummary : false;\n    const oldExecutiveSummary = _oldVal && _oldVal.executiveSummary ? _oldVal.executiveSummary : false;\n    if (newExecutiveSummary !== oldExecutiveSummary) {\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n    }\n    const newPurpose = _newVal && _newVal.purpose ? _newVal.purpose : false;\n    const oldPurpose = _oldVal && _oldVal.purpose ? _oldVal.purpose : false;\n    if (newPurpose !== oldPurpose) {\n      this.shouldSetChartAccessibilityPurpose = true;\n    }\n    const newLongDescription = _newVal && _newVal.longDescription ? _newVal.longDescription : false;\n    const oldLongDescription = _oldVal && _oldVal.longDescription ? _oldVal.longDescription : false;\n    if (newLongDescription !== oldLongDescription) {\n      this.shouldSetChartAccessibilityLongDescription = true;\n    }\n    const newContext = _newVal && _newVal.contextExplanation ? _newVal.contextExplanation : false;\n    const oldContext = _oldVal && _oldVal.contextExplanation ? _oldVal.contextExplanation : false;\n    if (newContext !== oldContext) {\n      this.shouldSetChartAccessibilityContext = true;\n    }\n    const newStatisticalNotes = _newVal && _newVal.statisticalNotes ? _newVal.statisticalNotes : false;\n    const oldStatisticalNotes = _oldVal && _oldVal.statisticalNotes ? _oldVal.statisticalNotes : false;\n    if (newStatisticalNotes !== oldStatisticalNotes) {\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n    }\n    const newStructureNotes = _newVal && _newVal.structureNotes ? _newVal.structureNotes : false;\n    const oldStructureNotes = _oldVal && _oldVal.structureNotes ? _oldVal.structureNotes : false;\n    if (newStructureNotes !== oldStructureNotes) {\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    const newincludeDataKeyNames = _newVal && _newVal.includeDataKeyNames;\n    const oldincludeDataKeyNames = _oldVal && _oldVal.includeDataKeyNames;\n    const newElementDescriptionAccessor =\n      _newVal && _newVal.elementDescriptionAccessor ? _newVal.elementDescriptionAccessor : false;\n    const oldElementDescriptionAccessor =\n      _oldVal && _oldVal.elementDescriptionAccessor ? _oldVal.elementDescriptionAccessor : false;\n    if (\n      newincludeDataKeyNames !== oldincludeDataKeyNames ||\n      newElementDescriptionAccessor !== oldElementDescriptionAccessor\n    ) {\n      if (newincludeDataKeyNames !== oldincludeDataKeyNames) {\n        // this one is tricky because it needs to run after the lifecycle\n        // AND it could run in the off-chance this prop is changed\n        this.shouldSetGroupAccessibilityLabel = true;\n      }\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newTextures = _newVal && _newVal.hideTextures ? _newVal.hideTextures : false;\n    const oldTextures = _oldVal && _oldVal.hideTextures ? _oldVal.hideTextures : false;\n    const newExTextures = _newVal && _newVal.showExperimentalTextures ? _newVal.showExperimentalTextures : false;\n    const oldExTextures = _oldVal && _oldVal.showExperimentalTextures ? _oldVal.showExperimentalTextures : false;\n    if (newTextures !== oldTextures || newExTextures !== oldExTextures) {\n      this.shouldSetTextures = true;\n      this.shouldUpdateLegend = true;\n      this.shouldDrawInteractionState = true;\n      this.shouldCheckLabelColor = true;\n    }\n    const newSmallValue = _newVal && _newVal.showSmallLabels ? _newVal.showSmallLabels : false;\n    const oldSmallValue = _oldVal && _oldVal.showSmallLabels ? _oldVal.showSmallLabels : false;\n    if (newSmallValue !== oldSmallValue) {\n      this.shouldSetLabelOpacity = true;\n    }\n    const newStrokes = _newVal && _newVal.hideStrokes ? _newVal.hideStrokes : false;\n    const oldStrokes = _oldVal && _oldVal.hideStrokes ? _oldVal.hideStrokes : false;\n    if (newStrokes !== oldStrokes) {\n      this.shouldSetStrokes = true;\n      this.shouldUpdateLegend = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newKeyNav =\n      _newVal && _newVal.keyboardNavConfig && _newVal.keyboardNavConfig.disabled\n        ? _newVal.keyboardNavConfig.disabled\n        : false;\n    const oldKeyNav =\n      _oldVal && _oldVal.keyboardNavConfig && _oldVal.keyboardNavConfig.disabled\n        ? _oldVal.keyboardNavConfig.disabled\n        : false;\n    const newInterface = _newVal && _newVal.elementsAreInterface ? _newVal.elementsAreInterface : false;\n    const oldInterface = _oldVal && _oldVal.elementsAreInterface ? _oldVal.elementsAreInterface : false;\n    if (newKeyNav !== oldKeyNav || newInterface !== oldInterface) {\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetChartAccessibilitySubtitle = true;\n      this.shouldSetChartAccessibilityLongDescription = true;\n      this.shouldSetChartAccessibilityContext = true;\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n      this.shouldSetChartAccessibilityPurpose = true;\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    if (newInterface !== oldInterface) {\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('referenceLines')\n  @Watch('referenceStyle')\n  referenceLinesWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetAnnotationAccessibility = true;\n  }\n\n  @Watch('annotations')\n  annotationsWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetAnnotationAccessibility = true;\n  }\n\n  @Watch('localization')\n  localizationWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n\n    // language\n    const newLanguage = _newVal && _newVal.language ? _newVal.language : false;\n    const oldLanguage = _oldVal && _oldVal.language ? _oldVal.language : false;\n    if (newLanguage !== oldLanguage) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldSetLabelContent = true;\n      this.shouldCheckLabelColor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n\n    // numeralLocale\n    const newNumeralLocale = _newVal && _newVal.numeralLocale ? _newVal.numeralLocale : false;\n    const oldNumeralLocale = _oldVal && _oldVal.numeralLocale ? _oldVal.numeralLocale : false;\n    if (newNumeralLocale !== oldNumeralLocale) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldSetLabelContent = true;\n      this.shouldCheckLabelColor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n  }\n\n  @Watch('uniqueID')\n  idWatcher(newVal, _oldVal) {\n    console.error(\n      'Change detected in prop uniqueID from value ' +\n        _oldVal +\n        ' to value ' +\n        newVal +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // we have removed the ability to change this prop post load\n    // this.chartID = newVal || 'bar-chart-' + uuid();\n    // this.barChartEl.id = this.chartID;\n    // this.shouldValidate = true;\n    // this.shouldUpdateDescriptionWrapper = true;\n    // this.shouldSetParentSVGAccessibility = true;\n    // this.shouldUpdateLegend = true;\n    // this.shouldSetTextures = true;\n    // this.shouldCheckLabelColor = true;\n    // this.shouldDrawInteractionState = true;\n    // this.shouldSetStrokes = true;\n  }\n\n  @Watch('suppressEvents')\n  suppressWatcher(_newVal, _oldVal) {\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldSetLegendCursor = true;\n    this.shouldUpdateLegendInteractivity = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldValidate = true;\n    this.shouldRedrawWrapper = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('unitTest')\n  unitTestWatcher(_newVal, _oldVal) {\n    this.shouldSetTestingAttributes = true;\n  }\n\n  componentWillLoad() {\n    const chartID = this.uniqueID || 'bar-chart-' + uuid();\n    this.initialLoadEvent.emit({ chartID: chartID });\n    // contrary to componentWillUpdate, this method appears safe to use for\n    // any calculations we need. Keeping them here reduces future refactor,\n    // since componentWillUpdate should eventually mirror this method\n    return new Promise(resolve => {\n      this.duration = 0;\n      this.defaults = true;\n      this.chartID = chartID;\n      this.barChartEl.id = this.chartID;\n      this.setLocalizationConfig();\n      this.setTagLevels();\n      this.prepareData();\n      this.prepareLegendData();\n      this.prepareLabelData();\n      this.updateChartVariable();\n      this.prepareScales();\n      this.validateInteractionKeys();\n      this.setTableData();\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.validateClickStyle();\n      this.validateHoverStyle();\n      this.setColors();\n      resolve('component will load');\n    });\n  }\n\n  componentWillUpdate() {\n    // NEVER put items in this method that rely on props (until stencil bug is resolved)\n    // All items that belong here are currently at the top of render\n    // see: https://github.com/ionic-team/stencil/issues/2061#issuecomment-578282178\n    return new Promise(resolve => {\n      resolve('component will update');\n    });\n  }\n\n  componentDidLoad() {\n    return new Promise(resolve => {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.renderRootElements();\n      this.setTooltipInitialStyle();\n      this.setChartDescriptionWrapper();\n      this.setChartAccessibilityTitle();\n      this.setChartAccessibilitySubtitle();\n      this.setChartAccessibilityLongDescription();\n      this.setChartAccessibilityExecutiveSummary();\n      this.setChartAccessibilityPurpose();\n      this.setChartAccessibilityContext();\n      this.setChartAccessibilityStatisticalNotes();\n      this.setChartAccessibilityStructureNotes();\n      this.setParentSVGAccessibility();\n      this.reSetRoot();\n      this.setTextures();\n      this.setStrokes();\n      this.setSubTitleElements();\n      this.drawXGrid();\n      this.drawYGrid();\n      this.setGlobalSelections();\n      this.setTestingAttributes();\n      this.validateClickStyle();\n      this.validateHoverStyle();\n      this.validateDataLabelAccessor();\n      this.enterGeometries();\n      this.updateGeometries();\n      this.exitGeometries();\n      this.enterLabels();\n      this.updateLabels();\n      this.exitLabels();\n      this.drawGeometries();\n      this.setChartCountAccessibility();\n      this.setGeometryAccessibilityAttributes();\n      this.setGeometryAriaLabels();\n      this.setRoundedCorners();\n      this.drawLegendElements();\n      this.validateLabelPlacement();\n      this.setLabelContent();\n      this.processLabelPosition(this.updatingLabels, false, true, false);\n      this.drawReferenceLines();\n      this.setSelectedClass();\n      this.checkLabelColorAgainstBackground();\n      this.updateCursor();\n      this.bindInteractivity();\n      this.bindLegendInteractivity();\n      this.drawXAxis();\n      this.setXAxisAccessibility();\n      this.drawYAxis();\n      this.setYAxisAccessibility();\n      this.drawAnnotations();\n      this.setAnnotationAccessibility();\n      this.drawBaseline();\n      this.onChangeHandler();\n      // we want to hide all child <g> of this.root BUT we want to make sure not to hide the\n      // parent<g> that contains our geometries! In a subGroup chart (like stacked bars),\n      // we want to pass the PARENT of all the <g>s that contain bars\n      hideNonessentialGroups(this.root.node(), this.bars.node());\n      this.setGroupAccessibilityAttributes();\n      this.setGroupAccessibilityID();\n      this.defaults = false;\n      // catch all to remove entering class from labels once we have loaded component\n      this.updatingLabels.classed('entering', false);\n      resolve('component did load');\n    }).then(() => this.initialLoadEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  componentDidUpdate() {\n    return new Promise(resolve => {\n      this.duration = !this.animationConfig || !this.animationConfig.disabled ? 750 : 0;\n      if (this.shouldUpdateDescriptionWrapper) {\n        this.setChartDescriptionWrapper();\n        this.shouldUpdateDescriptionWrapper = false;\n      }\n      if (this.shouldSetChartAccessibilityCount) {\n        this.setChartCountAccessibility();\n        this.shouldSetChartAccessibilityCount = false;\n      }\n      if (this.shouldSetChartAccessibilityTitle) {\n        this.setChartAccessibilityTitle();\n        this.shouldSetChartAccessibilityTitle = false;\n      }\n      if (this.shouldSetChartAccessibilitySubtitle) {\n        this.setChartAccessibilitySubtitle();\n        this.shouldSetChartAccessibilitySubtitle = false;\n      }\n      if (this.shouldSetChartAccessibilityLongDescription) {\n        this.setChartAccessibilityLongDescription();\n        this.shouldSetChartAccessibilityLongDescription = false;\n      }\n      if (this.shouldSetChartAccessibilityExecutiveSummary) {\n        this.setChartAccessibilityExecutiveSummary();\n        this.shouldSetChartAccessibilityExecutiveSummary = false;\n      }\n      if (this.shouldSetChartAccessibilityPurpose) {\n        this.setChartAccessibilityPurpose();\n        this.shouldSetChartAccessibilityPurpose = false;\n      }\n      if (this.shouldSetChartAccessibilityContext) {\n        this.setChartAccessibilityContext();\n        this.shouldSetChartAccessibilityContext = false;\n      }\n      if (this.shouldSetChartAccessibilityStatisticalNotes) {\n        this.setChartAccessibilityStatisticalNotes();\n        this.shouldSetChartAccessibilityStatisticalNotes = false;\n      }\n      if (this.shouldSetChartAccessibilityStructureNotes) {\n        this.setChartAccessibilityStructureNotes();\n        this.shouldSetChartAccessibilityStructureNotes = false;\n      }\n      if (this.shouldSetParentSVGAccessibility) {\n        this.setParentSVGAccessibility();\n        this.shouldSetParentSVGAccessibility = false;\n      }\n      if (this.shouldResetRoot) {\n        this.reSetRoot();\n        this.shouldResetRoot = false;\n      }\n      if (this.shouldSetTextures) {\n        this.setTextures();\n        this.shouldSetTextures = false;\n      }\n      if (this.shouldSetStrokes) {\n        this.setStrokes();\n        this.shouldSetStrokes = false;\n      }\n      if (this.shouldSetGlobalSelections) {\n        this.setGlobalSelections();\n        this.shouldSetGlobalSelections = false;\n      }\n      if (this.shouldSetTestingAttributes) {\n        this.setTestingAttributes();\n        this.shouldSetTestingAttributes = false;\n      }\n      if (this.shouldSetSubTitle) {\n        this.setSubTitleElements();\n        this.shouldSetSubTitle = false;\n      }\n      if (this.shouldUpdateXGrid) {\n        this.drawXGrid();\n        this.shouldUpdateXGrid = false;\n      }\n      if (this.shouldUpdateYGrid) {\n        this.drawYGrid();\n        this.shouldUpdateYGrid = false;\n      }\n      if (this.shouldEnterUpdateExit) {\n        this.enterGeometries();\n        this.updateGeometries();\n        this.exitGeometries();\n        this.enterLabels();\n        this.updateLabels();\n        this.exitLabels();\n        this.shouldEnterUpdateExit = false;\n      }\n      if (this.shouldUpdateGeometries) {\n        this.drawGeometries();\n        this.shouldUpdateGeometries = false;\n      }\n      if (this.shouldSetGeometryAccessibilityAttributes) {\n        this.setGeometryAccessibilityAttributes();\n        this.shouldSetGeometryAccessibilityAttributes = false;\n      }\n      if (this.shouldSetGeometryAriaLabels) {\n        this.setGeometryAriaLabels();\n        this.shouldSetGeometryAriaLabels = false;\n      }\n      // if a component's <g> elements can enter/exit, this will need to be called\n      // in the lifecycle more than just initially\n      // if (this.shouldSetGroupAccessibilityAttributes) {\n      //   this.setGroupAccessibilityAttributes()\n      //   this.shouldSetGroupAccessibilityAttributes = false\n      // }\n      if (this.shouldSetGroupAccessibilityLabel) {\n        this.setGroupAccessibilityID();\n        this.shouldSetGroupAccessibilityLabel = false;\n      }\n      if (this.shouldUpdateCorners) {\n        this.setRoundedCorners();\n        this.shouldUpdateCorners = false;\n      }\n      if (this.shouldUpdateLegend) {\n        this.drawLegendElements();\n        this.shouldUpdateLegend = false;\n      }\n      if (this.shouldSetLabelContent) {\n        this.setLabelContent();\n        this.shouldSetLabelContent = false;\n      }\n      if (this.shouldSetLabelPosition) {\n        this.setLabelPosition();\n        this.shouldSetLabelPosition = false;\n      }\n      if (this.shouldUpdateReferenceLines) {\n        this.drawReferenceLines();\n        this.shouldUpdateReferenceLines = false;\n      }\n      if (this.shouldDrawInteractionState) {\n        this.updateInteractionState();\n        this.shouldDrawInteractionState = false;\n      }\n      if (this.shouldSetLabelOpacity) {\n        this.setLabelOpacity();\n        this.shouldSetLabelOpacity = false;\n      }\n      if (this.shouldCheckLabelColor) {\n        this.checkLabelColorAgainstBackground();\n        this.shouldCheckLabelColor = false;\n      }\n      if (this.shouldSetSelectionClass) {\n        this.setSelectedClass();\n        this.shouldSetSelectionClass = false;\n      }\n      if (this.shouldUpdateLegendInteractivity) {\n        this.bindLegendInteractivity();\n        this.shouldUpdateLegendInteractivity = false;\n      }\n      if (this.shouldSetLegendCursor) {\n        this.setLegendCursor();\n        this.shouldSetLegendCursor = false;\n      }\n      if (this.shouldUpdateCursor) {\n        this.updateCursor();\n        this.shouldUpdateCursor = false;\n      }\n      if (this.shouldBindInteractivity) {\n        this.bindInteractivity();\n        this.shouldBindInteractivity = false;\n      }\n      if (this.shouldUpdateXAxis) {\n        this.drawXAxis();\n        this.shouldUpdateXAxis = false;\n      }\n      if (this.shouldSetXAxisAccessibility) {\n        this.setXAxisAccessibility();\n        this.shouldSetXAxisAccessibility = false;\n      }\n      if (this.shouldUpdateYAxis) {\n        this.drawYAxis();\n        this.shouldUpdateYAxis = false;\n      }\n      if (this.shouldSetYAxisAccessibility) {\n        this.setYAxisAccessibility();\n        this.shouldSetYAxisAccessibility = false;\n      }\n      if (this.shouldUpdateAnnotations) {\n        this.drawAnnotations();\n        this.shouldUpdateAnnotations = false;\n      }\n      if (this.shouldSetAnnotationAccessibility) {\n        this.setAnnotationAccessibility();\n        this.shouldSetAnnotationAccessibility = false;\n      }\n      if (this.shouldUpdateBaseline) {\n        this.drawBaseline();\n        this.shouldUpdateBaseline = false;\n      }\n      this.onChangeHandler();\n      this.updatingLabels.classed('entering', false);\n      resolve('component did update');\n    }).then(() => this.drawEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  shouldValidateLocalizationProps() {\n    const windowInstances = getGlobalInstances();\n    const languageString = windowInstances.i18Next.language;\n    const languageObject = windowInstances.i18Next.getResourceBundle(languageString);\n    const numeralObject = windowInstances.numeral.localeData();\n    if (this.shouldValidateLocalization && !this.localization.skipValidation) {\n      this.shouldValidateLocalization = false;\n      validateLocalizationProps(this.chartID, {\n        ...this.localization,\n        language: languageObject,\n        numeralLocale: numeralObject\n      });\n    }\n  }\n\n  shouldValidateAccessibilityProps() {\n    if (this.shouldValidateAccessibility && !this.accessibility.disableValidation) {\n      this.shouldValidateAccessibility = false;\n      validateAccessibilityProps(\n        this.chartID,\n        { ...this.accessibility },\n        {\n          annotations: this.annotations,\n          data: this.data,\n          uniqueID: this.uniqueID,\n          context: {\n            mainTitle: this.mainTitle,\n            onClickEvent: this.suppressEvents ? undefined : this.clickEvent.emit\n          }\n        }\n      );\n    }\n  }\n\n  validateInteractionKeys() {\n    this.innerInteractionKeys =\n      this.interactionKeys && this.interactionKeys.length\n        ? this.interactionKeys\n        : [this.groupAccessor || this.ordinalAccessor];\n  }\n\n  validateDataLabelAccessor() {\n    this.innerLabelAccessor = this.dataLabel.labelAccessor ? this.dataLabel.labelAccessor : this.valueAccessor;\n  }\n\n  getLanguageString() {\n    return getActiveLanguageString(this.localization);\n  }\n\n  setLocalizationConfig() {\n    configLocalization(this.localization);\n  }\n\n  setTagLevels() {\n    this.topLevel = findTagLevel(this.highestHeadingLevel);\n    this.bottomLevel = findTagLevel(this.highestHeadingLevel, 3);\n  }\n\n  updateChartVariable() {\n    this.padding = typeof this.padding === 'string' ? getPadding(this.padding) : this.padding;\n\n    // before we render/load we need to set our height and width based on props\n    this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n    this.innerWidth = this.width - this.margin.left - this.margin.right;\n\n    this.innerPaddedHeight = this.innerHeight - this.padding.top - this.padding.bottom;\n    this.innerPaddedWidth = this.innerWidth - this.padding.left - this.padding.right;\n  }\n\n  prepareData() {\n    if (this.data) {\n      if (this.sortOrder === 'asc') {\n        this.preppedData = [...this.data].sort((a, b) => {\n          a[this.valueAccessor] = parseFloat(a[this.valueAccessor]);\n          b[this.valueAccessor] = parseFloat(b[this.valueAccessor]);\n          return a[this.valueAccessor] - b[this.valueAccessor];\n        });\n      } else if (this.sortOrder === 'desc') {\n        this.preppedData = [...this.data].sort((a, b) => {\n          a[this.valueAccessor] = parseFloat(a[this.valueAccessor]);\n          b[this.valueAccessor] = parseFloat(b[this.valueAccessor]);\n          return b[this.valueAccessor] - a[this.valueAccessor];\n        });\n      } else {\n        this.preppedData = this.data;\n        this.preppedData.map(d => {\n          d[this.valueAccessor] = parseFloat(d[this.valueAccessor]);\n        });\n      }\n    }\n  }\n\n  prepareLegendData() {\n    const nested = nest()\n      .key(d => d[this.groupAccessor])\n      .entries(this.preppedData);\n\n    this.legendData = [];\n    nested.forEach(el => {\n      this.legendData.push(el.values[0]);\n    });\n  }\n\n  prepareLabelData() {\n    if (this.preppedData) {\n      // min\n      const minIdx = minIndex(this.preppedData, d => d[this.valueAccessor]);\n      const minItem = this.preppedData[minIdx];\n      // max\n      const maxIdx = maxIndex(this.preppedData, d => d[this.valueAccessor]);\n      const maxItem = this.preppedData[maxIdx];\n      // first\n      const firstItem = this.preppedData.find(val => val[this.valueAccessor] != null);\n      // last\n      const lastItem = [...this.preppedData].reverse().find(val => val[this.valueAccessor] != null);\n\n      this.displayOnlyLabelData = {\n        first: [firstItem],\n        last: [lastItem],\n        min: [minItem],\n        max: [maxItem]\n      };\n    }\n  }\n\n  setSubTitleElements() {\n    setSubTitle({\n      root: this.subTitleG,\n      subTitle: this.subTitle\n    });\n  }\n\n  setColors() {\n    const colorFromProps = this.colors ? convertVisaColor(this.colors) : this.colorPalette;\n\n    const minValue = min(this.preppedData, d => d[this.valueAccessor]);\n    const maxValue = max(this.preppedData, d => d[this.valueAccessor]);\n\n    this.preparedColors = this.groupAccessor\n      ? getColors(\n          colorFromProps,\n          scaleOrdinal()\n            .domain(this.data.map(d => d[this.groupAccessor]))\n            .domain()\n        )\n      : getColors(colorFromProps, [minValue, maxValue]);\n\n    const colors = this.preparedColors.range ? this.preparedColors.range() : this.preparedColors;\n    const strokeColors = [];\n    const backgroundColors = [];\n    let i = 0;\n    const half = Math.ceil(colors.length / 2);\n    const isDiverging = this.colorPalette && this.colorPalette.includes('diverging');\n    const isDark = this.colorPalette && this.colorPalette.includes('dark');\n    const scheme = this.groupAccessor || colors.length === 1 ? 'categorical' : isDiverging ? 'diverging' : 'sequential';\n    colors.forEach(color => {\n      const colorsMatchingScheme = prepareStrokeColorsFromScheme(color, i, colors, scheme);\n      if (scheme === 'diverging') {\n        const fillLuminance = calculateLuminance(colorsMatchingScheme.fillColor);\n        const strokeLuminance = calculateLuminance(colorsMatchingScheme.textureColor);\n        const darkerColor =\n          fillLuminance > strokeLuminance ? colorsMatchingScheme.textureColor : colorsMatchingScheme.fillColor;\n        const lighterColor =\n          fillLuminance < strokeLuminance ? colorsMatchingScheme.textureColor : colorsMatchingScheme.fillColor;\n        if (colors.length % 2 && i === (colors.length - 1) / 2) {\n          backgroundColors.push(isDark ? darkerColor : lighterColor);\n          strokeColors.push(isDark ? lighterColor : darkerColor);\n        } else {\n          strokeColors.push(isDark ? darkerColor : lighterColor);\n          backgroundColors.push(isDark ? lighterColor : darkerColor);\n        }\n      } else {\n        if (i + 1 < half) {\n          backgroundColors.push(colors[0]);\n          strokeColors.push(colors[colors.length - 1]);\n        } else {\n          strokeColors.push(colors[0]);\n          backgroundColors.push(colors[colors.length - 1]);\n        }\n      }\n      i++;\n    });\n\n    this.fillColors = this.preparedColors.copy().range(backgroundColors);\n\n    this.strokeColors = this.preparedColors.copy().range(strokeColors);\n  }\n\n  setTextures() {\n    const colorsArray = this.preparedColors.range ? this.preparedColors.range() : this.preparedColors;\n    const scheme =\n      this.groupAccessor || colorsArray.length === 1\n        ? 'categorical'\n        : this.colorPalette && this.colorPalette.includes('diverging')\n        ? 'diverging'\n        : 'sequential';\n    if (\n      this.accessibility.hideTextures ||\n      (scheme === 'categorical' && colorsArray.length > 6) ||\n      (scheme !== 'categorical' && !this.accessibility.showExperimentalTextures)\n    ) {\n      this.colorArr = this.preparedColors;\n    } else {\n      const textures = convertColorsToTextures({\n        colors: colorsArray,\n        rootSVG: this.svg.node(),\n        id: this.chartID,\n        scheme,\n        disableTransitions: !this.duration\n      });\n      this.colorArr = this.preparedColors.copy().range(textures);\n    }\n  }\n\n  setStrokes() {\n    const colorsArray = this.preparedColors.range ? this.preparedColors.range() : this.preparedColors;\n    const scheme =\n      this.groupAccessor || colorsArray.length === 1\n        ? 'categorical'\n        : this.colorPalette && this.colorPalette.includes('diverging')\n        ? 'diverging'\n        : 'sequential';\n    this.strokes = buildStrokes({\n      root: this.svg.node(),\n      id: this.chartID,\n      colors:\n        !this.accessibility.hideTextures && scheme !== 'categorical' && this.accessibility.showExperimentalTextures\n          ? this.fillColors.range()\n          : colorsArray,\n      clickStyle: this.innerClickStyle,\n      hoverStyle: this.innerHoverStyle,\n      strokeOverride:\n        !this.accessibility.hideTextures && scheme !== 'categorical' && this.accessibility.showExperimentalTextures\n          ? this.strokeColors.range()\n          : undefined\n    });\n  }\n\n  setTableData() {\n    // generate scoped and formatted data for data-table component\n    const keys = scopeDataKeys(this, chartAccessors, 'bar-chart');\n    this.tableData = getScopedData(this.preppedData, keys);\n    this.tableColumns = Object.keys(keys);\n  }\n\n  validateLabelPlacement() {\n    // check data label placement assignment based on layout\n    this.placement = this.dataLabel.placement;\n    if (this.layout === 'vertical') {\n      if (this.placement !== 'top' && this.placement !== 'bottom' && this.placement !== 'auto') {\n        this.placement = 'top';\n      }\n    } else {\n      if (!this.placement || this.placement === 'top' || this.placement === 'bottom') {\n        this.placement = 'right';\n      }\n    }\n  }\n\n  // scale band based on layout of chart, called in mulitple places to reduce code repetition\n  shouldCenterBaseline() {\n    return (\n      ((this.xAxis.centerBaseline && this.layout === 'horizontal') ||\n        (this.yAxis.centerBaseline && this.layout === 'vertical')) &&\n      min(this.preppedData, d => d[this.valueAccessor]) >= 0\n    );\n  }\n\n  prepareScales() {\n    // if center baseline then (1) use maxOverride halved or (2) use data halved\n    // else (1) use minOverride or (2) use data\n    const minBarValue = this.shouldCenterBaseline()\n      ? this.maxValueOverride && this.maxValueOverride > max(this.preppedData, d => d[this.valueAccessor])\n        ? -halve(this.maxValueOverride)\n        : -halve(max(this.preppedData, d => d[this.valueAccessor]))\n      : this.minValueOverride && this.minValueOverride < min(this.preppedData, d => d[this.valueAccessor])\n      ? this.minValueOverride\n      : min(this.preppedData, d => d[this.valueAccessor]);\n\n    const maxBarValue = this.shouldCenterBaseline()\n      ? this.maxValueOverride && this.maxValueOverride > max(this.preppedData, d => d[this.valueAccessor])\n        ? halve(this.maxValueOverride)\n        : halve(max(this.preppedData, d => d[this.valueAccessor]))\n      : this.maxValueOverride && this.maxValueOverride > max(this.preppedData, d => d[this.valueAccessor])\n      ? this.maxValueOverride\n      : max(this.preppedData, d => d[this.valueAccessor]);\n\n    if (this.layout === 'vertical') {\n      this.y = scaleLinear()\n        .domain([Math.min(0, minBarValue), Math.max(0, maxBarValue)])\n        .range([this.innerPaddedHeight, 0]);\n      this.x = scaleBand()\n        .domain(this.preppedData.map(d => d[this.ordinalAccessor]))\n        .range([0, this.innerPaddedWidth])\n        .padding(this.barIntervalRatio);\n    } else if (this.layout === 'horizontal') {\n      this.x = scaleLinear()\n        .domain([Math.min(0, minBarValue), Math.max(0, maxBarValue)])\n        .range([0, this.innerPaddedWidth]);\n\n      this.y = scaleBand()\n        .domain(this.preppedData.map(d => d[this.ordinalAccessor]))\n        .range([0, this.innerPaddedHeight])\n        .padding(this.barIntervalRatio);\n    }\n  }\n\n  // reset graph size based on window size\n  reSetRoot() {\n    const changeSvg = prepareRenderChange({\n      selection: this.svg,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeSvg\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    const changeRoot = prepareRenderChange({\n      selection: this.root,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRoot.attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n\n    const changeRootG = prepareRenderChange({\n      selection: this.rootG,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRootG.attr('transform', `translate(${this.padding.left}, ${this.padding.top})`);\n\n    setAccessibilityDescriptionWidth(this.chartID, this.width);\n  }\n\n  // this function is used in drawAxis and setAccessAxis functions to determine (inverse) visible\n  // of the relevant axis + layout combination\n  checkHideAxisState(axisName: string, relevantLayout: string, minValue: number) {\n    return this[axisName].centerBaseline && this.layout === relevantLayout && minValue >= 0\n      ? true\n      : !this[axisName].visible;\n  }\n\n  // draw axis line\n  drawXAxis() {\n    const axisAccessor = this.layout === 'vertical' ? this.ordinalAccessor : this.valueAccessor;\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.xAxis.label;\n\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.x,\n      left: false,\n      wrapLabel: this.wrapLabel && this.layout === 'vertical' ? this.innerPaddedWidth / this.data.length : '',\n      format: this.xAxis.format,\n      dateFormat: this.xAxis.format,\n      tickInterval: this.xAxis.tickInterval,\n      label: axisLabel, // this.xAxis.label,\n      padding: this.padding,\n      hide: this.checkHideAxisState('xAxis', 'horizontal', min(this.preppedData, d => d[this.valueAccessor])),\n      duration: this.duration\n    });\n  }\n\n  drawYAxis() {\n    const axisAccessor = this.layout === 'vertical' ? this.valueAccessor : this.ordinalAccessor;\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.yAxis.label;\n\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.y,\n      left: true,\n      wrapLabel: this.wrapLabel ? this.padding.left || 100 : '',\n      format: this.yAxis.format,\n      dateFormat: this.yAxis.format,\n      tickInterval: this.yAxis.tickInterval,\n      label: axisLabel, // this.yAxis.label,\n      padding: this.padding,\n      hide: this.checkHideAxisState('yAxis', 'vertical', min(this.preppedData, d => d[this.valueAccessor])),\n      duration: this.duration\n    });\n  }\n\n  drawBaseline() {\n    // add baseline at 0\n    if (this.layout === 'vertical' && !this.shouldCenterBaseline()) {\n      drawAxis({\n        root: this.rootG,\n        height: this.innerPaddedHeight,\n        width: this.innerPaddedWidth,\n        axisScale: this.x,\n        left: false,\n        padding: this.padding,\n        markOffset: this.y(0) || -1,\n        duration: this.duration\n      });\n    }\n    if (this.layout === 'horizontal') {\n      drawAxis({\n        root: this.rootG,\n        height: this.innerPaddedHeight,\n        width: this.innerPaddedWidth,\n        axisScale: this.y,\n        left: true,\n        padding: this.padding,\n        markOffset: this.shouldCenterBaseline()\n          ? this.maxValueOverride && this.maxValueOverride > max(this.preppedData, d => d[this.valueAccessor])\n            ? -halve(this.maxValueOverride)\n            : -halve(max(this.preppedData, d => d[this.valueAccessor]))\n          : this.minValueOverride && this.minValueOverride < min(this.preppedData, d => d[this.valueAccessor])\n          ? this.minValueOverride\n          : this.x(0) || -1,\n        duration: this.duration\n      });\n    }\n  }\n\n  setXAxisAccessibility() {\n    const axisAccessor = this.layout === 'vertical' ? this.ordinalAccessor : this.valueAccessor;\n    const axisLabel =\n      this.xAxis.label && this.xAxis.label !== ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.xAxis.label;\n\n    setAccessXAxis({\n      rootEle: this.barChartEl,\n      hasXAxis: !this.checkHideAxisState('xAxis', 'horizontal', min(this.preppedData, d => d[this.valueAccessor])), // this is inverse of how drawAxis works\n      xAxis: this.x ? this.x : false, // this is optional for some charts, if hasXAxis is always false\n      xAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasXAxis is always false\n    });\n  }\n\n  setYAxisAccessibility() {\n    const axisAccessor = this.layout === 'vertical' ? this.valueAccessor : this.ordinalAccessor;\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.yAxis.label;\n\n    setAccessYAxis({\n      rootEle: this.barChartEl,\n      hasYAxis: !this.checkHideAxisState('yAxis', 'vertical', min(this.preppedData, d => d[this.valueAccessor])), // this is inverse of how drawAxis works\n      yAxis: this.y ? this.y : false, // this is optional for some charts, if hasXAxis is always false\n      yAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasXAxis is always false\n      // secondaryYAxis?: any, // pareto uses this\n      // secondaryYAxisLabel?: string, // pareto uses this\n      // xAxisLabel: this.xAxis.label ? this.xAxis.label : '' // parallel uses this to label all the y axes\n    });\n  }\n\n  // dashed line grid for chart\n  drawXGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.x,\n      false,\n      this.shouldCenterBaseline() && this.xAxis.gridVisible\n        ? !(this.layout === 'vertical')\n        : !(!(this.layout === 'vertical') && this.xAxis.gridVisible),\n      this.xAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  drawYGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.y,\n      true,\n      this.shouldCenterBaseline() && this.yAxis.gridVisible\n        ? !(this.layout === 'horizontal')\n        : !(this.layout === 'vertical' && this.yAxis.gridVisible),\n      this.yAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  enterGeometries() {\n    this.enter.interrupt();\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const innerPaddedOrdinalDimension =\n      'innerPadded' + ordinalDimension[0].toUpperCase() + ordinalDimension.substring(1);\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    const choice = this.layout === 'vertical' ? 'max' : 'min';\n\n    this.enter\n      .attr('class', 'bar')\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .attr('rx', this.roundedCorner)\n      .attr('ry', this.roundedCorner)\n      .attr('fill', d => {\n        // the following line could be added back in to improve performance, but it is visually quite jarring\n        // const fillSource = !select(n[i]).classed('geometryIsMoving') ? this.colorArr : this.preparedColors\n        return this.clickHighlight &&\n          this.clickHighlight.length > 0 &&\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys) &&\n          this.innerClickStyle.color\n          ? visaColors[this.innerClickStyle.color] || this.innerClickStyle.color\n          : this.hoverHighlight &&\n            checkHovered(d, this.hoverHighlight, this.innerInteractionKeys) &&\n            this.innerHoverStyle.color\n          ? visaColors[this.innerHoverStyle.color] || this.innerHoverStyle.color\n          : this.groupAccessor\n          ? this.colorArr(d[this.groupAccessor])\n          : this.colorArr(d[this.valueAccessor]);\n      })\n      .attr(valueAxis, d =>\n        this.shouldCenterBaseline()\n          ? this[valueAxis](halve(d[this.valueAccessor]) * (this.layout === 'vertical' ? 1 : -1))\n          : this[valueAxis](Math[choice](0, d[this.valueAccessor]))\n      )\n      .attr(valueDimension, d =>\n        Math.abs(\n          this.layout === 'vertical'\n            ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n            : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n        )\n      )\n      .each((_d, i, n) => {\n        initializeElementAccess(n[i]);\n      });\n    if (this.defaults) {\n      this.enter\n        .attr('opacity', d =>\n          checkInteraction(d, 1, this.hoverOpacity, this.hoverHighlight, this.clickHighlight, this.innerInteractionKeys)\n        )\n        .attr(ordinalAxis, d => this[ordinalAxis](d[this.ordinalAccessor]))\n        .attr(ordinalDimension, this[ordinalAxis].bandwidth());\n    } else {\n      this.enter\n        .attr('opacity', 0)\n        .attr(ordinalAxis, d => {\n          let shift = this[ordinalAxis](d[this.ordinalAccessor]) + this[ordinalAxis].bandwidth() / 2;\n          shift =\n            this[ordinalAxis](d[this.ordinalAccessor]) +\n            (this[ordinalAxis].bandwidth() / 2) * (shift / (this[innerPaddedOrdinalDimension] / 2));\n          return shift;\n        })\n        .attr(ordinalDimension, 0);\n    }\n    this.update.order();\n  }\n\n  updateGeometries() {\n    this.update.interrupt();\n\n    this.update\n      .transition('opacity')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('opacity', d =>\n        checkInteraction(d, 1, this.hoverOpacity, this.hoverHighlight, this.clickHighlight, this.innerInteractionKeys)\n      );\n  }\n\n  exitGeometries() {\n    this.exit.interrupt();\n    const axisOfShift = this.layout === 'vertical' ? 'x' : 'y';\n    const dimensionOfShift = this.layout === 'vertical' ? 'width' : 'height';\n    const innerPaddedDimension = 'innerPadded' + dimensionOfShift[0].toUpperCase() + dimensionOfShift.substring(1);\n\n    this.exit\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr(axisOfShift, (_d, i, n) => {\n        const self = select(n[i]);\n        let shift = +self.attr(axisOfShift) + +self.attr(dimensionOfShift) / 2;\n        shift =\n          +self.attr(axisOfShift) + (+self.attr(dimensionOfShift) / 2) * (shift / (this[innerPaddedDimension] / 2));\n        return shift;\n      })\n      .attr(dimensionOfShift, 0)\n      .attr('opacity', 0);\n\n    // We use this.update instead of this.exit to ensure the functions at the end\n    // of our lifecycle run, even though we are removing the exiting elements from\n    // inside this transition's endAll.\n    // (If we put this in this.exit, it will only run if elements exit.\n    // We want this to run every lifecycle.)\n    this.update\n      .transition('accessibilityAfterExit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        // before we exit geometries, we need to check if a focus exists or not\n        const focusDidExist = checkAccessFocus(this.rootG.node());\n        // then we must remove the exiting elements\n        this.exit.remove();\n        // then our util can count geometries\n        this.setChartCountAccessibility();\n        // our group's label should update with new counts too\n        this.setGroupAccessibilityID();\n        // since items exited, labels must receive updated values\n        this.setGeometryAriaLabels();\n        // and also make sure the user's focus isn't lost\n        retainAccessFocus({\n          parentGNode: this.rootG.node(),\n          focusDidExist\n          // recursive: true\n        });\n      });\n  }\n\n  drawGeometries() {\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    const choice = this.layout === 'vertical' ? 'max' : 'min';\n    this.update\n      .classed('geometryIsMoving', (d, i, n) => {\n        const geometryIsUpdating = checkAttributeTransitions(select(n[i]), [\n          {\n            attr: ordinalAxis,\n            numeric: true,\n            newValue: this[ordinalAxis](d[this.ordinalAccessor])\n          },\n          {\n            attr: ordinalDimension,\n            numeric: true,\n            newValue: this[ordinalAxis].bandwidth()\n          },\n          {\n            attr: valueAxis,\n            numeric: true,\n            newValue: this.shouldCenterBaseline()\n              ? this[valueAxis](halve(d[this.valueAccessor]) * (this.layout === 'vertical' ? 1 : -1))\n              : this[valueAxis](Math[choice](0, d[this.valueAccessor]))\n          },\n          {\n            attr: valueDimension,\n            numeric: true,\n            newValue: Math.abs(\n              this.layout === 'vertical'\n                ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n                : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n            )\n          }\n        ]);\n        return geometryIsUpdating;\n      })\n      .attr('data-translate-x', this.padding.left + this.margin.left)\n      .attr('data-translate-y', this.padding.top + this.margin.top)\n      .attr(`data-${ordinalAxis}`, d => this[ordinalAxis](d[this.ordinalAccessor]))\n      .attr(`data-${ordinalDimension}`, this[ordinalAxis].bandwidth())\n      .attr(`data-${valueAxis}`, d =>\n        this.shouldCenterBaseline()\n          ? this[valueAxis](halve(d[this.valueAccessor]) * (this.layout === 'vertical' ? 1 : -1))\n          : this[valueAxis](Math[choice](0, d[this.valueAccessor]))\n      )\n      .attr(`data-${valueDimension}`, d =>\n        Math.abs(\n          this.layout === 'vertical'\n            ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n            : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n        )\n      )\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr(ordinalAxis, d => this[ordinalAxis](d[this.ordinalAccessor]))\n      .attr(ordinalDimension, this[ordinalAxis].bandwidth())\n      .attr(valueAxis, d =>\n        this.shouldCenterBaseline()\n          ? this[valueAxis](halve(d[this.valueAccessor]) * (this.layout === 'vertical' ? 1 : -1))\n          : this[valueAxis](Math[choice](0, d[this.valueAccessor]))\n      )\n      .attr(valueDimension, d =>\n        Math.abs(\n          this.layout === 'vertical'\n            ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n            : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n        )\n      )\n      .call(transitionEndAll, () => {\n        this.update.classed('geometryIsMoving', false);\n\n        this.updateInteractionState();\n        this.checkLabelColorAgainstBackground();\n\n        // we must make sure if geometries move, that our focus indicator does too\n        retainAccessFocus({\n          parentGNode: this.rootG.node()\n          // focusDidExist // this only matters for exiting selections\n          // recursive: true // this only matters for\n        });\n\n        // now we can emit the event that transitions are complete\n        this.transitionEndEvent.emit({ chartID: this.chartID });\n      });\n  }\n\n  setGlobalSelections() {\n    const dataBoundToGeometries = this.bars.selectAll('.bar').data(this.preppedData, d => d[this.ordinalAccessor]);\n\n    this.enter = dataBoundToGeometries.enter().append('rect');\n    this.exit = dataBoundToGeometries.exit();\n    this.update = dataBoundToGeometries.merge(this.enter);\n\n    this.exitSize = this.exit.size();\n    this.enterSize = this.enter.size();\n\n    const dataBoundToLabels = this.labels.selectAll('text').data(this.preppedData, d => d[this.ordinalAccessor]);\n    this.enteringLabels = dataBoundToLabels.enter().append('text');\n    this.exitingLabels = dataBoundToLabels.exit();\n    this.updatingLabels = dataBoundToLabels.merge(this.enteringLabels);\n  }\n\n  setTestingAttributes() {\n    if (this.unitTest) {\n      select(this.barChartEl)\n        .select('.visa-viz-d3-bar-container')\n        .attr('data-testid', 'chart-container');\n      select(this.barChartEl)\n        .select('.bar-main-title')\n        .attr('data-testid', 'main-title');\n      select(this.barChartEl)\n        .select('.bar-sub-title')\n        .attr('data-testid', 'sub-title');\n      this.svg.attr('data-testid', 'root-svg');\n      this.root.attr('data-testid', 'margin-container');\n      this.rootG.attr('data-testid', 'padding-container');\n      this.legendG.attr('data-testid', 'legend-container');\n      this.tooltipG.attr('data-testid', 'tooltip-container');\n      this.bars.attr('data-testid', 'bar-group');\n      this.labels.attr('data-testid', 'dataLabel-group');\n      this.referencesG.attr('data-testid', 'reference-line-group');\n      this.svg.select('defs').attr('data-testid', 'pattern-defs');\n\n      this.updatingLabels.attr('data-testid', 'dataLabel').attr('data-id', d => `label-${d[this.ordinalAccessor]}`);\n      this.update.attr('data-testid', 'bar').attr('data-id', d => `bar-${d[this.ordinalAccessor]}`);\n\n      // reference lines do not have global selections\n      this.referencesG.selectAll('.bar-reference-line').attr('data-testid', 'reference-line');\n\n      this.referencesG.selectAll('.bar-reference-line-label').attr('data-testid', 'reference-line-label');\n    } else {\n      select(this.barChartEl)\n        .select('.visa-viz-d3-bar-container')\n        .attr('data-testid', null);\n      select(this.barChartEl)\n        .select('.bar-main-title')\n        .attr('data-testid', null);\n      select(this.barChartEl)\n        .select('.bar-sub-title')\n        .attr('data-testid', null);\n      this.svg.attr('data-testid', null);\n      this.root.attr('data-testid', null);\n      this.rootG.attr('data-testid', null);\n      this.legendG.attr('data-testid', null);\n      this.tooltipG.attr('data-testid', null);\n      this.bars.attr('data-testid', null);\n      this.labels.attr('data-testid', null);\n      this.referencesG.attr('data-testid', null);\n      this.svg.select('defs').attr('data-testid', null);\n\n      this.updatingLabels.attr('data-testid', null).attr('data-id', null);\n      this.update.attr('data-testid', null).attr('data-id', null);\n\n      this.referencesG.selectAll('.bar-reference-line').attr('data-testid', null);\n\n      this.referencesG.selectAll('.bar-reference-line-label').attr('data-testid', null);\n    }\n  }\n\n  renderRootElements() {\n    this.svg = select(this.barChartEl)\n      .select('.visa-viz-d3-bar-container')\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    this.root = this.svg.append('g').attr('id', 'visa-viz-margin-container-g-' + this.chartID);\n\n    this.rootG = this.root.append('g').attr('id', 'visa-viz-padding-container-g-' + this.chartID);\n\n    this.gridG = this.rootG.append('g').attr('class', 'grid-group');\n\n    this.bars = this.rootG.append('g').attr('class', 'bar-group');\n\n    this.labels = this.rootG.append('g').attr('class', 'bar-dataLabel-group');\n\n    this.legendG = select(this.barChartEl)\n      .select('.bar-legend')\n      .append('svg');\n\n    this.subTitleG = select(this.barChartEl).select('.bar-sub-title');\n\n    this.tooltipG = select(this.barChartEl).select('.bar-tooltip');\n\n    this.referencesG = this.rootG.append('g').attr('class', 'bar-reference-line-group');\n  }\n\n  setRoundedCorners() {\n    this.update\n      .transition('corners')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('rx', this.roundedCorner)\n      .attr('ry', this.roundedCorner);\n  }\n\n  validateClickStyle() {\n    this.innerClickStyle = this.clickStyle\n      ? this.clickStyle\n      : {\n          strokeWidth: 2\n        };\n  }\n\n  validateHoverStyle() {\n    // interaction style default\n    this.innerHoverStyle = this.hoverStyle\n      ? this.hoverStyle\n      : {\n          strokeWidth: 2\n        };\n  }\n\n  updateInteractionState() {\n    removeHoverStrokes(this.svg.node());\n    // we created an \"opacity\" transition namespace in update's transition\n    // we override it here to instantly display opacity state (below)\n    this.update.interrupt('opacity');\n\n    // we use this.update and this.labelCurrent from setGlobalSelection here\n    // the lifecycle state does not matter (enter/update/exit)\n    // since interaction state can happen at any time\n    // first we address interaction state on marks/bars\n    this.update\n      .attr('opacity', d =>\n        checkInteraction(d, 1, this.hoverOpacity, this.hoverHighlight, this.clickHighlight, this.innerInteractionKeys)\n      )\n      .attr('fill', d => {\n        // the following line could be added back in to improve performance, but it is visually quite jarring\n        // const fillSource = !select(n[i]).classed('geometryIsMoving') ? this.colorArr : this.preparedColors\n        return this.clickHighlight &&\n          this.clickHighlight.length > 0 &&\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys) &&\n          this.innerClickStyle.color\n          ? visaColors[this.innerClickStyle.color] || this.innerClickStyle.color\n          : this.hoverHighlight &&\n            checkHovered(d, this.hoverHighlight, this.innerInteractionKeys) &&\n            this.innerHoverStyle.color\n          ? visaColors[this.innerHoverStyle.color] || this.innerHoverStyle.color\n          : this.groupAccessor\n          ? this.colorArr(d[this.groupAccessor])\n          : this.colorArr(d[this.valueAccessor]);\n      })\n      .attr('filter', (d, i, n) => {\n        if (!this.accessibility.hideStrokes && !select(n[i]).classed('geometryIsMoving')) {\n          const colorsArray = this.preparedColors.range ? this.preparedColors.range() : this.preparedColors;\n          const scheme =\n            this.groupAccessor || colorsArray.length === 1\n              ? 'categorical'\n              : this.colorPalette && this.colorPalette.includes('diverging')\n              ? 'diverging'\n              : 'sequential';\n          const colorScale =\n            !this.accessibility.hideTextures && scheme !== 'categorical' && this.accessibility.showExperimentalTextures\n              ? 'fillColors'\n              : 'preparedColors';\n\n          const clicked =\n            this.clickHighlight &&\n            this.clickHighlight.length > 0 &&\n            checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n          const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n          const baseColor = this.groupAccessor\n            ? this[colorScale](d[this.groupAccessor])\n            : this[colorScale](d[this.valueAccessor]);\n          const state = clicked ? 'click' : hovered && !select(n[i]).classed('geometryIsMoving') ? 'hover' : 'rest';\n          const color =\n            clicked && this.innerClickStyle.color\n              ? visaColors[this.innerClickStyle.color] || this.innerClickStyle.color\n              : clicked\n              ? baseColor\n              : hovered && this.innerHoverStyle.color\n              ? visaColors[this.innerHoverStyle.color] || this.innerHoverStyle.color\n              : baseColor;\n          const strokeOverride =\n            !this.accessibility.hideTextures &&\n            scheme !== 'categorical' &&\n            this.accessibility.showExperimentalTextures &&\n            color === baseColor\n              ? this.strokeColors(d[this.groupAccessor || this.valueAccessor])\n              : undefined;\n          if (state === 'hover') {\n            drawHoverStrokes({\n              inputElement: n[i],\n              id: this.chartID,\n              key: d[this.ordinalAccessor], // this must match whatever is used to bind the data, otherwise i\n              strokeWidth: this.innerHoverStyle.strokeWidth,\n              fill: color,\n              strokeOverride\n            });\n          }\n          return this.strokes[state + color];\n        }\n        return null;\n      });\n    retainAccessFocus({\n      parentGNode: this.rootG.node()\n    });\n\n    // then we set the legend interactive state\n    setLegendInteractionState({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.groupAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.innerHoverStyle,\n      clickStyle: this.innerClickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n\n    // and lastly we have to check for labels, especially when auto placement is in place\n    this.updatingLabels.interrupt('opacity');\n    const addCollisionClass = this.placement === 'auto' || this.dataLabel.collisionHideOnly;\n    const hideOnly = this.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n\n    this.processLabelOpacity(this.updatingLabels, addCollisionClass);\n\n    // if we have collision on, we need to update the bitmap on interaction\n    if (addCollisionClass) {\n      const labelsAdded = this.updatingLabels.filter((_, i, n) => select(n[i]).classed('collision-added'));\n      const labelsRemoved = this.updatingLabels\n        .filter((_, i, n) => select(n[i]).classed('collision-removed'))\n        .attr('data-use-dx', hideOnly) // need to add this for remove piece of collision below\n        .attr('data-use-dy', hideOnly); // .transition().duration(0);\n\n      // we can now remove labels as well if we need to...\n      if (labelsRemoved.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsRemoved,\n          avoidMarks: [],\n          validPositions: ['middle'],\n          offsets: [1],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n          hideOnly: false,\n          removeOnly: true\n        });\n\n        // remove temporary class now\n        labelsRemoved.classed('collision-removed', false);\n      }\n\n      // we can now add labels as well if we need to...\n      if (labelsAdded.size() > 0) {\n        this.processLabelPosition(labelsAdded, false, false, true);\n\n        // remove temporary class now\n        labelsAdded.classed('collision-added', false);\n      }\n    }\n  }\n\n  setLabelOpacity() {\n    this.processLabelOpacity(this.updatingLabels);\n  }\n\n  processLabelOpacity(selection, addCollisionClass?) {\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    const fullBandwidth =\n      this.layout === 'vertical' ? this.innerPaddedWidth / this.data.length : this.innerPaddedHeight / this.data.length;\n\n    selection.attr('opacity', (d, i, n) => {\n      const prevOpacity = +select(n[i]).attr('opacity');\n      const styleVisibility = select(n[i]).style('visibility');\n      const dimensions = {};\n      dimensions[ordinalDimension] =\n        this.placement === 'left' || this.placement === 'bottom' ? this[ordinalAxis].bandwidth() : fullBandwidth;\n      if (this.placement === 'left' || this.placement === 'bottom') {\n        dimensions[valueDimension] = Math.abs(\n          this.layout === 'vertical'\n            ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n            : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n        );\n      }\n      const hasRoom =\n        this.placement === 'auto' ||\n        this.dataLabel.collisionHideOnly ||\n        this.accessibility.showSmallLabels ||\n        verifyTextHasSpace({\n          text: formatDataLabel(d, this.innerLabelAccessor, this.dataLabel.format),\n          dimensions,\n          fontSize: 14\n        });\n      const targetOpacity = hasRoom\n        ? checkInteraction(\n            d,\n            checkLabelDisplayOnly(this.dataLabel.visible, this.dataLabel.displayOnly, d, this.displayOnlyLabelData, [\n              this.ordinalAccessor\n            ]),\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n          ? 0\n          : 1\n        : 0;\n      if (\n        ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n        addCollisionClass\n      ) {\n        if (targetOpacity === 1) {\n          select(n[i])\n            .classed('collision-added', true)\n            .style('visibility', null);\n        } else {\n          select(n[i]).classed('collision-removed', true);\n        }\n      }\n      return targetOpacity;\n    });\n  }\n\n  checkLabelColorAgainstBackground() {\n    this.updatingLabels.attr('fill', this.textTreatmentHandler);\n  }\n\n  textTreatmentHandler = (d, i, n) => {\n    const colorsArray = this.preparedColors.range ? this.preparedColors.range() : this.preparedColors;\n    const scheme =\n      this.groupAccessor || colorsArray.length === 1\n        ? 'categorical'\n        : this.colorPalette && this.colorPalette.includes('diverging')\n        ? 'diverging'\n        : 'sequential';\n\n    const colorScale =\n      !this.accessibility.hideTextures && scheme !== 'categorical' && this.accessibility.showExperimentalTextures\n        ? 'fillColors'\n        : 'preparedColors';\n\n    const bgColor =\n      this.clickHighlight &&\n      this.clickHighlight.length > 0 &&\n      checkClicked(d, this.clickHighlight, this.innerInteractionKeys) &&\n      this.innerClickStyle.color\n        ? visaColors[this.innerClickStyle.color] || this.innerClickStyle.color\n        : this.hoverHighlight &&\n          checkHovered(d, this.hoverHighlight, this.innerInteractionKeys) &&\n          this.innerHoverStyle.color\n        ? visaColors[this.innerHoverStyle.color] || this.innerHoverStyle.color\n        : this.groupAccessor\n        ? this[colorScale](d[this.groupAccessor])\n        : this[colorScale](d[this.valueAccessor]);\n    const me = select(n[i]);\n    const autoPlacementBackgroundColor =\n      this.placement === 'auto' // can ignore this for collisionHideOnly\n        ? this.layout === 'vertical'\n          ? (this.dataLabel.collisionPlacement === 'top' && me.attr('data-baseline') !== 'bottom') ||\n            (this.dataLabel.collisionPlacement === 'middle' && me.attr('data-baseline') !== 'bottom') ||\n            (this.dataLabel.collisionPlacement === 'bottom' &&\n              me.attr('data-baseline') === 'bottom' &&\n              ((d[this.valueAccessor] >= 0 && this.y(0) - this.y(d[this.valueAccessor]) > 20) ||\n                (d[this.valueAccessor] < 0 && this.y(0) - this.y(d[this.valueAccessor]) < -20))) // if bottom we can check against baseline value of 0, helps to handle charts with negative values\n          : (this.dataLabel.collisionPlacement === 'right' && me.attr('data-align') !== 'left') ||\n            (this.dataLabel.collisionPlacement === 'middle' && me.attr('data-align') !== 'left') ||\n            (this.dataLabel.collisionPlacement === 'left' && me.attr('data-align') !== 'right')\n        : false;\n    const color =\n      autoPlacementBackgroundColor || this.placement === 'bottom' || this.placement === 'left'\n        ? autoTextColor(bgColor)\n        : visaColors.dark_text;\n    me.attr(\n      'filter',\n      !me.classed('textIsMoving')\n        ? createTextStrokeFilter({\n            root: this.svg.node(),\n            id: this.chartID,\n            color:\n              autoPlacementBackgroundColor || this.placement === 'bottom' || this.placement === 'left'\n                ? bgColor\n                : '#ffffff'\n          })\n        : null\n    );\n    return color;\n  };\n\n  setSelectedClass() {\n    this.update\n      .classed('highlight', d => {\n        const selected = checkInteraction(d, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n        return this.clickHighlight && this.clickHighlight.length ? selected : false;\n      })\n      .each((d, i, n) => {\n        let selected = checkInteraction(d, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n        selected = this.clickHighlight && this.clickHighlight.length ? selected : false;\n        const selectable = this.accessibility.elementsAreInterface;\n        setElementInteractionAccessState(n[i], selected, selectable);\n      });\n  }\n\n  updateCursor() {\n    this.update.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    this.updatingLabels.attr('cursor', !this.suppressEvents ? this.cursor : null);\n  }\n\n  bindLegendInteractivity() {\n    select(this.barChartEl)\n      .selectAll('.legend')\n      .on('click', this.legend.interactive && !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on(\n        'mouseover',\n        this.legend.interactive && !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i], true) : null\n      )\n      .on('mouseout', this.legend.interactive && !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  setLegendCursor() {\n    select(this.barChartEl)\n      .selectAll('.legend')\n      .style('cursor', this.legend.interactive && !this.suppressEvents ? this.cursor : null);\n  }\n\n  bindInteractivity() {\n    this.update\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n    this.updatingLabels\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  enterLabels() {\n    this.enteringLabels\n      .attr('opacity', d => {\n        return checkInteraction(\n          d,\n          checkLabelDisplayOnly(this.dataLabel.visible, this.dataLabel.displayOnly, d, this.displayOnlyLabelData, [\n            this.ordinalAccessor\n          ]),\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        ) < 1\n          ? 0\n          : Number.EPSILON; // we need this to be epsilon initially to enable auto placement algorithm to run on load\n      })\n      .attr('class', 'bar-dataLabel entering') // entering class is used by collision\n      .attr('fill', this.textTreatmentHandler)\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    // placeDataLabels({\n    //   root: this.enteringLabels,\n    //   xScale: this.x,\n    //   yScale: this.y,\n    //   ordinalAccessor: this.ordinalAccessor,\n    //   valueAccessor: this.valueAccessor,\n    //   placement: this.placement,\n    //   layout: this.layout,\n    //   chartType: 'bar'\n    // });\n  }\n\n  updateLabels() {\n    const enterTransition = this.updatingLabels\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration(this.duration);\n\n    this.processLabelOpacity(enterTransition);\n  }\n\n  exitLabels() {\n    this.exitingLabels\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  setLabelContent() {\n    this.updatingLabels.text(d => formatDataLabel(d, this.innerLabelAccessor, this.dataLabel.format));\n  }\n\n  setLabelPosition() {\n    const enteringOnly = this.enteringLabels.filter((_, i, n) => {\n      return select(n[i]).classed('entering');\n    });\n    const updatingOnly = this.updatingLabels.filter((_, i, n) => {\n      return !select(n[i]).classed('entering');\n    });\n    // if we have enter and update we need to process them separately\n    // enter with no transition, update with transition\n    if (enteringOnly.size() > 0) {\n      this.processLabelPosition(enteringOnly, false, true, false);\n      this.processLabelPosition(updatingOnly, true, false, true);\n    } else {\n      // otherwise we can just process update and do it all in one step with transition\n      this.processLabelPosition(updatingOnly, true, true, false);\n    }\n  }\n\n  processLabelPosition(selection, runTransition?, redrawBitmap?, suppressMarkDraw?) {\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    const choice = this.layout === 'vertical' ? 'max' : 'min';\n    let textHeight = 15; // default label is usually 15\n    const hideOnly = this.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n\n    const collisionSettings = {\n      vertical: {\n        top: {\n          validPositions: ['top', 'bottom'],\n          offsets: [5, 1]\n        },\n        middle: {\n          validPositions: ['middle', 'top'],\n          offsets: [1, textHeight / 2]\n        },\n        bottom: {\n          validPositions: ['middle', 'top'],\n          offsets: [1, textHeight / 2]\n        }\n      },\n      horizontal: {\n        right: {\n          validPositions: ['right', 'left'],\n          offsets: [4, 8]\n        },\n        middle: {\n          validPositions: ['middle', 'right'],\n          offsets: [1, 15]\n        },\n        left: {\n          validPositions: ['left', 'right'],\n          offsets: [4, 20]\n        }\n      }\n    };\n\n    const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n    const boundsScope =\n      collisionPlacement && collisionSettings[this.layout][collisionPlacement] // check whether placement provided maps correctly\n        ? this.dataLabel.collisionPlacement\n        : this.layout === 'vertical'\n        ? 'top' // if we don't have collisionPlacement\n        : 'right';\n\n    selection\n      .style('visibility', (_, i, n) => {\n        if (i === 0) {\n          // we just need to check this on one element\n          const textElement = n[i];\n          const style = getComputedStyle(textElement);\n          const fontSize = parseFloat(style.fontSize);\n          textHeight = Math.max(fontSize - 1, 1); // clone.getBBox().height;\n        }\n\n        return this.placement === 'auto' || this.dataLabel.collisionHideOnly ? select(n[i]).style('visibility') : null;\n      })\n      .attr(`data-${ordinalAxis}`, d => this[ordinalAxis](d[this.ordinalAccessor]))\n      .attr(`data-${ordinalDimension}`, this[ordinalAxis].bandwidth())\n      .attr(`data-${valueAxis}`, d =>\n        this.shouldCenterBaseline()\n          ? this[valueAxis](halve(d[this.valueAccessor]) * (this.layout === 'vertical' ? 1 : -1))\n          : this[valueAxis](Math[choice](0, d[this.valueAccessor]))\n      )\n      .attr(`data-${valueDimension}`, d =>\n        Math.abs(\n          this.layout === 'vertical'\n            ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n            : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n        )\n      )\n      .attr('data-translate-x', this.padding.left + this.margin.left)\n      .attr('data-translate-y', this.padding.top + this.margin.top);\n\n    const changeLabels = prepareRenderChange({\n      selection: selection,\n      duration: !runTransition ? 0 : this.duration,\n      namespace: 'position-labels',\n      easing: easeCircleIn\n    });\n\n    this.bitmaps = placeDataLabels({\n      root: changeLabels,\n      xScale: this.x,\n      yScale: this.y,\n      ordinalAccessor: this.ordinalAccessor,\n      valueAccessor: this.valueAccessor,\n      placement: this.placement,\n      layout: this.layout,\n      labelOffset: this.shouldCenterBaseline() ? halve(1) : undefined,\n      chartType: 'bar',\n      avoidCollision: {\n        runOccupancyBitmap: this.dataLabel.visible && this.placement === 'auto',\n        bitmaps: !redrawBitmap ? this.bitmaps : undefined,\n        labelSelection: changeLabels,\n        avoidMarks: [this.update],\n        validPositions: hideOnly ? ['middle'] : collisionSettings[this.layout][boundsScope].validPositions,\n        offsets: hideOnly ? [1] : collisionSettings[this.layout][boundsScope].offsets,\n        accessors: [this.ordinalAccessor, this.groupAccessor], // key is created for lines by nesting done in line,\n        size: [roundTo(this.width, 0), roundTo(this.height, 0)], // for some reason the bitmap needs width instead of inner padded width here\n        boundsScope: hideOnly ? undefined : boundsScope,\n        hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly,\n        suppressMarkDraw: suppressMarkDraw\n      }\n    });\n  }\n\n  drawReferenceLines() {\n    setReferenceLine({\n      groupName: 'bar',\n      root: this.referencesG,\n      referenceLines: this.referenceLines,\n      referenceStyle: this.referenceStyle,\n      innerPaddedWidth: this.innerPaddedWidth,\n      innerPaddedHeight: this.innerPaddedHeight,\n      duration: this.duration,\n      layout: this.layout,\n      x: this.x,\n      y: this.y,\n      unitTest: this.unitTest\n    });\n  }\n\n  drawLegendElements() {\n    drawLegend({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      width: this.innerPaddedWidth,\n      height: this.margin.top + 20,\n      colorArr: this.colorArr,\n      baseColorArr: this.preparedColors,\n      hideStrokes: this.accessibility.hideStrokes,\n      margin: this.margin,\n      padding: this.padding,\n      duration: this.duration,\n      type: 'bar',\n      fontSize: 16,\n      data: this.legendData,\n      labelKey: this.groupAccessor,\n      label: this.legend.labels,\n      format: this.legend.format,\n      hide: !this.legend.visible || !this.groupAccessor, // only allow legend when there is groupAccessor\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.groupAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.innerHoverStyle,\n      clickStyle: this.innerClickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  drawAnnotations() {\n    annotate({\n      source: this.rootG.node(),\n      data: this.annotations,\n      xScale: this.x,\n      xAccessor: this.layout !== 'horizontal' ? this.ordinalAccessor : this.valueAccessor,\n      yScale: this.y,\n      yAccessor: this.layout !== 'horizontal' ? this.valueAccessor : this.ordinalAccessor,\n      width: this.width,\n      height: this.height,\n      padding: this.padding,\n      margin: this.margin,\n      bitmaps: this.bitmaps\n    });\n  }\n\n  setAnnotationAccessibility() {\n    setAccessAnnotation(this.getLanguageString(), this.barChartEl, this.annotations, this.referenceLines);\n  }\n\n  // new accessibility functions added here\n  setChartDescriptionWrapper() {\n    initializeDescriptionRoot({\n      language: this.getLanguageString(),\n      rootEle: this.barChartEl,\n      title: this.accessibility.title || this.mainTitle,\n      chartTag: 'bar-chart',\n      uniqueID: this.chartID,\n      highestHeadingLevel: this.highestHeadingLevel,\n      redraw: this.shouldRedrawWrapper,\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      hideDataTable: this.accessibility.hideDataTableButton\n    });\n    this.shouldRedrawWrapper = false;\n  }\n\n  setParentSVGAccessibility() {\n    setAccessibilityController({\n      chartTag: 'bar-chart',\n      language: this.getLanguageString(),\n      node: this.svg.node(),\n      title: this.accessibility.title || this.mainTitle,\n      description: this.subTitle,\n      uniqueID: this.chartID,\n      geomType: 'bar',\n      includeKeyNames: this.accessibility.includeDataKeyNames,\n      dataKeys: scopeDataKeys(this, chartAccessors, 'bar-chart'),\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.groupAccessor,\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled\n      // groupName: 'node', // bar chart does not include these\n      // groupKeys: [], // bar chart does not include these\n      // nested: '', // bar chart does not include these\n      // recursive: true // bar chart does not include these\n    });\n  }\n\n  setGeometryAccessibilityAttributes() {\n    this.update.each((_d, i, n) => {\n      initializeElementAccess(n[i]);\n    });\n  }\n\n  setGeometryAriaLabels() {\n    const keys = scopeDataKeys(this, chartAccessors, 'bar-chart');\n    this.update.each((_d, i, n) => {\n      setElementFocusHandler({\n        chartTag: 'bar-chart',\n        language: this.getLanguageString(),\n        node: n[i],\n        geomType: 'bar',\n        includeKeyNames: this.accessibility.includeDataKeyNames,\n        dataKeys: keys,\n        dataKeyNames: this.dataKeyNames,\n        uniqueID: this.chartID,\n        disableKeyNav:\n          this.suppressEvents &&\n          this.accessibility.elementsAreInterface === false &&\n          this.accessibility.keyboardNavConfig &&\n          this.accessibility.keyboardNavConfig.disabled\n      });\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setGroupAccessibilityAttributes() {\n    // if a component's <g> elements can enter/exit, this will need to be called in the\n    // lifecycle more than just initially, like how setGeometryAccessibilityAttributes works\n    initializeElementAccess(this.bars.node());\n  }\n\n  setGroupAccessibilityID() {\n    this.bars.each((_, i, n) => {\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setChartAccessibilityTitle() {\n    setAccessTitle(this.getLanguageString(), this.barChartEl, this.accessibility.title || this.mainTitle);\n  }\n\n  setChartAccessibilitySubtitle() {\n    setAccessSubtitle(this.getLanguageString(), this.barChartEl, this.subTitle);\n  }\n\n  setChartAccessibilityLongDescription() {\n    setAccessLongDescription(this.getLanguageString(), this.barChartEl, this.accessibility.longDescription);\n  }\n\n  setChartAccessibilityExecutiveSummary() {\n    setAccessExecutiveSummary(this.getLanguageString(), this.barChartEl, this.accessibility.executiveSummary);\n  }\n\n  setChartAccessibilityPurpose() {\n    setAccessPurpose(this.getLanguageString(), this.barChartEl, this.accessibility.purpose);\n  }\n\n  setChartAccessibilityContext() {\n    setAccessContext(this.getLanguageString(), this.barChartEl, this.accessibility.contextExplanation);\n  }\n\n  setChartAccessibilityStatisticalNotes() {\n    setAccessStatistics(this.getLanguageString(), this.barChartEl, this.accessibility.statisticalNotes);\n  }\n\n  setChartCountAccessibility() {\n    setAccessChartCounts({\n      rootEle: this.barChartEl,\n      parentGNode: this.bars.node(), // pass the wrapper to <g> or geometries here, should be single node selection\n      chartTag: 'bar-chart',\n      geomType: 'bar'\n      // groupName: 'line', // bar chart doesn't use this, so it is omitted\n      // recursive: true // bar chart doesn't use this, so it is omitted\n    });\n  }\n\n  setChartAccessibilityStructureNotes() {\n    setAccessStructure(this.getLanguageString(), this.barChartEl, this.accessibility.structureNotes);\n  }\n  // new accessibility stuff ends here\n\n  onChangeHandler() {\n    if (this.accessibility && typeof this.accessibility.onChangeFunc === 'function') {\n      const d = {\n        updated: this.updated,\n        added: this.enterSize,\n        removed: this.exitSize\n      };\n      this.accessibility.onChangeFunc(d);\n    }\n    this.updated = false;\n    this.enterSize = 0;\n    this.exitSize = 0;\n  }\n\n  onClickHandler(d, n) {\n    this.clickEvent.emit({ data: d, target: n });\n  }\n\n  onHoverHandler(d, n, isLegend?) {\n    overrideTitleTooltip(this.chartID, true);\n    this.hoverEvent.emit({ data: d, target: n });\n    if (this.showTooltip && !isLegend) {\n      this.eventsTooltip({ data: d, evt: event, isToShow: true });\n    }\n  }\n\n  onMouseOutHandler() {\n    overrideTitleTooltip(this.chartID, false);\n    this.mouseOutEvent.emit();\n    if (this.showTooltip) {\n      this.eventsTooltip({ isToShow: false });\n    }\n  }\n\n  // set initial style (instead of copying css class across the lib)\n  setTooltipInitialStyle() {\n    initTooltipStyle(this.tooltipG);\n  }\n\n  // tooltip\n  eventsTooltip({ data, evt, isToShow }: { data?: any; evt?: any; isToShow: boolean }) {\n    drawTooltip({\n      root: this.tooltipG,\n      data,\n      event: evt,\n      isToShow,\n      tooltipLabel: this.tooltipLabel,\n      dataKeyNames: this.dataKeyNames,\n      xAxis: this.xAxis,\n      yAxis: this.yAxis,\n      dataLabel: this.dataLabel,\n      layout: this.layout,\n      ordinalAccessor: this.ordinalAccessor,\n      valueAccessor: this.valueAccessor,\n      groupAccessor: this.groupAccessor,\n      chartType: 'bar'\n    });\n  }\n\n  render() {\n    this.drawStartEvent.emit({ chartID: this.chartID });\n\n    // theme hardcoded until we re-enable it\n    const theme = 'light';\n    // everything between this comment and the third should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n    this.init();\n    if (this.shouldSetLocalizationConfig) {\n      this.setLocalizationConfig();\n      this.shouldSetLocalizationConfig = false;\n    }\n    if (this.shouldSetTagLevels) {\n      this.setTagLevels();\n      this.shouldSetTagLevels = false;\n    }\n    if (this.shouldCheckValueAxis) {\n      if (this.layout === 'horizontal') {\n        this.shouldUpdateXAxis = true;\n        this.shouldSetXAxisAccessibility = true;\n        this.shouldUpdateXGrid = true;\n      } else if (this.layout === 'vertical') {\n        this.shouldUpdateYAxis = true;\n        this.shouldSetYAxisAccessibility = true;\n        this.shouldUpdateYGrid = true;\n      }\n      this.shouldCheckValueAxis = false;\n    }\n    if (this.shouldCheckLabelAxis) {\n      if (this.layout === 'vertical') {\n        this.shouldUpdateXAxis = true;\n        this.shouldSetXAxisAccessibility = true;\n      } else if (this.layout === 'horizontal') {\n        this.shouldUpdateYAxis = true;\n        this.shouldSetYAxisAccessibility = true;\n      }\n      this.shouldCheckLabelAxis = false;\n    }\n    if (this.shouldUpdateData) {\n      this.prepareData();\n      this.shouldUpdateData = false;\n    }\n    if (this.shouldUpdateLegendData) {\n      this.prepareLegendData();\n      this.shouldUpdateLegendData = false;\n    }\n    if (this.shouldUpdateLabelData) {\n      this.prepareLabelData();\n      this.shouldUpdateLabelData = false;\n    }\n    if (this.shouldUpdateLayoutVariables) {\n      this.updateChartVariable();\n      this.shouldUpdateLayoutVariables = false;\n    }\n    if (this.shouldUpdateScales) {\n      this.prepareScales();\n      this.shouldUpdateScales = false;\n    }\n    if (this.shouldValidateInteractionKeys) {\n      this.validateInteractionKeys();\n      this.shouldValidateInteractionKeys = false;\n    }\n    if (this.shouldUpdateTableData) {\n      this.setTableData();\n      this.shouldUpdateTableData = false;\n    }\n    if (this.shouldValidate) {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.shouldValidate = false;\n    }\n    if (this.shouldValidateClickStyle) {\n      this.validateClickStyle();\n      this.shouldValidateClickStyle = false;\n    }\n    if (this.shouldValidateHoverStyle) {\n      this.validateHoverStyle();\n      this.shouldValidateHoverStyle = false;\n    }\n    if (this.shouldValidateDataLabelAccessor) {\n      this.validateDataLabelAccessor();\n      this.shouldValidateDataLabelAccessor = false;\n    }\n    if (this.shouldSetColors) {\n      this.setColors();\n      this.shouldSetColors = false;\n    }\n    if (this.shouldValidateLabelPlacement) {\n      this.validateLabelPlacement();\n      this.shouldValidateLabelPlacement = false;\n    }\n\n    // Everything between this comment and the first should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n    return (\n      <div class={`o-layout is--${this.layout} ${theme}`}>\n        <div class=\"o-layout--chart\">\n          <this.topLevel class=\"bar-main-title vcl-main-title\">{this.mainTitle}</this.topLevel>\n          <this.bottomLevel class=\"visa-ui-text--instructions bar-sub-title vcl-sub-title\" />\n          <div\n            class=\"bar-legend vcl-legend\"\n            style={{ display: this.legend.visible && this.groupAccessor ? 'block' : 'none' }}\n          />\n          <keyboard-instructions\n            uniqueID={this.chartID}\n            geomType={'bar'}\n            groupName={'bar group'} // taken from initializeDescriptionRoot, on bar this should be \"bar group\", stacked bar is \"stack\", and clustered is \"cluster\"\n            language={this.getLanguageString()}\n            chartTag={'bar-chart'}\n            width={this.width - (this.margin ? this.margin.right || 0 : 0)}\n            isInteractive={this.accessibility.elementsAreInterface}\n            hasCousinNavigation={this.groupAccessor ? true : false} // on bar this requires checking for groupAccessor\n            disabled={\n              this.suppressEvents &&\n              this.accessibility.elementsAreInterface === false &&\n              this.accessibility.keyboardNavConfig &&\n              this.accessibility.keyboardNavConfig.disabled\n            } // the chart is \"simple\"\n          />\n          <div class=\"visa-viz-d3-bar-container\" />\n          <div class=\"bar-tooltip vcl-tooltip\" style={{ display: this.showTooltip ? 'block' : 'none' }} />\n          <data-table\n            uniqueID={this.chartID}\n            isCompact\n            language={this.getLanguageString()}\n            tableColumns={this.tableColumns}\n            dataKeyNames={this.dataKeyNames}\n            data={this.tableData}\n            padding={this.padding}\n            margin={this.margin}\n            hideDataTable={this.accessibility.hideDataTableButton}\n            unitTest={this.unitTest}\n          />\n        </div>\n        {/* <canvas id=\"bitmap-render\" /> */}\n      </div>\n    );\n  }\n  private init() {\n    // reading properties\n    const keys = Object.keys(BarChartDefaultValues);\n    let i = 0;\n    const exceptions = {\n      showTooltip: {\n        exception: false\n      },\n      mainTitle: {\n        exception: ''\n      },\n      subTitle: {\n        exception: ''\n      },\n      barIntervalRatio: {\n        exception: 0\n      },\n      wrapLabel: {\n        exception: false\n      },\n      hoverOpacity: {\n        exception: 0\n      }\n    };\n    for (i = 0; i < keys.length; i++) {\n      const exception = !exceptions[keys[i]] ? false : this[keys[i]] === exceptions[keys[i]].exception;\n      this[keys[i]] = this[keys[i]] || exception ? this[keys[i]] : BarChartDefaultValues[keys[i]];\n    }\n  }\n}\n\n// incorporate OSS licenses into build\nwindow['VisaChartsLibOSSLicenses'] = getLicenses(); // tslint:disable-line no-string-literal\n"],"mappings":"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","ignoreList":[]}