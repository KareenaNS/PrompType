{"version":3,"names":["transformer","x0","x1","t0","t1","k10","transform","interpolator","identity","clamp","unknown","scale","x","isNaN","Math","max","min","domain","_","arguments","length","t","copy","source","target","sequentialPow","powish","exponent","initInterpolator","apply","sequentialSqrt","propDefaultValues","Utils","ScatterPlotDefaultValues","mainTitle","subTitle","text","height","width","margin","top","bottom","right","left","padding","localization","xAccessor","yAccessor","groupAccessor","sizeConfig","accessibility","animationConfig","highestHeadingLevel","sortOrder","xAxis","yAxis","showBaselineX","showBaselineTrue","showBaselineY","showBaselineFalse","colorPalette","colorPaletteCategorical","dotRadius","dotRadius6","dotOpacity","dotSymbols","referenceStyle","showFitLine","fitLineStyle","cursor","hoverOpacity","hoverStyle","symbolHoverStyle","clickStyle","symbolClickStyle","dataLabel","legend","categoryLegend","tooltipLabel","showTooltip","suppressEvents","referenceLines","annotations","clickHighlight","scatterPlotCss","ScatterPlotStyle0","getGlobalInstances","configLocalization","getActiveLanguageString","getAccessibleStrokes","ensureTextContrast","createTextStrokeFilter","initializeDescriptionRoot","initializeElementAccess","setElementFocusHandler","setElementAccessID","setAccessibilityController","hideNonessentialGroups","setAccessTitle","setAccessSubtitle","setAccessLongDescription","setAccessExecutiveSummary","setAccessPurpose","setAccessContext","setAccessStatistics","setAccessChartCounts","setAccessXAxis","setAccessYAxis","setAccessStructure","setAccessAnnotation","retainAccessFocus","checkAccessFocus","setElementInteractionAccessState","setAccessibilityDescriptionWidth","annotate","chartAccessors","checkInteraction","checkClicked","checkHovered","convertVisaColor","drawAxis","drawGrid","drawLegend","setLegendInteractionState","drawTooltip","formatDataLabel","getColors","getLicenses","getPadding","getScopedData","initTooltipStyle","leastSquares","overrideTitleTooltip","placeDataLabels","scopeDataKeys","symbols","transitionEndAll","visaColors","validateAccessibilityProps","validateLocalizationProps","findTagLevel","prepareRenderChange","roundTo","resolveLabelCollision","setSubTitle","setReferenceLine","ScatterPlot","this","shouldValidateAccessibility","shouldValidateLocalization","updated","shouldUpdateAnnotations","shouldResetRoot","shouldUpdateTableData","shouldSetColors","shouldSetSubTitle","shouldUpdateData","shouldUpdateScales","shouldValidate","shouldUpdateLayout","shouldEnterUpdateExit","shouldSetGlobalSelections","shouldSetTestingAttributes","shouldUpdateGeometries","shouldUpdateXAxis","shouldUpdateYAxis","shouldUpdateBaselineX","shouldUpdateBaselineY","shouldUpdateXGrid","shouldUpdateYGrid","shouldUpdateLegend","shouldUpdateReferenceLines","shouldDrawFitLine","shouldUpdateLabels","shouldAddStrokeUnder","shouldValidateClickStyle","shouldValidateHoverStyle","shouldValidateInteractionKeys","shouldValidateDataLabelAccessor","shouldSetSelectionClass","shouldUpdateCursor","shouldDrawInteractionState","shouldSetDotRadius","shouldBindInteractivity","shouldUpdateLegendInteractivity","shouldSetLegendCursor","shouldSetLabelOpacity","shouldSetPointOpacity","shouldUpdateDescriptionWrapper","shouldSetChartAccessibilityTitle","shouldSetChartAccessibilitySubtitle","shouldSetChartAccessibilityLongDescription","shouldSetChartAccessibilityExecutiveSummary","shouldSetChartAccessibilityStatisticalNotes","shouldSetChartAccessibilityStructureNotes","shouldSetParentSVGAccessibility","shouldSetGeometryAccessibilityAttributes","shouldSetGeometryAriaLabels","shouldSetGroupAccessibilityAttributes","shouldSetGroupAccessibilityLabel","shouldSetChartAccessibilityPurpose","shouldSetChartAccessibilityContext","shouldRedrawWrapper","shouldSetTagLevels","shouldSetChartAccessibilityCount","shouldSetYAxisAccessibility","shouldSetXAxisAccessibility","shouldSetAnnotationAccessibility","shouldSetStrokes","shouldSetLocalizationConfig","topLevel","bottomLevel","strokes","setColors","rawColors","colors","nest","textColorArr","adjustedColors","getStrokeColor","color","hideStrokes","innerClickStyle","toLowerCase","innerHoverStyle","forEach","adjusted","push","colorArr","textFillHandler","d","clicked","innerInteractionKeys","hovered","hoverHighlight","baseColor","dotColor","textColor","handleDotStyle","i","n","dualEncodeColor","scaleSequentialSqrt","sizeMin","sizeMax","interpolate","sizeAccessor","strokeWidth","parseFloat","size","shapeArea","select","attr","dataWatcher","_newData","_oldData","idWatcher","newID","_oldID","console","error","headingWatcher","_newVal","_oldVal","titleWatcher","subtitleWatcher","layoutWatcher","xAccessorWatcher","yAccessorWatcher","sizeConfigWatcher","groupAccessorWatcher","interactionKeys","xAxisWatcher","newGridVal","gridVisible","oldGridVal","newTickInterval","tickInterval","oldTickInterval","yAxisWatcher","showBaselineXWatcher","showBaselineYWatcher","colorsWatcher","dotRadiusWatcher","dotOpacityWatcher","dotSymbolsWatcher","hoverStyleWatcher","clickStyleWatcher","referenceWatcher","fitLineStyleWatcher","cursorWatcher","hoverOpacityWatcher","labelWatcher","newVisibleVal","visible","oldVisibleVal","newAccessor","labelAccessor","oldAccessor","newFormat","format","oldFormat","showTooltipWatcher","tooltipLabelWatcher","legendWatcher","newInteractiveVal","interactive","oldInteractiveVal","suppressWatcher","annotationsWatcher","accessibilityWatcher","newTitle","title","oldTitle","newExecutiveSummary","executiveSummary","oldExecutiveSummary","newPurpose","purpose","oldPurpose","newLongDescription","longDescription","oldLongDescription","newContext","contextExplanation","oldContext","newStatisticalNotes","statisticalNotes","oldStatisticalNotes","newStructureNotes","structureNotes","oldStructureNotes","newincludeDataKeyNames","includeDataKeyNames","oldincludeDataKeyNames","newElementDescriptionAccessor","elementDescriptionAccessor","oldElementDescriptionAccessor","newStrokes","oldStrokes","newKeyNav","keyboardNavConfig","disabled","oldKeyNav","newInterface","elementsAreInterface","oldInterface","localizationWatcher","newLanguage","language","oldLanguage","newNumeralLocale","numeralLocale","oldNumeralLocale","xValueOverrideWatcher","yValueOverrideWatcher","showFitLineWatcher","clickWatcher","hoverWatcher","interactionWatcher","dataKeyNamesWatcher","unitTestWatcher","componentWillLoad","chartID","uniqueID","uuid","initialLoadEvent","emit","Promise","resolve","duration","defaults","scatterChartEl","id","setLocalizationConfig","setTagLevels","prepareData","setLayoutData","validateClickStyle","validateHoverStyle","prepareScales","validateInteractionKeys","validateDataLabelAccessor","setTableData","shouldValidateAccessibilityProps","shouldValidateLocalizationProps","componentWillUpdate","componentDidLoad","renderRootElements","setTooltipInitialStyle","setChartDescriptionWrapper","setChartAccessibilityTitle","setChartAccessibilitySubtitle","setChartAccessibilityLongDescription","setChartAccessibilityExecutiveSummary","setChartAccessibilityPurpose","setChartAccessibilityContext","setChartAccessibilityStatisticalNotes","setChartAccessibilityStructureNotes","setParentSVGAccessibility","reSetRoot","setStrokes","setSubTitleElements","drawXGrid","drawYGrid","setGlobalSelections","setTestingAttributes","enterPointGroups","exitPointGroups","enterDataLabels","updateDataLabels","exitDataLabels","setPointOpacity","drawPointGroups","setChartCountAccessibility","setGeometryAccessibilityAttributes","setGeometryAriaLabels","drawLegendElements","drawDataLabels","addStrokeUnder","drawFitLine","drawReferenceLines","setSelectedClass","updateCursor","setLegendCursor","bindInteractivity","bindLegendInteractivity","drawAnnotations","setAnnotationAccessibility","drawXAxis","setXAxisAccessibility","drawYAxis","setYAxisAccessibility","drawBaselineX","drawBaselineY","onChangeHandler","root","node","dotG","setGroupAccessibilityID","then","initialLoadEndEvent","componentDidUpdate","setDotRadius","updateInteractionState","setLabelOpacity","drawEndEvent","windowInstances","languageString","i18Next","languageObject","getResourceBundle","numeralObject","numeral","localeData","skipValidation","Object","assign","disableValidation","data","context","onClickEvent","undefined","clickEvent","innerHeight","innerWidth","innerPaddedHeight","innerPaddedWidth","groupInteraction","innerLabelAccessor","innerLabelFormat","innerScopeDataKeys","innerChartSingleAccessors","singleAccessors","accessor","innerChartAccessors","keys","tableData","tableColumns","getLanguageString","key","entries","values","subTitleG","xMinValue","xMaxValue","yMinValue","yMaxValue","zMinValue","zMaxValue","xMin","xMinValueOverride","xMax","xMaxValueOverride","yMin","yMinValueOverride","yMax","yMaxValueOverride","sizeMinTruthy","minValueOverride","sizeMaxTruthy","maxValueOverride","map","param","scaleLinear","range","y","scaleSqrt","minSizeOverride","maxSizeOverride","symbol","scaleOrdinal","path_arr","shape","general","split","j","xs","ys","k","z","reduce","a","b","area","toCircle","PI","baseColors","textFilter","svg","filter","strokeSizeOverride","updateLabels","updatePoints","classed","updateStrokeWidth","append","rootG","gridG","style","fitLine","labelG","legendG","tooltipG","referencesG","dataBoundToGroups","selectAll","enterPointWrappers","enter","exitPointWrappers","exit","updatePointWrappers","merge","exitSize","dataBoundToGeometries","enterPoints","exitPoints","dataBoundToLabelGroups","enteringLabelGroups","exitingLabelGroups","updatingLabelGroups","dataBoundToLabels","enterLabels","exitLabels","unitTest","interrupt","on","onHoverHandler","onMouseOutHandler","each","_d","onClickHandler","order","transition","ease","easeCircleIn","index","indexOf","substring","call","remove","focusDidExist","parentGNode","me","xChange","yChange","rChange","base","setTimeout","transitionEndEvent","selected","selectable","changeSvg","selection","namespace","easing","changeRoot","changeRootG","axisLabel","label","dataKeyNames","axisScale","hide","rootEle","hasXAxis","xAxisLabel","hasYAxis","yAxisLabel","markOffset","opacity","Number","EPSILON","xScale","yScale","sizeScale","ordinalAccessor","valueAccessor","placement","chartType","labelOffset","hideOnly","collisionHideOnly","labelSettingUpdate","bitmaps","avoidCollision","runOccupancyBitmap","labelSelection","avoidMarks","validPositions","offsets","accessors","addCollisionClass","prevOpacity","styleVisibility","targetOpacity","labelsAdded","labelsRemoved","removeOnly","suppressMarkDraw","fitlineOpacity","xSeries","ySeries","leastSquaresCoeff","slope","intercept","currentFitLine","enterFitLine","dashed","groupName","chartTag","redraw","disableKeyNav","hideDataTable","hideDataTableButton","description","geomType","includeKeyNames","dataKeys","noGroupAccessor","baseColorArr","type","fontSize","labels","onChangeFunc","added","enterSize","removed","isLegend","hoverEvent","eventsTooltip","evt","event","isToShow","mouseOutEvent","render","drawStartEvent","init","h","class","display","isInteractive","hasCousinNavigation","isCompact","exceptions","exception","window"],"sources":["node_modules/d3-scale/src/sequential.js","src/components/scatter-plot/scatter-plot-default-values.ts","src/components/scatter-plot/scatter-plot.scss?tag=scatter-plot","src/components/scatter-plot/scatter-plot.tsx"],"sourcesContent":["import {identity} from \"./continuous\";\nimport {initInterpolator} from \"./init\";\nimport {linearish} from \"./linear\";\nimport {loggish} from \"./log\";\nimport {symlogish} from \"./symlog\";\nimport {powish} from \"./pow\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport Utils from '@visa/visa-charts-utils';\n\nconst { propDefaultValues } = Utils;\n\nexport class ScatterPlotDefaultValues {\n  static readonly mainTitle = 'Scatter Plot Title';\n  static readonly subTitle = propDefaultValues.subTitle.text;\n  static readonly height = 300;\n  static readonly width = 650;\n  static readonly margin = {\n    top: 300 * 0.01,\n    bottom: 300 * 0.01,\n    right: 650 * 0.01,\n    left: 650 * 0.01\n  };\n  static readonly padding = {\n    top: 20,\n    bottom: 50,\n    right: 50,\n    left: 60\n  };\n\n  static readonly localization = propDefaultValues.localization;\n\n  static readonly xAccessor = 'metric';\n  static readonly yAccessor = 'value';\n  static readonly groupAccessor = 'category';\n\n  static readonly sizeConfig = propDefaultValues.sizeConfig;\n  static readonly accessibility = propDefaultValues.accessibility;\n  static readonly animationConfig = propDefaultValues.animationConfig;\n  static readonly highestHeadingLevel = propDefaultValues.highestHeadingLevel;\n  static readonly sortOrder = propDefaultValues.sortOrder;\n  static readonly xAxis = propDefaultValues.xAxis;\n\n  static readonly yAxis = propDefaultValues.yAxis;\n  static readonly showBaselineX = propDefaultValues.showBaselineTrue;\n  static readonly showBaselineY = propDefaultValues.showBaselineFalse;\n\n  static readonly colorPalette = propDefaultValues.colorPaletteCategorical;\n  static readonly dotRadius = propDefaultValues.dotRadius6;\n  static readonly dotOpacity = propDefaultValues.dotOpacity;\n  static readonly dotSymbols = propDefaultValues.dotSymbols;\n\n  static readonly referenceStyle = propDefaultValues.referenceStyle;\n  static readonly showFitLine = propDefaultValues.showFitLine;\n  static readonly fitLineStyle = propDefaultValues.referenceStyle;\n\n  static readonly cursor = propDefaultValues.cursor;\n  static readonly hoverOpacity = propDefaultValues.hoverOpacity;\n  static readonly hoverStyle = propDefaultValues.symbolHoverStyle;\n  static readonly clickStyle = propDefaultValues.symbolClickStyle;\n\n  static readonly dataLabel = propDefaultValues.dataLabel;\n  static readonly dataKeyNames;\n  static readonly legend = propDefaultValues.categoryLegend;\n  static readonly tooltipLabel = propDefaultValues.tooltipLabel;\n\n  static readonly showTooltip = propDefaultValues.showTooltip;\n  static readonly suppressEvents = propDefaultValues.suppressEvents;\n  static readonly referenceLines = propDefaultValues.referenceLines;\n  static readonly annotations = propDefaultValues.annotations;\n\n  static readonly hoverHighlight;\n  static readonly clickHighlight = propDefaultValues.clickHighlight;\n}\n","/**\n * Copyright (c) 2020, 2021, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nscatter-plot {\n  .annotations {\n    pointer-events: none;\n    .handle {\n      pointer-events: all;\n    }\n  }\n\n  .screen-reader-info {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n\n  .data-table-link {\n    color: #767676;\n    text-decoration: none;\n    font-size: 12px;\n    margin-left: 5%;\n  }\n\n  .hidden {\n    display: none;\n  }\n\n  .axis {\n    font-size: 12px;\n    text {\n      font: 0.65rem;\n      fill: #767676;\n    }\n\n    &-label {\n      text-anchor: middle;\n      font: 1rem sans-serif;\n    }\n\n    &-mark {\n      path {\n        color: #949494;\n        stroke-width: 0px;\n      }\n    }\n\n    path {\n      color: #949494;\n      stroke-width: 2px;\n    }\n  }\n\n  .axis-mark {\n    path {\n      stroke: #767676;\n      stroke-opacity: 1;\n    }\n  }\n\n  .grid {\n    line {\n      stroke: #c9c9c9;\n      stroke-opacity: 0.6;\n      // shape-rendering: crispEdges;\n      // stroke-dasharray: 4, 4;\n    }\n\n    path {\n      stroke-width: 0;\n      stroke: #767676;\n    }\n  }\n\n  .scatter-legend {\n    font-size: 1em;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n\n    .legend {\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n    }\n  }\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport { Component, Element, Prop, Watch, h, Event, EventEmitter } from '@stencil/core';\n\nimport { select, event } from 'd3-selection';\nimport { max, min } from 'd3-array';\nimport { scaleLinear, scaleOrdinal, scaleSqrt, scaleSequentialSqrt } from 'd3-scale';\nimport { interpolate } from 'd3-interpolate';\nimport { easeCircleIn } from 'd3-ease';\nimport { nest } from 'd3-collection';\nimport 'd3-transition';\nimport { v4 as uuid } from 'uuid';\nimport {\n  IBoxModelType,\n  ILocalizationType,\n  IClickStyleType,\n  IHoverStyleType,\n  IAxisType,\n  IReferenceStyleType,\n  IDataLabelType,\n  ITooltipLabelType,\n  IAccessibilityType,\n  IAnimationConfig,\n  ILegendType,\n  ISubTitleType\n} from '@visa/charts-types';\nimport { ScatterPlotDefaultValues } from './scatter-plot-default-values';\nimport Utils from '@visa/visa-charts-utils';\n\nconst {\n  getGlobalInstances,\n  configLocalization,\n  getActiveLanguageString,\n  getAccessibleStrokes,\n  ensureTextContrast,\n  createTextStrokeFilter,\n  initializeDescriptionRoot,\n  initializeElementAccess,\n  setElementFocusHandler,\n  setElementAccessID,\n  setAccessibilityController,\n  hideNonessentialGroups,\n  setAccessTitle,\n  setAccessSubtitle,\n  setAccessLongDescription,\n  setAccessExecutiveSummary,\n  setAccessPurpose,\n  setAccessContext,\n  setAccessStatistics,\n  setAccessChartCounts,\n  setAccessXAxis,\n  setAccessYAxis,\n  setAccessStructure,\n  setAccessAnnotation,\n  retainAccessFocus,\n  checkAccessFocus,\n  setElementInteractionAccessState,\n  setAccessibilityDescriptionWidth,\n  annotate,\n  chartAccessors,\n  checkInteraction,\n  checkClicked,\n  checkHovered,\n  convertVisaColor,\n  drawAxis,\n  drawGrid,\n  drawLegend,\n  setLegendInteractionState,\n  drawTooltip,\n  formatDataLabel,\n  getColors,\n  getLicenses,\n  getPadding,\n  getScopedData,\n  initTooltipStyle,\n  leastSquares,\n  overrideTitleTooltip,\n  placeDataLabels,\n  scopeDataKeys,\n  symbols,\n  transitionEndAll,\n  visaColors,\n  validateAccessibilityProps,\n  validateLocalizationProps,\n  findTagLevel,\n  prepareRenderChange,\n  roundTo,\n  resolveLabelCollision,\n  setSubTitle,\n  setReferenceLine\n} = Utils;\n\n@Component({\n  tag: 'scatter-plot',\n  styleUrl: 'scatter-plot.scss'\n})\nexport class ScatterPlot {\n  @Event() clickEvent: EventEmitter;\n  @Event() hoverEvent: EventEmitter;\n  @Event() mouseOutEvent: EventEmitter;\n  @Event() initialLoadEvent: EventEmitter;\n  @Event() initialLoadEndEvent: EventEmitter;\n  @Event() drawStartEvent: EventEmitter;\n  @Event() drawEndEvent: EventEmitter;\n  @Event() transitionEndEvent: EventEmitter;\n\n  // Chart Attributes (1/7)\n  @Prop({ mutable: true }) localization: ILocalizationType = ScatterPlotDefaultValues.localization;\n  @Prop({ mutable: true }) mainTitle: string = ScatterPlotDefaultValues.mainTitle;\n  @Prop({ mutable: true }) subTitle: string | ISubTitleType = ScatterPlotDefaultValues.subTitle;\n  @Prop({ mutable: true }) height: number = ScatterPlotDefaultValues.height;\n  @Prop({ mutable: true }) width: number = ScatterPlotDefaultValues.width;\n  @Prop({ mutable: true }) margin: IBoxModelType = ScatterPlotDefaultValues.margin;\n  @Prop({ mutable: true }) padding: IBoxModelType = ScatterPlotDefaultValues.padding;\n  @Prop({ mutable: true }) highestHeadingLevel: string | number = ScatterPlotDefaultValues.highestHeadingLevel;\n\n  // Data (2/7)\n  @Prop() data: object[];\n  @Prop() uniqueID: string;\n  @Prop({ mutable: true }) xAccessor: string = ScatterPlotDefaultValues.xAccessor;\n  @Prop({ mutable: true }) yAccessor: string = ScatterPlotDefaultValues.yAccessor;\n  @Prop({ mutable: true }) sizeConfig: any = ScatterPlotDefaultValues.sizeConfig;\n  @Prop({ mutable: true }) groupAccessor: string = ScatterPlotDefaultValues.groupAccessor;\n\n  // Axis (3/7)\n  @Prop({ mutable: true }) xAxis: IAxisType = ScatterPlotDefaultValues.xAxis;\n  @Prop({ mutable: true }) yAxis: IAxisType = ScatterPlotDefaultValues.yAxis;\n  @Prop({ mutable: true }) showBaselineX: boolean = ScatterPlotDefaultValues.showBaselineX;\n  @Prop({ mutable: true }) showBaselineY: boolean = ScatterPlotDefaultValues.showBaselineY;\n\n  // Color & Shape (4/7)\n  @Prop({ mutable: true }) colorPalette: string = ScatterPlotDefaultValues.colorPalette;\n  @Prop({ mutable: true }) colors: string[];\n  @Prop({ mutable: true }) dotRadius: number = ScatterPlotDefaultValues.dotRadius;\n  @Prop({ mutable: true }) dotOpacity: number = ScatterPlotDefaultValues.dotOpacity;\n  @Prop({ mutable: true }) hoverStyle: IHoverStyleType = ScatterPlotDefaultValues.hoverStyle;\n  @Prop({ mutable: true }) clickStyle: IClickStyleType = ScatterPlotDefaultValues.clickStyle;\n  @Prop({ mutable: true }) referenceStyle: IReferenceStyleType = ScatterPlotDefaultValues.referenceStyle;\n  @Prop({ mutable: true }) cursor: string = ScatterPlotDefaultValues.cursor;\n  @Prop({ mutable: true }) hoverOpacity: number = ScatterPlotDefaultValues.hoverOpacity;\n  @Prop({ mutable: true }) animationConfig: IAnimationConfig = ScatterPlotDefaultValues.animationConfig;\n  @Prop({ mutable: true }) fitLineStyle: IReferenceStyleType = ScatterPlotDefaultValues.fitLineStyle;\n  @Prop({ mutable: true }) dotSymbols: string[] = ScatterPlotDefaultValues.dotSymbols;\n\n  // Data label (5/7)\n  @Prop({ mutable: true }) dataLabel: IDataLabelType = ScatterPlotDefaultValues.dataLabel;\n  @Prop({ mutable: true }) dataKeyNames: object;\n  @Prop({ mutable: true }) showTooltip: boolean = ScatterPlotDefaultValues.showTooltip;\n  @Prop({ mutable: true }) tooltipLabel: ITooltipLabelType = ScatterPlotDefaultValues.tooltipLabel;\n  @Prop({ mutable: true }) accessibility: IAccessibilityType = ScatterPlotDefaultValues.accessibility;\n  @Prop({ mutable: true }) legend: ILegendType = ScatterPlotDefaultValues.legend;\n  @Prop({ mutable: true }) annotations: object[] = ScatterPlotDefaultValues.annotations;\n\n  // Calculation (6/7)\n  @Prop() xMaxValueOverride: number;\n  @Prop() xMinValueOverride: number;\n  @Prop() yMaxValueOverride: number;\n  @Prop() yMinValueOverride: number;\n  @Prop({ mutable: true }) showFitLine: boolean = ScatterPlotDefaultValues.showFitLine;\n  @Prop({ mutable: true }) referenceLines: object[] = ScatterPlotDefaultValues.referenceLines;\n\n  // Interactivity (7/7)\n  @Prop({ mutable: true }) suppressEvents: boolean = ScatterPlotDefaultValues.suppressEvents;\n  @Prop({ mutable: true }) hoverHighlight: object;\n  @Prop({ mutable: true }) clickHighlight: object[] = ScatterPlotDefaultValues.clickHighlight;\n  @Prop({ mutable: true }) interactionKeys: string[];\n\n  // Testing (8/7)\n  @Prop() unitTest: boolean = false;\n  //  @Prop() debugMode: boolean = false;\n\n  @Element()\n  scatterChartEl: HTMLElement;\n  shouldValidateAccessibility: boolean = true;\n  shouldValidateLocalization: boolean = true;\n  svg: any;\n  root: any;\n  rootG: any;\n  dotG: any;\n  gridG: any;\n  fitLine: any;\n  referencesG: any;\n  legendG: any;\n  tooltipG: any;\n  colorArr: any;\n  x: any;\n  y: any;\n  size: any;\n  shapeArea: any;\n  nest: any;\n  symbol: any;\n  innerHeight: number;\n  innerWidth: number;\n  innerPaddedHeight: number;\n  innerPaddedWidth: number;\n  xMin: any;\n  xMax: any;\n  yMin: any;\n  yMax: any;\n  sizeMin: any;\n  sizeMax: any;\n  defaults: boolean;\n  current: any;\n  enterPointWrappers: any;\n  exitPointWrappers: any;\n  updatePointWrappers: any;\n  enterPoints: any;\n  exitPoints: any;\n  updatePoints: any;\n  enteringLabelGroups: any;\n  exitingLabelGroups: any;\n  updatingLabelGroups: any;\n  enterLabels: any;\n  updateLabels: any;\n  exitLabels: any;\n  innerClickStyle: any;\n  innerHoverStyle: any;\n  innerLabelAccessor: string;\n  innerLabelFormat: string;\n  duration: any;\n  labels: any;\n  labelG: any;\n  subTitleG: any;\n  tableData: any;\n  tableColumns: any;\n  // these are added for accessibility\n  updated: boolean = true;\n  enterSize: number;\n  exitSize: number;\n  chartID: string;\n  dotColor: any;\n  textColor: any;\n  rawColors: any;\n  textColorArr: any;\n  innerInteractionKeys: string[];\n  groupInteraction: boolean;\n  shouldUpdateAnnotations: boolean = false;\n  shouldResetRoot: boolean = false;\n  shouldUpdateTableData: boolean = false;\n  shouldSetColors: boolean = false;\n  shouldSetSubTitle: boolean = false;\n  shouldUpdateData: boolean = false;\n  shouldUpdateScales: boolean = false;\n  shouldValidate: boolean = false;\n  shouldUpdateLayout: boolean = false;\n  shouldEnterUpdateExit: boolean = false;\n  shouldSetGlobalSelections: boolean = false;\n  shouldSetTestingAttributes: boolean = false;\n  shouldUpdateGeometries: boolean = false;\n  shouldUpdateXAxis: boolean = false;\n  shouldUpdateYAxis: boolean = false;\n  shouldUpdateBaselineX: boolean = false;\n  shouldUpdateBaselineY: boolean = false;\n  shouldUpdateXGrid: boolean = false;\n  shouldUpdateYGrid: boolean = false;\n  shouldUpdateLegend: boolean = false;\n  shouldUpdateReferenceLines: boolean = false;\n  shouldDrawFitLine: boolean = false;\n  shouldUpdateLabels: boolean = false;\n  shouldAddStrokeUnder: boolean = false;\n  shouldValidateClickStyle: boolean = false;\n  shouldValidateHoverStyle: boolean = false;\n  shouldValidateInteractionKeys: boolean = false;\n  shouldValidateDataLabelAccessor: boolean = false;\n  shouldSetSelectionClass: boolean = false;\n  shouldUpdateCursor: boolean = false;\n  shouldDrawInteractionState: boolean = false;\n  shouldSetDotRadius: boolean = false;\n  shouldBindInteractivity: boolean = false;\n  shouldUpdateLegendInteractivity: boolean = false;\n  shouldSetLegendCursor: boolean = false;\n  shouldSetLabelOpacity: boolean = false;\n  shouldSetPointOpacity: boolean = false;\n  // shouldUpdateStrokeWidth: boolean = false;\n  shouldUpdateDescriptionWrapper: boolean = false;\n  shouldSetChartAccessibilityTitle: boolean = false;\n  shouldSetChartAccessibilitySubtitle: boolean = false;\n  shouldSetChartAccessibilityLongDescription: boolean = false;\n  shouldSetChartAccessibilityExecutiveSummary: boolean = false;\n  shouldSetChartAccessibilityStatisticalNotes: boolean = false;\n  shouldSetChartAccessibilityStructureNotes: boolean = false;\n  shouldSetParentSVGAccessibility: boolean = false;\n  shouldSetGeometryAccessibilityAttributes: boolean = false;\n  shouldSetGeometryAriaLabels: boolean = false;\n  shouldSetGroupAccessibilityAttributes: boolean = false;\n  shouldSetGroupAccessibilityLabel: boolean = false;\n  shouldSetChartAccessibilityPurpose: boolean = false;\n  shouldSetChartAccessibilityContext: boolean = false;\n  shouldRedrawWrapper: boolean = false;\n  shouldSetTagLevels: boolean = false;\n  shouldSetChartAccessibilityCount: boolean = false;\n  shouldSetYAxisAccessibility: boolean = false;\n  shouldSetXAxisAccessibility: boolean = false;\n  shouldSetAnnotationAccessibility: boolean = false;\n  shouldSetStrokes: boolean = false;\n  shouldSetLocalizationConfig: boolean = false;\n  topLevel: string = 'h2';\n  bottomLevel: string = 'p';\n  filter: any;\n  textFilter: any;\n  strokes: any = {};\n  bitmaps: any;\n\n  @Watch('data')\n  dataWatcher(_newData, _oldData) {\n    this.updated = true;\n    this.shouldUpdateData = true;\n    this.shouldSetColors = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldUpdateScales = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetPointOpacity = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateTableData = true;\n    this.shouldValidate = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateLabels = true;\n    this.shouldAddStrokeUnder = true;\n    this.shouldDrawFitLine = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaselineX = true;\n    this.shouldUpdateBaselineY = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('uniqueID')\n  idWatcher(newID, _oldID) {\n    console.error(\n      'Change detected in prop uniqueID from value ' +\n        _oldID +\n        ' to value ' +\n        newID +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.chartID = newID || 'scatter-plot-' + uuid();\n    // this.scatterChartEl.id = this.chartID;\n    // this.shouldValidate = true;\n    // this.shouldUpdateDescriptionWrapper = true;\n    // this.shouldSetParentSVGAccessibility = true;\n    // this.shouldUpdateLegend = true;\n    // this.shouldSetStrokes = true;\n    // this.shouldAddStrokeUnder = true;\n  }\n\n  @Watch('highestHeadingLevel')\n  headingWatcher(_newVal, _oldVal) {\n    this.shouldRedrawWrapper = true;\n    this.shouldSetTagLevels = true;\n    this.shouldSetChartAccessibilityCount = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('mainTitle')\n  titleWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('subTitle')\n  subtitleWatcher(_newVal, _oldVal) {\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('height')\n  @Watch('width')\n  @Watch('padding')\n  @Watch('margin')\n  layoutWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLayout = true;\n    this.shouldUpdateScales = true;\n    this.shouldResetRoot = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldDrawFitLine = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaselineX = true;\n    this.shouldUpdateBaselineY = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('xAccessor')\n  xAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateLabels = true;\n    this.shouldDrawFitLine = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaselineX = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('yAccessor')\n  yAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldValidateDataLabelAccessor = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateLabels = true;\n    this.shouldDrawFitLine = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaselineY = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('sizeConfig')\n  sizeConfigWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldUpdateLabels = true;\n    this.shouldDrawFitLine = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldValidateDataLabelAccessor = true;\n    this.shouldUpdateTableData = true;\n  }\n\n  @Watch('groupAccessor')\n  groupAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldSetColors = true;\n    this.shouldSetPointOpacity = true;\n    this.shouldValidateHoverStyle = true;\n    this.shouldValidateClickStyle = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetGroupAccessibilityAttributes = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('xAxis')\n  xAxisWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateXGrid = true;\n    }\n  }\n\n  @Watch('yAxis')\n  yAxisWatcher(_newVal, _oldVal) {\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateYGrid = true;\n    }\n  }\n\n  @Watch('showBaselineX')\n  showBaselineXWatcher(_newVal, _oldVal) {\n    this.shouldUpdateBaselineX = true;\n  }\n\n  @Watch('showBaselineY')\n  showBaselineYWatcher(_newVal, _oldVal) {\n    this.shouldUpdateBaselineY = true;\n  }\n\n  @Watch('colors')\n  @Watch('colorPalette')\n  colorsWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldUpdateScales = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n  }\n\n  @Watch('dotRadius')\n  dotRadiusWatcher(_newVal, _oldVal) {\n    this.shouldValidateHoverStyle = true;\n    this.shouldValidateClickStyle = true;\n    this.shouldSetDotRadius = true;\n    this.shouldUpdateGeometries = true; // this is need for auto placement\n    this.shouldUpdateLabels = true;\n  }\n\n  @Watch('dotOpacity')\n  dotOpacityWatcher(_newVal, _oldVal) {\n    this.shouldSetPointOpacity = true;\n  }\n\n  @Watch('dotSymbols')\n  dotSymbolsWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n  }\n\n  @Watch('hoverStyle')\n  hoverStyleWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldSetPointOpacity = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldValidateHoverStyle = true;\n  }\n\n  @Watch('clickStyle')\n  clickStyleWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldSetPointOpacity = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldValidateClickStyle = true;\n  }\n\n  @Watch('referenceLines')\n  @Watch('referenceStyle')\n  referenceWatcher(_newVal, _oldVal) {\n    this.shouldUpdateReferenceLines = true;\n  }\n\n  @Watch('fitLineStyle')\n  fitLineStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawFitLine = true;\n  }\n\n  @Watch('cursor')\n  cursorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCursor = true;\n    this.shouldSetLegendCursor = true;\n  }\n\n  @Watch('hoverOpacity')\n  hoverOpacityWatcher(_newVal, _oldVal) {\n    this.shouldSetPointOpacity = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('dataLabel')\n  labelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateGeometries = true; // this is need for auto placement\n    this.shouldUpdateTableData = true; // this is needed for data table formatting\n    this.shouldSetParentSVGAccessibility = true; // this is needed for aria label formatting\n    this.shouldSetGeometryAriaLabels = true; // this is needed for aria label formatting\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    const newAccessor = _newVal && _newVal.labelAccessor ? _newVal.labelAccessor : false;\n    const oldAccessor = _oldVal && _oldVal.labelAccessor ? _oldVal.labelAccessor : false;\n    const newFormat = _newVal && _newVal.format ? _newVal.format : false;\n    const oldFormat = _oldVal && _oldVal.format ? _oldVal.format : false;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetLabelOpacity = true;\n    }\n    if (newAccessor !== oldAccessor || newFormat !== oldFormat) {\n      this.shouldValidateDataLabelAccessor = true;\n    }\n  }\n\n  @Watch('showTooltip')\n  showTooltipWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('tooltipLabel')\n  tooltipLabelWatcher(_newVal, _oldVal) {\n    // we need to call anywhere that innerDataKeys is used\n    this.shouldUpdateTableData = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('legend')\n  legendWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLegend = true;\n    const newInteractiveVal = _newVal && _newVal.interactive;\n    const oldInteractiveVal = _oldVal && _oldVal.interactive;\n    if (newInteractiveVal !== oldInteractiveVal) {\n      this.shouldSetLegendCursor = true;\n      this.shouldUpdateLegendInteractivity = true;\n    }\n  }\n\n  @Watch('suppressEvents')\n  suppressWatcher(_newVal, _oldVal) {\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldUpdateLegend = true;\n    this.shouldSetLegendCursor = true;\n    this.shouldUpdateLegendInteractivity = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldRedrawWrapper = true;\n    this.shouldValidate = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('annotations')\n  annotationsWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetAnnotationAccessibility = true;\n  }\n\n  @Watch('accessibility')\n  accessibilityWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    const newTitle = _newVal && _newVal.title ? _newVal.title : false;\n    const oldTitle = _oldVal && _oldVal.title ? _oldVal.title : false;\n    if (newTitle !== oldTitle) {\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newExecutiveSummary = _newVal && _newVal.executiveSummary ? _newVal.executiveSummary : false;\n    const oldExecutiveSummary = _oldVal && _oldVal.executiveSummary ? _oldVal.executiveSummary : false;\n    if (newExecutiveSummary !== oldExecutiveSummary) {\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n    }\n    const newPurpose = _newVal && _newVal.purpose ? _newVal.purpose : false;\n    const oldPurpose = _oldVal && _oldVal.purpose ? _oldVal.purpose : false;\n    if (newPurpose !== oldPurpose) {\n      this.shouldSetChartAccessibilityPurpose = true;\n    }\n    const newLongDescription = _newVal && _newVal.longDescription ? _newVal.longDescription : false;\n    const oldLongDescription = _oldVal && _oldVal.longDescription ? _oldVal.longDescription : false;\n    if (newLongDescription !== oldLongDescription) {\n      this.shouldSetChartAccessibilityLongDescription = true;\n    }\n    const newContext = _newVal && _newVal.contextExplanation ? _newVal.contextExplanation : false;\n    const oldContext = _oldVal && _oldVal.contextExplanation ? _oldVal.contextExplanation : false;\n    if (newContext !== oldContext) {\n      this.shouldSetChartAccessibilityContext = true;\n    }\n    const newStatisticalNotes = _newVal && _newVal.statisticalNotes ? _newVal.statisticalNotes : false;\n    const oldStatisticalNotes = _oldVal && _oldVal.statisticalNotes ? _oldVal.statisticalNotes : false;\n    if (newStatisticalNotes !== oldStatisticalNotes) {\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n    }\n    const newStructureNotes = _newVal && _newVal.structureNotes ? _newVal.structureNotes : false;\n    const oldStructureNotes = _oldVal && _oldVal.structureNotes ? _oldVal.structureNotes : false;\n    if (newStructureNotes !== oldStructureNotes) {\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    const newincludeDataKeyNames = _newVal && _newVal.includeDataKeyNames;\n    const oldincludeDataKeyNames = _oldVal && _oldVal.includeDataKeyNames;\n    const newElementDescriptionAccessor =\n      _newVal && _newVal.elementDescriptionAccessor ? _newVal.elementDescriptionAccessor : false;\n    const oldElementDescriptionAccessor =\n      _oldVal && _oldVal.elementDescriptionAccessor ? _oldVal.elementDescriptionAccessor : false;\n    if (\n      newincludeDataKeyNames !== oldincludeDataKeyNames ||\n      newElementDescriptionAccessor !== oldElementDescriptionAccessor\n    ) {\n      if (newincludeDataKeyNames !== oldincludeDataKeyNames) {\n        // this one is tricky because it needs to run after the lifecycle\n        // AND it could run in the off-chance this prop is changed\n        this.shouldSetGroupAccessibilityLabel = true;\n      }\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newStrokes = _newVal && _newVal.hideStrokes ? _newVal.hideStrokes : false;\n    const oldStrokes = _oldVal && _oldVal.hideStrokes ? _oldVal.hideStrokes : false;\n    if (newStrokes !== oldStrokes) {\n      this.shouldSetColors = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newKeyNav =\n      _newVal && _newVal.keyboardNavConfig && _newVal.keyboardNavConfig.disabled\n        ? _newVal.keyboardNavConfig.disabled\n        : false;\n    const oldKeyNav =\n      _oldVal && _oldVal.keyboardNavConfig && _oldVal.keyboardNavConfig.disabled\n        ? _oldVal.keyboardNavConfig.disabled\n        : false;\n    const newInterface = _newVal && _newVal.elementsAreInterface ? _newVal.elementsAreInterface : false;\n    const oldInterface = _oldVal && _oldVal.elementsAreInterface ? _oldVal.elementsAreInterface : false;\n    if (newKeyNav !== oldKeyNav || newInterface !== oldInterface) {\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetChartAccessibilitySubtitle = true;\n      this.shouldSetChartAccessibilityLongDescription = true;\n      this.shouldSetChartAccessibilityContext = true;\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n      this.shouldSetChartAccessibilityPurpose = true;\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    if (newInterface !== oldInterface) {\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('localization')\n  localizationWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n\n    // language\n    const newLanguage = _newVal && _newVal.language ? _newVal.language : false;\n    const oldLanguage = _oldVal && _oldVal.language ? _oldVal.language : false;\n    if (newLanguage !== oldLanguage) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n\n    // numeralLocale\n    const newNumeralLocale = _newVal && _newVal.numeralLocale ? _newVal.numeralLocale : false;\n    const oldNumeralLocale = _oldVal && _oldVal.numeralLocale ? _oldVal.numeralLocale : false;\n    if (newNumeralLocale !== oldNumeralLocale) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n  }\n\n  @Watch('xMaxValueOverride')\n  @Watch('xMinValueOverride')\n  xValueOverrideWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldDrawFitLine = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaselineX = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('yMaxValueOverride')\n  @Watch('yMinValueOverride')\n  yValueOverrideWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldDrawFitLine = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaselineY = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('showFitLine')\n  showFitLineWatcher(_newVal, _oldVal) {\n    this.shouldDrawFitLine = true;\n  }\n\n  @Watch('clickHighlight')\n  clickWatcher(_newVal, _oldVal) {\n    this.shouldSetPointOpacity = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n  }\n\n  @Watch('hoverHighlight')\n  hoverWatcher(_newVal, _oldVal) {\n    this.shouldSetPointOpacity = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('interactionKeys')\n  interactionWatcher(_newVal, _oldVal) {\n    this.shouldValidateInteractionKeys = true;\n    this.shouldSetPointOpacity = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateLegendInteractivity = true;\n  }\n\n  @Watch('dataKeyNames')\n  dataKeyNamesWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('unitTest')\n  unitTestWatcher(_newVal, _oldVal) {\n    this.shouldSetTestingAttributes = true;\n  }\n\n  componentWillLoad() {\n    // contrary to componentWillUpdate, this method appears safe to use for\n    // any calculations we need. Keeping them here reduces future refactor,\n    // since componentWillUpdate should eventually mirror this method\n    const chartID = this.uniqueID || 'scatter-plot-' + uuid();\n    this.initialLoadEvent.emit({ chartID: chartID });\n    return new Promise(resolve => {\n      this.duration = 0;\n      this.defaults = true;\n      this.chartID = chartID;\n      this.scatterChartEl.id = this.chartID;\n      this.setLocalizationConfig();\n      this.setTagLevels();\n      this.prepareData();\n      this.setLayoutData();\n      this.validateClickStyle();\n      this.validateHoverStyle();\n      this.setColors();\n      this.prepareScales();\n      this.validateInteractionKeys();\n      this.validateDataLabelAccessor();\n      this.setTableData();\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      resolve('component will load');\n    });\n  }\n\n  componentWillUpdate() {\n    // NEVER put items in this method that rely on props (until stencil bug is resolved)\n    // All items that belong here are currently at the top of render\n    // see: https://github.com/ionic-team/stencil/issues/2061#issuecomment-578282178\n    return new Promise(resolve => {\n      resolve('component will update');\n    });\n  }\n\n  componentDidLoad() {\n    return new Promise(resolve => {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.renderRootElements();\n      this.setTooltipInitialStyle();\n      this.setChartDescriptionWrapper();\n      this.setChartAccessibilityTitle();\n      this.setChartAccessibilitySubtitle();\n      this.setChartAccessibilityLongDescription();\n      this.setChartAccessibilityExecutiveSummary();\n      this.setChartAccessibilityPurpose();\n      this.setChartAccessibilityContext();\n      this.setChartAccessibilityStatisticalNotes();\n      this.setChartAccessibilityStructureNotes();\n      this.setParentSVGAccessibility();\n      this.reSetRoot();\n      this.setStrokes();\n      this.setSubTitleElements();\n      this.drawXGrid();\n      this.drawYGrid();\n      this.setGlobalSelections();\n      this.setTestingAttributes();\n      this.enterPointGroups();\n      // this.updatePointGroups();\n      this.exitPointGroups();\n      this.enterDataLabels();\n      this.updateDataLabels();\n      this.exitDataLabels();\n      this.setPointOpacity();\n      this.drawPointGroups();\n      this.setChartCountAccessibility();\n      this.setGeometryAccessibilityAttributes();\n      this.setGeometryAriaLabels();\n      this.drawLegendElements();\n      this.drawDataLabels();\n      this.addStrokeUnder();\n      this.drawFitLine();\n      this.drawReferenceLines();\n      this.setSelectedClass();\n      this.updateCursor();\n      this.setLegendCursor();\n      this.bindInteractivity();\n      this.bindLegendInteractivity();\n      this.drawAnnotations();\n      this.setAnnotationAccessibility();\n      this.drawXAxis();\n      this.setXAxisAccessibility();\n      this.drawYAxis();\n      this.setYAxisAccessibility();\n      this.drawBaselineX();\n      this.drawBaselineY();\n      this.onChangeHandler();\n      // we want to hide all child <g> of this.root BUT we want to make sure not to hide the\n      // parent<g> that contains our geometries! In a subGroup chart (like stacked bars),\n      // we want to pass the PARENT of all the <g>s that contain bars\n      hideNonessentialGroups(this.root.node(), this.dotG.node());\n      this.setGroupAccessibilityID();\n      this.defaults = false;\n      resolve('component did load');\n    }).then(() => this.initialLoadEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  componentDidUpdate() {\n    return new Promise(resolve => {\n      this.duration = !this.animationConfig || !this.animationConfig.disabled ? 750 : 0;\n      if (this.shouldUpdateDescriptionWrapper) {\n        this.setChartDescriptionWrapper();\n        this.shouldUpdateDescriptionWrapper = false;\n      }\n      if (this.shouldSetChartAccessibilityCount) {\n        this.setChartCountAccessibility();\n        this.shouldSetChartAccessibilityCount = false;\n      }\n      if (this.shouldSetChartAccessibilityTitle) {\n        this.setChartAccessibilityTitle();\n        this.shouldSetChartAccessibilityTitle = false;\n      }\n      if (this.shouldSetChartAccessibilitySubtitle) {\n        this.setChartAccessibilitySubtitle();\n        this.shouldSetChartAccessibilitySubtitle = false;\n      }\n      if (this.shouldSetChartAccessibilityLongDescription) {\n        this.setChartAccessibilityLongDescription();\n        this.shouldSetChartAccessibilityLongDescription = false;\n      }\n      if (this.shouldSetChartAccessibilityExecutiveSummary) {\n        this.setChartAccessibilityExecutiveSummary();\n        this.shouldSetChartAccessibilityExecutiveSummary = false;\n      }\n      if (this.shouldSetChartAccessibilityPurpose) {\n        this.setChartAccessibilityPurpose();\n        this.shouldSetChartAccessibilityPurpose = false;\n      }\n      if (this.shouldSetChartAccessibilityContext) {\n        this.setChartAccessibilityContext();\n        this.shouldSetChartAccessibilityContext = false;\n      }\n      if (this.shouldSetChartAccessibilityStatisticalNotes) {\n        this.setChartAccessibilityStatisticalNotes();\n        this.shouldSetChartAccessibilityStatisticalNotes = false;\n      }\n      if (this.shouldSetChartAccessibilityStructureNotes) {\n        this.setChartAccessibilityStructureNotes();\n        this.shouldSetChartAccessibilityStructureNotes = false;\n      }\n      if (this.shouldSetParentSVGAccessibility) {\n        this.setParentSVGAccessibility();\n        this.shouldSetParentSVGAccessibility = false;\n      }\n      if (this.shouldResetRoot) {\n        this.reSetRoot();\n        this.shouldResetRoot = false;\n      }\n      if (this.shouldSetStrokes) {\n        this.setStrokes();\n        this.shouldSetStrokes = false;\n      }\n      if (this.shouldSetGlobalSelections) {\n        this.setGlobalSelections();\n        this.shouldSetGlobalSelections = false;\n      }\n      if (this.shouldSetTestingAttributes) {\n        this.setTestingAttributes();\n        this.shouldSetTestingAttributes = false;\n      }\n      if (this.shouldSetSubTitle) {\n        this.setSubTitleElements();\n        this.shouldSetSubTitle = false;\n      }\n      if (this.shouldUpdateXGrid) {\n        this.drawXGrid();\n        this.shouldUpdateXGrid = false;\n      }\n      if (this.shouldUpdateYGrid) {\n        this.drawYGrid();\n        this.shouldUpdateYGrid = false;\n      }\n      if (this.shouldEnterUpdateExit) {\n        this.enterPointGroups();\n        // this.updatePointGroups();\n        this.exitPointGroups();\n        this.enterDataLabels();\n        this.updateDataLabels();\n        this.exitDataLabels();\n        this.shouldEnterUpdateExit = false;\n      }\n      if (this.shouldUpdateGeometries) {\n        this.drawPointGroups();\n        this.shouldUpdateGeometries = false;\n      }\n      if (this.shouldSetDotRadius) {\n        this.setDotRadius();\n        this.shouldSetDotRadius = false;\n      }\n      if (this.shouldSetGeometryAccessibilityAttributes) {\n        this.setGeometryAccessibilityAttributes();\n        this.shouldSetGeometryAccessibilityAttributes = false;\n      }\n      if (this.shouldSetGeometryAriaLabels) {\n        this.setGeometryAriaLabels();\n        this.shouldSetGeometryAriaLabels = false;\n      }\n      if (this.shouldSetGroupAccessibilityLabel) {\n        this.setGroupAccessibilityID();\n        this.shouldSetGroupAccessibilityLabel = false;\n      }\n      if (this.shouldUpdateLegend) {\n        this.drawLegendElements();\n        this.shouldUpdateLegend = false;\n      }\n      if (this.shouldUpdateLabels) {\n        this.drawDataLabels();\n        this.shouldUpdateLabels = false;\n      }\n      if (this.addStrokeUnder) {\n        this.addStrokeUnder();\n        this.shouldAddStrokeUnder = false;\n      }\n      if (this.shouldDrawFitLine) {\n        this.drawFitLine();\n        this.shouldDrawFitLine = false;\n      }\n      if (this.shouldUpdateReferenceLines) {\n        this.drawReferenceLines();\n        this.shouldUpdateReferenceLines = false;\n      }\n      if (this.shouldDrawInteractionState) {\n        this.updateInteractionState();\n        this.shouldDrawInteractionState = false;\n      }\n      if (this.shouldSetPointOpacity) {\n        this.setPointOpacity();\n        this.shouldSetPointOpacity = false;\n      }\n      if (this.shouldSetLabelOpacity) {\n        this.setLabelOpacity();\n        this.shouldSetLabelOpacity = false;\n      }\n      if (this.shouldSetSelectionClass) {\n        this.setSelectedClass();\n        this.shouldSetSelectionClass = false;\n      }\n      if (this.shouldUpdateCursor) {\n        this.updateCursor();\n        this.shouldUpdateCursor = false;\n      }\n      if (this.shouldUpdateLegendInteractivity) {\n        this.bindLegendInteractivity();\n        this.shouldUpdateLegendInteractivity = false;\n      }\n      if (this.shouldSetLegendCursor) {\n        this.setLegendCursor();\n        this.shouldSetLegendCursor = false;\n      }\n      if (this.shouldBindInteractivity) {\n        this.bindInteractivity();\n        this.shouldBindInteractivity = false;\n      }\n      if (this.shouldUpdateAnnotations) {\n        this.drawAnnotations();\n        this.shouldUpdateAnnotations = false;\n      }\n      if (this.shouldSetAnnotationAccessibility) {\n        this.setAnnotationAccessibility();\n        this.shouldSetAnnotationAccessibility = false;\n      }\n      if (this.shouldUpdateXAxis) {\n        this.drawXAxis();\n        this.shouldUpdateXAxis = false;\n      }\n      if (this.shouldSetXAxisAccessibility) {\n        this.setXAxisAccessibility();\n        this.shouldSetXAxisAccessibility = false;\n      }\n      if (this.shouldUpdateYAxis) {\n        this.drawYAxis();\n        this.shouldUpdateYAxis = false;\n      }\n      if (this.shouldSetYAxisAccessibility) {\n        this.setYAxisAccessibility();\n        this.shouldSetYAxisAccessibility = false;\n      }\n      if (this.shouldUpdateBaselineX) {\n        this.drawBaselineX();\n        this.shouldUpdateBaselineX = false;\n      }\n      if (this.shouldUpdateBaselineY) {\n        this.drawBaselineY();\n        this.shouldUpdateBaselineY = false;\n      }\n      this.onChangeHandler();\n      resolve('component did update');\n    }).then(() => this.drawEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  shouldValidateLocalizationProps() {\n    const windowInstances = getGlobalInstances();\n    const languageString = windowInstances.i18Next.language;\n    const languageObject = windowInstances.i18Next.getResourceBundle(languageString);\n    const numeralObject = windowInstances.numeral.localeData();\n    if (this.shouldValidateLocalization && !this.localization.skipValidation) {\n      this.shouldValidateLocalization = false;\n      validateLocalizationProps(this.chartID, {\n        ...this.localization,\n        language: languageObject,\n        numeralLocale: numeralObject\n      });\n    }\n  }\n\n  shouldValidateAccessibilityProps() {\n    if (this.shouldValidateAccessibility && !this.accessibility.disableValidation) {\n      this.shouldValidateAccessibility = false;\n      validateAccessibilityProps(\n        this.chartID,\n        { ...this.accessibility },\n        {\n          annotations: this.annotations,\n          data: this.data,\n          uniqueID: this.uniqueID,\n          context: {\n            mainTitle: this.mainTitle,\n            onClickEvent: this.suppressEvents ? undefined : this.clickEvent.emit\n          }\n        }\n      );\n    }\n  }\n\n  setLayoutData() {\n    this.padding = typeof this.padding === 'string' ? getPadding(this.padding) : this.padding;\n\n    this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n    this.innerWidth = this.width - this.margin.left - this.margin.right;\n\n    this.innerPaddedHeight = this.innerHeight - this.padding.top - this.padding.bottom;\n    this.innerPaddedWidth = this.innerWidth - this.padding.left - this.padding.right;\n  }\n\n  validateInteractionKeys() {\n    this.innerInteractionKeys =\n      this.interactionKeys && this.interactionKeys.length\n        ? this.interactionKeys\n        : this.groupAccessor\n        ? [this.groupAccessor]\n        : [this.xAccessor, this.yAccessor];\n\n    this.groupInteraction =\n      this.innerInteractionKeys.length === 1 && this.innerInteractionKeys[0] === this.groupAccessor;\n  }\n\n  validateDataLabelAccessor() {\n    this.innerLabelAccessor = this.dataLabel.labelAccessor\n      ? this.dataLabel.labelAccessor\n      : this.sizeConfig.sizeAccessor\n      ? this.sizeConfig.sizeAccessor\n      : this.yAccessor;\n\n    this.innerLabelFormat = this.dataLabel.labelAccessor\n      ? this.dataLabel.format\n      : this.sizeConfig.sizeAccessor\n      ? this.sizeConfig.format\n      : this.yAxis.format;\n  }\n\n  innerScopeDataKeys() {\n    // generate scoped and formatted data for data-table component\n    // we also scope singleAccessor array in chartAccessors based on what is actually in the data\n    const innerChartSingleAccessors = [];\n    chartAccessors.singleAccessors.forEach(accessor => {\n      if (this[accessor] && min(this.data, d => d[this[accessor]]) !== undefined) {\n        innerChartSingleAccessors.push(accessor);\n      }\n    });\n    const innerChartAccessors = { ...chartAccessors, singleAccessors: innerChartSingleAccessors };\n    return scopeDataKeys(this, innerChartAccessors, 'scatter-plot');\n  }\n\n  setTableData() {\n    // generate scoped and formatted data for data-table component\n    const keys = this.innerScopeDataKeys();\n    this.tableData = getScopedData(this.data, keys);\n    this.tableColumns = Object.keys(keys);\n  }\n\n  getLanguageString() {\n    return getActiveLanguageString(this.localization);\n  }\n\n  setLocalizationConfig() {\n    configLocalization(this.localization);\n  }\n\n  prepareData() {\n    this.nest = this.groupAccessor\n      ? nest()\n          .key(d => d[this.groupAccessor])\n          .entries(this.data)\n      : [{ key: '', values: this.data }];\n  }\n\n  setSubTitleElements() {\n    setSubTitle({\n      root: this.subTitleG,\n      subTitle: this.subTitle\n    });\n  }\n\n  setColors = () => {\n    this.rawColors = this.colors ? convertVisaColor(this.colors) : getColors(this.colorPalette, this.nest.length || 1);\n    this.textColorArr = [];\n    let adjustedColors = this.rawColors;\n    function getStrokeColor(color) {\n      const strokes = getAccessibleStrokes(color);\n      return strokes.length === 2 ? strokes[1] : strokes[0];\n    }\n    if (!this.accessibility.hideStrokes) {\n      this.strokes = {};\n      if (this.innerClickStyle.color) {\n        const color = visaColors[this.innerClickStyle.color] || this.innerClickStyle.color;\n        this.strokes[color.toLowerCase()] = getStrokeColor(color);\n      }\n      if (this.innerHoverStyle.color) {\n        const color = visaColors[this.innerHoverStyle.color] || this.innerHoverStyle.color;\n        this.strokes[color.toLowerCase()] = getStrokeColor(color);\n      }\n      adjustedColors = [];\n    }\n    this.rawColors.forEach(color => {\n      if (!this.accessibility.hideStrokes) {\n        const adjusted = getStrokeColor(color);\n        this.strokes[color.toLowerCase()] = adjusted;\n        adjustedColors.push(adjusted);\n      }\n      this.textColorArr.push(ensureTextContrast(color, '#ffffff', 4.5));\n    });\n    if (this.innerClickStyle.color) {\n      const color = visaColors[this.innerClickStyle.color] || this.innerClickStyle.color;\n      this.textColorArr.push(ensureTextContrast(color, '#ffffff', 4.5));\n    }\n    if (this.innerHoverStyle.color) {\n      const color = visaColors[this.innerHoverStyle.color] || this.innerHoverStyle.color;\n      this.textColorArr.push(ensureTextContrast(color, '#ffffff', 4.5));\n    }\n    this.colorArr = adjustedColors;\n  };\n\n  prepareScales() {\n    const xMinValue = min(this.data, d => parseFloat(d[this.xAccessor]));\n    const xMaxValue = max(this.data, d => parseFloat(d[this.xAccessor]));\n    const yMinValue = min(this.data, d => parseFloat(d[this.yAccessor]));\n    const yMaxValue = max(this.data, d => parseFloat(d[this.yAccessor]));\n    const zMinValue = min(this.data, d => parseFloat(d[this.sizeConfig.sizeAccessor]));\n    const zMaxValue = max(this.data, d => parseFloat(d[this.sizeConfig.sizeAccessor]));\n\n    this.xMin = this.xMinValueOverride === 0 ? 0 : this.xMinValueOverride || xMinValue - (xMaxValue - xMinValue) * 0.1;\n    this.xMax = this.xMaxValueOverride === 0 ? 0 : this.xMaxValueOverride || xMaxValue + (xMaxValue - xMinValue) * 0.1;\n    this.yMin = this.yMinValueOverride === 0 ? 0 : this.yMinValueOverride || yMinValue - (yMaxValue - yMinValue) * 0.1;\n    this.yMax = this.yMaxValueOverride === 0 ? 0 : this.yMaxValueOverride || yMaxValue + (yMaxValue - yMinValue) * 0.1;\n\n    // for size we need to check\n    // 1. if sizeConfig is falsy we need to check for 0 as that is also falsy, but a valid value\n    // 2. if we have a valid value (truthy or 0) then if it is smaller than the data use it, otherwise use the data\n    // 3. we use some simple math to calc 10% of the range below the min\n    const sizeMinTruthy = this.sizeConfig.minValueOverride || this.sizeConfig.minValueOverride === 0;\n    const sizeMaxTruthy = this.sizeConfig.maxValueOverride || this.sizeConfig.maxValueOverride === 0;\n    this.sizeMin =\n      sizeMinTruthy && this.sizeConfig.minValueOverride < zMinValue ? this.sizeConfig.minValueOverride : zMinValue;\n    this.sizeMax =\n      sizeMaxTruthy && this.sizeConfig.maxValueOverride > zMaxValue ? this.sizeConfig.maxValueOverride : zMaxValue; // zMaxValue + (zMaxValue - zMinValue) * 0.1; // for the size scale we don't need a buffer like we do for axes\n\n    const keys = [];\n    this.nest.map(param => {\n      keys.push(param.key);\n    });\n\n    if (this.xMax === this.xMin) {\n      this.xMax = Math.max(0, this.xMax);\n      this.xMin = Math.min(0, this.xMin);\n    }\n\n    if (this.yMax === this.yMin) {\n      this.yMax = Math.max(0, this.yMax);\n      this.yMin = Math.min(0, this.yMin);\n    }\n\n    if (this.sizeMax === this.sizeMin) {\n      this.sizeMax = Math.max(0, this.sizeMax);\n      this.sizeMin = Math.min(0, this.sizeMin);\n    }\n\n    this.x = scaleLinear()\n      .domain([this.xMin, this.xMax])\n      .range([0, this.innerPaddedWidth]);\n\n    this.y = scaleLinear()\n      .domain([this.yMin, this.yMax])\n      .range([this.innerPaddedHeight, 0]);\n\n    // for the range() of this scale we default to dotRadius for minimum\n    // and scale up based on the dimenions of the chart, unless of course\n    // size overrides are sent, then we will respect those as provided\n    this.size = scaleSqrt()\n      .domain([this.sizeMin, this.sizeMax])\n      .range([\n        this.sizeConfig.minSizeOverride || this.sizeConfig.minSizeOverride === 0\n          ? this.sizeConfig.minSizeOverride\n          : ScatterPlotDefaultValues.dotRadius,\n        this.sizeConfig.maxSizeOverride || this.sizeConfig.maxSizeOverride === 0\n          ? this.sizeConfig.maxSizeOverride\n          : (this.innerPaddedWidth + this.innerPaddedHeight) / 2.5 / 10\n      ]);\n\n    this.symbol = scaleOrdinal()\n      .domain(keys)\n      .range(this.dotSymbols);\n\n    this.shapeArea = {};\n    keys.forEach(key => {\n      let path_arr = [];\n      let shape = symbols[this.symbol(key)].general;\n      shape.split(/[A-Z]/g).forEach(j => {\n        if (j.split(',').length === 2) {\n          path_arr.push(j.split(','));\n        }\n      });\n      let xs = [];\n      let ys = [];\n      path_arr.forEach((j, k) => {\n        if (path_arr[k + 1]) {\n          xs.push(parseFloat(j[0]) * parseFloat(path_arr[k + 1][1]));\n          ys.push(parseFloat(j[1]) * parseFloat(path_arr[k + 1][0]));\n        } else {\n          xs.push(parseFloat(j[0]) * parseFloat(path_arr[0][1]));\n          ys.push(parseFloat(j[1]) * parseFloat(path_arr[0][0]));\n        }\n      });\n      let z = (xs.reduce((a, b) => a + b) - ys.reduce((a, b) => a + b)) / 2;\n      this.shapeArea[key] = {\n        shape: this.symbol(key),\n        area: z,\n        toCircle: Math.PI / z\n      };\n    });\n\n    this.dotColor = scaleOrdinal()\n      .domain(keys)\n      .range(this.rawColors);\n\n    const baseColors = [...this.rawColors];\n\n    if (this.innerClickStyle.color) {\n      baseColors.push(visaColors[this.innerClickStyle.color] || this.innerClickStyle.color);\n    }\n    if (this.innerHoverStyle.color) {\n      baseColors.push(visaColors[this.innerHoverStyle.color] || this.innerHoverStyle.color);\n    }\n    this.textColor = scaleOrdinal()\n      .domain(baseColors)\n      .range(this.textColorArr);\n  }\n\n  validateHoverStyle() {\n    this.innerHoverStyle = this.hoverStyle\n      ? {\n          color: this.hoverStyle.color,\n          strokeWidth: this.hoverStyle.strokeWidth || 2\n        }\n      : {\n          strokeWidth: 2\n        };\n  }\n\n  validateClickStyle() {\n    this.innerClickStyle = this.clickStyle\n      ? {\n          color: this.clickStyle.color,\n          strokeWidth: this.clickStyle.strokeWidth || 3\n        }\n      : {\n          strokeWidth: 3\n        };\n  }\n\n  setStrokes() {\n    this.textFilter = createTextStrokeFilter({\n      root: this.svg.node(),\n      id: this.chartID,\n      color: '#ffffff'\n    });\n    this.filter = !this.accessibility.hideStrokes\n      ? createTextStrokeFilter({\n          root: this.svg.node(),\n          id: this.chartID,\n          color: '#ffffff',\n          strokeSizeOverride: 1 / (this.dotRadius || 1)\n        })\n      : null;\n  }\n\n  addStrokeUnder() {\n    this.updateLabels.attr('filter', this.textFilter);\n    this.updatePoints.attr('filter', (_, i, n) => (!select(n[i]).classed('moving') ? this.filter : null));\n  }\n\n  textFillHandler = d => {\n    const clicked =\n      this.clickHighlight &&\n      this.clickHighlight.length > 0 &&\n      checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n    const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n    const baseColor = clicked\n      ? visaColors[this.innerClickStyle.color] ||\n        this.innerClickStyle.color ||\n        (this.groupAccessor ? this.dotColor(d[this.groupAccessor]) : this.rawColors[0])\n      : hovered\n      ? visaColors[this.innerHoverStyle.color] ||\n        this.innerHoverStyle.color ||\n        (this.groupAccessor ? this.dotColor(d[this.groupAccessor]) : this.rawColors[0])\n      : this.groupAccessor\n      ? this.dotColor(d[this.groupAccessor])\n      : this.rawColors[0];\n    const color = this.textColor(baseColor);\n    return color;\n  };\n\n  updateStrokeWidth() {\n    this.updatePoints.attr('stroke', this.handleDotStyle);\n  }\n\n  handleDotStyle = (d, i, n) => {\n    let color = null;\n    const clicked =\n      this.clickHighlight &&\n      this.clickHighlight.length > 0 &&\n      checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n    const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n    const baseColor = clicked\n      ? visaColors[this.innerClickStyle.color] ||\n        this.innerClickStyle.color ||\n        (this.groupAccessor ? this.dotColor(d[this.groupAccessor]) : this.rawColors[0])\n      : hovered\n      ? visaColors[this.innerHoverStyle.color] ||\n        this.innerHoverStyle.color ||\n        (this.groupAccessor ? this.dotColor(d[this.groupAccessor]) : this.rawColors[0])\n      : this.groupAccessor && this.sizeConfig.dualEncodeColor\n      ? scaleSequentialSqrt(\n          [Math.max(0, this.sizeMin), this.sizeMax],\n          interpolate('#fff', this.dotColor(d[this.groupAccessor]))\n        )(d[this.sizeConfig.sizeAccessor]) || this.dotColor(d[this.groupAccessor])\n      : this.groupAccessor && this.sizeConfig && !this.sizeConfig.dualEncodeColor\n      ? this.dotColor(d[this.groupAccessor])\n      : !this.groupAccessor && this.sizeConfig.dualEncodeColor\n      ? scaleSequentialSqrt([Math.max(0, this.sizeMin), this.sizeMax], interpolate('#fff', this.rawColors[0]))(\n          d[this.sizeConfig.sizeAccessor]\n        ) || this.rawColors[0]\n      : this.rawColors[0];\n    if (!this.accessibility.hideStrokes) {\n      const strokeWidth =\n        (clicked\n          ? parseFloat(this.innerClickStyle.strokeWidth) || 1\n          : hovered\n          ? parseFloat(this.innerHoverStyle.strokeWidth) || 1\n          : 1) /\n        (this.size(\n          d[this.sizeConfig.sizeAccessor] * this.shapeArea[this.groupAccessor ? d[this.groupAccessor] : '']['toCircle']\n        ) ||\n          this.dotRadius ||\n          1);\n\n      select(n[i]).attr('stroke-width', strokeWidth);\n\n      // we need to handle the following scenarios for stroke now\n      // 1. clicked - use baseColor.toLowerCase()\n      // 2. hovered - use baseColor.toLowerCase()\n      // 3. groupAccessor - use this.dotColor(d[this.groupAccessor]).toLowerCase()\n      // 4. no groupAccessor - use this.rawColors[0].toLowerCase()\n      // strokes object was created with lowercase hex codes, so need to ensure lower case\n      color = this.strokes[\n        clicked || hovered\n          ? baseColor.toLowerCase()\n          : this.groupAccessor\n          ? this.dotColor(d[this.groupAccessor]).toLowerCase()\n          : this.rawColors[0].toLowerCase()\n      ];\n    }\n\n    select(n[i]).attr('fill', baseColor);\n    return color;\n  };\n\n  renderRootElements() {\n    this.svg = select(this.scatterChartEl)\n      .select('.visa-viz-d3-scatter-container')\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    this.root = this.svg.append('g').attr('id', 'visa-viz-margin-container-g-' + this.chartID);\n    this.rootG = this.root.append('g').attr('id', 'visa-viz-padding-container-g-' + this.chartID);\n    this.gridG = this.rootG.append('g').attr('class', 'scatter-grid-group');\n    this.dotG = this.rootG\n      .append('g')\n      .attr('class', 'scatter-dot-group')\n      .attr('isolation', 'isolate')\n      .style('isolation', 'isolate');\n    this.fitLine = this.rootG.append('g').attr('class', 'scatter-fit-line-group');\n    this.labelG = this.rootG.append('g').attr('class', 'scatter-dataLabel-group');\n    this.legendG = select(this.scatterChartEl)\n      .select('.scatter-legend')\n      .append('svg');\n    this.subTitleG = select(this.scatterChartEl).select('.scatter-sub-title');\n    this.tooltipG = select(this.scatterChartEl).select('.scatter-tooltip');\n    this.referencesG = this.rootG.append('g').attr('class', 'scatter-reference-line-group');\n  }\n\n  setGlobalSelections() {\n    const dataBoundToGroups = this.dotG.selectAll('.series-point-group').data(this.nest, d => d.key);\n\n    this.enterPointWrappers = dataBoundToGroups.enter().append('g');\n    this.exitPointWrappers = dataBoundToGroups.exit();\n    this.updatePointWrappers = dataBoundToGroups.merge(this.enterPointWrappers);\n\n    this.exitSize = this.exitPointWrappers.selectAll('.data-point').size();\n    this.exitSize += this.exitPointWrappers.size();\n\n    const dataBoundToGeometries = this.updatePointWrappers.selectAll('.data-point').data(d => d.values);\n\n    this.enterPoints = dataBoundToGeometries.enter().append('path');\n    this.exitPoints = dataBoundToGeometries.exit();\n    this.updatePoints = dataBoundToGeometries.merge(this.enterPoints);\n\n    const dataBoundToLabelGroups = this.labelG.selectAll('.series-dataLabel-group').data(this.nest, d => d.key);\n\n    this.enteringLabelGroups = dataBoundToLabelGroups.enter().append('g');\n    this.exitingLabelGroups = dataBoundToLabelGroups.exit();\n    this.updatingLabelGroups = dataBoundToLabelGroups.merge(this.enteringLabelGroups);\n\n    const dataBoundToLabels = this.updatingLabelGroups.selectAll('text').data(d => d.values);\n    this.enterLabels = dataBoundToLabels.enter().append('text');\n    this.exitLabels = dataBoundToLabels.exit();\n    this.updateLabels = dataBoundToLabels.merge(this.enterLabels);\n  }\n\n  setTestingAttributes() {\n    if (this.unitTest) {\n      select(this.scatterChartEl)\n        .select('.visa-viz-d3-scatter-container')\n        .attr('data-testid', 'chart-container');\n      select(this.scatterChartEl)\n        .select('.scatter-main-title')\n        .attr('data-testid', 'main-title');\n      select(this.scatterChartEl)\n        .select('.scatter-sub-title')\n        .attr('data-testid', 'sub-title');\n      this.svg.attr('data-testid', 'root-svg');\n      this.root.attr('data-testid', 'margin-container');\n      this.rootG.attr('data-testid', 'padding-container');\n      this.legendG.attr('data-testid', 'legend-container');\n      this.tooltipG.attr('data-testid', 'tooltip-container');\n      this.gridG.attr('data-testid', 'scatter-grid-group');\n\n      this.fitLine.attr('data-testid', 'scatter-fit-line-group');\n      this.referencesG.attr('data-testid', 'reference-line-group');\n\n      this.dotG.attr('data-testid', 'marker-group-container');\n      this.updatePointWrappers\n        .attr('data-testid', 'marker-series-group')\n        .attr('data-id', d => `marker-series-${d.key}`);\n      this.updatePoints\n        .attr('data-testid', 'marker')\n        .attr('data-id', d => `marker-${d[this.groupAccessor]}-${d[this.xAccessor]}-${d[this.yAccessor]}`);\n\n      this.labelG.attr('data-testid', 'dataLabel-group-container');\n      this.updatingLabelGroups\n        .attr('data-testid', 'dataLabel-series-group')\n        .attr('data-id', d => `label-series-${d.key}`);\n      this.updateLabels\n        .attr('data-testid', 'dataLabel')\n        .attr('data-id', d => `label-${d[this.groupAccessor]}-${d[this.xAccessor]}-${d[this.yAccessor]}`);\n\n      this.svg.select('defs').attr('data-testid', 'pattern-defs');\n    } else {\n      select(this.scatterChartEl)\n        .select('.visa-viz-d3-scatter-container')\n        .attr('data-testid', null);\n      select(this.scatterChartEl)\n        .select('.scatter-main-title')\n        .attr('data-testid', null);\n      select(this.scatterChartEl)\n        .select('.scatter-sub-title')\n        .attr('data-testid', null);\n      this.svg.attr('data-testid', null);\n      this.root.attr('data-testid', null);\n      this.rootG.attr('data-testid', null);\n      this.legendG.attr('data-testid', null);\n      this.tooltipG.attr('data-testid', null);\n      this.gridG.attr('data-testid', null);\n\n      this.fitLine.attr('data-testid', null);\n      this.referencesG.attr('data-testid', null);\n\n      this.dotG.attr('data-testid', null);\n      this.updatePointWrappers.attr('data-testid', null).attr('data-id', null);\n      this.updatePoints.attr('data-testid', null).attr('data-id', null);\n\n      this.labelG.attr('data-testid', null);\n      this.updatingLabelGroups.attr('data-testid', null).attr('data-id', null);\n      this.updateLabels.attr('data-testid', null).attr('data-id', null);\n\n      this.svg.select('defs').attr('data-testid', null);\n    }\n  }\n\n  enterPointGroups() {\n    this.enterPointWrappers.interrupt();\n    this.enterPoints.interrupt();\n\n    this.enterPointWrappers\n      .attr('class', 'series-point-group')\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .on(\n        'mouseover',\n        this.groupInteraction && !this.suppressEvents\n          ? (d, i, n) => this.onHoverHandler(d.values ? d.values[0] : d, n[i], true)\n          : null\n      )\n      .on('mouseout', this.groupInteraction && !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .each((_, i, n) => {\n        initializeElementAccess(n[i]);\n      });\n\n    this.enterPoints\n      .attr('class', 'data-point entering')\n      .style('mix-blend-mode', 'multiply')\n      .attr('filter', this.filter)\n      .each((_d, i, n) => {\n        initializeElementAccess(n[i]);\n      })\n      .on('click', (d, i, n) => this.onClickHandler(d, n[i]))\n      .on('mouseover', (d, i, n) => this.onHoverHandler(d, n[i]))\n      .on('mouseout', () => this.onMouseOutHandler())\n      .attr('opacity', 0)\n      .attr('stroke', this.handleDotStyle)\n      .attr('d', d =>\n        this.groupAccessor ? symbols[this.symbol(d[this.groupAccessor])].general : symbols[this.dotSymbols[0]].general\n      )\n      .attr(\n        'transform',\n        d => 'translate(' + this.x(d[this.xAccessor]) + ',' + this.y(d[this.yAccessor]) + ') scale(1)'\n      );\n    this.updatePointWrappers.order();\n    this.updatePoints.order();\n  }\n\n  // updatePointGroups() {\n  //   this.updatePointWrappers.interrupt();\n  // }\n\n  exitPointGroups() {\n    this.exitPointWrappers.interrupt();\n    this.exitPoints.interrupt();\n\n    this.exitPointWrappers\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn);\n\n    this.exitPointWrappers\n      .selectAll('.data-point')\n      .attr('filter', null)\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .attr('transform', (_, i, n) => {\n        const transform = select(n[i]).attr('transform');\n        const index = transform.indexOf('scale(');\n        return transform.substring(0, index) + 'scale(1)';\n      })\n      .call(transitionEndAll, () => {\n        this.exitPointWrappers.remove();\n      });\n\n    this.exitPoints\n      .attr('filter', null)\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .attr('transform', (_, i, n) => {\n        const transform = select(n[i]).attr('transform');\n        const index = transform.indexOf('scale(');\n        return transform.substring(0, index) + 'scale(1)';\n      });\n\n    this.updatePoints\n      .transition('accessibilityAfterExit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        // before we exit geometries, we need to check if a focus exists or not\n        const focusDidExist = checkAccessFocus(this.rootG.node());\n        // then we must remove the exiting elements\n        this.exitPoints.remove();\n        this.exitPointWrappers.remove();\n        // then our util can count geometries\n        this.setChartCountAccessibility();\n        // our group's label should update with new counts too\n        this.setGroupAccessibilityID();\n        // since items exited, labels must receive updated values\n        this.setGeometryAriaLabels();\n        // and also make sure the user's focus isn't lost\n        retainAccessFocus({\n          parentGNode: this.rootG.node(),\n          focusDidExist\n          // recursive: true\n        });\n      });\n  }\n\n  drawPointGroups() {\n    this.updatePoints\n      .each((d, i, n) => {\n        const me = select(n[i]);\n        const xChange = +me.attr('data-x') !== this.x(d[this.xAccessor]);\n        const yChange = +me.attr('data-y') !== this.y(d[this.yAccessor]);\n        const rChange =\n          +me.attr('data-r') !==\n            this.size(\n              d[this.sizeConfig.sizeAccessor] *\n                this.shapeArea[this.groupAccessor ? d[this.groupAccessor] : '']['toCircle']\n            ) ||\n          this.dotRadius ||\n          1;\n        if (xChange || yChange || rChange) {\n          me.attr('filter', null);\n          me.classed('moving', true);\n        }\n      })\n      .attr('data-r', d => {\n        return (\n          this.size(\n            d[this.sizeConfig.sizeAccessor] *\n              this.shapeArea[this.groupAccessor ? d[this.groupAccessor] : '']['toCircle']\n          ) ||\n          this.dotRadius ||\n          1\n        );\n      })\n      .attr('data-x', d => this.x(d[this.xAccessor]))\n      .attr('data-y', d => this.y(d[this.yAccessor]))\n      .attr('data-translate-x', this.padding.left + this.margin.left)\n      .attr('data-translate-y', this.padding.top + this.margin.top)\n      .attr('data-d', (\n        d // we can use base symbol here, it is much simplier and more performant\n      ) => (this.groupAccessor ? symbols[this.symbol(d[this.groupAccessor])].base : symbols[this.dotSymbols[0]].base))\n      .transition('update_d')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('d', d =>\n        this.groupAccessor ? symbols[this.symbol(d[this.groupAccessor])].general : symbols[this.dotSymbols[0]].general\n      )\n      .attr(\n        'transform',\n        d =>\n          'translate(' +\n          this.x(d[this.xAccessor]) +\n          ',' +\n          this.y(d[this.yAccessor]) +\n          ') scale(' +\n          (this.size(\n            d[this.sizeConfig.sizeAccessor] *\n              this.shapeArea[this.groupAccessor ? d[this.groupAccessor] : '']['toCircle']\n          ) ||\n            this.dotRadius ||\n            1) +\n          ')'\n      )\n      .call(transitionEndAll, () => {\n        setTimeout(() => {\n          this.updatePointWrappers\n            .selectAll('.moving')\n            .classed('moving', false)\n            .attr('filter', this.filter);\n\n          // this.updatingLabelGroups\n          //   .selectAll('.moving')\n          //   .classed('moving', false)\n          //   .attr('filter', this.textFilter);\n        }, 0);\n\n        // we must make sure if geometries move, that our focus indicator does too\n        retainAccessFocus({\n          parentGNode: this.rootG.node()\n        });\n\n        // now we can emit the event that transitions are complete\n        this.transitionEndEvent.emit({ chartID: this.chartID });\n      });\n  }\n\n  setDotRadius() {\n    this.updatePoints\n      .transition('radius')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr(\n        'transform',\n        d =>\n          'translate(' +\n          this.x(d[this.xAccessor]) +\n          ',' +\n          this.y(d[this.yAccessor]) +\n          ') scale(' +\n          (this.size(\n            d[this.sizeConfig.sizeAccessor] *\n              this.shapeArea[this.groupAccessor ? d[this.groupAccessor] : '']['toCircle']\n          ) ||\n            this.dotRadius ||\n            1) +\n          ')'\n      )\n      .call(transitionEndAll, () => {\n        // we must make sure if geometries move, that our focus indicator does too\n        retainAccessFocus({\n          parentGNode: this.rootG.node()\n        });\n      });\n  }\n\n  setSelectedClass() {\n    this.updatePoints.classed('highlight', (d, i, n) => {\n      let selected = checkInteraction(d, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n      selected = this.clickHighlight && this.clickHighlight.length ? selected : false;\n      const selectable = this.accessibility.elementsAreInterface;\n      setElementInteractionAccessState(n[i], selected, selectable);\n      return selected;\n    });\n  }\n\n  updateCursor() {\n    this.updatePointWrappers.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    this.updatingLabelGroups.attr('cursor', !this.suppressEvents && this.dataLabel.visible ? this.cursor : null);\n  }\n\n  // reset graph size based on window size\n  reSetRoot() {\n    const changeSvg = prepareRenderChange({\n      selection: this.svg,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeSvg\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    const changeRoot = prepareRenderChange({\n      selection: this.root,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRoot.attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n\n    const changeRootG = prepareRenderChange({\n      selection: this.rootG,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRootG.attr('transform', `translate(${this.padding.left}, ${this.padding.top})`);\n\n    setAccessibilityDescriptionWidth(this.chartID, this.width);\n  }\n\n  drawXAxis() {\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.xAccessor]\n        ? this.dataKeyNames[this.xAccessor]\n        : this.xAxis.label;\n\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.x,\n      left: false,\n      format: this.xAxis.format,\n      tickInterval: this.xAxis.tickInterval,\n      label: axisLabel, // this.xAxis.label,\n      padding: this.padding,\n      hide: !this.xAxis.visible,\n      duration: this.duration\n    });\n  }\n\n  drawYAxis() {\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.yAccessor]\n        ? this.dataKeyNames[this.yAccessor]\n        : this.yAxis.label;\n\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.y,\n      left: true,\n      format: this.yAxis.format,\n      tickInterval: this.yAxis.tickInterval,\n      label: axisLabel, // this.yAxis.label,\n      padding: this.padding,\n      hide: !this.yAxis.visible,\n      duration: this.duration\n    });\n  }\n\n  setXAxisAccessibility() {\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.xAccessor]\n        ? this.dataKeyNames[this.xAccessor]\n        : this.xAxis.label;\n\n    setAccessXAxis({\n      rootEle: this.scatterChartEl,\n      hasXAxis: this.xAxis ? this.xAxis.visible : false,\n      xAxis: this.x,\n      xAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasXAxis is always false\n    });\n  }\n\n  setYAxisAccessibility() {\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.yAccessor]\n        ? this.dataKeyNames[this.yAccessor]\n        : this.yAxis.label;\n\n    setAccessYAxis({\n      rootEle: this.scatterChartEl,\n      hasYAxis: this.yAxis ? this.yAxis.visible : false,\n      yAxis: this.y,\n      yAxisLabel: axisLabel ? axisLabel : ''\n    });\n  }\n\n  drawBaselineY() {\n    drawAxis({\n      root: this.gridG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.y,\n      left: true,\n      padding: this.padding,\n      markOffset: this.x(0) || -1,\n      hide: !this.showBaselineY,\n      duration: this.duration\n    });\n  }\n\n  drawBaselineX() {\n    drawAxis({\n      root: this.gridG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.x,\n      left: false,\n      padding: this.padding,\n      markOffset: this.y(0) || -1,\n      hide: !this.showBaselineX,\n      duration: this.duration\n    });\n  }\n\n  drawXGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.x,\n      false,\n      !this.xAxis.gridVisible,\n      this.xAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  drawYGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.y,\n      true,\n      !this.yAxis.gridVisible,\n      this.yAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  bindLegendInteractivity() {\n    select(this.scatterChartEl)\n      .selectAll('.legend')\n      .on(\n        'click',\n        this.legend.interactive && !this.suppressEvents\n          ? (d, i, n) => this.onClickHandler(d.values ? d.values[0] : d, n[i])\n          : null\n      )\n      .on(\n        'mouseover',\n        this.legend.interactive && !this.suppressEvents\n          ? (d, i, n) => this.onHoverHandler(d.values ? d.values[0] : d, n[i], true)\n          : null\n      )\n      .on('mouseout', this.legend.interactive && !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  setLegendCursor() {\n    select(this.scatterChartEl)\n      .selectAll('.legend')\n      .style('cursor', this.legend.interactive && !this.suppressEvents ? this.cursor : null);\n  }\n\n  bindInteractivity() {\n    this.enterPointWrappers\n      .on(\n        'mouseover',\n        this.groupInteraction && !this.suppressEvents\n          ? (d, i, n) => this.onHoverHandler(d.values ? d.values[0] : d, n[i], true)\n          : null\n      )\n      .on('mouseout', this.groupInteraction && !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n    this.updatePoints\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n    this.updateLabels\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  enterDataLabels() {\n    const opacity = this.dataLabel.visible ? 1 : 0;\n\n    this.enteringLabelGroups\n      .attr('class', 'series-dataLabel-group')\n      .attr('cursor', !this.suppressEvents && this.dataLabel.visible ? this.cursor : null);\n\n    this.enterLabels\n      .attr('filter', this.textFilter)\n      .attr('opacity', d => {\n        return checkInteraction(\n          d,\n          opacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        ) < 1\n          ? 0\n          : Number.EPSILON; // we need this to be epsilon initially to enable auto placement algorithm to run on load\n      })\n      .attr('class', 'scatter-dataLabel entering')\n      .attr('fill', this.textFillHandler)\n      .on('click', !this.suppressEvents && this.dataLabel.visible ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.dataLabel.visible ? (d, i, n) => this.onHoverHandler(d, n[i]) : null\n      )\n      .on('mouseout', !this.suppressEvents && this.dataLabel.visible ? () => this.onMouseOutHandler() : null);\n\n    placeDataLabels({\n      root: this.enterLabels,\n      xScale: this.x,\n      yScale: this.y,\n      sizeScale: this.size,\n      ordinalAccessor: this.xAccessor,\n      valueAccessor: this.yAccessor,\n      groupAccessor: this.groupAccessor,\n      sizeAccessor: this.sizeConfig.sizeAccessor,\n      shapeArea: this.shapeArea,\n      placement: this.dataLabel.placement,\n      chartType: 'scatter',\n      labelOffset: this.dotRadius\n    });\n  }\n\n  updateDataLabels() {\n    this.updateLabels.interrupt();\n\n    const opacity = this.dataLabel.visible ? 1 : 0;\n\n    // this.updatingLabelGroups\n    //   .transition('opacity_g')\n    //   .duration(this.duration)\n    //   .ease(easeCircleIn)\n    //   .call(transitionEndAll, () => {\n    //     this.updatingLabelGroups.classed('entering', false);\n    //   });\n\n    this.updateLabels\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      // .duration((_, i, n) => {\n      //   if (select(n[i]).classed('entering')) {\n      //     select(n[i]).classed('entering', false);\n      //     return this.duration;\n      //   } else {\n      //     return 0;\n      //   }\n      // })\n      .attr('opacity', d => {\n        return checkInteraction(\n          d,\n          opacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        ) < 1\n          ? 0\n          : 1;\n      }) // ensure that entering class is getting removed after enter\n      .call(transitionEndAll, (_, i, n) => {\n        select(n[i]).classed('entering', false);\n      });\n  }\n\n  exitDataLabels() {\n    // this.exitingLabelGroups\n    //   .transition('exit')\n    //   .duration(this.duration)\n    //   .ease(easeCircleIn)\n    //   .remove();\n\n    this.exitingLabelGroups\n      .selectAll('.scatter-dataLabel')\n      .attr('filter', null)\n      .transition('exit')\n      .duration(this.duration / 3)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .call(transitionEndAll, () => {\n        this.exitingLabelGroups.remove();\n      });\n\n    this.exitLabels\n      .attr('filter', null)\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  drawDataLabels() {\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n\n    this.updateLabels.text(d => {\n      return formatDataLabel(d, this.innerLabelAccessor, this.innerLabelFormat);\n    });\n\n    const labelSettingUpdate = this.updateLabels\n      // .each((d, i, n) => {\n      //   const me = select(n[i]);\n      //   const xOffset =\n      //     this.dataLabel.placement === 'left'\n      //       ? -this.dotRadius\n      //       : this.dataLabel.placement === 'right'\n      //       ? this.dotRadius\n      //       : 0;\n      //   const yOffset =\n      //     this.dataLabel.placement === 'top'\n      //       ? -this.dotRadius\n      //       : this.dataLabel.placement === 'bottom'\n      //       ? this.dotRadius\n      //       : 0;\n      //   const xChange = +me.attr('x') !== this.x(d[this.xAccessor]) + xOffset;\n      //   const yChange = +me.attr('y') !== this.y(d[this.yAccessor]) + yOffset;\n      //   if (xChange || yChange) {\n      //     me.attr('filter', null);\n      //     me.classed('moving', true);\n      //   }\n      // })\n      .style('visibility', (_, i, n) =>\n        this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly\n          ? select(n[i]).style('visibility')\n          : null\n      )\n      .attr('data-x', d => this.x(d[this.xAccessor]))\n      .attr('data-y', d => this.y(d[this.yAccessor]))\n      .attr('data-translate-x', this.padding.left + this.margin.left)\n      .attr('data-translate-y', this.padding.top + this.margin.top)\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration);\n\n    this.bitmaps = placeDataLabels({\n      root: labelSettingUpdate,\n      xScale: this.x,\n      yScale: this.y,\n      sizeScale: this.size,\n      ordinalAccessor: this.xAccessor,\n      valueAccessor: this.yAccessor,\n      groupAccessor: this.groupAccessor,\n      sizeAccessor: this.sizeConfig.sizeAccessor,\n      shapeArea: this.shapeArea,\n      placement: this.dataLabel.placement,\n      chartType: 'scatter',\n      labelOffset: this.dotRadius + this.dotRadius * 0.25,\n      avoidCollision: {\n        runOccupancyBitmap: this.dataLabel.visible && this.dataLabel.placement === 'auto',\n        labelSelection: labelSettingUpdate,\n        avoidMarks: [this.updatePoints],\n        validPositions: hideOnly\n          ? ['middle']\n          : ['middle', 'top', 'bottom', 'left', 'right', 'bottom-right', 'bottom-left', 'top-left', 'top-right'],\n        offsets: hideOnly ? [1] : [1, 5, 4, 4, 1, 1, 1, 1, 1],\n        accessors: [this.xAccessor, this.yAccessor, this.groupAccessor, 'key'], // key is created for lines by nesting done in line,\n        size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n        hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly\n      }\n    });\n  }\n\n  updateInteractionState() {\n    // we created an \"opacity\" transition namespace in update's transition\n    // we override it here to instantly display opacity state (below)\n    this.updatePoints.interrupt('opacity');\n    // this.updateLabels.interrupt('opacity');\n\n    // we use this.update and this.labelCurrent from setGlobalSelection here\n    // the lifecycle state does not matter (enter/update/exit)\n    // since interaction state can happen at any time\n    this.updatePoints.attr('stroke', this.handleDotStyle);\n    this.updateLabels.attr('fill', this.textFillHandler);\n    retainAccessFocus({\n      parentGNode: this.rootG.node()\n    });\n\n    setLegendInteractionState({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.groupAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.innerHoverStyle,\n      clickStyle: this.innerClickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  setPointOpacity() {\n    this.updatePoints.interrupt();\n\n    this.updatePoints\n      .transition('opacity')\n      // .duration(this.duration)\n      .duration((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          select(n[i]).classed('entering', false);\n          return this.duration;\n        } else {\n          return 0;\n        }\n      })\n      .ease(easeCircleIn)\n      .attr('opacity', d =>\n        checkInteraction(\n          d,\n          this.dotOpacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        )\n      )\n      .call(transitionEndAll, (_, i, n) => {\n        select(n[i]).classed('entering', false);\n      });\n  }\n\n  setLabelOpacity() {\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n    const addCollisionClass = this.dataLabel.placement === 'auto' || hideOnly;\n\n    this.updateLabels\n      .attr('data-use-dx', hideOnly) // need this for direct resolveCollision call\n      .attr('data-use-dy', hideOnly)\n      .attr('opacity', (d, i, n) => {\n        const prevOpacity = +select(n[i]).attr('opacity');\n        const styleVisibility = select(n[i]).style('visibility');\n        const targetOpacity =\n          checkInteraction(\n            d,\n            this.dataLabel.visible ? 1 : 0,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n            ? 0\n            : 1;\n        if (\n          ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n          (this.dataLabel.placement === 'auto' || hideOnly)\n        ) {\n          if (targetOpacity === 1) {\n            select(n[i])\n              .classed('collision-added', true)\n              .style('visibility', null);\n          } else {\n            select(n[i]).classed('collision-removed', true);\n          }\n        }\n        return targetOpacity;\n      });\n\n    if (addCollisionClass) {\n      const labelsAdded = this.updateLabels.filter((_, i, n) => select(n[i]).classed('collision-added'));\n      const labelsRemoved = this.updateLabels.filter((_, i, n) => select(n[i]).classed('collision-removed')); // .transition().duration(0);\n\n      // we can now remove labels as well if we need to...\n      if (labelsRemoved.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsRemoved,\n          avoidMarks: [], // [this.updateDots], // this will link the series label to the last point in the line\n          validPositions: ['middle'],\n          offsets: [1],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n          hideOnly: false,\n          removeOnly: true\n        });\n\n        // remove temporary class now\n        labelsRemoved.classed('collision-removed', false);\n      }\n\n      // we can now add labels as well if we need to...\n      if (labelsAdded.size() > 0) {\n        this.bitmaps = placeDataLabels({\n          root: labelsAdded,\n          xScale: this.x,\n          yScale: this.y,\n          sizeScale: this.size,\n          ordinalAccessor: this.xAccessor,\n          valueAccessor: this.yAccessor,\n          groupAccessor: this.groupAccessor,\n          sizeAccessor: this.sizeConfig.sizeAccessor,\n          shapeArea: this.shapeArea,\n          placement: this.dataLabel.placement,\n          chartType: 'scatter',\n          labelOffset: this.dotRadius + this.dotRadius * 0.25,\n          avoidCollision: {\n            runOccupancyBitmap: this.dataLabel.visible && this.dataLabel.placement === 'auto',\n            bitmaps: this.bitmaps,\n            labelSelection: labelsAdded,\n            avoidMarks: [this.updatePoints],\n            validPositions: hideOnly\n              ? ['middle']\n              : ['middle', 'top', 'bottom', 'left', 'right', 'bottom-right', 'bottom-left', 'top-left', 'top-right'],\n            offsets: hideOnly ? [1] : [1, 5, 4, 4, 1, 1, 1, 1, 1],\n            accessors: [this.xAccessor, this.yAccessor, this.groupAccessor, 'key'], // key is created for lines by nesting done in line,\n            size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n            hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly,\n            suppressMarkDraw: true\n          }\n        });\n\n        // remove temporary class now\n        labelsAdded.classed('collision-added', false);\n      }\n    }\n  }\n\n  drawFitLine() {\n    const fitlineOpacity = this.showFitLine ? this.fitLineStyle.opacity : 0;\n\n    const xSeries = this.data.map(d => parseFloat(d[this.xAccessor]));\n    const ySeries = this.data.map(d => parseFloat(d[this.yAccessor]));\n    const leastSquaresCoeff = leastSquares(xSeries, ySeries);\n\n    const slope = leastSquaresCoeff[0];\n    const intercept = leastSquaresCoeff[1];\n\n    const currentFitLine = this.fitLine.selectAll('line').data(leastSquaresCoeff);\n\n    const enterFitLine = currentFitLine\n      .enter()\n      .append('line')\n      .attr('class', 'trendline')\n      .attr('opacity', 0);\n\n    currentFitLine\n      .merge(enterFitLine)\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('x1', this.x(this.xMin))\n      .attr('y1', this.y(intercept)) // intercept\n      .attr('x2', this.x(this.xMax))\n      .attr('y2', this.y(this.xMax * slope + intercept)) // this.xMax * slope + intercept\n      .style('stroke', visaColors[this.fitLineStyle.color] || this.fitLineStyle.color)\n      .style('stroke-width', this.fitLineStyle.strokeWidth)\n      .attr('stroke-dasharray', this.fitLineStyle.dashed ? this.fitLineStyle.dashed : '')\n      .attr('opacity', fitlineOpacity);\n\n    currentFitLine.exit().remove();\n  }\n\n  drawReferenceLines() {\n    setReferenceLine({\n      groupName: 'scatter',\n      root: this.referencesG,\n      referenceLines: this.referenceLines,\n      referenceStyle: this.referenceStyle,\n      innerPaddedWidth: this.innerPaddedWidth,\n      innerPaddedHeight: this.innerPaddedHeight,\n      duration: this.duration,\n      x: this.x,\n      y: this.y,\n      unitTest: this.unitTest\n    });\n  }\n\n  drawAnnotations() {\n    annotate({\n      source: this.rootG.node(),\n      data: this.annotations,\n      xScale: this.x,\n      xAccessor: this.xAccessor,\n      yScale: this.y,\n      yAccessor: this.yAccessor,\n      width: this.width,\n      height: this.height,\n      padding: this.padding,\n      margin: this.margin,\n      bitmaps: this.bitmaps\n    });\n  }\n\n  setAnnotationAccessibility() {\n    setAccessAnnotation(this.getLanguageString(), this.scatterChartEl, this.annotations, this.referenceLines);\n  }\n\n  // new accessibility functions added here\n  setTagLevels() {\n    this.topLevel = findTagLevel(this.highestHeadingLevel);\n    this.bottomLevel = findTagLevel(this.highestHeadingLevel, 3);\n  }\n\n  setChartDescriptionWrapper() {\n    initializeDescriptionRoot({\n      language: this.getLanguageString(),\n      rootEle: this.scatterChartEl,\n      title: this.accessibility.title || this.mainTitle,\n      chartTag: 'scatter-plot',\n      uniqueID: this.chartID,\n      highestHeadingLevel: this.highestHeadingLevel,\n      redraw: this.shouldRedrawWrapper,\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      hideDataTable: this.accessibility.hideDataTableButton\n    });\n    this.shouldRedrawWrapper = false;\n  }\n\n  setParentSVGAccessibility() {\n    setAccessibilityController({\n      chartTag: 'scatter-plot',\n      language: this.getLanguageString(),\n      node: this.svg.node(),\n      title: this.accessibility.title || this.mainTitle,\n      description: this.subTitle,\n      uniqueID: this.chartID,\n      geomType: 'point',\n      includeKeyNames: this.accessibility.includeDataKeyNames,\n      dataKeys: this.innerScopeDataKeys(),\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.groupAccessor,\n      groupName: 'scatter-group',\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled\n      // groupKeys: [],\n      // nested: '',\n      // recursive: true\n    });\n  }\n\n  setGeometryAccessibilityAttributes() {\n    this.updatePoints.each((_d, i, n) => {\n      initializeElementAccess(n[i]);\n    });\n  }\n\n  setGeometryAriaLabels() {\n    const keys = this.innerScopeDataKeys();\n    this.updatePoints.each((_d, i, n) => {\n      setElementFocusHandler({\n        chartTag: 'scatter-plot',\n        language: this.getLanguageString(),\n        node: n[i],\n        geomType: 'point',\n        includeKeyNames: this.accessibility.includeDataKeyNames,\n        dataKeys: keys,\n        dataKeyNames: this.dataKeyNames,\n        groupName: 'scatter-group',\n        uniqueID: this.chartID,\n        disableKeyNav:\n          this.suppressEvents &&\n          this.accessibility.elementsAreInterface === false &&\n          this.accessibility.keyboardNavConfig &&\n          this.accessibility.keyboardNavConfig.disabled\n      });\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setGroupAccessibilityID() {\n    this.updatePointWrappers.each((_, i, n) => {\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setChartAccessibilityTitle() {\n    setAccessTitle(this.getLanguageString(), this.scatterChartEl, this.accessibility.title || this.mainTitle);\n  }\n\n  setChartAccessibilitySubtitle() {\n    setAccessSubtitle(this.getLanguageString(), this.scatterChartEl, this.subTitle);\n  }\n\n  setChartAccessibilityLongDescription() {\n    setAccessLongDescription(this.getLanguageString(), this.scatterChartEl, this.accessibility.longDescription);\n  }\n\n  setChartAccessibilityExecutiveSummary() {\n    setAccessExecutiveSummary(this.getLanguageString(), this.scatterChartEl, this.accessibility.executiveSummary);\n  }\n\n  setChartAccessibilityPurpose() {\n    setAccessPurpose(this.getLanguageString(), this.scatterChartEl, this.accessibility.purpose);\n  }\n\n  setChartAccessibilityContext() {\n    setAccessContext(this.getLanguageString(), this.scatterChartEl, this.accessibility.contextExplanation);\n  }\n\n  setChartAccessibilityStatisticalNotes() {\n    setAccessStatistics(this.getLanguageString(), this.scatterChartEl, this.accessibility.statisticalNotes);\n  }\n\n  setChartCountAccessibility() {\n    setAccessChartCounts({\n      rootEle: this.scatterChartEl,\n      parentGNode: this.dotG.node(), // pass the wrapper to <g> or geometries here, should be single node selection\n      chartTag: 'scatter-plot',\n      geomType: 'point',\n      groupName: 'scatter group'\n      // recursive: true\n    });\n  }\n\n  setChartAccessibilityStructureNotes() {\n    setAccessStructure(this.getLanguageString(), this.scatterChartEl, this.accessibility.structureNotes);\n  }\n  // new accessibility stuff ends here\n\n  drawLegendElements() {\n    // if we have default series access and it is not in the data don't show legend\n    const noGroupAccessor =\n      this.groupAccessor === ScatterPlotDefaultValues.groupAccessor &&\n      this.nest &&\n      this.nest.length === 1 &&\n      this.nest[0].key === 'undefined';\n\n    drawLegend({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      width: this.innerPaddedWidth,\n      height: this.margin.top + 20,\n      colorArr: this.rawColors,\n      baseColorArr: this.colorArr,\n      hideStrokes: this.accessibility.hideStrokes,\n      margin: this.margin,\n      padding: this.padding,\n      duration: this.duration,\n      type: 'scatter',\n      fontSize: 16,\n      data: this.nest,\n      label: this.legend.labels,\n      symbol: this.dotSymbols,\n      hide: !((this.legend.visible && !noGroupAccessor) || !this.legend || !this.groupAccessor),\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.groupAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.innerHoverStyle,\n      clickStyle: this.innerClickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  onChangeHandler() {\n    if (this.accessibility && typeof this.accessibility.onChangeFunc === 'function') {\n      const d = {\n        updated: this.updated,\n        added: this.enterSize,\n        removed: this.exitSize\n      };\n      this.accessibility.onChangeFunc(d);\n    }\n    this.updated = false;\n    this.enterSize = 0;\n    this.exitSize = 0;\n  }\n\n  onClickHandler(d, n) {\n    this.clickEvent.emit({ data: d, target: n });\n  }\n\n  onHoverHandler(d, n, isLegend?) {\n    overrideTitleTooltip(this.chartID, true);\n    this.hoverEvent.emit({ data: d, target: n });\n    if (this.showTooltip && !isLegend) {\n      this.eventsTooltip({ data: d, evt: event, isToShow: true });\n    }\n  }\n\n  onMouseOutHandler() {\n    overrideTitleTooltip(this.chartID, false);\n    this.mouseOutEvent.emit();\n    if (this.showTooltip) {\n      this.eventsTooltip({ isToShow: false });\n    }\n  }\n\n  // set initial style (instead of copying css class across the lib)\n  setTooltipInitialStyle() {\n    initTooltipStyle(this.tooltipG);\n  }\n\n  // tooltip\n  eventsTooltip({ data, evt, isToShow }: { data?: any; evt?: any; isToShow: boolean }) {\n    drawTooltip({\n      root: this.tooltipG,\n      data,\n      event: evt,\n      isToShow,\n      tooltipLabel: this.tooltipLabel,\n      xAxis: this.xAxis,\n      yAxis: this.yAxis,\n      dataLabel: this.dataLabel,\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.groupAccessor,\n      sizeConfig: this.sizeConfig,\n      xAccessor: this.xAccessor,\n      yAccessor: this.yAccessor,\n      chartType: 'scatter'\n    });\n  }\n\n  render() {\n    this.drawStartEvent.emit({ chartID: this.chartID });\n    // everything between this comment and the third should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n    this.init();\n    if (this.shouldSetLocalizationConfig) {\n      this.setLocalizationConfig();\n      this.shouldSetLocalizationConfig = false;\n    }\n    if (this.shouldSetTagLevels) {\n      this.setTagLevels();\n      this.shouldSetTagLevels = false;\n    }\n    if (this.shouldUpdateData) {\n      this.prepareData();\n      this.shouldUpdateData = false;\n    }\n    if (this.shouldUpdateLayout) {\n      this.setLayoutData();\n      this.shouldUpdateLayout = false;\n    }\n    if (this.shouldValidateClickStyle) {\n      this.validateClickStyle();\n      this.shouldValidateClickStyle = false;\n    }\n    if (this.shouldValidateHoverStyle) {\n      this.validateHoverStyle();\n      this.shouldValidateHoverStyle = false;\n    }\n    if (this.shouldSetColors) {\n      this.setColors();\n      this.shouldSetColors = false;\n    }\n    if (this.shouldUpdateScales) {\n      this.prepareScales();\n      this.shouldUpdateScales = false;\n    }\n    if (this.shouldValidateInteractionKeys) {\n      this.validateInteractionKeys();\n      this.shouldValidateInteractionKeys = false;\n    }\n    if (this.shouldValidateDataLabelAccessor) {\n      this.validateDataLabelAccessor();\n      this.shouldValidateDataLabelAccessor = false;\n    }\n    if (this.shouldUpdateTableData) {\n      this.setTableData();\n      this.shouldUpdateTableData = false;\n    }\n    if (this.shouldValidate) {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.shouldValidate = false;\n    }\n    // Everything between this comment and the first should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n\n    return (\n      <div class=\"o-layout\">\n        <div class=\"o-layout--chart\">\n          <this.topLevel class=\"scatter-main-title vcl-main-title\">{this.mainTitle}</this.topLevel>\n          <this.bottomLevel class=\"visa-ui-text--instructions scatter-sub-title vcl-sub-title\" />\n          <div class=\"scatter-legend vcl-legend\" style={{ display: this.legend.visible ? 'block' : 'none' }} />\n          <keyboard-instructions\n            uniqueID={this.chartID}\n            geomType={'point'}\n            groupName={'scatter group'} // taken from initializeDescriptionRoot, on bar this should be \"bar group\", stacked bar is \"stack\", and clustered is \"cluster\"\n            language={this.getLanguageString()}\n            chartTag={'scatter-plot'}\n            width={this.width - (this.margin ? this.margin.right || 0 : 0)}\n            isInteractive={this.accessibility.elementsAreInterface}\n            hasCousinNavigation\n            disabled={\n              this.suppressEvents &&\n              this.accessibility.elementsAreInterface === false &&\n              this.accessibility.keyboardNavConfig &&\n              this.accessibility.keyboardNavConfig.disabled\n            } // the chart is \"simple\"\n          />\n          <div class=\"visa-viz-d3-scatter-container\" />\n          <div class=\"scatter-tooltip vcl-tooltip\" style={{ display: this.showTooltip ? 'block' : 'none' }} />\n          <data-table\n            uniqueID={this.chartID}\n            isCompact\n            language={this.getLanguageString()}\n            tableColumns={this.tableColumns}\n            data={this.tableData}\n            dataKeyNames={this.dataKeyNames}\n            padding={this.padding}\n            margin={this.margin}\n            hideDataTable={this.accessibility.hideDataTableButton}\n            unitTest={this.unitTest}\n          />\n        </div>\n        {/* <canvas id=\"bitmap-render\" /> */}\n      </div>\n    );\n  }\n\n  private init() {\n    const keys = Object.keys(ScatterPlotDefaultValues);\n    let i = 0;\n    const exceptions = {\n      showFitLine: {\n        exception: false\n      },\n      showTooltip: {\n        exception: false\n      },\n      mainTitle: {\n        exception: ''\n      },\n      subTitle: {\n        exception: ''\n      },\n      showBaselineX: {\n        exception: false\n      },\n      groupAccessor: {\n        exception: ''\n      },\n      hoverOpacity: {\n        exception: 0\n      }\n    };\n    for (i = 0; i < keys.length; i++) {\n      const exception = !exceptions[keys[i]] ? false : this[keys[i]] === exceptions[keys[i]].exception;\n      this[keys[i]] = this[keys[i]] || exception ? this[keys[i]] : ScatterPlotDefaultValues[keys[i]];\n    }\n  }\n}\n\n// incorporate OSS licenses into build\nwindow['VisaChartsLibOSSLicenses'] = getLicenses(); // tslint:disable-line no-string-literal\n"],"mappings":"gYAOA,SAASA,IACP,IAAIC,EAAK,EACLC,EAAK,EACLC,EACAC,EACAC,EACAC,EACAC,EAAeC,EACfC,EAAQ,MACRC,EAEJ,SAASC,EAAMC,GACb,OAAOC,MAAMD,GAAKA,GAAKF,EAAUH,EAAaF,IAAQ,EAAI,IAAOO,GAAKN,EAAUM,GAAKT,GAAME,EAAKI,EAAQK,KAAKC,IAAI,EAAGD,KAAKE,IAAI,EAAGJ,IAAMA,GAC1I,CAEED,EAAMM,OAAS,SAASC,GACtB,OAAOC,UAAUC,QAAUjB,EAAKG,EAAUL,GAAMiB,EAAE,IAAKd,EAAKE,EAAUJ,GAAMgB,EAAE,IAAKb,EAAMF,IAAOC,EAAK,EAAI,GAAKA,EAAKD,GAAKQ,GAAS,CAACV,EAAIC,EAC1I,EAEES,EAAMF,MAAQ,SAASS,GACrB,OAAOC,UAAUC,QAAUX,IAAUS,EAAGP,GAASF,CACrD,EAEEE,EAAMJ,aAAe,SAASW,GAC5B,OAAOC,UAAUC,QAAUb,EAAeW,EAAGP,GAASJ,CAC1D,EAEEI,EAAMD,QAAU,SAASQ,GACvB,OAAOC,UAAUC,QAAUV,EAAUQ,EAAGP,GAASD,CACrD,EAEE,OAAO,SAASW,GACdf,EAAYe,EAAGlB,EAAKkB,EAAEpB,GAAKG,EAAKiB,EAAEnB,GAAKG,EAAMF,IAAOC,EAAK,EAAI,GAAKA,EAAKD,GACvE,OAAOQ,CACX,CACA,CAEO,SAASW,EAAKC,EAAQC,GAC3B,OAAOA,EACFP,OAAOM,EAAON,UACdV,aAAagB,EAAOhB,gBACpBE,MAAMc,EAAOd,SACbC,QAAQa,EAAOb,UACtB,CAgCO,SAASe,IACd,IAAId,EAAQe,EAAO1B,KAEnBW,EAAMW,KAAO,WACX,OAAOA,EAAKX,EAAOc,KAAiBE,SAAShB,EAAMgB,WACvD,EAEE,OAAOC,EAAiBC,MAAMlB,EAAOQ,UACvC,CAEO,SAASW,IACd,OAAOL,EAAcI,MAAM,KAAMV,WAAWQ,SAAS,GACvD,CCrFA,MAAMI,kBAAEA,GAAsBC,E,MAEjBC,GACKA,EAAAC,UAAY,qBACZD,EAAAE,SAAWJ,EAAkBI,SAASC,KACtCH,EAAAI,OAAS,IACTJ,EAAAK,MAAQ,IACRL,EAAAM,OAAS,CACvBC,IAAK,IAAM,IACXC,OAAQ,IAAM,IACdC,MAAO,IAAM,IACbC,KAAM,IAAM,KAEEV,EAAAW,QAAU,CACxBJ,IAAK,GACLC,OAAQ,GACRC,MAAO,GACPC,KAAM,IAGQV,EAAAY,aAAed,EAAkBc,aAEjCZ,EAAAa,UAAY,SACZb,EAAAc,UAAY,QACZd,EAAAe,cAAgB,WAEhBf,EAAAgB,WAAalB,EAAkBkB,WAC/BhB,EAAAiB,cAAgBnB,EAAkBmB,cAClCjB,EAAAkB,gBAAkBpB,EAAkBoB,gBACpClB,EAAAmB,oBAAsBrB,EAAkBqB,oBACxCnB,EAAAoB,UAAYtB,EAAkBsB,UAC9BpB,EAAAqB,MAAQvB,EAAkBuB,MAE1BrB,EAAAsB,MAAQxB,EAAkBwB,MAC1BtB,EAAAuB,cAAgBzB,EAAkB0B,iBAClCxB,EAAAyB,cAAgB3B,EAAkB4B,kBAElC1B,EAAA2B,aAAe7B,EAAkB8B,wBACjC5B,EAAA6B,UAAY/B,EAAkBgC,WAC9B9B,EAAA+B,WAAajC,EAAkBiC,WAC/B/B,EAAAgC,WAAalC,EAAkBkC,WAE/BhC,EAAAiC,eAAiBnC,EAAkBmC,eACnCjC,EAAAkC,YAAcpC,EAAkBoC,YAChClC,EAAAmC,aAAerC,EAAkBmC,eAEjCjC,EAAAoC,OAAStC,EAAkBsC,OAC3BpC,EAAAqC,aAAevC,EAAkBuC,aACjCrC,EAAAsC,WAAaxC,EAAkByC,iBAC/BvC,EAAAwC,WAAa1C,EAAkB2C,iBAE/BzC,EAAA0C,UAAY5C,EAAkB4C,UAE9B1C,EAAA2C,OAAS7C,EAAkB8C,eAC3B5C,EAAA6C,aAAe/C,EAAkB+C,aAEjC7C,EAAA8C,YAAchD,EAAkBgD,YAChC9C,EAAA+C,eAAiBjD,EAAkBiD,eACnC/C,EAAAgD,eAAiBlD,EAAkBkD,eACnChD,EAAAiD,YAAcnD,EAAkBmD,YAGhCjD,EAAAkD,eAAiBpD,EAAkBoD,eCvErD,MAAMC,EAAiB,2uCACvB,MAAAC,EAAeD,ECiCf,MAAME,mBACJA,EAAkBC,mBAClBA,EAAkBC,wBAClBA,EAAuBC,qBACvBA,EAAoBC,mBACpBA,EAAkBC,uBAClBA,EAAsBC,0BACtBA,EAAyBC,wBACzBA,EAAuBC,uBACvBA,EAAsBC,mBACtBA,EAAkBC,2BAClBA,EAA0BC,uBAC1BA,EAAsBC,eACtBA,EAAcC,kBACdA,EAAiBC,yBACjBA,EAAwBC,0BACxBA,EAAyBC,iBACzBA,EAAgBC,iBAChBA,EAAgBC,oBAChBA,EAAmBC,qBACnBA,EAAoBC,eACpBA,EAAcC,eACdA,EAAcC,mBACdA,EAAkBC,oBAClBA,EAAmBC,kBACnBA,EAAiBC,iBACjBA,EAAgBC,iCAChBA,EAAgCC,iCAChCA,GAAgCC,SAChCA,GAAQC,eACRA,GAAcC,iBACdA,GAAgBC,aAChBA,GAAYC,aACZA,GAAYC,iBACZA,GAAgBC,SAChBA,GAAQC,SACRA,GAAQC,WACRA,GAAUC,0BACVA,GAAyBC,YACzBA,GAAWC,gBACXA,GAAeC,UACfA,GAASC,YACTA,GAAWC,WACXA,GAAUC,cACVA,GAAaC,iBACbA,GAAgBC,aAChBA,GAAYC,qBACZA,GAAoBC,gBACpBA,GAAeC,cACfA,GAAaC,QACbA,GAAOC,iBACPA,GAAgBC,WAChBA,GAAUC,2BACVA,GAA0BC,0BAC1BA,GAAyBC,aACzBA,GAAYC,oBACZA,GAAmBC,QACnBA,GAAOC,sBACPA,GAAqBC,YACrBA,GAAWC,iBACXA,IACEjH,E,MAMSkH,GAAW,M,iZA6EtBC,KAAAC,4BAAuC,KACvCD,KAAAE,2BAAsC,KAoDtCF,KAAAG,QAAmB,KAUnBH,KAAAI,wBAAmC,MACnCJ,KAAAK,gBAA2B,MAC3BL,KAAAM,sBAAiC,MACjCN,KAAAO,gBAA2B,MAC3BP,KAAAQ,kBAA6B,MAC7BR,KAAAS,iBAA4B,MAC5BT,KAAAU,mBAA8B,MAC9BV,KAAAW,eAA0B,MAC1BX,KAAAY,mBAA8B,MAC9BZ,KAAAa,sBAAiC,MACjCb,KAAAc,0BAAqC,MACrCd,KAAAe,2BAAsC,MACtCf,KAAAgB,uBAAkC,MAClChB,KAAAiB,kBAA6B,MAC7BjB,KAAAkB,kBAA6B,MAC7BlB,KAAAmB,sBAAiC,MACjCnB,KAAAoB,sBAAiC,MACjCpB,KAAAqB,kBAA6B,MAC7BrB,KAAAsB,kBAA6B,MAC7BtB,KAAAuB,mBAA8B,MAC9BvB,KAAAwB,2BAAsC,MACtCxB,KAAAyB,kBAA6B,MAC7BzB,KAAA0B,mBAA8B,MAC9B1B,KAAA2B,qBAAgC,MAChC3B,KAAA4B,yBAAoC,MACpC5B,KAAA6B,yBAAoC,MACpC7B,KAAA8B,8BAAyC,MACzC9B,KAAA+B,gCAA2C,MAC3C/B,KAAAgC,wBAAmC,MACnChC,KAAAiC,mBAA8B,MAC9BjC,KAAAkC,2BAAsC,MACtClC,KAAAmC,mBAA8B,MAC9BnC,KAAAoC,wBAAmC,MACnCpC,KAAAqC,gCAA2C,MAC3CrC,KAAAsC,sBAAiC,MACjCtC,KAAAuC,sBAAiC,MACjCvC,KAAAwC,sBAAiC,MAEjCxC,KAAAyC,+BAA0C,MAC1CzC,KAAA0C,iCAA4C,MAC5C1C,KAAA2C,oCAA+C,MAC/C3C,KAAA4C,2CAAsD,MACtD5C,KAAA6C,4CAAuD,MACvD7C,KAAA8C,4CAAuD,MACvD9C,KAAA+C,0CAAqD,MACrD/C,KAAAgD,gCAA2C,MAC3ChD,KAAAiD,yCAAoD,MACpDjD,KAAAkD,4BAAuC,MACvClD,KAAAmD,sCAAiD,MACjDnD,KAAAoD,iCAA4C,MAC5CpD,KAAAqD,mCAA8C,MAC9CrD,KAAAsD,mCAA8C,MAC9CtD,KAAAuD,oBAA+B,MAC/BvD,KAAAwD,mBAA8B,MAC9BxD,KAAAyD,iCAA4C,MAC5CzD,KAAA0D,4BAAuC,MACvC1D,KAAA2D,4BAAuC,MACvC3D,KAAA4D,iCAA4C,MAC5C5D,KAAA6D,iBAA4B,MAC5B7D,KAAA8D,4BAAuC,MACvC9D,KAAA+D,SAAmB,KACnB/D,KAAAgE,YAAsB,IAGtBhE,KAAAiE,QAAe,GAw9BfjE,KAAAkE,UAAY,KACVlE,KAAKmE,UAAYnE,KAAKoE,OAAShG,GAAiB4B,KAAKoE,QAAUzF,GAAUqB,KAAKvF,aAAcuF,KAAKqE,KAAKpM,QAAU,GAChH+H,KAAKsE,aAAe,GACpB,IAAIC,EAAiBvE,KAAKmE,UAC1B,SAASK,EAAeC,GACtB,MAAMR,EAAU3H,EAAqBmI,GACrC,OAAOR,EAAQhM,SAAW,EAAIgM,EAAQ,GAAKA,EAAQ,E,CAErD,IAAKjE,KAAKjG,cAAc2K,YAAa,CACnC1E,KAAKiE,QAAU,GACf,GAAIjE,KAAK2E,gBAAgBF,MAAO,CAC9B,MAAMA,EAAQnF,GAAWU,KAAK2E,gBAAgBF,QAAUzE,KAAK2E,gBAAgBF,MAC7EzE,KAAKiE,QAAQQ,EAAMG,eAAiBJ,EAAeC,E,CAErD,GAAIzE,KAAK6E,gBAAgBJ,MAAO,CAC9B,MAAMA,EAAQnF,GAAWU,KAAK6E,gBAAgBJ,QAAUzE,KAAK6E,gBAAgBJ,MAC7EzE,KAAKiE,QAAQQ,EAAMG,eAAiBJ,EAAeC,E,CAErDF,EAAiB,E,CAEnBvE,KAAKmE,UAAUW,SAAQL,IACrB,IAAKzE,KAAKjG,cAAc2K,YAAa,CACnC,MAAMK,EAAWP,EAAeC,GAChCzE,KAAKiE,QAAQQ,EAAMG,eAAiBG,EACpCR,EAAeS,KAAKD,E,CAEtB/E,KAAKsE,aAAaU,KAAKzI,EAAmBkI,EAAO,UAAW,KAAK,IAEnE,GAAIzE,KAAK2E,gBAAgBF,MAAO,CAC9B,MAAMA,EAAQnF,GAAWU,KAAK2E,gBAAgBF,QAAUzE,KAAK2E,gBAAgBF,MAC7EzE,KAAKsE,aAAaU,KAAKzI,EAAmBkI,EAAO,UAAW,K,CAE9D,GAAIzE,KAAK6E,gBAAgBJ,MAAO,CAC9B,MAAMA,EAAQnF,GAAWU,KAAK6E,gBAAgBJ,QAAUzE,KAAK6E,gBAAgBJ,MAC7EzE,KAAKsE,aAAaU,KAAKzI,EAAmBkI,EAAO,UAAW,K,CAE9DzE,KAAKiF,SAAWV,CAAc,EAiKhCvE,KAAAkF,gBAAkBC,IAChB,MAAMC,EACJpF,KAAKhE,gBACLgE,KAAKhE,eAAe/D,OAAS,GAC7BiG,GAAaiH,EAAGnF,KAAKhE,eAAgBgE,KAAKqF,sBAC5C,MAAMC,EAAUtF,KAAKuF,gBAAkBpH,GAAagH,EAAGnF,KAAKuF,eAAgBvF,KAAKqF,sBACjF,MAAMG,EAAYJ,EACd9F,GAAWU,KAAK2E,gBAAgBF,QAChCzE,KAAK2E,gBAAgBF,QACpBzE,KAAKnG,cAAgBmG,KAAKyF,SAASN,EAAEnF,KAAKnG,gBAAkBmG,KAAKmE,UAAU,IAC5EmB,EACAhG,GAAWU,KAAK6E,gBAAgBJ,QAChCzE,KAAK6E,gBAAgBJ,QACpBzE,KAAKnG,cAAgBmG,KAAKyF,SAASN,EAAEnF,KAAKnG,gBAAkBmG,KAAKmE,UAAU,IAC5EnE,KAAKnG,cACLmG,KAAKyF,SAASN,EAAEnF,KAAKnG,gBACrBmG,KAAKmE,UAAU,GACnB,MAAMM,EAAQzE,KAAK0F,UAAUF,GAC7B,OAAOf,CAAK,EAOdzE,KAAA2F,eAAiB,CAACR,EAAGS,EAAGC,KACtB,IAAIpB,EAAQ,KACZ,MAAMW,EACJpF,KAAKhE,gBACLgE,KAAKhE,eAAe/D,OAAS,GAC7BiG,GAAaiH,EAAGnF,KAAKhE,eAAgBgE,KAAKqF,sBAC5C,MAAMC,EAAUtF,KAAKuF,gBAAkBpH,GAAagH,EAAGnF,KAAKuF,eAAgBvF,KAAKqF,sBACjF,MAAMG,EAAYJ,EACd9F,GAAWU,KAAK2E,gBAAgBF,QAChCzE,KAAK2E,gBAAgBF,QACpBzE,KAAKnG,cAAgBmG,KAAKyF,SAASN,EAAEnF,KAAKnG,gBAAkBmG,KAAKmE,UAAU,IAC5EmB,EACAhG,GAAWU,KAAK6E,gBAAgBJ,QAChCzE,KAAK6E,gBAAgBJ,QACpBzE,KAAKnG,cAAgBmG,KAAKyF,SAASN,EAAEnF,KAAKnG,gBAAkBmG,KAAKmE,UAAU,IAC5EnE,KAAKnG,eAAiBmG,KAAKlG,WAAWgM,gBACtCC,EACE,CAACpO,KAAKC,IAAI,EAAGoI,KAAKgG,SAAUhG,KAAKiG,SACjCC,EAAY,OAAQlG,KAAKyF,SAASN,EAAEnF,KAAKnG,iBAF3CkM,CAGEZ,EAAEnF,KAAKlG,WAAWqM,gBAAkBnG,KAAKyF,SAASN,EAAEnF,KAAKnG,gBAC3DmG,KAAKnG,eAAiBmG,KAAKlG,aAAekG,KAAKlG,WAAWgM,gBAC1D9F,KAAKyF,SAASN,EAAEnF,KAAKnG,iBACpBmG,KAAKnG,eAAiBmG,KAAKlG,WAAWgM,gBACvCC,EAAoB,CAACpO,KAAKC,IAAI,EAAGoI,KAAKgG,SAAUhG,KAAKiG,SAAUC,EAAY,OAAQlG,KAAKmE,UAAU,IAAlG4B,CACEZ,EAAEnF,KAAKlG,WAAWqM,gBACfnG,KAAKmE,UAAU,GACpBnE,KAAKmE,UAAU,GACnB,IAAKnE,KAAKjG,cAAc2K,YAAa,CACnC,MAAM0B,GACHhB,EACGiB,WAAWrG,KAAK2E,gBAAgByB,cAAgB,EAChDd,EACAe,WAAWrG,KAAK6E,gBAAgBuB,cAAgB,EAChD,IACHpG,KAAKsG,KACJnB,EAAEnF,KAAKlG,WAAWqM,cAAgBnG,KAAKuG,UAAUvG,KAAKnG,cAAgBsL,EAAEnF,KAAKnG,eAAiB,IAAI,cAElGmG,KAAKrF,WACL,GAEJ6L,EAAOX,EAAED,IAAIa,KAAK,eAAgBL,GAQlC3B,EAAQzE,KAAKiE,QACXmB,GAAWE,EACPE,EAAUZ,cACV5E,KAAKnG,cACLmG,KAAKyF,SAASN,EAAEnF,KAAKnG,gBAAgB+K,cACrC5E,KAAKmE,UAAU,GAAGS,c,CAI1B4B,EAAOX,EAAED,IAAIa,KAAK,OAAQjB,GAC1B,OAAOf,CAAK,E,kBAj7C6C3L,EAAyBY,a,eACvCZ,EAAyBC,U,cACVD,EAAyBE,S,YAC3CF,EAAyBI,O,WAC1BJ,EAAyBK,M,YACjBL,EAAyBM,O,aACxBN,EAAyBW,Q,yBACXX,EAAyBmB,oB,2DAK5CnB,EAAyBa,U,eACzBb,EAAyBc,U,gBAC3Bd,EAAyBgB,W,mBACnBhB,EAAyBe,c,WAG9Bf,EAAyBqB,M,WACzBrB,EAAyBsB,M,mBACnBtB,EAAyBuB,c,mBACzBvB,EAAyByB,c,kBAG3BzB,EAAyB2B,a,qCAE5B3B,EAAyB6B,U,gBACxB7B,EAAyB+B,W,gBAChB/B,EAAyBsC,W,gBACzBtC,EAAyBwC,W,oBACjBxC,EAAyBiC,e,YAC9CjC,EAAyBoC,O,kBACnBpC,EAAyBqC,a,qBACZrC,EAAyBkB,gB,kBACzBlB,EAAyBmC,a,gBACtCnC,EAAyBgC,W,eAGpBhC,EAAyB0C,U,6CAE9B1C,EAAyB8C,Y,kBACd9C,EAAyB6C,a,mBACvB7C,EAAyBiB,c,YACvCjB,EAAyB2C,O,iBACvB3C,EAAyBiD,Y,qJAO1BjD,EAAyBkC,Y,oBACrBlC,EAAyBgD,e,oBAG1BhD,EAAyB+C,e,kDAExB/C,EAAyBkD,e,6CAIjD,K,CAwI5B,WAAA0K,CAAYC,EAAUC,GACpB5G,KAAKG,QAAU,KACfH,KAAKS,iBAAmB,KACxBT,KAAKO,gBAAkB,KACvBP,KAAKc,0BAA4B,KACjCd,KAAKe,2BAA6B,KAClCf,KAAKU,mBAAqB,KAC1BV,KAAKkC,2BAA6B,KAClClC,KAAKwC,sBAAwB,KAC7BxC,KAAKa,sBAAwB,KAC7Bb,KAAKiD,yCAA2C,KAChDjD,KAAKkD,4BAA8B,KACnClD,KAAKuB,mBAAqB,KAC1BvB,KAAKM,sBAAwB,KAC7BN,KAAKW,eAAiB,KACtBX,KAAKgB,uBAAyB,KAC9BhB,KAAKiB,kBAAoB,KACzBjB,KAAK2D,4BAA8B,KACnC3D,KAAKkB,kBAAoB,KACzBlB,KAAK0D,4BAA8B,KACnC1D,KAAKqB,kBAAoB,KACzBrB,KAAKsB,kBAAoB,KACzBtB,KAAK0B,mBAAqB,KAC1B1B,KAAK2B,qBAAuB,KAC5B3B,KAAKyB,kBAAoB,KACzBzB,KAAKwB,2BAA6B,KAClCxB,KAAKmB,sBAAwB,KAC7BnB,KAAKoB,sBAAwB,KAC7BpB,KAAKI,wBAA0B,I,CAIjC,SAAAyG,CAAUC,EAAOC,GACfC,QAAQC,MACN,+CACEF,EACA,aACAD,EACA,4D,CAaN,cAAAI,CAAeC,EAASC,GACtBpH,KAAKuD,oBAAsB,KAC3BvD,KAAKwD,mBAAqB,KAC1BxD,KAAKyD,iCAAmC,KACxCzD,KAAK0D,4BAA8B,KACnC1D,KAAK2D,4BAA8B,KACnC3D,KAAK4D,iCAAmC,KACxC5D,KAAKyC,+BAAiC,KACtCzC,KAAKQ,kBAAoB,KACzBR,KAAK0C,iCAAmC,KACxC1C,KAAK2C,oCAAsC,KAC3C3C,KAAK4C,2CAA6C,KAClD5C,KAAKsD,mCAAqC,KAC1CtD,KAAK6C,4CAA8C,KACnD7C,KAAKqD,mCAAqC,KAC1CrD,KAAK8C,4CAA8C,KACnD9C,KAAK+C,0CAA4C,I,CAInD,YAAAsE,CAAaF,EAASC,GACpBpH,KAAKW,eAAiB,KACtBX,KAAKyC,+BAAiC,KACtCzC,KAAK0C,iCAAmC,KACxC1C,KAAKgD,gCAAkC,I,CAIzC,eAAAsE,CAAgBH,EAASC,GACvBpH,KAAKQ,kBAAoB,KACzBR,KAAK2C,oCAAsC,KAC3C3C,KAAKgD,gCAAkC,I,CAOzC,aAAAuE,CAAcJ,EAASC,GACrBpH,KAAKY,mBAAqB,KAC1BZ,KAAKU,mBAAqB,KAC1BV,KAAKK,gBAAkB,KACvBL,KAAKgB,uBAAyB,KAC9BhB,KAAKiB,kBAAoB,KACzBjB,KAAKkB,kBAAoB,KACzBlB,KAAKqB,kBAAoB,KACzBrB,KAAKsB,kBAAoB,KACzBtB,KAAK0B,mBAAqB,KAC1B1B,KAAKuB,mBAAqB,KAC1BvB,KAAKyB,kBAAoB,KACzBzB,KAAKwB,2BAA6B,KAClCxB,KAAKmB,sBAAwB,KAC7BnB,KAAKoB,sBAAwB,KAC7BpB,KAAKI,wBAA0B,I,CAIjC,gBAAAoH,CAAiBL,EAASC,GACxBpH,KAAKM,sBAAwB,KAC7BN,KAAKU,mBAAqB,KAC1BV,KAAKgB,uBAAyB,KAC9BhB,KAAKkC,2BAA6B,KAClClC,KAAKuC,sBAAwB,KAC7BvC,KAAKiB,kBAAoB,KACzBjB,KAAK2D,4BAA8B,KACnC3D,KAAKqB,kBAAoB,KACzBrB,KAAK0B,mBAAqB,KAC1B1B,KAAKyB,kBAAoB,KACzBzB,KAAKwB,2BAA6B,KAClCxB,KAAKmB,sBAAwB,KAC7BnB,KAAKI,wBAA0B,KAC/BJ,KAAKkD,4BAA8B,I,CAIrC,gBAAAuE,CAAiBN,EAASC,GACxBpH,KAAKM,sBAAwB,KAC7BN,KAAKU,mBAAqB,KAC1BV,KAAKgB,uBAAyB,KAC9BhB,KAAKkC,2BAA6B,KAClClC,KAAKuC,sBAAwB,KAC7BvC,KAAK+B,gCAAkC,KACvC/B,KAAKkB,kBAAoB,KACzBlB,KAAK0D,4BAA8B,KACnC1D,KAAKsB,kBAAoB,KACzBtB,KAAK0B,mBAAqB,KAC1B1B,KAAKyB,kBAAoB,KACzBzB,KAAKwB,2BAA6B,KAClCxB,KAAKoB,sBAAwB,KAC7BpB,KAAKI,wBAA0B,KAC/BJ,KAAKkD,4BAA8B,I,CAIrC,iBAAAwE,CAAkBP,EAASC,GACzBpH,KAAKM,sBAAwB,KAC7BN,KAAKU,mBAAqB,KAC1BV,KAAKgB,uBAAyB,KAC9BhB,KAAKkC,2BAA6B,KAClClC,KAAKuC,sBAAwB,KAC7BvC,KAAK0B,mBAAqB,KAC1B1B,KAAKyB,kBAAoB,KACzBzB,KAAKwB,2BAA6B,KAClCxB,KAAKI,wBAA0B,KAC/BJ,KAAKgD,gCAAkC,KACvChD,KAAKkD,4BAA8B,KACnClD,KAAK+B,gCAAkC,KACvC/B,KAAKM,sBAAwB,I,CAI/B,oBAAAqH,CAAqBR,EAASC,GAC5BpH,KAAKS,iBAAmB,KACxBT,KAAKO,gBAAkB,KACvBP,KAAKwC,sBAAwB,KAC7BxC,KAAK6B,yBAA2B,KAChC7B,KAAK4B,yBAA2B,KAChC5B,KAAKU,mBAAqB,KAC1BV,KAAKc,0BAA4B,KACjCd,KAAKa,sBAAwB,KAC7Bb,KAAKgB,uBAAyB,KAC9BhB,KAAKkC,2BAA6B,KAClClC,KAAKuB,mBAAqB,KAC1BvB,KAAKuC,sBAAwB,KAC7BvC,KAAK0B,mBAAqB,KAC1B1B,KAAKM,sBAAwB,KAC7BN,KAAKkD,4BAA8B,KACnClD,KAAKoD,iCAAmC,KACxCpD,KAAKmD,sCAAwC,KAC7C,KAAMnD,KAAK4H,iBAAmB5H,KAAK4H,gBAAgB3P,QAAS,CAC1D+H,KAAK8B,8BAAgC,KACrC9B,KAAKgC,wBAA0B,I,EAKnC,YAAA6F,CAAaV,EAASC,GACpBpH,KAAKiB,kBAAoB,KACzBjB,KAAK2D,4BAA8B,KACnC,MAAMmE,EAAaX,GAAWA,EAAQY,YACtC,MAAMC,EAAaZ,GAAWA,EAAQW,YACtC,MAAME,EAAkBd,GAAWA,EAAQe,aAAef,EAAQe,aAAe,EACjF,MAAMC,EAAkBf,GAAWA,EAAQc,aAAed,EAAQc,aAAe,EACjF,GAAIJ,IAAeE,GAAcC,IAAoBE,EAAiB,CACpEnI,KAAKqB,kBAAoB,I,EAK7B,YAAA+G,CAAajB,EAASC,GACpBpH,KAAKkB,kBAAoB,KACzBlB,KAAK0D,4BAA8B,KACnC,MAAMoE,EAAaX,GAAWA,EAAQY,YACtC,MAAMC,EAAaZ,GAAWA,EAAQW,YACtC,MAAME,EAAkBd,GAAWA,EAAQe,aAAef,EAAQe,aAAe,EACjF,MAAMC,EAAkBf,GAAWA,EAAQc,aAAed,EAAQc,aAAe,EACjF,GAAIJ,IAAeE,GAAcC,IAAoBE,EAAiB,CACpEnI,KAAKsB,kBAAoB,I,EAK7B,oBAAA+G,CAAqBlB,EAASC,GAC5BpH,KAAKmB,sBAAwB,I,CAI/B,oBAAAmH,CAAqBnB,EAASC,GAC5BpH,KAAKoB,sBAAwB,I,CAK/B,aAAAmH,CAAcpB,EAASC,GACrBpH,KAAKO,gBAAkB,KACvBP,KAAKU,mBAAqB,KAC1BV,KAAKkC,2BAA6B,KAClClC,KAAKuB,mBAAqB,I,CAI5B,gBAAAiH,CAAiBrB,EAASC,GACxBpH,KAAK6B,yBAA2B,KAChC7B,KAAK4B,yBAA2B,KAChC5B,KAAKmC,mBAAqB,KAC1BnC,KAAKgB,uBAAyB,KAC9BhB,KAAK0B,mBAAqB,I,CAI5B,iBAAA+G,CAAkBtB,EAASC,GACzBpH,KAAKwC,sBAAwB,I,CAI/B,iBAAAkG,CAAkBvB,EAASC,GACzBpH,KAAKU,mBAAqB,KAC1BV,KAAKgB,uBAAyB,I,CAIhC,iBAAA2H,CAAkBxB,EAASC,GACzBpH,KAAKO,gBAAkB,KACvBP,KAAKwC,sBAAwB,KAC7BxC,KAAKkC,2BAA6B,KAClClC,KAAKuC,sBAAwB,KAC7BvC,KAAK6B,yBAA2B,I,CAIlC,iBAAA+G,CAAkBzB,EAASC,GACzBpH,KAAKO,gBAAkB,KACvBP,KAAKwC,sBAAwB,KAC7BxC,KAAKkC,2BAA6B,KAClClC,KAAKuC,sBAAwB,KAC7BvC,KAAK4B,yBAA2B,I,CAKlC,gBAAAiH,CAAiB1B,EAASC,GACxBpH,KAAKwB,2BAA6B,I,CAIpC,mBAAAsH,CAAoB3B,EAASC,GAC3BpH,KAAKyB,kBAAoB,I,CAI3B,aAAAsH,CAAc5B,EAASC,GACrBpH,KAAKiC,mBAAqB,KAC1BjC,KAAKsC,sBAAwB,I,CAI/B,mBAAA0G,CAAoB7B,EAASC,GAC3BpH,KAAKwC,sBAAwB,KAC7BxC,KAAKuC,sBAAwB,I,CAI/B,YAAA0G,CAAa9B,EAASC,GACpBpH,KAAK0B,mBAAqB,KAC1B1B,KAAKgB,uBAAyB,KAC9BhB,KAAKM,sBAAwB,KAC7BN,KAAKgD,gCAAkC,KACvChD,KAAKkD,4BAA8B,KACnC,MAAMgG,EAAgB/B,GAAWA,EAAQgC,QACzC,MAAMC,EAAgBhC,GAAWA,EAAQ+B,QACzC,MAAME,EAAclC,GAAWA,EAAQmC,cAAgBnC,EAAQmC,cAAgB,MAC/E,MAAMC,EAAcnC,GAAWA,EAAQkC,cAAgBlC,EAAQkC,cAAgB,MAC/E,MAAME,EAAYrC,GAAWA,EAAQsC,OAAStC,EAAQsC,OAAS,MAC/D,MAAMC,EAAYtC,GAAWA,EAAQqC,OAASrC,EAAQqC,OAAS,MAC/D,GAAIP,IAAkBE,EAAe,CACnCpJ,KAAKuC,sBAAwB,I,CAE/B,GAAI8G,IAAgBE,GAAeC,IAAcE,EAAW,CAC1D1J,KAAK+B,gCAAkC,I,EAK3C,kBAAA4H,CAAmBxC,EAASC,GAC1BpH,KAAKkC,2BAA6B,I,CAIpC,mBAAA0H,CAAoBzC,EAASC,GAE3BpH,KAAKM,sBAAwB,KAC7BN,KAAKgD,gCAAkC,KACvChD,KAAKkD,4BAA8B,I,CAIrC,aAAA2G,CAAc1C,EAASC,GACrBpH,KAAKuB,mBAAqB,KAC1B,MAAMuI,EAAoB3C,GAAWA,EAAQ4C,YAC7C,MAAMC,EAAoB5C,GAAWA,EAAQ2C,YAC7C,GAAID,IAAsBE,EAAmB,CAC3ChK,KAAKsC,sBAAwB,KAC7BtC,KAAKqC,gCAAkC,I,EAK3C,eAAA4H,CAAgB9C,EAASC,GACvBpH,KAAKoC,wBAA0B,KAC/BpC,KAAKiC,mBAAqB,KAC1BjC,KAAKuB,mBAAqB,KAC1BvB,KAAKsC,sBAAwB,KAC7BtC,KAAKqC,gCAAkC,KACvCrC,KAAKkD,4BAA8B,KACnClD,KAAKgD,gCAAkC,KACvChD,KAAKyC,+BAAiC,KACtCzC,KAAKuD,oBAAsB,KAC3BvD,KAAKW,eAAiB,KACtBX,KAAKQ,kBAAoB,KACzBR,KAAK0C,iCAAmC,KACxC1C,KAAK2C,oCAAsC,KAC3C3C,KAAK4C,2CAA6C,KAClD5C,KAAKsD,mCAAqC,KAC1CtD,KAAK6C,4CAA8C,KACnD7C,KAAKqD,mCAAqC,KAC1CrD,KAAK8C,4CAA8C,KACnD9C,KAAK+C,0CAA4C,I,CAInD,kBAAAmH,CAAmB/C,EAASC,GAC1BpH,KAAKW,eAAiB,KACtBX,KAAKI,wBAA0B,KAC/BJ,KAAK4D,iCAAmC,I,CAI1C,oBAAAuG,CAAqBhD,EAASC,GAC5BpH,KAAKW,eAAiB,KACtB,MAAMyJ,EAAWjD,GAAWA,EAAQkD,MAAQlD,EAAQkD,MAAQ,MAC5D,MAAMC,EAAWlD,GAAWA,EAAQiD,MAAQjD,EAAQiD,MAAQ,MAC5D,GAAID,IAAaE,EAAU,CACzBtK,KAAKyC,+BAAiC,KACtCzC,KAAK0C,iCAAmC,KACxC1C,KAAKgD,gCAAkC,I,CAEzC,MAAMuH,EAAsBpD,GAAWA,EAAQqD,iBAAmBrD,EAAQqD,iBAAmB,MAC7F,MAAMC,EAAsBrD,GAAWA,EAAQoD,iBAAmBpD,EAAQoD,iBAAmB,MAC7F,GAAID,IAAwBE,EAAqB,CAC/CzK,KAAK6C,4CAA8C,I,CAErD,MAAM6H,EAAavD,GAAWA,EAAQwD,QAAUxD,EAAQwD,QAAU,MAClE,MAAMC,EAAaxD,GAAWA,EAAQuD,QAAUvD,EAAQuD,QAAU,MAClE,GAAID,IAAeE,EAAY,CAC7B5K,KAAKqD,mCAAqC,I,CAE5C,MAAMwH,EAAqB1D,GAAWA,EAAQ2D,gBAAkB3D,EAAQ2D,gBAAkB,MAC1F,MAAMC,EAAqB3D,GAAWA,EAAQ0D,gBAAkB1D,EAAQ0D,gBAAkB,MAC1F,GAAID,IAAuBE,EAAoB,CAC7C/K,KAAK4C,2CAA6C,I,CAEpD,MAAMoI,EAAa7D,GAAWA,EAAQ8D,mBAAqB9D,EAAQ8D,mBAAqB,MACxF,MAAMC,EAAa9D,GAAWA,EAAQ6D,mBAAqB7D,EAAQ6D,mBAAqB,MACxF,GAAID,IAAeE,EAAY,CAC7BlL,KAAKsD,mCAAqC,I,CAE5C,MAAM6H,EAAsBhE,GAAWA,EAAQiE,iBAAmBjE,EAAQiE,iBAAmB,MAC7F,MAAMC,EAAsBjE,GAAWA,EAAQgE,iBAAmBhE,EAAQgE,iBAAmB,MAC7F,GAAID,IAAwBE,EAAqB,CAC/CrL,KAAK8C,4CAA8C,I,CAErD,MAAMwI,EAAoBnE,GAAWA,EAAQoE,eAAiBpE,EAAQoE,eAAiB,MACvF,MAAMC,EAAoBpE,GAAWA,EAAQmE,eAAiBnE,EAAQmE,eAAiB,MACvF,GAAID,IAAsBE,EAAmB,CAC3CxL,KAAK+C,0CAA4C,I,CAEnD,MAAM0I,EAAyBtE,GAAWA,EAAQuE,oBAClD,MAAMC,EAAyBvE,GAAWA,EAAQsE,oBAClD,MAAME,EACJzE,GAAWA,EAAQ0E,2BAA6B1E,EAAQ0E,2BAA6B,MACvF,MAAMC,EACJ1E,GAAWA,EAAQyE,2BAA6BzE,EAAQyE,2BAA6B,MACvF,GACEJ,IAA2BE,GAC3BC,IAAkCE,EAClC,CACA,GAAIL,IAA2BE,EAAwB,CAGrD3L,KAAKoD,iCAAmC,I,CAE1CpD,KAAKkD,4BAA8B,KACnClD,KAAKgD,gCAAkC,I,CAEzC,MAAM+I,EAAa5E,GAAWA,EAAQzC,YAAcyC,EAAQzC,YAAc,MAC1E,MAAMsH,EAAa5E,GAAWA,EAAQ1C,YAAc0C,EAAQ1C,YAAc,MAC1E,GAAIqH,IAAeC,EAAY,CAC7BhM,KAAKO,gBAAkB,KACvBP,KAAKkC,2BAA6B,I,CAEpC,MAAM+J,EACJ9E,GAAWA,EAAQ+E,mBAAqB/E,EAAQ+E,kBAAkBC,SAC9DhF,EAAQ+E,kBAAkBC,SAC1B,MACN,MAAMC,EACJhF,GAAWA,EAAQ8E,mBAAqB9E,EAAQ8E,kBAAkBC,SAC9D/E,EAAQ8E,kBAAkBC,SAC1B,MACN,MAAME,EAAelF,GAAWA,EAAQmF,qBAAuBnF,EAAQmF,qBAAuB,MAC9F,MAAMC,EAAenF,GAAWA,EAAQkF,qBAAuBlF,EAAQkF,qBAAuB,MAC9F,GAAIL,IAAcG,GAAaC,IAAiBE,EAAc,CAC5DvM,KAAKkD,4BAA8B,KACnClD,KAAKgD,gCAAkC,KACvChD,KAAKyC,+BAAiC,KACtCzC,KAAKuD,oBAAsB,KAC3BvD,KAAK0C,iCAAmC,KACxC1C,KAAK2C,oCAAsC,KAC3C3C,KAAK4C,2CAA6C,KAClD5C,KAAKsD,mCAAqC,KAC1CtD,KAAK6C,4CAA8C,KACnD7C,KAAKqD,mCAAqC,KAC1CrD,KAAK8C,4CAA8C,KACnD9C,KAAK+C,0CAA4C,I,CAEnD,GAAIsJ,IAAiBE,EAAc,CACjCvM,KAAKgC,wBAA0B,I,EAKnC,mBAAAwK,CAAoBrF,EAASC,GAC3BpH,KAAKW,eAAiB,KAGtB,MAAM8L,EAActF,GAAWA,EAAQuF,SAAWvF,EAAQuF,SAAW,MACrE,MAAMC,EAAcvF,GAAWA,EAAQsF,SAAWtF,EAAQsF,SAAW,MACrE,GAAID,IAAgBE,EAAa,CAC/B3M,KAAK8D,4BAA8B,KACnC9D,KAAKM,sBAAwB,KAC7BN,KAAK+B,gCAAkC,KACvC/B,KAAKuD,oBAAsB,KAC3BvD,KAAKyC,+BAAiC,KACtCzC,KAAKyD,iCAAmC,KACxCzD,KAAK0D,4BAA8B,KACnC1D,KAAK2D,4BAA8B,KACnC3D,KAAKyC,+BAAiC,KACtCzC,KAAKkD,4BAA8B,KACnClD,KAAKgD,gCAAkC,I,CAIzC,MAAM4J,EAAmBzF,GAAWA,EAAQ0F,cAAgB1F,EAAQ0F,cAAgB,MACpF,MAAMC,EAAmB1F,GAAWA,EAAQyF,cAAgBzF,EAAQyF,cAAgB,MACpF,GAAID,IAAqBE,EAAkB,CACzC9M,KAAK8D,4BAA8B,KACnC9D,KAAKM,sBAAwB,KAC7BN,KAAK+B,gCAAkC,KACvC/B,KAAKuD,oBAAsB,KAC3BvD,KAAKyC,+BAAiC,KACtCzC,KAAKyD,iCAAmC,KACxCzD,KAAK0D,4BAA8B,KACnC1D,KAAK2D,4BAA8B,KACnC3D,KAAKyC,+BAAiC,KACtCzC,KAAKkD,4BAA8B,KACnClD,KAAKgD,gCAAkC,I,EAM3C,qBAAA+J,CAAsB5F,EAASC,GAC7BpH,KAAKU,mBAAqB,KAC1BV,KAAKgB,uBAAyB,KAC9BhB,KAAKiB,kBAAoB,KACzBjB,KAAK0B,mBAAqB,KAC1B1B,KAAKyB,kBAAoB,KACzBzB,KAAKwB,2BAA6B,KAClCxB,KAAKmB,sBAAwB,KAC7BnB,KAAKI,wBAA0B,I,CAKjC,qBAAA4M,CAAsB7F,EAASC,GAC7BpH,KAAKU,mBAAqB,KAC1BV,KAAKgB,uBAAyB,KAC9BhB,KAAKkB,kBAAoB,KACzBlB,KAAK0B,mBAAqB,KAC1B1B,KAAKyB,kBAAoB,KACzBzB,KAAKwB,2BAA6B,KAClCxB,KAAKoB,sBAAwB,KAC7BpB,KAAKI,wBAA0B,I,CAIjC,kBAAA6M,CAAmB9F,EAASC,GAC1BpH,KAAKyB,kBAAoB,I,CAI3B,YAAAyL,CAAa/F,EAASC,GACpBpH,KAAKwC,sBAAwB,KAC7BxC,KAAKkC,2BAA6B,KAClClC,KAAKuC,sBAAwB,KAC7BvC,KAAKgC,wBAA0B,I,CAIjC,YAAAmL,CAAahG,EAASC,GACpBpH,KAAKwC,sBAAwB,KAC7BxC,KAAKkC,2BAA6B,KAClClC,KAAKuC,sBAAwB,I,CAI/B,kBAAA6K,CAAmBjG,EAASC,GAC1BpH,KAAK8B,8BAAgC,KACrC9B,KAAKwC,sBAAwB,KAC7BxC,KAAKkC,2BAA6B,KAClClC,KAAKuC,sBAAwB,KAC7BvC,KAAKgC,wBAA0B,KAC/BhC,KAAKM,sBAAwB,KAC7BN,KAAKkD,4BAA8B,KACnClD,KAAKoC,wBAA0B,KAC/BpC,KAAKqC,gCAAkC,I,CAIzC,mBAAAgL,CAAoBlG,EAASC,GAC3BpH,KAAKiB,kBAAoB,KACzBjB,KAAK2D,4BAA8B,KACnC3D,KAAKkB,kBAAoB,KACzBlB,KAAK0D,4BAA8B,KACnC1D,KAAKgD,gCAAkC,KACvChD,KAAKoD,iCAAmC,KACxCpD,KAAKkD,4BAA8B,I,CAIrC,eAAAoK,CAAgBnG,EAASC,GACvBpH,KAAKe,2BAA6B,I,CAGpC,iBAAAwM,GAIE,MAAMC,EAAUxN,KAAKyN,UAAY,gBAAkBC,IACnD1N,KAAK2N,iBAAiBC,KAAK,CAAEJ,QAASA,IACtC,OAAO,IAAIK,SAAQC,IACjB9N,KAAK+N,SAAW,EAChB/N,KAAKgO,SAAW,KAChBhO,KAAKwN,QAAUA,EACfxN,KAAKiO,eAAeC,GAAKlO,KAAKwN,QAC9BxN,KAAKmO,wBACLnO,KAAKoO,eACLpO,KAAKqO,cACLrO,KAAKsO,gBACLtO,KAAKuO,qBACLvO,KAAKwO,qBACLxO,KAAKkE,YACLlE,KAAKyO,gBACLzO,KAAK0O,0BACL1O,KAAK2O,4BACL3O,KAAK4O,eACL5O,KAAK6O,mCACL7O,KAAK8O,kCACLhB,EAAQ,sBAAsB,G,CAIlC,mBAAAiB,GAIE,OAAO,IAAIlB,SAAQC,IACjBA,EAAQ,wBAAwB,G,CAIpC,gBAAAkB,GACE,OAAO,IAAInB,SAAQC,IACjB9N,KAAK6O,mCACL7O,KAAK8O,kCACL9O,KAAKiP,qBACLjP,KAAKkP,yBACLlP,KAAKmP,6BACLnP,KAAKoP,6BACLpP,KAAKqP,gCACLrP,KAAKsP,uCACLtP,KAAKuP,wCACLvP,KAAKwP,+BACLxP,KAAKyP,+BACLzP,KAAK0P,wCACL1P,KAAK2P,sCACL3P,KAAK4P,4BACL5P,KAAK6P,YACL7P,KAAK8P,aACL9P,KAAK+P,sBACL/P,KAAKgQ,YACLhQ,KAAKiQ,YACLjQ,KAAKkQ,sBACLlQ,KAAKmQ,uBACLnQ,KAAKoQ,mBAELpQ,KAAKqQ,kBACLrQ,KAAKsQ,kBACLtQ,KAAKuQ,mBACLvQ,KAAKwQ,iBACLxQ,KAAKyQ,kBACLzQ,KAAK0Q,kBACL1Q,KAAK2Q,6BACL3Q,KAAK4Q,qCACL5Q,KAAK6Q,wBACL7Q,KAAK8Q,qBACL9Q,KAAK+Q,iBACL/Q,KAAKgR,iBACLhR,KAAKiR,cACLjR,KAAKkR,qBACLlR,KAAKmR,mBACLnR,KAAKoR,eACLpR,KAAKqR,kBACLrR,KAAKsR,oBACLtR,KAAKuR,0BACLvR,KAAKwR,kBACLxR,KAAKyR,6BACLzR,KAAK0R,YACL1R,KAAK2R,wBACL3R,KAAK4R,YACL5R,KAAK6R,wBACL7R,KAAK8R,gBACL9R,KAAK+R,gBACL/R,KAAKgS,kBAILlV,EAAuBkD,KAAKiS,KAAKC,OAAQlS,KAAKmS,KAAKD,QACnDlS,KAAKoS,0BACLpS,KAAKgO,SAAW,MAChBF,EAAQ,qBAAqB,IAC5BuE,MAAK,IAAMrS,KAAKsS,oBAAoB1E,KAAK,CAAEJ,QAASxN,KAAKwN,W,CAG9D,kBAAA+E,GACE,OAAO,IAAI1E,SAAQC,IACjB9N,KAAK+N,UAAY/N,KAAKhG,kBAAoBgG,KAAKhG,gBAAgBmS,SAAW,IAAM,EAChF,GAAInM,KAAKyC,+BAAgC,CACvCzC,KAAKmP,6BACLnP,KAAKyC,+BAAiC,K,CAExC,GAAIzC,KAAKyD,iCAAkC,CACzCzD,KAAK2Q,6BACL3Q,KAAKyD,iCAAmC,K,CAE1C,GAAIzD,KAAK0C,iCAAkC,CACzC1C,KAAKoP,6BACLpP,KAAK0C,iCAAmC,K,CAE1C,GAAI1C,KAAK2C,oCAAqC,CAC5C3C,KAAKqP,gCACLrP,KAAK2C,oCAAsC,K,CAE7C,GAAI3C,KAAK4C,2CAA4C,CACnD5C,KAAKsP,uCACLtP,KAAK4C,2CAA6C,K,CAEpD,GAAI5C,KAAK6C,4CAA6C,CACpD7C,KAAKuP,wCACLvP,KAAK6C,4CAA8C,K,CAErD,GAAI7C,KAAKqD,mCAAoC,CAC3CrD,KAAKwP,+BACLxP,KAAKqD,mCAAqC,K,CAE5C,GAAIrD,KAAKsD,mCAAoC,CAC3CtD,KAAKyP,+BACLzP,KAAKsD,mCAAqC,K,CAE5C,GAAItD,KAAK8C,4CAA6C,CACpD9C,KAAK0P,wCACL1P,KAAK8C,4CAA8C,K,CAErD,GAAI9C,KAAK+C,0CAA2C,CAClD/C,KAAK2P,sCACL3P,KAAK+C,0CAA4C,K,CAEnD,GAAI/C,KAAKgD,gCAAiC,CACxChD,KAAK4P,4BACL5P,KAAKgD,gCAAkC,K,CAEzC,GAAIhD,KAAKK,gBAAiB,CACxBL,KAAK6P,YACL7P,KAAKK,gBAAkB,K,CAEzB,GAAIL,KAAK6D,iBAAkB,CACzB7D,KAAK8P,aACL9P,KAAK6D,iBAAmB,K,CAE1B,GAAI7D,KAAKc,0BAA2B,CAClCd,KAAKkQ,sBACLlQ,KAAKc,0BAA4B,K,CAEnC,GAAId,KAAKe,2BAA4B,CACnCf,KAAKmQ,uBACLnQ,KAAKe,2BAA6B,K,CAEpC,GAAIf,KAAKQ,kBAAmB,CAC1BR,KAAK+P,sBACL/P,KAAKQ,kBAAoB,K,CAE3B,GAAIR,KAAKqB,kBAAmB,CAC1BrB,KAAKgQ,YACLhQ,KAAKqB,kBAAoB,K,CAE3B,GAAIrB,KAAKsB,kBAAmB,CAC1BtB,KAAKiQ,YACLjQ,KAAKsB,kBAAoB,K,CAE3B,GAAItB,KAAKa,sBAAuB,CAC9Bb,KAAKoQ,mBAELpQ,KAAKqQ,kBACLrQ,KAAKsQ,kBACLtQ,KAAKuQ,mBACLvQ,KAAKwQ,iBACLxQ,KAAKa,sBAAwB,K,CAE/B,GAAIb,KAAKgB,uBAAwB,CAC/BhB,KAAK0Q,kBACL1Q,KAAKgB,uBAAyB,K,CAEhC,GAAIhB,KAAKmC,mBAAoB,CAC3BnC,KAAKwS,eACLxS,KAAKmC,mBAAqB,K,CAE5B,GAAInC,KAAKiD,yCAA0C,CACjDjD,KAAK4Q,qCACL5Q,KAAKiD,yCAA2C,K,CAElD,GAAIjD,KAAKkD,4BAA6B,CACpClD,KAAK6Q,wBACL7Q,KAAKkD,4BAA8B,K,CAErC,GAAIlD,KAAKoD,iCAAkC,CACzCpD,KAAKoS,0BACLpS,KAAKoD,iCAAmC,K,CAE1C,GAAIpD,KAAKuB,mBAAoB,CAC3BvB,KAAK8Q,qBACL9Q,KAAKuB,mBAAqB,K,CAE5B,GAAIvB,KAAK0B,mBAAoB,CAC3B1B,KAAK+Q,iBACL/Q,KAAK0B,mBAAqB,K,CAE5B,GAAI1B,KAAKgR,eAAgB,CACvBhR,KAAKgR,iBACLhR,KAAK2B,qBAAuB,K,CAE9B,GAAI3B,KAAKyB,kBAAmB,CAC1BzB,KAAKiR,cACLjR,KAAKyB,kBAAoB,K,CAE3B,GAAIzB,KAAKwB,2BAA4B,CACnCxB,KAAKkR,qBACLlR,KAAKwB,2BAA6B,K,CAEpC,GAAIxB,KAAKkC,2BAA4B,CACnClC,KAAKyS,yBACLzS,KAAKkC,2BAA6B,K,CAEpC,GAAIlC,KAAKwC,sBAAuB,CAC9BxC,KAAKyQ,kBACLzQ,KAAKwC,sBAAwB,K,CAE/B,GAAIxC,KAAKuC,sBAAuB,CAC9BvC,KAAK0S,kBACL1S,KAAKuC,sBAAwB,K,CAE/B,GAAIvC,KAAKgC,wBAAyB,CAChChC,KAAKmR,mBACLnR,KAAKgC,wBAA0B,K,CAEjC,GAAIhC,KAAKiC,mBAAoB,CAC3BjC,KAAKoR,eACLpR,KAAKiC,mBAAqB,K,CAE5B,GAAIjC,KAAKqC,gCAAiC,CACxCrC,KAAKuR,0BACLvR,KAAKqC,gCAAkC,K,CAEzC,GAAIrC,KAAKsC,sBAAuB,CAC9BtC,KAAKqR,kBACLrR,KAAKsC,sBAAwB,K,CAE/B,GAAItC,KAAKoC,wBAAyB,CAChCpC,KAAKsR,oBACLtR,KAAKoC,wBAA0B,K,CAEjC,GAAIpC,KAAKI,wBAAyB,CAChCJ,KAAKwR,kBACLxR,KAAKI,wBAA0B,K,CAEjC,GAAIJ,KAAK4D,iCAAkC,CACzC5D,KAAKyR,6BACLzR,KAAK4D,iCAAmC,K,CAE1C,GAAI5D,KAAKiB,kBAAmB,CAC1BjB,KAAK0R,YACL1R,KAAKiB,kBAAoB,K,CAE3B,GAAIjB,KAAK2D,4BAA6B,CACpC3D,KAAK2R,wBACL3R,KAAK2D,4BAA8B,K,CAErC,GAAI3D,KAAKkB,kBAAmB,CAC1BlB,KAAK4R,YACL5R,KAAKkB,kBAAoB,K,CAE3B,GAAIlB,KAAK0D,4BAA6B,CACpC1D,KAAK6R,wBACL7R,KAAK0D,4BAA8B,K,CAErC,GAAI1D,KAAKmB,sBAAuB,CAC9BnB,KAAK8R,gBACL9R,KAAKmB,sBAAwB,K,CAE/B,GAAInB,KAAKoB,sBAAuB,CAC9BpB,KAAK+R,gBACL/R,KAAKoB,sBAAwB,K,CAE/BpB,KAAKgS,kBACLlE,EAAQ,uBAAuB,IAC9BuE,MAAK,IAAMrS,KAAK2S,aAAa/E,KAAK,CAAEJ,QAASxN,KAAKwN,W,CAGvD,+BAAAsB,GACE,MAAM8D,EAAkBzW,IACxB,MAAM0W,EAAiBD,EAAgBE,QAAQpG,SAC/C,MAAMqG,EAAiBH,EAAgBE,QAAQE,kBAAkBH,GACjE,MAAMI,EAAgBL,EAAgBM,QAAQC,aAC9C,GAAInT,KAAKE,6BAA+BF,KAAKtG,aAAa0Z,eAAgB,CACxEpT,KAAKE,2BAA6B,MAClCV,GAA0BQ,KAAKwN,QAAO6F,OAAAC,OAAAD,OAAAC,OAAA,GACjCtT,KAAKtG,cAAY,CACpBgT,SAAUqG,EACVlG,cAAeoG,I,EAKrB,gCAAApE,GACE,GAAI7O,KAAKC,8BAAgCD,KAAKjG,cAAcwZ,kBAAmB,CAC7EvT,KAAKC,4BAA8B,MACnCV,GACES,KAAKwN,QAAO6F,OAAAC,OAAA,GACPtT,KAAKjG,eACV,CACEgC,YAAaiE,KAAKjE,YAClByX,KAAMxT,KAAKwT,KACX/F,SAAUzN,KAAKyN,SACfgG,QAAS,CACP1a,UAAWiH,KAAKjH,UAChB2a,aAAc1T,KAAKnE,eAAiB8X,UAAY3T,KAAK4T,WAAWhG,O,EAO1E,aAAAU,GACEtO,KAAKvG,eAAiBuG,KAAKvG,UAAY,SAAWoF,GAAWmB,KAAKvG,SAAWuG,KAAKvG,QAElFuG,KAAK6T,YAAc7T,KAAK9G,OAAS8G,KAAK5G,OAAOC,IAAM2G,KAAK5G,OAAOE,OAC/D0G,KAAK8T,WAAa9T,KAAK7G,MAAQ6G,KAAK5G,OAAOI,KAAOwG,KAAK5G,OAAOG,MAE9DyG,KAAK+T,kBAAoB/T,KAAK6T,YAAc7T,KAAKvG,QAAQJ,IAAM2G,KAAKvG,QAAQH,OAC5E0G,KAAKgU,iBAAmBhU,KAAK8T,WAAa9T,KAAKvG,QAAQD,KAAOwG,KAAKvG,QAAQF,K,CAG7E,uBAAAmV,GACE1O,KAAKqF,qBACHrF,KAAK4H,iBAAmB5H,KAAK4H,gBAAgB3P,OACzC+H,KAAK4H,gBACL5H,KAAKnG,cACL,CAACmG,KAAKnG,eACN,CAACmG,KAAKrG,UAAWqG,KAAKpG,WAE5BoG,KAAKiU,iBACHjU,KAAKqF,qBAAqBpN,SAAW,GAAK+H,KAAKqF,qBAAqB,KAAOrF,KAAKnG,a,CAGpF,yBAAA8U,GACE3O,KAAKkU,mBAAqBlU,KAAKxE,UAAU8N,cACrCtJ,KAAKxE,UAAU8N,cACftJ,KAAKlG,WAAWqM,aAChBnG,KAAKlG,WAAWqM,aAChBnG,KAAKpG,UAEToG,KAAKmU,iBAAmBnU,KAAKxE,UAAU8N,cACnCtJ,KAAKxE,UAAUiO,OACfzJ,KAAKlG,WAAWqM,aAChBnG,KAAKlG,WAAW2P,OAChBzJ,KAAK5F,MAAMqP,M,CAGjB,kBAAA2K,GAGE,MAAMC,EAA4B,GAClCrW,GAAesW,gBAAgBxP,SAAQyP,IACrC,GAAIvU,KAAKuU,IAAa1c,EAAImI,KAAKwT,MAAMrO,GAAKA,EAAEnF,KAAKuU,QAAgBZ,UAAW,CAC1EU,EAA0BrP,KAAKuP,E,KAGnC,MAAMC,EAAmBnB,OAAAC,OAAAD,OAAAC,OAAA,GAAQtV,IAAc,CAAEsW,gBAAiBD,IAClE,OAAOlV,GAAca,KAAMwU,EAAqB,e,CAGlD,YAAA5F,GAEE,MAAM6F,EAAOzU,KAAKoU,qBAClBpU,KAAK0U,UAAY5V,GAAckB,KAAKwT,KAAMiB,GAC1CzU,KAAK2U,aAAetB,OAAOoB,KAAKA,E,CAGlC,iBAAAG,GACE,OAAOvY,EAAwB2D,KAAKtG,a,CAGtC,qBAAAyU,GACE/R,EAAmB4D,KAAKtG,a,CAG1B,WAAA2U,GACErO,KAAKqE,KAAOrE,KAAKnG,cACbwK,IACGwQ,KAAI1P,GAAKA,EAAEnF,KAAKnG,iBAChBib,QAAQ9U,KAAKwT,MAChB,CAAC,CAAEqB,IAAK,GAAIE,OAAQ/U,KAAKwT,M,CAG/B,mBAAAzD,GACElQ,GAAY,CACVoS,KAAMjS,KAAKgV,UACXhc,SAAUgH,KAAKhH,U,CA2CnB,aAAAyV,GACE,MAAMwG,EAAYpd,EAAImI,KAAKwT,MAAMrO,GAAKkB,WAAWlB,EAAEnF,KAAKrG,cACxD,MAAMub,EAAYtd,EAAIoI,KAAKwT,MAAMrO,GAAKkB,WAAWlB,EAAEnF,KAAKrG,cACxD,MAAMwb,EAAYtd,EAAImI,KAAKwT,MAAMrO,GAAKkB,WAAWlB,EAAEnF,KAAKpG,cACxD,MAAMwb,EAAYxd,EAAIoI,KAAKwT,MAAMrO,GAAKkB,WAAWlB,EAAEnF,KAAKpG,cACxD,MAAMyb,EAAYxd,EAAImI,KAAKwT,MAAMrO,GAAKkB,WAAWlB,EAAEnF,KAAKlG,WAAWqM,iBACnE,MAAMmP,EAAY1d,EAAIoI,KAAKwT,MAAMrO,GAAKkB,WAAWlB,EAAEnF,KAAKlG,WAAWqM,iBAEnEnG,KAAKuV,KAAOvV,KAAKwV,oBAAsB,EAAI,EAAIxV,KAAKwV,mBAAqBP,GAAaC,EAAYD,GAAa,GAC/GjV,KAAKyV,KAAOzV,KAAK0V,oBAAsB,EAAI,EAAI1V,KAAK0V,mBAAqBR,GAAaA,EAAYD,GAAa,GAC/GjV,KAAK2V,KAAO3V,KAAK4V,oBAAsB,EAAI,EAAI5V,KAAK4V,mBAAqBT,GAAaC,EAAYD,GAAa,GAC/GnV,KAAK6V,KAAO7V,KAAK8V,oBAAsB,EAAI,EAAI9V,KAAK8V,mBAAqBV,GAAaA,EAAYD,GAAa,GAM/G,MAAMY,EAAgB/V,KAAKlG,WAAWkc,kBAAoBhW,KAAKlG,WAAWkc,mBAAqB,EAC/F,MAAMC,EAAgBjW,KAAKlG,WAAWoc,kBAAoBlW,KAAKlG,WAAWoc,mBAAqB,EAC/FlW,KAAKgG,QACH+P,GAAiB/V,KAAKlG,WAAWkc,iBAAmBX,EAAYrV,KAAKlG,WAAWkc,iBAAmBX,EACrGrV,KAAKiG,QACHgQ,GAAiBjW,KAAKlG,WAAWoc,iBAAmBZ,EAAYtV,KAAKlG,WAAWoc,iBAAmBZ,EAErG,MAAMb,EAAO,GACbzU,KAAKqE,KAAK8R,KAAIC,IACZ3B,EAAKzP,KAAKoR,EAAMvB,IAAI,IAGtB,GAAI7U,KAAKyV,OAASzV,KAAKuV,KAAM,CAC3BvV,KAAKyV,KAAO9d,KAAKC,IAAI,EAAGoI,KAAKyV,MAC7BzV,KAAKuV,KAAO5d,KAAKE,IAAI,EAAGmI,KAAKuV,K,CAG/B,GAAIvV,KAAK6V,OAAS7V,KAAK2V,KAAM,CAC3B3V,KAAK6V,KAAOle,KAAKC,IAAI,EAAGoI,KAAK6V,MAC7B7V,KAAK2V,KAAOhe,KAAKE,IAAI,EAAGmI,KAAK2V,K,CAG/B,GAAI3V,KAAKiG,UAAYjG,KAAKgG,QAAS,CACjChG,KAAKiG,QAAUtO,KAAKC,IAAI,EAAGoI,KAAKiG,SAChCjG,KAAKgG,QAAUrO,KAAKE,IAAI,EAAGmI,KAAKgG,Q,CAGlChG,KAAKvI,EAAI4e,IACNve,OAAO,CAACkI,KAAKuV,KAAMvV,KAAKyV,OACxBa,MAAM,CAAC,EAAGtW,KAAKgU,mBAElBhU,KAAKuW,EAAIF,IACNve,OAAO,CAACkI,KAAK2V,KAAM3V,KAAK6V,OACxBS,MAAM,CAACtW,KAAK+T,kBAAmB,IAKlC/T,KAAKsG,KAAOkQ,IACT1e,OAAO,CAACkI,KAAKgG,QAAShG,KAAKiG,UAC3BqQ,MAAM,CACLtW,KAAKlG,WAAW2c,iBAAmBzW,KAAKlG,WAAW2c,kBAAoB,EACnEzW,KAAKlG,WAAW2c,gBAChB3d,EAAyB6B,UAC7BqF,KAAKlG,WAAW4c,iBAAmB1W,KAAKlG,WAAW4c,kBAAoB,EACnE1W,KAAKlG,WAAW4c,iBACf1W,KAAKgU,iBAAmBhU,KAAK+T,mBAAqB,IAAM,KAGjE/T,KAAK2W,OAASC,IACX9e,OAAO2c,GACP6B,MAAMtW,KAAKlF,YAEdkF,KAAKuG,UAAY,GACjBkO,EAAK3P,SAAQ+P,IACX,IAAIgC,EAAW,GACf,IAAIC,EAAQ1X,GAAQY,KAAK2W,OAAO9B,IAAMkC,QACtCD,EAAME,MAAM,UAAUlS,SAAQmS,IAC5B,GAAIA,EAAED,MAAM,KAAK/e,SAAW,EAAG,CAC7B4e,EAAS7R,KAAKiS,EAAED,MAAM,K,KAG1B,IAAIE,EAAK,GACT,IAAIC,EAAK,GACTN,EAAS/R,SAAQ,CAACmS,EAAGG,KACnB,GAAIP,EAASO,EAAI,GAAI,CACnBF,EAAGlS,KAAKqB,WAAW4Q,EAAE,IAAM5Q,WAAWwQ,EAASO,EAAI,GAAG,KACtDD,EAAGnS,KAAKqB,WAAW4Q,EAAE,IAAM5Q,WAAWwQ,EAASO,EAAI,GAAG,I,KACjD,CACLF,EAAGlS,KAAKqB,WAAW4Q,EAAE,IAAM5Q,WAAWwQ,EAAS,GAAG,KAClDM,EAAGnS,KAAKqB,WAAW4Q,EAAE,IAAM5Q,WAAWwQ,EAAS,GAAG,I,KAGtD,IAAIQ,GAAKH,EAAGI,QAAO,CAACC,EAAGC,IAAMD,EAAIC,IAAKL,EAAGG,QAAO,CAACC,EAAGC,IAAMD,EAAIC,KAAM,EACpExX,KAAKuG,UAAUsO,GAAO,CACpBiC,MAAO9W,KAAK2W,OAAO9B,GACnB4C,KAAMJ,EACNK,SAAU/f,KAAKggB,GAAKN,EACrB,IAGHrX,KAAKyF,SAAWmR,IACb9e,OAAO2c,GACP6B,MAAMtW,KAAKmE,WAEd,MAAMyT,EAAa,IAAI5X,KAAKmE,WAE5B,GAAInE,KAAK2E,gBAAgBF,MAAO,CAC9BmT,EAAW5S,KAAK1F,GAAWU,KAAK2E,gBAAgBF,QAAUzE,KAAK2E,gBAAgBF,M,CAEjF,GAAIzE,KAAK6E,gBAAgBJ,MAAO,CAC9BmT,EAAW5S,KAAK1F,GAAWU,KAAK6E,gBAAgBJ,QAAUzE,KAAK6E,gBAAgBJ,M,CAEjFzE,KAAK0F,UAAYkR,IACd9e,OAAO8f,GACPtB,MAAMtW,KAAKsE,a,CAGhB,kBAAAkK,GACExO,KAAK6E,gBAAkB7E,KAAK5E,WACxB,CACEqJ,MAAOzE,KAAK5E,WAAWqJ,MACvB2B,YAAapG,KAAK5E,WAAWgL,aAAe,GAE9C,CACEA,YAAa,E,CAIrB,kBAAAmI,GACEvO,KAAK2E,gBAAkB3E,KAAK1E,WACxB,CACEmJ,MAAOzE,KAAK1E,WAAWmJ,MACvB2B,YAAapG,KAAK1E,WAAW8K,aAAe,GAE9C,CACEA,YAAa,E,CAIrB,UAAA0J,GACE9P,KAAK6X,WAAarb,EAAuB,CACvCyV,KAAMjS,KAAK8X,IAAI5F,OACfhE,GAAIlO,KAAKwN,QACT/I,MAAO,YAETzE,KAAK+X,QAAU/X,KAAKjG,cAAc2K,YAC9BlI,EAAuB,CACrByV,KAAMjS,KAAK8X,IAAI5F,OACfhE,GAAIlO,KAAKwN,QACT/I,MAAO,UACPuT,mBAAoB,GAAKhY,KAAKrF,WAAa,KAE7C,I,CAGN,cAAAqW,GACEhR,KAAKiY,aAAaxR,KAAK,SAAUzG,KAAK6X,YACtC7X,KAAKkY,aAAazR,KAAK,UAAU,CAAC1O,EAAG6N,EAAGC,KAAQW,EAAOX,EAAED,IAAIuS,QAAQ,UAAYnY,KAAK+X,OAAS,M,CAwBjG,iBAAAK,GACEpY,KAAKkY,aAAazR,KAAK,SAAUzG,KAAK2F,e,CAgExC,kBAAAsJ,GACEjP,KAAK8X,IAAMtR,EAAOxG,KAAKiO,gBACpBzH,OAAO,kCACP6R,OAAO,OACP5R,KAAK,QAASzG,KAAK7G,OACnBsN,KAAK,SAAUzG,KAAK9G,QACpBuN,KAAK,UAAW,OAASzG,KAAK7G,MAAQ,IAAM6G,KAAK9G,QAEpD8G,KAAKiS,KAAOjS,KAAK8X,IAAIO,OAAO,KAAK5R,KAAK,KAAM,+BAAiCzG,KAAKwN,SAClFxN,KAAKsY,MAAQtY,KAAKiS,KAAKoG,OAAO,KAAK5R,KAAK,KAAM,gCAAkCzG,KAAKwN,SACrFxN,KAAKuY,MAAQvY,KAAKsY,MAAMD,OAAO,KAAK5R,KAAK,QAAS,sBAClDzG,KAAKmS,KAAOnS,KAAKsY,MACdD,OAAO,KACP5R,KAAK,QAAS,qBACdA,KAAK,YAAa,WAClB+R,MAAM,YAAa,WACtBxY,KAAKyY,QAAUzY,KAAKsY,MAAMD,OAAO,KAAK5R,KAAK,QAAS,0BACpDzG,KAAK0Y,OAAS1Y,KAAKsY,MAAMD,OAAO,KAAK5R,KAAK,QAAS,2BACnDzG,KAAK2Y,QAAUnS,EAAOxG,KAAKiO,gBACxBzH,OAAO,mBACP6R,OAAO,OACVrY,KAAKgV,UAAYxO,EAAOxG,KAAKiO,gBAAgBzH,OAAO,sBACpDxG,KAAK4Y,SAAWpS,EAAOxG,KAAKiO,gBAAgBzH,OAAO,oBACnDxG,KAAK6Y,YAAc7Y,KAAKsY,MAAMD,OAAO,KAAK5R,KAAK,QAAS,+B,CAG1D,mBAAAyJ,GACE,MAAM4I,EAAoB9Y,KAAKmS,KAAK4G,UAAU,uBAAuBvF,KAAKxT,KAAKqE,MAAMc,GAAKA,EAAE0P,MAE5F7U,KAAKgZ,mBAAqBF,EAAkBG,QAAQZ,OAAO,KAC3DrY,KAAKkZ,kBAAoBJ,EAAkBK,OAC3CnZ,KAAKoZ,oBAAsBN,EAAkBO,MAAMrZ,KAAKgZ,oBAExDhZ,KAAKsZ,SAAWtZ,KAAKkZ,kBAAkBH,UAAU,eAAezS,OAChEtG,KAAKsZ,UAAYtZ,KAAKkZ,kBAAkB5S,OAExC,MAAMiT,EAAwBvZ,KAAKoZ,oBAAoBL,UAAU,eAAevF,MAAKrO,GAAKA,EAAE4P,SAE5F/U,KAAKwZ,YAAcD,EAAsBN,QAAQZ,OAAO,QACxDrY,KAAKyZ,WAAaF,EAAsBJ,OACxCnZ,KAAKkY,aAAeqB,EAAsBF,MAAMrZ,KAAKwZ,aAErD,MAAME,EAAyB1Z,KAAK0Y,OAAOK,UAAU,2BAA2BvF,KAAKxT,KAAKqE,MAAMc,GAAKA,EAAE0P,MAEvG7U,KAAK2Z,oBAAsBD,EAAuBT,QAAQZ,OAAO,KACjErY,KAAK4Z,mBAAqBF,EAAuBP,OACjDnZ,KAAK6Z,oBAAsBH,EAAuBL,MAAMrZ,KAAK2Z,qBAE7D,MAAMG,EAAoB9Z,KAAK6Z,oBAAoBd,UAAU,QAAQvF,MAAKrO,GAAKA,EAAE4P,SACjF/U,KAAK+Z,YAAcD,EAAkBb,QAAQZ,OAAO,QACpDrY,KAAKga,WAAaF,EAAkBX,OACpCnZ,KAAKiY,aAAe6B,EAAkBT,MAAMrZ,KAAK+Z,Y,CAGnD,oBAAA5J,GACE,GAAInQ,KAAKia,SAAU,CACjBzT,EAAOxG,KAAKiO,gBACTzH,OAAO,kCACPC,KAAK,cAAe,mBACvBD,EAAOxG,KAAKiO,gBACTzH,OAAO,uBACPC,KAAK,cAAe,cACvBD,EAAOxG,KAAKiO,gBACTzH,OAAO,sBACPC,KAAK,cAAe,aACvBzG,KAAK8X,IAAIrR,KAAK,cAAe,YAC7BzG,KAAKiS,KAAKxL,KAAK,cAAe,oBAC9BzG,KAAKsY,MAAM7R,KAAK,cAAe,qBAC/BzG,KAAK2Y,QAAQlS,KAAK,cAAe,oBACjCzG,KAAK4Y,SAASnS,KAAK,cAAe,qBAClCzG,KAAKuY,MAAM9R,KAAK,cAAe,sBAE/BzG,KAAKyY,QAAQhS,KAAK,cAAe,0BACjCzG,KAAK6Y,YAAYpS,KAAK,cAAe,wBAErCzG,KAAKmS,KAAK1L,KAAK,cAAe,0BAC9BzG,KAAKoZ,oBACF3S,KAAK,cAAe,uBACpBA,KAAK,WAAWtB,GAAK,iBAAiBA,EAAE0P,QAC3C7U,KAAKkY,aACFzR,KAAK,cAAe,UACpBA,KAAK,WAAWtB,GAAK,UAAUA,EAAEnF,KAAKnG,kBAAkBsL,EAAEnF,KAAKrG,cAAcwL,EAAEnF,KAAKpG,eAEvFoG,KAAK0Y,OAAOjS,KAAK,cAAe,6BAChCzG,KAAK6Z,oBACFpT,KAAK,cAAe,0BACpBA,KAAK,WAAWtB,GAAK,gBAAgBA,EAAE0P,QAC1C7U,KAAKiY,aACFxR,KAAK,cAAe,aACpBA,KAAK,WAAWtB,GAAK,SAASA,EAAEnF,KAAKnG,kBAAkBsL,EAAEnF,KAAKrG,cAAcwL,EAAEnF,KAAKpG,eAEtFoG,KAAK8X,IAAItR,OAAO,QAAQC,KAAK,cAAe,e,KACvC,CACLD,EAAOxG,KAAKiO,gBACTzH,OAAO,kCACPC,KAAK,cAAe,MACvBD,EAAOxG,KAAKiO,gBACTzH,OAAO,uBACPC,KAAK,cAAe,MACvBD,EAAOxG,KAAKiO,gBACTzH,OAAO,sBACPC,KAAK,cAAe,MACvBzG,KAAK8X,IAAIrR,KAAK,cAAe,MAC7BzG,KAAKiS,KAAKxL,KAAK,cAAe,MAC9BzG,KAAKsY,MAAM7R,KAAK,cAAe,MAC/BzG,KAAK2Y,QAAQlS,KAAK,cAAe,MACjCzG,KAAK4Y,SAASnS,KAAK,cAAe,MAClCzG,KAAKuY,MAAM9R,KAAK,cAAe,MAE/BzG,KAAKyY,QAAQhS,KAAK,cAAe,MACjCzG,KAAK6Y,YAAYpS,KAAK,cAAe,MAErCzG,KAAKmS,KAAK1L,KAAK,cAAe,MAC9BzG,KAAKoZ,oBAAoB3S,KAAK,cAAe,MAAMA,KAAK,UAAW,MACnEzG,KAAKkY,aAAazR,KAAK,cAAe,MAAMA,KAAK,UAAW,MAE5DzG,KAAK0Y,OAAOjS,KAAK,cAAe,MAChCzG,KAAK6Z,oBAAoBpT,KAAK,cAAe,MAAMA,KAAK,UAAW,MACnEzG,KAAKiY,aAAaxR,KAAK,cAAe,MAAMA,KAAK,UAAW,MAE5DzG,KAAK8X,IAAItR,OAAO,QAAQC,KAAK,cAAe,K,EAIhD,gBAAA2J,GACEpQ,KAAKgZ,mBAAmBkB,YACxBla,KAAKwZ,YAAYU,YAEjBla,KAAKgZ,mBACFvS,KAAK,QAAS,sBACdA,KAAK,UAAWzG,KAAKnE,eAAiBmE,KAAK9E,OAAS,MACpDif,GACC,YACAna,KAAKiU,mBAAqBjU,KAAKnE,eAC3B,CAACsJ,EAAGS,EAAGC,IAAM7F,KAAKoa,eAAejV,EAAE4P,OAAS5P,EAAE4P,OAAO,GAAK5P,EAAGU,EAAED,GAAI,MACnE,MAELuU,GAAG,WAAYna,KAAKiU,mBAAqBjU,KAAKnE,eAAiB,IAAMmE,KAAKqa,oBAAsB,MAChGC,MAAK,CAACviB,EAAG6N,EAAGC,KACXnJ,EAAwBmJ,EAAED,GAAG,IAGjC5F,KAAKwZ,YACF/S,KAAK,QAAS,uBACd+R,MAAM,iBAAkB,YACxB/R,KAAK,SAAUzG,KAAK+X,QACpBuC,MAAK,CAACC,EAAI3U,EAAGC,KACZnJ,EAAwBmJ,EAAED,GAAG,IAE9BuU,GAAG,SAAS,CAAChV,EAAGS,EAAGC,IAAM7F,KAAKwa,eAAerV,EAAGU,EAAED,MAClDuU,GAAG,aAAa,CAAChV,EAAGS,EAAGC,IAAM7F,KAAKoa,eAAejV,EAAGU,EAAED,MACtDuU,GAAG,YAAY,IAAMna,KAAKqa,sBAC1B5T,KAAK,UAAW,GAChBA,KAAK,SAAUzG,KAAK2F,gBACpBc,KAAK,KAAKtB,GACTnF,KAAKnG,cAAgBuF,GAAQY,KAAK2W,OAAOxR,EAAEnF,KAAKnG,iBAAiBkd,QAAU3X,GAAQY,KAAKlF,WAAW,IAAIic,UAExGtQ,KACC,aACAtB,GAAK,aAAenF,KAAKvI,EAAE0N,EAAEnF,KAAKrG,YAAc,IAAMqG,KAAKuW,EAAEpR,EAAEnF,KAAKpG,YAAc,eAEtFoG,KAAKoZ,oBAAoBqB,QACzBza,KAAKkY,aAAauC,O,CAOpB,eAAApK,GACErQ,KAAKkZ,kBAAkBgB,YACvBla,KAAKyZ,WAAWS,YAEhBla,KAAKkZ,kBACFwB,WAAW,QACX3M,SAAS/N,KAAK+N,UACd4M,KAAKC,GAER5a,KAAKkZ,kBACFH,UAAU,eACVtS,KAAK,SAAU,MACfiU,WAAW,QACX3M,SAAS/N,KAAK+N,UACd4M,KAAKC,GACLnU,KAAK,UAAW,GAChBA,KAAK,aAAa,CAAC1O,EAAG6N,EAAGC,KACxB,MAAM1O,EAAYqP,EAAOX,EAAED,IAAIa,KAAK,aACpC,MAAMoU,EAAQ1jB,EAAU2jB,QAAQ,UAChC,OAAO3jB,EAAU4jB,UAAU,EAAGF,GAAS,UAAU,IAElDG,KAAK3b,IAAkB,KACtBW,KAAKkZ,kBAAkB+B,QAAQ,IAGnCjb,KAAKyZ,WACFhT,KAAK,SAAU,MACfiU,WAAW,QACX3M,SAAS/N,KAAK+N,UACd4M,KAAKC,GACLnU,KAAK,UAAW,GAChBA,KAAK,aAAa,CAAC1O,EAAG6N,EAAGC,KACxB,MAAM1O,EAAYqP,EAAOX,EAAED,IAAIa,KAAK,aACpC,MAAMoU,EAAQ1jB,EAAU2jB,QAAQ,UAChC,OAAO3jB,EAAU4jB,UAAU,EAAGF,GAAS,UAAU,IAGrD7a,KAAKkY,aACFwC,WAAW,0BACX3M,SAAS/N,KAAK+N,UACd4M,KAAKC,GACLI,KAAK3b,IAAkB,KAEtB,MAAM6b,EAAgBtd,EAAiBoC,KAAKsY,MAAMpG,QAElDlS,KAAKyZ,WAAWwB,SAChBjb,KAAKkZ,kBAAkB+B,SAEvBjb,KAAK2Q,6BAEL3Q,KAAKoS,0BAELpS,KAAK6Q,wBAELlT,EAAkB,CAChBwd,YAAanb,KAAKsY,MAAMpG,OACxBgJ,iBAEA,G,CAIR,eAAAxK,GACE1Q,KAAKkY,aACFoC,MAAK,CAACnV,EAAGS,EAAGC,KACX,MAAMuV,EAAK5U,EAAOX,EAAED,IACpB,MAAMyV,GAAWD,EAAG3U,KAAK,YAAczG,KAAKvI,EAAE0N,EAAEnF,KAAKrG,YACrD,MAAM2hB,GAAWF,EAAG3U,KAAK,YAAczG,KAAKuW,EAAEpR,EAAEnF,KAAKpG,YACrD,MAAM2hB,GACHH,EAAG3U,KAAK,YACPzG,KAAKsG,KACHnB,EAAEnF,KAAKlG,WAAWqM,cAChBnG,KAAKuG,UAAUvG,KAAKnG,cAAgBsL,EAAEnF,KAAKnG,eAAiB,IAAI,cAEtEmG,KAAKrF,WACL,EACF,GAAI0gB,GAAWC,GAAWC,EAAS,CACjCH,EAAG3U,KAAK,SAAU,MAClB2U,EAAGjD,QAAQ,SAAU,K,KAGxB1R,KAAK,UAAUtB,GAEZnF,KAAKsG,KACHnB,EAAEnF,KAAKlG,WAAWqM,cAChBnG,KAAKuG,UAAUvG,KAAKnG,cAAgBsL,EAAEnF,KAAKnG,eAAiB,IAAI,cAEpEmG,KAAKrF,WACL,IAGH8L,KAAK,UAAUtB,GAAKnF,KAAKvI,EAAE0N,EAAEnF,KAAKrG,cAClC8M,KAAK,UAAUtB,GAAKnF,KAAKuW,EAAEpR,EAAEnF,KAAKpG,cAClC6M,KAAK,mBAAoBzG,KAAKvG,QAAQD,KAAOwG,KAAK5G,OAAOI,MACzDiN,KAAK,mBAAoBzG,KAAKvG,QAAQJ,IAAM2G,KAAK5G,OAAOC,KACxDoN,KAAK,UACJtB,GACInF,KAAKnG,cAAgBuF,GAAQY,KAAK2W,OAAOxR,EAAEnF,KAAKnG,iBAAiB2hB,KAAOpc,GAAQY,KAAKlF,WAAW,IAAI0gB,OACzGd,WAAW,YACX3M,SAAS/N,KAAK+N,UACd4M,KAAKC,GACLnU,KAAK,KAAKtB,GACTnF,KAAKnG,cAAgBuF,GAAQY,KAAK2W,OAAOxR,EAAEnF,KAAKnG,iBAAiBkd,QAAU3X,GAAQY,KAAKlF,WAAW,IAAIic,UAExGtQ,KACC,aACAtB,GACE,aACAnF,KAAKvI,EAAE0N,EAAEnF,KAAKrG,YACd,IACAqG,KAAKuW,EAAEpR,EAAEnF,KAAKpG,YACd,YACCoG,KAAKsG,KACJnB,EAAEnF,KAAKlG,WAAWqM,cAChBnG,KAAKuG,UAAUvG,KAAKnG,cAAgBsL,EAAEnF,KAAKnG,eAAiB,IAAI,cAElEmG,KAAKrF,WACL,GACF,MAEHqgB,KAAK3b,IAAkB,KACtBoc,YAAW,KACTzb,KAAKoZ,oBACFL,UAAU,WACVZ,QAAQ,SAAU,OAClB1R,KAAK,SAAUzG,KAAK+X,OAAO,GAM7B,GAGHpa,EAAkB,CAChBwd,YAAanb,KAAKsY,MAAMpG,SAI1BlS,KAAK0b,mBAAmB9N,KAAK,CAAEJ,QAASxN,KAAKwN,SAAU,G,CAI7D,YAAAgF,GACExS,KAAKkY,aACFwC,WAAW,UACX3M,SAAS/N,KAAK+N,UACd4M,KAAKC,GACLnU,KACC,aACAtB,GACE,aACAnF,KAAKvI,EAAE0N,EAAEnF,KAAKrG,YACd,IACAqG,KAAKuW,EAAEpR,EAAEnF,KAAKpG,YACd,YACCoG,KAAKsG,KACJnB,EAAEnF,KAAKlG,WAAWqM,cAChBnG,KAAKuG,UAAUvG,KAAKnG,cAAgBsL,EAAEnF,KAAKnG,eAAiB,IAAI,cAElEmG,KAAKrF,WACL,GACF,MAEHqgB,KAAK3b,IAAkB,KAEtB1B,EAAkB,CAChBwd,YAAanb,KAAKsY,MAAMpG,QACxB,G,CAIR,gBAAAf,GACEnR,KAAKkY,aAAaC,QAAQ,aAAa,CAAChT,EAAGS,EAAGC,KAC5C,IAAI8V,EAAW1d,GAAiBkH,EAAG,KAAM,MAAO,GAAInF,KAAKhE,eAAgBgE,KAAKqF,sBAC9EsW,EAAW3b,KAAKhE,gBAAkBgE,KAAKhE,eAAe/D,OAAS0jB,EAAW,MAC1E,MAAMC,EAAa5b,KAAKjG,cAAcuS,qBACtCzO,EAAiCgI,EAAED,GAAI+V,EAAUC,GACjD,OAAOD,CAAQ,G,CAInB,YAAAvK,GACEpR,KAAKoZ,oBAAoB3S,KAAK,UAAWzG,KAAKnE,eAAiBmE,KAAK9E,OAAS,MAC7E8E,KAAK6Z,oBAAoBpT,KAAK,UAAWzG,KAAKnE,gBAAkBmE,KAAKxE,UAAU2N,QAAUnJ,KAAK9E,OAAS,K,CAIzG,SAAA2U,GACE,MAAMgM,EAAYnc,GAAoB,CACpCoc,UAAW9b,KAAK8X,IAChB/J,SAAU/N,KAAK+N,SACfgO,UAAW,aACXC,OAAQpB,IAGViB,EACGpV,KAAK,QAASzG,KAAK7G,OACnBsN,KAAK,SAAUzG,KAAK9G,QACpBuN,KAAK,UAAW,OAASzG,KAAK7G,MAAQ,IAAM6G,KAAK9G,QAEpD,MAAM+iB,EAAavc,GAAoB,CACrCoc,UAAW9b,KAAKiS,KAChBlE,SAAU/N,KAAK+N,SACfgO,UAAW,aACXC,OAAQpB,IAGVqB,EAAWxV,KAAK,YAAa,aAAazG,KAAK5G,OAAOI,SAASwG,KAAK5G,OAAOC,QAE3E,MAAM6iB,EAAcxc,GAAoB,CACtCoc,UAAW9b,KAAKsY,MAChBvK,SAAU/N,KAAK+N,SACfgO,UAAW,aACXC,OAAQpB,IAGVsB,EAAYzV,KAAK,YAAa,aAAazG,KAAKvG,QAAQD,SAASwG,KAAKvG,QAAQJ,QAE9EyE,GAAiCkC,KAAKwN,QAASxN,KAAK7G,M,CAGtD,SAAAuY,GACE,MAAMyK,EACJnc,KAAK7F,MAAMiiB,OAASpc,KAAK7F,MAAMiiB,QAAU,GACrCpc,KAAK7F,MAAMiiB,MACXpc,KAAKqc,cAAgBrc,KAAKqc,aAAarc,KAAKrG,WAC5CqG,KAAKqc,aAAarc,KAAKrG,WACvBqG,KAAK7F,MAAMiiB,MAEjB/d,GAAS,CACP4T,KAAMjS,KAAKsY,MACXpf,OAAQ8G,KAAK+T,kBACb5a,MAAO6G,KAAKgU,iBACZsI,UAAWtc,KAAKvI,EAChB+B,KAAM,MACNiQ,OAAQzJ,KAAK7F,MAAMsP,OACnBvB,aAAclI,KAAK7F,MAAM+N,aACzBkU,MAAOD,EACP1iB,QAASuG,KAAKvG,QACd8iB,MAAOvc,KAAK7F,MAAMgP,QAClB4E,SAAU/N,KAAK+N,U,CAInB,SAAA6D,GACE,MAAMuK,EACJnc,KAAK5F,MAAMgiB,OAASpc,KAAK5F,MAAMgiB,QAAU,GACrCpc,KAAK5F,MAAMgiB,MACXpc,KAAKqc,cAAgBrc,KAAKqc,aAAarc,KAAKpG,WAC5CoG,KAAKqc,aAAarc,KAAKpG,WACvBoG,KAAK5F,MAAMgiB,MAEjB/d,GAAS,CACP4T,KAAMjS,KAAKsY,MACXpf,OAAQ8G,KAAK+T,kBACb5a,MAAO6G,KAAKgU,iBACZsI,UAAWtc,KAAKuW,EAChB/c,KAAM,KACNiQ,OAAQzJ,KAAK5F,MAAMqP,OACnBvB,aAAclI,KAAK5F,MAAM8N,aACzBkU,MAAOD,EACP1iB,QAASuG,KAAKvG,QACd8iB,MAAOvc,KAAK5F,MAAM+O,QAClB4E,SAAU/N,KAAK+N,U,CAInB,qBAAA4D,GACE,MAAMwK,EACJnc,KAAK7F,MAAMiiB,OAASpc,KAAK7F,MAAMiiB,QAAU,GACrCpc,KAAK7F,MAAMiiB,MACXpc,KAAKqc,cAAgBrc,KAAKqc,aAAarc,KAAKrG,WAC5CqG,KAAKqc,aAAarc,KAAKrG,WACvBqG,KAAK7F,MAAMiiB,MAEjB7e,EAAe,CACbif,QAASxc,KAAKiO,eACdwO,SAAUzc,KAAK7F,MAAQ6F,KAAK7F,MAAMgP,QAAU,MAC5ChP,MAAO6F,KAAKvI,EACZilB,WAAYP,EAAYA,EAAY,I,CAIxC,qBAAAtK,GACE,MAAMsK,EACJnc,KAAK5F,MAAMgiB,OAASpc,KAAK5F,MAAMgiB,QAAU,GACrCpc,KAAK5F,MAAMgiB,MACXpc,KAAKqc,cAAgBrc,KAAKqc,aAAarc,KAAKpG,WAC5CoG,KAAKqc,aAAarc,KAAKpG,WACvBoG,KAAK5F,MAAMgiB,MAEjB5e,EAAe,CACbgf,QAASxc,KAAKiO,eACd0O,SAAU3c,KAAK5F,MAAQ4F,KAAK5F,MAAM+O,QAAU,MAC5C/O,MAAO4F,KAAKuW,EACZqG,WAAYT,EAAYA,EAAY,I,CAIxC,aAAApK,GACE1T,GAAS,CACP4T,KAAMjS,KAAKuY,MACXrf,OAAQ8G,KAAK+T,kBACb5a,MAAO6G,KAAKgU,iBACZsI,UAAWtc,KAAKuW,EAChB/c,KAAM,KACNC,QAASuG,KAAKvG,QACdojB,WAAY7c,KAAKvI,EAAE,KAAO,EAC1B8kB,MAAOvc,KAAKzF,cACZwT,SAAU/N,KAAK+N,U,CAInB,aAAA+D,GACEzT,GAAS,CACP4T,KAAMjS,KAAKuY,MACXrf,OAAQ8G,KAAK+T,kBACb5a,MAAO6G,KAAKgU,iBACZsI,UAAWtc,KAAKvI,EAChB+B,KAAM,MACNC,QAASuG,KAAKvG,QACdojB,WAAY7c,KAAKuW,EAAE,KAAO,EAC1BgG,MAAOvc,KAAK3F,cACZ0T,SAAU/N,KAAK+N,U,CAInB,SAAAiC,GACE1R,GACE0B,KAAKuY,MACLvY,KAAK+T,kBACL/T,KAAKgU,iBACLhU,KAAKvI,EACL,OACCuI,KAAK7F,MAAM4N,YACZ/H,KAAK7F,MAAM+N,aACXlI,KAAK+N,S,CAIT,SAAAkC,GACE3R,GACE0B,KAAKuY,MACLvY,KAAK+T,kBACL/T,KAAKgU,iBACLhU,KAAKuW,EACL,MACCvW,KAAK5F,MAAM2N,YACZ/H,KAAK5F,MAAM8N,aACXlI,KAAK+N,S,CAIT,uBAAAwD,GACE/K,EAAOxG,KAAKiO,gBACT8K,UAAU,WACVoB,GACC,QACAna,KAAKvE,OAAOsO,cAAgB/J,KAAKnE,eAC7B,CAACsJ,EAAGS,EAAGC,IAAM7F,KAAKwa,eAAerV,EAAE4P,OAAS5P,EAAE4P,OAAO,GAAK5P,EAAGU,EAAED,IAC/D,MAELuU,GACC,YACAna,KAAKvE,OAAOsO,cAAgB/J,KAAKnE,eAC7B,CAACsJ,EAAGS,EAAGC,IAAM7F,KAAKoa,eAAejV,EAAE4P,OAAS5P,EAAE4P,OAAO,GAAK5P,EAAGU,EAAED,GAAI,MACnE,MAELuU,GAAG,WAAYna,KAAKvE,OAAOsO,cAAgB/J,KAAKnE,eAAiB,IAAMmE,KAAKqa,oBAAsB,K,CAGvG,eAAAhJ,GACE7K,EAAOxG,KAAKiO,gBACT8K,UAAU,WACVP,MAAM,SAAUxY,KAAKvE,OAAOsO,cAAgB/J,KAAKnE,eAAiBmE,KAAK9E,OAAS,K,CAGrF,iBAAAoW,GACEtR,KAAKgZ,mBACFmB,GACC,YACAna,KAAKiU,mBAAqBjU,KAAKnE,eAC3B,CAACsJ,EAAGS,EAAGC,IAAM7F,KAAKoa,eAAejV,EAAE4P,OAAS5P,EAAE4P,OAAO,GAAK5P,EAAGU,EAAED,GAAI,MACnE,MAELuU,GAAG,WAAYna,KAAKiU,mBAAqBjU,KAAKnE,eAAiB,IAAMmE,KAAKqa,oBAAsB,MACnGra,KAAKkY,aACFiC,GAAG,SAAUna,KAAKnE,eAAiB,CAACsJ,EAAGS,EAAGC,IAAM7F,KAAKwa,eAAerV,EAAGU,EAAED,IAAM,MAC/EuU,GAAG,aAAcna,KAAKnE,eAAiB,CAACsJ,EAAGS,EAAGC,IAAM7F,KAAKoa,eAAejV,EAAGU,EAAED,IAAM,MACnFuU,GAAG,YAAana,KAAKnE,eAAiB,IAAMmE,KAAKqa,oBAAsB,MAC1Era,KAAKiY,aACFkC,GAAG,SAAUna,KAAKnE,eAAiB,CAACsJ,EAAGS,EAAGC,IAAM7F,KAAKwa,eAAerV,EAAGU,EAAED,IAAM,MAC/EuU,GAAG,aAAcna,KAAKnE,eAAiB,CAACsJ,EAAGS,EAAGC,IAAM7F,KAAKoa,eAAejV,EAAGU,EAAED,IAAM,MACnFuU,GAAG,YAAana,KAAKnE,eAAiB,IAAMmE,KAAKqa,oBAAsB,K,CAG5E,eAAA/J,GACE,MAAMwM,EAAU9c,KAAKxE,UAAU2N,QAAU,EAAI,EAE7CnJ,KAAK2Z,oBACFlT,KAAK,QAAS,0BACdA,KAAK,UAAWzG,KAAKnE,gBAAkBmE,KAAKxE,UAAU2N,QAAUnJ,KAAK9E,OAAS,MAEjF8E,KAAK+Z,YACFtT,KAAK,SAAUzG,KAAK6X,YACpBpR,KAAK,WAAWtB,GACRlH,GACLkH,EACA2X,EACA9c,KAAK7E,aACL6E,KAAKuF,eACLvF,KAAKhE,eACLgE,KAAKqF,sBACH,EACA,EACA0X,OAAOC,UAEZvW,KAAK,QAAS,8BACdA,KAAK,OAAQzG,KAAKkF,iBAClBiV,GAAG,SAAUna,KAAKnE,gBAAkBmE,KAAKxE,UAAU2N,QAAU,CAAChE,EAAGS,EAAGC,IAAM7F,KAAKwa,eAAerV,EAAGU,EAAED,IAAM,MACzGuU,GACC,aACCna,KAAKnE,gBAAkBmE,KAAKxE,UAAU2N,QAAU,CAAChE,EAAGS,EAAGC,IAAM7F,KAAKoa,eAAejV,EAAGU,EAAED,IAAM,MAE9FuU,GAAG,YAAana,KAAKnE,gBAAkBmE,KAAKxE,UAAU2N,QAAU,IAAMnJ,KAAKqa,oBAAsB,MAEpGnb,GAAgB,CACd+S,KAAMjS,KAAK+Z,YACXkD,OAAQjd,KAAKvI,EACbylB,OAAQld,KAAKuW,EACb4G,UAAWnd,KAAKsG,KAChB8W,gBAAiBpd,KAAKrG,UACtB0jB,cAAerd,KAAKpG,UACpBC,cAAemG,KAAKnG,cACpBsM,aAAcnG,KAAKlG,WAAWqM,aAC9BI,UAAWvG,KAAKuG,UAChB+W,UAAWtd,KAAKxE,UAAU8hB,UAC1BC,UAAW,UACXC,YAAaxd,KAAKrF,W,CAItB,gBAAA4V,GACEvQ,KAAKiY,aAAaiC,YAElB,MAAM4C,EAAU9c,KAAKxE,UAAU2N,QAAU,EAAI,EAU7CnJ,KAAKiY,aACFyC,WAAW,WACXC,KAAKC,GACL7M,SAAS/N,KAAK+N,UASdtH,KAAK,WAAWtB,GACRlH,GACLkH,EACA2X,EACA9c,KAAK7E,aACL6E,KAAKuF,eACLvF,KAAKhE,eACLgE,KAAKqF,sBACH,EACA,EACA,IAEL2V,KAAK3b,IAAkB,CAACtH,EAAG6N,EAAGC,KAC7BW,EAAOX,EAAED,IAAIuS,QAAQ,WAAY,MAAM,G,CAI7C,cAAA3H,GAOExQ,KAAK4Z,mBACFb,UAAU,sBACVtS,KAAK,SAAU,MACfiU,WAAW,QACX3M,SAAS/N,KAAK+N,SAAW,GACzB4M,KAAKC,GACLnU,KAAK,UAAW,GAChBuU,KAAK3b,IAAkB,KACtBW,KAAK4Z,mBAAmBqB,QAAQ,IAGpCjb,KAAKga,WACFvT,KAAK,SAAU,MACfiU,WAAW,QACXC,KAAKC,GACL7M,SAAS/N,KAAK+N,UACdtH,KAAK,UAAW,GAChBwU,Q,CAGL,cAAAlK,GACE,MAAM0M,EAAWzd,KAAKxE,UAAU8hB,YAAc,QAAUtd,KAAKxE,UAAUkiB,kBAEvE1d,KAAKiY,aAAahf,MAAKkM,GACdzG,GAAgByG,EAAGnF,KAAKkU,mBAAoBlU,KAAKmU,oBAG1D,MAAMwJ,EAAqB3d,KAAKiY,aAsB7BO,MAAM,cAAc,CAACzgB,EAAG6N,EAAGC,IAC1B7F,KAAKxE,UAAU8hB,YAAc,QAAUtd,KAAKxE,UAAUkiB,kBAClDlX,EAAOX,EAAED,IAAI4S,MAAM,cACnB,OAEL/R,KAAK,UAAUtB,GAAKnF,KAAKvI,EAAE0N,EAAEnF,KAAKrG,cAClC8M,KAAK,UAAUtB,GAAKnF,KAAKuW,EAAEpR,EAAEnF,KAAKpG,cAClC6M,KAAK,mBAAoBzG,KAAKvG,QAAQD,KAAOwG,KAAK5G,OAAOI,MACzDiN,KAAK,mBAAoBzG,KAAKvG,QAAQJ,IAAM2G,KAAK5G,OAAOC,KACxDqhB,WAAW,UACXC,KAAKC,GACL7M,SAAS/N,KAAK+N,UAEjB/N,KAAK4d,QAAU1e,GAAgB,CAC7B+S,KAAM0L,EACNV,OAAQjd,KAAKvI,EACbylB,OAAQld,KAAKuW,EACb4G,UAAWnd,KAAKsG,KAChB8W,gBAAiBpd,KAAKrG,UACtB0jB,cAAerd,KAAKpG,UACpBC,cAAemG,KAAKnG,cACpBsM,aAAcnG,KAAKlG,WAAWqM,aAC9BI,UAAWvG,KAAKuG,UAChB+W,UAAWtd,KAAKxE,UAAU8hB,UAC1BC,UAAW,UACXC,YAAaxd,KAAKrF,UAAYqF,KAAKrF,UAAY,IAC/CkjB,eAAgB,CACdC,mBAAoB9d,KAAKxE,UAAU2N,SAAWnJ,KAAKxE,UAAU8hB,YAAc,OAC3ES,eAAgBJ,EAChBK,WAAY,CAAChe,KAAKkY,cAClB+F,eAAgBR,EACZ,CAAC,UACD,CAAC,SAAU,MAAO,SAAU,OAAQ,QAAS,eAAgB,cAAe,WAAY,aAC5FS,QAAST,EAAW,CAAC,GAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnDU,UAAW,CAACne,KAAKrG,UAAWqG,KAAKpG,UAAWoG,KAAKnG,cAAe,OAChEyM,KAAM,CAAC3G,GAAQK,KAAK7G,MAAO,GAAIwG,GAAQK,KAAK9G,OAAQ,IACpDukB,SAAUzd,KAAKxE,UAAU2N,SAAWnJ,KAAKxE,UAAUkiB,oB,CAKzD,sBAAAjL,GAGEzS,KAAKkY,aAAagC,UAAU,WAM5Bla,KAAKkY,aAAazR,KAAK,SAAUzG,KAAK2F,gBACtC3F,KAAKiY,aAAaxR,KAAK,OAAQzG,KAAKkF,iBACpCvH,EAAkB,CAChBwd,YAAanb,KAAKsY,MAAMpG,SAG1B1T,GAA0B,CACxByT,KAAMjS,KAAK2Y,QACXlL,SAAUzN,KAAKwN,QACf5F,gBAAiB5H,KAAKqF,qBACtBxL,cAAemG,KAAKnG,cACpB0L,eAAgBvF,KAAKuF,eACrBvJ,eAAgBgE,KAAKhE,eACrBZ,WAAY4E,KAAK6E,gBACjBvJ,WAAY0E,KAAK2E,gBACjBxJ,aAAc6E,KAAK7E,c,CAIvB,eAAAsV,GACEzQ,KAAKkY,aAAagC,YAElBla,KAAKkY,aACFwC,WAAW,WAEX3M,UAAS,CAAChW,EAAG6N,EAAGC,KACf,GAAIW,EAAOX,EAAED,IAAIuS,QAAQ,YAAa,CACpC3R,EAAOX,EAAED,IAAIuS,QAAQ,WAAY,OACjC,OAAOnY,KAAK+N,Q,KACP,CACL,OAAO,C,KAGV4M,KAAKC,GACLnU,KAAK,WAAWtB,GACflH,GACEkH,EACAnF,KAAKnF,WACLmF,KAAK7E,aACL6E,KAAKuF,eACLvF,KAAKhE,eACLgE,KAAKqF,wBAGR2V,KAAK3b,IAAkB,CAACtH,EAAG6N,EAAGC,KAC7BW,EAAOX,EAAED,IAAIuS,QAAQ,WAAY,MAAM,G,CAI7C,eAAAzF,GACE,MAAM+K,EAAWzd,KAAKxE,UAAU8hB,YAAc,QAAUtd,KAAKxE,UAAUkiB,kBACvE,MAAMU,EAAoBpe,KAAKxE,UAAU8hB,YAAc,QAAUG,EAEjEzd,KAAKiY,aACFxR,KAAK,cAAegX,GACpBhX,KAAK,cAAegX,GACpBhX,KAAK,WAAW,CAACtB,EAAGS,EAAGC,KACtB,MAAMwY,GAAe7X,EAAOX,EAAED,IAAIa,KAAK,WACvC,MAAM6X,EAAkB9X,EAAOX,EAAED,IAAI4S,MAAM,cAC3C,MAAM+F,EACJtgB,GACEkH,EACAnF,KAAKxE,UAAU2N,QAAU,EAAI,EAC7BnJ,KAAK7E,aACL6E,KAAKuF,eACLvF,KAAKhE,eACLgE,KAAKqF,sBACH,EACA,EACA,EACN,IACIkZ,IAAkB,GAAKD,IAAoB,UAAaD,IAAgBE,KACzEve,KAAKxE,UAAU8hB,YAAc,QAAUG,GACxC,CACA,GAAIc,IAAkB,EAAG,CACvB/X,EAAOX,EAAED,IACNuS,QAAQ,kBAAmB,MAC3BK,MAAM,aAAc,K,KAClB,CACLhS,EAAOX,EAAED,IAAIuS,QAAQ,oBAAqB,K,EAG9C,OAAOoG,CAAa,IAGxB,GAAIH,EAAmB,CACrB,MAAMI,EAAcxe,KAAKiY,aAAaF,QAAO,CAAChgB,EAAG6N,EAAGC,IAAMW,EAAOX,EAAED,IAAIuS,QAAQ,qBAC/E,MAAMsG,EAAgBze,KAAKiY,aAAaF,QAAO,CAAChgB,EAAG6N,EAAGC,IAAMW,EAAOX,EAAED,IAAIuS,QAAQ,uBAGjF,GAAIsG,EAAcnY,OAAS,EAAG,CAC5BtG,KAAK4d,QAAUhe,GAAsB,CACnCge,QAAS5d,KAAK4d,QACdG,eAAgBU,EAChBT,WAAY,GACZC,eAAgB,CAAC,UACjBC,QAAS,CAAC,GACVC,UAAW,CAAC,OACZ7X,KAAM,CAAC3G,GAAQK,KAAK7G,MAAO,GAAIwG,GAAQK,KAAK9G,OAAQ,IACpDukB,SAAU,MACViB,WAAY,OAIdD,EAActG,QAAQ,oBAAqB,M,CAI7C,GAAIqG,EAAYlY,OAAS,EAAG,CAC1BtG,KAAK4d,QAAU1e,GAAgB,CAC7B+S,KAAMuM,EACNvB,OAAQjd,KAAKvI,EACbylB,OAAQld,KAAKuW,EACb4G,UAAWnd,KAAKsG,KAChB8W,gBAAiBpd,KAAKrG,UACtB0jB,cAAerd,KAAKpG,UACpBC,cAAemG,KAAKnG,cACpBsM,aAAcnG,KAAKlG,WAAWqM,aAC9BI,UAAWvG,KAAKuG,UAChB+W,UAAWtd,KAAKxE,UAAU8hB,UAC1BC,UAAW,UACXC,YAAaxd,KAAKrF,UAAYqF,KAAKrF,UAAY,IAC/CkjB,eAAgB,CACdC,mBAAoB9d,KAAKxE,UAAU2N,SAAWnJ,KAAKxE,UAAU8hB,YAAc,OAC3EM,QAAS5d,KAAK4d,QACdG,eAAgBS,EAChBR,WAAY,CAAChe,KAAKkY,cAClB+F,eAAgBR,EACZ,CAAC,UACD,CAAC,SAAU,MAAO,SAAU,OAAQ,QAAS,eAAgB,cAAe,WAAY,aAC5FS,QAAST,EAAW,CAAC,GAAK,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACnDU,UAAW,CAACne,KAAKrG,UAAWqG,KAAKpG,UAAWoG,KAAKnG,cAAe,OAChEyM,KAAM,CAAC3G,GAAQK,KAAK7G,MAAO,GAAIwG,GAAQK,KAAK9G,OAAQ,IACpDukB,SAAUzd,KAAKxE,UAAU2N,SAAWnJ,KAAKxE,UAAUkiB,kBACnDiB,iBAAkB,QAKtBH,EAAYrG,QAAQ,kBAAmB,M,GAK7C,WAAAlH,GACE,MAAM2N,EAAiB5e,KAAKhF,YAAcgF,KAAK/E,aAAa6hB,QAAU,EAEtE,MAAM+B,EAAU7e,KAAKwT,KAAK2C,KAAIhR,GAAKkB,WAAWlB,EAAEnF,KAAKrG,cACrD,MAAMmlB,EAAU9e,KAAKwT,KAAK2C,KAAIhR,GAAKkB,WAAWlB,EAAEnF,KAAKpG,cACrD,MAAMmlB,EAAoB/f,GAAa6f,EAASC,GAEhD,MAAME,EAAQD,EAAkB,GAChC,MAAME,EAAYF,EAAkB,GAEpC,MAAMG,EAAiBlf,KAAKyY,QAAQM,UAAU,QAAQvF,KAAKuL,GAE3D,MAAMI,EAAeD,EAClBjG,QACAZ,OAAO,QACP5R,KAAK,QAAS,aACdA,KAAK,UAAW,GAEnByY,EACG7F,MAAM8F,GACNzE,WAAW,UACX3M,SAAS/N,KAAK+N,UACd4M,KAAKC,GACLnU,KAAK,KAAMzG,KAAKvI,EAAEuI,KAAKuV,OACvB9O,KAAK,KAAMzG,KAAKuW,EAAE0I,IAClBxY,KAAK,KAAMzG,KAAKvI,EAAEuI,KAAKyV,OACvBhP,KAAK,KAAMzG,KAAKuW,EAAEvW,KAAKyV,KAAOuJ,EAAQC,IACtCzG,MAAM,SAAUlZ,GAAWU,KAAK/E,aAAawJ,QAAUzE,KAAK/E,aAAawJ,OACzE+T,MAAM,eAAgBxY,KAAK/E,aAAamL,aACxCK,KAAK,mBAAoBzG,KAAK/E,aAAamkB,OAASpf,KAAK/E,aAAamkB,OAAS,IAC/E3Y,KAAK,UAAWmY,GAEnBM,EAAe/F,OAAO8B,Q,CAGxB,kBAAA/J,GACEpR,GAAiB,CACfuf,UAAW,UACXpN,KAAMjS,KAAK6Y,YACX/c,eAAgBkE,KAAKlE,eACrBf,eAAgBiF,KAAKjF,eACrBiZ,iBAAkBhU,KAAKgU,iBACvBD,kBAAmB/T,KAAK+T,kBACxBhG,SAAU/N,KAAK+N,SACftW,EAAGuI,KAAKvI,EACR8e,EAAGvW,KAAKuW,EACR0D,SAAUja,KAAKia,U,CAInB,eAAAzI,GACEzT,GAAS,CACP3F,OAAQ4H,KAAKsY,MAAMpG,OACnBsB,KAAMxT,KAAKjE,YACXkhB,OAAQjd,KAAKvI,EACbkC,UAAWqG,KAAKrG,UAChBujB,OAAQld,KAAKuW,EACb3c,UAAWoG,KAAKpG,UAChBT,MAAO6G,KAAK7G,MACZD,OAAQ8G,KAAK9G,OACbO,QAASuG,KAAKvG,QACdL,OAAQ4G,KAAK5G,OACbwkB,QAAS5d,KAAK4d,S,CAIlB,0BAAAnM,GACE/T,EAAoBsC,KAAK4U,oBAAqB5U,KAAKiO,eAAgBjO,KAAKjE,YAAaiE,KAAKlE,e,CAI5F,YAAAsS,GACEpO,KAAK+D,SAAWtE,GAAaO,KAAK/F,qBAClC+F,KAAKgE,YAAcvE,GAAaO,KAAK/F,oBAAqB,E,CAG5D,0BAAAkV,GACE1S,EAA0B,CACxBiQ,SAAU1M,KAAK4U,oBACf4H,QAASxc,KAAKiO,eACd5D,MAAOrK,KAAKjG,cAAcsQ,OAASrK,KAAKjH,UACxCumB,SAAU,eACV7R,SAAUzN,KAAKwN,QACfvT,oBAAqB+F,KAAK/F,oBAC1BslB,OAAQvf,KAAKuD,oBACbic,cACExf,KAAKnE,gBACLmE,KAAKjG,cAAcuS,uBAAyB,OAC5CtM,KAAKjG,cAAcmS,mBACnBlM,KAAKjG,cAAcmS,kBAAkBC,SACvCsT,cAAezf,KAAKjG,cAAc2lB,sBAEpC1f,KAAKuD,oBAAsB,K,CAG7B,yBAAAqM,GACE/S,EAA2B,CACzByiB,SAAU,eACV5S,SAAU1M,KAAK4U,oBACf1C,KAAMlS,KAAK8X,IAAI5F,OACf7H,MAAOrK,KAAKjG,cAAcsQ,OAASrK,KAAKjH,UACxC4mB,YAAa3f,KAAKhH,SAClByU,SAAUzN,KAAKwN,QACfoS,SAAU,QACVC,gBAAiB7f,KAAKjG,cAAc2R,oBACpCoU,SAAU9f,KAAKoU,qBACfiI,aAAcrc,KAAKqc,aACnBxiB,cAAemG,KAAKnG,cACpBwlB,UAAW,gBACXG,cACExf,KAAKnE,gBACLmE,KAAKjG,cAAcuS,uBAAyB,OAC5CtM,KAAKjG,cAAcmS,mBACnBlM,KAAKjG,cAAcmS,kBAAkBC,U,CAO3C,kCAAAyE,GACE5Q,KAAKkY,aAAaoC,MAAK,CAACC,EAAI3U,EAAGC,KAC7BnJ,EAAwBmJ,EAAED,GAAG,G,CAIjC,qBAAAiL,GACE,MAAM4D,EAAOzU,KAAKoU,qBAClBpU,KAAKkY,aAAaoC,MAAK,CAACC,EAAI3U,EAAGC,KAC7BlJ,EAAuB,CACrB2iB,SAAU,eACV5S,SAAU1M,KAAK4U,oBACf1C,KAAMrM,EAAED,GACRga,SAAU,QACVC,gBAAiB7f,KAAKjG,cAAc2R,oBACpCoU,SAAUrL,EACV4H,aAAcrc,KAAKqc,aACnBgD,UAAW,gBACX5R,SAAUzN,KAAKwN,QACfgS,cACExf,KAAKnE,gBACLmE,KAAKjG,cAAcuS,uBAAyB,OAC5CtM,KAAKjG,cAAcmS,mBACnBlM,KAAKjG,cAAcmS,kBAAkBC,WAEzCvP,EAAmB,CACjBsV,KAAMrM,EAAED,GACR6H,SAAUzN,KAAKwN,SACf,G,CAIN,uBAAA4E,GACEpS,KAAKoZ,oBAAoBkB,MAAK,CAACviB,EAAG6N,EAAGC,KACnCjJ,EAAmB,CACjBsV,KAAMrM,EAAED,GACR6H,SAAUzN,KAAKwN,SACf,G,CAIN,0BAAA4B,GACErS,EAAeiD,KAAK4U,oBAAqB5U,KAAKiO,eAAgBjO,KAAKjG,cAAcsQ,OAASrK,KAAKjH,U,CAGjG,6BAAAsW,GACErS,EAAkBgD,KAAK4U,oBAAqB5U,KAAKiO,eAAgBjO,KAAKhH,S,CAGxE,oCAAAsW,GACErS,EAAyB+C,KAAK4U,oBAAqB5U,KAAKiO,eAAgBjO,KAAKjG,cAAc+Q,gB,CAG7F,qCAAAyE,GACErS,EAA0B8C,KAAK4U,oBAAqB5U,KAAKiO,eAAgBjO,KAAKjG,cAAcyQ,iB,CAG9F,4BAAAgF,GACErS,EAAiB6C,KAAK4U,oBAAqB5U,KAAKiO,eAAgBjO,KAAKjG,cAAc4Q,Q,CAGrF,4BAAA8E,GACErS,EAAiB4C,KAAK4U,oBAAqB5U,KAAKiO,eAAgBjO,KAAKjG,cAAckR,mB,CAGrF,qCAAAyE,GACErS,EAAoB2C,KAAK4U,oBAAqB5U,KAAKiO,eAAgBjO,KAAKjG,cAAcqR,iB,CAGxF,0BAAAuF,GACErT,EAAqB,CACnBkf,QAASxc,KAAKiO,eACdkN,YAAanb,KAAKmS,KAAKD,OACvBoN,SAAU,eACVM,SAAU,QACVP,UAAW,iB,CAKf,mCAAA1P,GACElS,EAAmBuC,KAAK4U,oBAAqB5U,KAAKiO,eAAgBjO,KAAKjG,cAAcwR,e,CAIvF,kBAAAuF,GAEE,MAAMiP,EACJ/f,KAAKnG,gBAAkBf,EAAyBe,eAChDmG,KAAKqE,MACLrE,KAAKqE,KAAKpM,SAAW,GACrB+H,KAAKqE,KAAK,GAAGwQ,MAAQ,YAEvBtW,GAAW,CACT0T,KAAMjS,KAAK2Y,QACXlL,SAAUzN,KAAKwN,QACfrU,MAAO6G,KAAKgU,iBACZ9a,OAAQ8G,KAAK5G,OAAOC,IAAM,GAC1B4L,SAAUjF,KAAKmE,UACf6b,aAAchgB,KAAKiF,SACnBP,YAAa1E,KAAKjG,cAAc2K,YAChCtL,OAAQ4G,KAAK5G,OACbK,QAASuG,KAAKvG,QACdsU,SAAU/N,KAAK+N,SACfkS,KAAM,UACNC,SAAU,GACV1M,KAAMxT,KAAKqE,KACX+X,MAAOpc,KAAKvE,OAAO0kB,OACnBxJ,OAAQ3W,KAAKlF,WACbyhB,OAASvc,KAAKvE,OAAO0N,UAAY4W,IAAqB/f,KAAKvE,SAAWuE,KAAKnG,eAC3E+N,gBAAiB5H,KAAKqF,qBACtBxL,cAAemG,KAAKnG,cACpB0L,eAAgBvF,KAAKuF,eACrBvJ,eAAgBgE,KAAKhE,eACrBZ,WAAY4E,KAAK6E,gBACjBvJ,WAAY0E,KAAK2E,gBACjBxJ,aAAc6E,KAAK7E,c,CAIvB,eAAA6W,GACE,GAAIhS,KAAKjG,sBAAwBiG,KAAKjG,cAAcqmB,eAAiB,WAAY,CAC/E,MAAMjb,EAAI,CACRhF,QAASH,KAAKG,QACdkgB,MAAOrgB,KAAKsgB,UACZC,QAASvgB,KAAKsZ,UAEhBtZ,KAAKjG,cAAcqmB,aAAajb,E,CAElCnF,KAAKG,QAAU,MACfH,KAAKsgB,UAAY,EACjBtgB,KAAKsZ,SAAW,C,CAGlB,cAAAkB,CAAerV,EAAGU,GAChB7F,KAAK4T,WAAWhG,KAAK,CAAE4F,KAAMrO,EAAG9M,OAAQwN,G,CAG1C,cAAAuU,CAAejV,EAAGU,EAAG2a,GACnBvhB,GAAqBe,KAAKwN,QAAS,MACnCxN,KAAKygB,WAAW7S,KAAK,CAAE4F,KAAMrO,EAAG9M,OAAQwN,IACxC,GAAI7F,KAAKpE,cAAgB4kB,EAAU,CACjCxgB,KAAK0gB,cAAc,CAAElN,KAAMrO,EAAGwb,IAAKC,EAAOC,SAAU,M,EAIxD,iBAAAxG,GACEpb,GAAqBe,KAAKwN,QAAS,OACnCxN,KAAK8gB,cAAclT,OACnB,GAAI5N,KAAKpE,YAAa,CACpBoE,KAAK0gB,cAAc,CAAEG,SAAU,O,EAKnC,sBAAA3R,GACEnQ,GAAiBiB,KAAK4Y,S,CAIxB,aAAA8H,EAAclN,KAAEA,EAAImN,IAAEA,EAAGE,SAAEA,IACzBpiB,GAAY,CACVwT,KAAMjS,KAAK4Y,SACXpF,OACAoN,MAAOD,EACPE,WACAllB,aAAcqE,KAAKrE,aACnBxB,MAAO6F,KAAK7F,MACZC,MAAO4F,KAAK5F,MACZoB,UAAWwE,KAAKxE,UAChB6gB,aAAcrc,KAAKqc,aACnBxiB,cAAemG,KAAKnG,cACpBC,WAAYkG,KAAKlG,WACjBH,UAAWqG,KAAKrG,UAChBC,UAAWoG,KAAKpG,UAChB2jB,UAAW,W,CAIf,MAAAwD,GACE/gB,KAAKghB,eAAepT,KAAK,CAAEJ,QAASxN,KAAKwN,UAGzCxN,KAAKihB,OACL,GAAIjhB,KAAK8D,4BAA6B,CACpC9D,KAAKmO,wBACLnO,KAAK8D,4BAA8B,K,CAErC,GAAI9D,KAAKwD,mBAAoB,CAC3BxD,KAAKoO,eACLpO,KAAKwD,mBAAqB,K,CAE5B,GAAIxD,KAAKS,iBAAkB,CACzBT,KAAKqO,cACLrO,KAAKS,iBAAmB,K,CAE1B,GAAIT,KAAKY,mBAAoB,CAC3BZ,KAAKsO,gBACLtO,KAAKY,mBAAqB,K,CAE5B,GAAIZ,KAAK4B,yBAA0B,CACjC5B,KAAKuO,qBACLvO,KAAK4B,yBAA2B,K,CAElC,GAAI5B,KAAK6B,yBAA0B,CACjC7B,KAAKwO,qBACLxO,KAAK6B,yBAA2B,K,CAElC,GAAI7B,KAAKO,gBAAiB,CACxBP,KAAKkE,YACLlE,KAAKO,gBAAkB,K,CAEzB,GAAIP,KAAKU,mBAAoB,CAC3BV,KAAKyO,gBACLzO,KAAKU,mBAAqB,K,CAE5B,GAAIV,KAAK8B,8BAA+B,CACtC9B,KAAK0O,0BACL1O,KAAK8B,8BAAgC,K,CAEvC,GAAI9B,KAAK+B,gCAAiC,CACxC/B,KAAK2O,4BACL3O,KAAK+B,gCAAkC,K,CAEzC,GAAI/B,KAAKM,sBAAuB,CAC9BN,KAAK4O,eACL5O,KAAKM,sBAAwB,K,CAE/B,GAAIN,KAAKW,eAAgB,CACvBX,KAAK6O,mCACL7O,KAAK8O,kCACL9O,KAAKW,eAAiB,K,CAKxB,OACEugB,EAAA,OAAArM,IAAA,2CAAKsM,MAAM,YACTD,EAAA,OAAArM,IAAA,2CAAKsM,MAAM,mBACTD,EAAClhB,KAAK+D,SAAQ,CAAA8Q,IAAA,2CAACsM,MAAM,qCAAqCnhB,KAAKjH,WAC/DmoB,EAAClhB,KAAKgE,YAAW,CAAA6Q,IAAA,2CAACsM,MAAM,+DACxBD,EAAA,OAAArM,IAAA,2CAAKsM,MAAM,4BAA4B3I,MAAO,CAAE4I,QAASphB,KAAKvE,OAAO0N,QAAU,QAAU,UACzF+X,EAAA,yBAAArM,IAAA,2CACEpH,SAAUzN,KAAKwN,QACfoS,SAAU,QACVP,UAAW,gBACX3S,SAAU1M,KAAK4U,oBACf0K,SAAU,eACVnmB,MAAO6G,KAAK7G,OAAS6G,KAAK5G,OAAS4G,KAAK5G,OAAOG,OAAS,EAAI,GAC5D8nB,cAAerhB,KAAKjG,cAAcuS,qBAClCgV,oBAAmB,KACnBnV,SACEnM,KAAKnE,gBACLmE,KAAKjG,cAAcuS,uBAAyB,OAC5CtM,KAAKjG,cAAcmS,mBACnBlM,KAAKjG,cAAcmS,kBAAkBC,WAGzC+U,EAAA,OAAArM,IAAA,2CAAKsM,MAAM,kCACXD,EAAA,OAAArM,IAAA,2CAAKsM,MAAM,8BAA8B3I,MAAO,CAAE4I,QAASphB,KAAKpE,YAAc,QAAU,UACxFslB,EAAA,cAAArM,IAAA,2CACEpH,SAAUzN,KAAKwN,QACf+T,UAAS,KACT7U,SAAU1M,KAAK4U,oBACfD,aAAc3U,KAAK2U,aACnBnB,KAAMxT,KAAK0U,UACX2H,aAAcrc,KAAKqc,aACnB5iB,QAASuG,KAAKvG,QACdL,OAAQ4G,KAAK5G,OACbqmB,cAAezf,KAAKjG,cAAc2lB,oBAClCzF,SAAUja,KAAKia,Y,CAQjB,IAAAgH,GACN,MAAMxM,EAAOpB,OAAOoB,KAAK3b,GACzB,IAAI8M,EAAI,EACR,MAAM4b,EAAa,CACjBxmB,YAAa,CACXymB,UAAW,OAEb7lB,YAAa,CACX6lB,UAAW,OAEb1oB,UAAW,CACT0oB,UAAW,IAEbzoB,SAAU,CACRyoB,UAAW,IAEbpnB,cAAe,CACbonB,UAAW,OAEb5nB,cAAe,CACb4nB,UAAW,IAEbtmB,aAAc,CACZsmB,UAAW,IAGf,IAAK7b,EAAI,EAAGA,EAAI6O,EAAKxc,OAAQ2N,IAAK,CAChC,MAAM6b,GAAaD,EAAW/M,EAAK7O,IAAM,MAAQ5F,KAAKyU,EAAK7O,MAAQ4b,EAAW/M,EAAK7O,IAAI6b,UACvFzhB,KAAKyU,EAAK7O,IAAM5F,KAAKyU,EAAK7O,KAAO6b,EAAYzhB,KAAKyU,EAAK7O,IAAM9M,EAAyB2b,EAAK7O,G,ukDAMjG8b,OAAO,4BAA8B9iB,K","ignoreList":[]}