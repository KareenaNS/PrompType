{"version":3,"names":["linkSource","d","source","linkTarget","target","link","curve","x","pointX","y","pointY","context","output","path","withPath","buffer","argv","slice","call","arguments","s","apply","this","t","lineStart","point","lineEnd","_","length","constant","linkHorizontal","bumpX","linkVertical","bumpY","propDefaultValues","Utils","AlluvialDiagramDefaultValues","highestHeadingLevel","mainTitle","subTitle","text","height","width","layout","layoutHorizontal","margin","top","bottom","right","left","padding","localization","sourceAccessor","targetAccessor","valueAccessor","groupAccessor","nodeIDAccessor","nodeConfig","fill","alignment","compare","linkConfig","visible","fillMode","opacity","accessibility","animationConfig","colorPalette","colorPaletteCategorical","dataLabel","annotations","hoverStyle","clickStyle","hoverOpacity","cursor","tooltipLabel","showTooltip","suppressEvents","clickHighlight","alluvialDiagramCss","AlluvialDiagramStyle0","getGlobalInstances","configLocalization","getActiveLanguageString","initializeDescriptionRoot","setAccessibilityController","initializeElementAccess","setElementFocusHandler","setElementAccessID","setAccessChartCounts","hideNonessentialGroups","setAccessTitle","setAccessSubtitle","setAccessLongDescription","setAccessExecutiveSummary","setAccessPurpose","setAccessContext","setAccessStatistics","setAccessStructure","setAccessAnnotation","retainAccessFocus","checkAccessFocus","setElementInteractionAccessState","setAccessibilityDescriptionWidth","roundTo","resolveLabelCollision","transitionEndAll","annotate","checkClicked","checkInteraction","convertVisaColor","createTextStrokeFilter","drawTooltip","findTagLevel","formatDataLabel","formatStats","getColors","getContrastingStroke","getPadding","checkHovered","initTooltipStyle","overrideTitleTooltip","scopeDataKeys","chartAccessors","sankey","sankeyCenter","sankeyJustify","sankeyLeft","sankeyLinkHorizontal","sankeyLinkVertical","sankeyRight","prepareRenderChange","visaColors","validateAccessibilityProps","validateLocalizationProps","setSubTitle","AlluvialDiagram","exports","shouldValidateAccessibility","shouldValidateLocalization","innerInteractionKeys","topLevel","bottomLevel","sourceLinksString","targetLinksString","valueString","updated","shouldSetDimensions","shouldUpdateData","shouldSetColors","shouldSetSubTitle","shouldSetTagLevels","shouldRedrawWrapper","shouldUpdateTableData","shouldUpdateDescriptionWrapper","shouldSetChartAccessibilityCount","shouldSetChartAccessibilityTitle","shouldSetChartAccessibilitySubtitle","shouldSetChartAccessibilityLongDescription","shouldSetChartAccessibilityExecutiveSummary","shouldSetChartAccessibilityPurpose","shouldSetChartAccessibilityContext","shouldSetChartAccessibilityStatisticalNotes","shouldSetChartAccessibilityStructureNotes","shouldSetParentSVGAccessibility","shouldSetGeometryAccessibilityAttributes","shouldSetGeometryAriaLabels","shouldSetGroupAccessibilityLabel","shouldSetSelectionClass","shouldSetAnnotationAccessibility","shouldSetGlobalSelections","shouldSetTestingAttributes","shouldDrawInteractionState","shouldEnterUpdateExit","shouldUpdateNodeGeometries","shouldUpdateNodeStyle","shouldUpdateLinkGeometries","shouldUpdateLinkStyle","shouldDrawNodeLabels","shouldSetNodeDimensions","shouldCallSankeyGenerator","shouldUpdateAnnotations","shouldValidateIdAccessor","shouldValidateLabelText","shouldValidateLinkFillMode","shouldValidateNodeAlignment","shouldValidateInteractionKeys","shouldValidateLinkGroups","shouldUpdateCursor","shouldBindInteractivity","shouldResetRoot","shouldSetNodeLabelOpacity","shouldSetLocalizationConfig","class_1","prototype","dataWatcher","_newData","_oldData","idWatcher","newID","_oldID","console","error","headingWatcher","_newVal","_oldVal","mainTitleWatcher","subTitleWatcher","dimensionWatcher","layoutWatcher","warn","sourceAccessorWatcher","targetAccessorWatcher","valueAccessorWatcher","groupAccessorWatcher","nodeIDAccessorWatcher","nodeConfigWatcher","newAlignmentVal","oldAlignmentVal","newCompareVal","oldCompareVal","newFillVal","oldFillVal","newWidthVal","oldWidthVal","newPaddingVal","oldPaddingVal","linkConfigWatcher","newFillModeVal","oldFillModeVal","newVisibleVal","oldVisibleVal","colorWatcher","interactionStyleWatcher","cursorWatcher","hoverOpacityWatcher","dataLabelWatcher","newLabelAccessorVal","labelAccessor","oldLabelAccessorVal","tooltipLabelWatcher","showTooltipWatcher","accessibilityWatcher","newTitle","title","oldTitle","newExecutiveSummary","executiveSummary","oldExecutiveSummary","newPurpose","purpose","oldPurpose","newLongDescription","longDescription","oldLongDescription","newContext","contextExplanation","oldContext","newStatisticalNotes","statisticalNotes","oldStatisticalNotes","newStructureNotes","structureNotes","oldStructureNotes","newincludeDataKeyNames","includeDataKeyNames","oldincludeDataKeyNames","newElementDescriptionAccessor","elementDescriptionAccessor","oldElementDescriptionAccessor","newKeyNav","keyboardNavConfig","disabled","oldKeyNav","newInterface","elementsAreInterface","oldInterface","localizationWatcher","newLanguage","language","oldLanguage","newNumeralLocale","numeralLocale","oldNumeralLocale","annotationsWatcher","clickWatcher","hoverWatcher","interactionWatcher","dataKeyNamesWatcher","suppressWatcher","unitTestWatcher","componentWillLoad","_this","chartID","uniqueID","uuid","initialLoadEvent","emit","Promise","resolve","duration","defaults","alluvialDiagramEl","id","setLocalizationConfig","setTagLevels","prepareData","setDimensions","validateIdAccessor","validateLabelText","validateLinkFillMode","validateNodeAlignment","validateInteractionKeys","validateLinkGroups","shouldValidateAccessibilityProps","shouldValidateLocalizationProps","setColors","setNodeDimensions","callSankeyGenerator","setTableData","componentWillUpdate","componentDidLoad","renderRootElements","setTooltipInitialStyle","setChartDescriptionWrapper","setChartAccessibilityTitle","setChartAccessibilitySubtitle","setChartAccessibilityLongDescription","setChartAccessibilityExecutiveSummary","setChartAccessibilityPurpose","setChartAccessibilityContext","setChartAccessibilityStatisticalNotes","setChartAccessibilityStructureNotes","setParentSVGAccessibility","reSetRoot","setSubTitleElements","setGlobalSelections","setTestingAttributes","enterLinkGeometries","updateLinkGeometries","exitLinkGeometries","enterNodeGeometries","updateNodeGeometries","exitNodeGeometries","enterNodeLabels","updateNodeLabels","exitNodeLabels","updateLinkStyle","drawNodeGeometries","drawLinkGeometries","setGeometryAccessibilityAttributes","setGeometryAriaLabels","setGroupAccessibilityID","setChartCountAccessibility","setSelectedClass","updateCursor","drawNodeLabels","bindInteractivity","drawAnnotations","setAnnotationAccessibility","onChangeHandler","root","node","then","initialLoadEndEvent","componentDidUpdate","updateNodeStyle","updateInteractionState","setNodeLabelOpacity","drawEndEvent","innerWidth","innerHeight","innerPaddedHeight","innerPaddedWidth","nodeList","linkList","linkData","forEach","obj","i","linkObj","value","data","nodeData","createNodeList","map","some","e","uniqueSourceID","push","uniqueTargetID","innerLabelAccessor","innerIDAccessor","innerLinkFillMode","innerNodeAlignment","interactionKeys","groupKeys","filter","a","indexOf","windowInstances","languageString","i18Next","languageObject","getResourceBundle","numeralObject","numeral","localeData","skipValidation","Object","assign","disableValidation","onClickEvent","undefined","clickEvent","getLanguageString","uniqueNodeAccessors","nodeAccessors","singleAccessors","nestedAccessors","objectName","objectAccessors","formatAccessors","nodeKeys","tableData","getScopedTableData","preppedData","nodes","tableColumns","keys","linkChartAccessors","secondaryTableData","links","secondaryTableColumns","keyMap","scopedData","dataRecord","scopedDataRecord","field","alluvialProperties","nodeId","nodeWidth","nodePadding","nodeAlign","nodeSort","size","sankeyData","nodeCount","max","layer","svg","select","append","attr","rootG","nodeG","linkG","labelG","subTitleG","tooltipG","updateLinks","updatingLabels","changeSvg","selection","namespace","easing","easeCircleIn","changeRoot","concat","changeRootG","currentNodeLayers","previousNodeLayers","dataBoundToNodes","selectAll","enterNodes","enter","exitNodes","exit","updateNodes","merge","updatingNodesWithoutEnteringNodes","item","includes","previousMaxNodeLayer","previousMinNodeLayer","min","updatingNodesWithoutExitingNodes","currentMaxNodeLayer","currentMinNodeLayer","each","n","linkDataGroups","dataBoundToLinkGroups","enterLinkGroups","exitLinkGroups","remove","updateLinkGroups","dataBoundToLinks","sourceLinks","enterLinks","exitLinks","exitSize","enterSize","dataBoundToLabels","enteringLabels","exitingLabels","unitTest","newColumnInterpolationPosition","x0","y0","x1","y1","newColumnInterpolationPositionVertical","interrupt","linkOpacity","classed","on","onClickHandler","onHoverHandler","onMouseOutHandler","linelength","getTotalLength","Math","transition","ease","hoverHighlight","removeTemporaryClickedLinks","clicked","drawDuplicateClickedLink","focusDidExist","parentGNode","transitionEndEvent","inputElement","className","parent","parentNode","sourceCopy","cloneNode","style","parentOfParent","validSiblings","_groups","lastGroup","appendChild","color","colorArr","index","delay","placeNodeLabels","_a","xPlacement","yPlacement","offsetX","offsetY","textAnchor","placement","hiddenOpacity","Number","EPSILON","widthAllNodesNoLinks","noLinksLeftPadding","matchHover","addStrokeUnder","hideOnly","collisionHideOnly","cloneAdjustment","nodeLabelUpdate","format","collisionPlacement_1","collisionPlacement","nodeRects","clonedRects","bitmaps","labelSelection","avoidMarks","validPositions","offsets","accessors","addCollisionClass","prevOpacity","styleVisibility","targetOpacity","labelsAdded","labelsRemoved","removeOnly","collisionPlacement_2","suppressMarkDraw","positionData","preppedAnnotations","datum","internalData","positionType","hasOwnProperty","findIndex","ignoreScales","colors","rootEle","chartTag","redraw","disableKeyNav","hideDataTable","hideDataTableButton","description","geomType","includeKeyNames","dataKeys","dataKeyNames","groupName","_d","selected","selectable","onChangeFunc","added","removed","hoverEvent","eventsTooltip","evt","event","isToShow","mouseOutEvent","xAccessor","yAccessor","ordinalAccessor","chartType","render","drawStartEvent","init","h","key","class","isInteractive","hasCousinNavigation","display","isCompact","secondaryData","exceptions","exception"],"sources":["node_modules/d3-shape/src/link.js","src/components/alluvial-diagram/alluvial-diagram-default-values.ts","src/components/alluvial-diagram/alluvial-diagram.scss?tag=alluvial-diagram","src/components/alluvial-diagram/alluvial-diagram.tsx"],"sourcesContent":["import {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport {bumpX, bumpY, bumpRadial} from \"./curve/bump.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nexport function link(curve) {\n  let source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null,\n      output = null,\n      path = withPath(link);\n\n  function link() {\n    let buffer;\n    const argv = slice.call(arguments);\n    const s = source.apply(this, argv);\n    const t = target.apply(this, argv);\n    if (context == null) output = curve(buffer = path());\n    output.lineStart();\n    argv[0] = s, output.point(+x.apply(this, argv), +y.apply(this, argv));\n    argv[0] = t, output.point(+x.apply(this, argv), +y.apply(this, argv));\n    output.lineEnd();\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), link) : context;\n  };\n\n  return link;\n}\n\nexport function linkHorizontal() {\n  return link(bumpX);\n}\n\nexport function linkVertical() {\n  return link(bumpY);\n}\n\nexport function linkRadial() {\n  const l = link(bumpRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","/**\n * Copyright (c) 2021, 2022, 2023 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport Utils from '@visa/visa-charts-utils';\n\nconst { propDefaultValues } = Utils;\nexport class AlluvialDiagramDefaultValues {\n  static readonly highestHeadingLevel = propDefaultValues.highestHeadingLevel;\n  static readonly mainTitle = 'Alluvial Diagram Title';\n  static readonly subTitle = propDefaultValues.subTitle.text;\n  static readonly height = 300;\n  static readonly width = 650;\n  static readonly layout = propDefaultValues.layoutHorizontal;\n  static readonly margin = {\n    top: 300 * 0.01,\n    bottom: 300 * 0.01,\n    right: 650 * 0.01,\n    left: 650 * 0.01\n  };\n  static readonly padding = {\n    top: 20,\n    bottom: 50,\n    right: 50,\n    left: 50\n  };\n\n  static readonly localization = propDefaultValues.localization;\n\n  static readonly sourceAccessor = 'source';\n  static readonly targetAccessor = 'target';\n  static readonly valueAccessor = 'value';\n  static readonly groupAccessor = '';\n  // static readonly labelAccessor = '';\n  static readonly nodeIDAccessor = 'id';\n\n  static readonly nodeConfig = {\n    fill: false,\n    width: 12,\n    padding: 20,\n    alignment: 'left',\n    compare: false\n  };\n\n  static readonly linkConfig = {\n    visible: true,\n    fillMode: 'none',\n    opacity: 0.3\n  };\n\n  static readonly accessibility = propDefaultValues.accessibility;\n  static readonly animationConfig = propDefaultValues.animationConfig;\n  static readonly colorPalette = propDefaultValues.colorPaletteCategorical;\n  static readonly dataLabel = propDefaultValues.dataLabel;\n  static readonly dataKeyNames;\n  static readonly annotations = propDefaultValues.annotations;\n\n  static readonly hoverStyle = propDefaultValues.hoverStyle;\n  static readonly clickStyle = propDefaultValues.clickStyle;\n  static readonly hoverOpacity = propDefaultValues.hoverOpacity;\n  static readonly cursor = propDefaultValues.cursor;\n  static readonly tooltipLabel = propDefaultValues.tooltipLabel;\n  static readonly showTooltip = propDefaultValues.showTooltip;\n  static readonly suppressEvents = propDefaultValues.suppressEvents;\n  static readonly hoverHighlight;\n  static readonly clickHighlight = propDefaultValues.clickHighlight;\n}\n","/**\n * Copyright (c) 2021, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nalluvial-diagram {\n  .annotations {\n    pointer-events: none;\n    .handle {\n      pointer-events: all;\n    }\n  }\n\n  .screen-reader-info {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n\n  .data-table-link {\n    color: #767676;\n    text-decoration: none;\n    font-size: 12px;\n    margin-left: 5%;\n  }\n\n  .hidden {\n    display: none;\n  }\n\n  cursor: default;\n\n  .node rect {\n    cursor: move;\n    // fill-opacity: 0.9;\n    // shape-rendering: crispEdges;\n  }\n\n  .node text {\n    pointer-events: none;\n    text-shadow: 0 1px 0 #fff;\n  }\n\n  .link {\n    fill: none;\n    stroke: #000;\n    stroke-opacity: 0.2;\n  }\n\n  .link:hover {\n    stroke-opacity: 0.5;\n  }\n}\n","/**\n * Copyright (c) 2021, 2022, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport { Component, Element, Prop, Watch, h, Event, EventEmitter } from '@stencil/core';\n\nimport { select, event } from 'd3-selection';\nimport { min, max } from 'd3-array';\nimport { linkHorizontal, linkVertical } from 'd3-shape';\nimport { easeCircleIn } from 'd3-ease';\n\nimport {\n  IBoxModelType,\n  ILocalizationType,\n  IHoverStyleType,\n  IClickStyleType,\n  IDataLabelType,\n  ITooltipLabelType,\n  IAccessibilityType,\n  IAnimationConfig,\n  INodeConfigType,\n  ILinkConfigType,\n  ISubTitleType\n} from '@visa/charts-types';\nimport { AlluvialDiagramDefaultValues } from './alluvial-diagram-default-values';\nimport { v4 as uuid } from 'uuid';\nimport 'd3-transition';\nimport Utils from '@visa/visa-charts-utils';\nconst {\n  getGlobalInstances,\n  configLocalization,\n  getActiveLanguageString,\n  initializeDescriptionRoot,\n  setAccessibilityController,\n  initializeElementAccess,\n  setElementFocusHandler,\n  setElementAccessID,\n  setAccessChartCounts,\n  hideNonessentialGroups,\n  setAccessTitle,\n  setAccessSubtitle,\n  setAccessLongDescription,\n  setAccessExecutiveSummary,\n  setAccessPurpose,\n  setAccessContext,\n  setAccessStatistics,\n  setAccessStructure,\n  setAccessAnnotation,\n  retainAccessFocus,\n  checkAccessFocus,\n  setElementInteractionAccessState,\n  setAccessibilityDescriptionWidth,\n  roundTo,\n  resolveLabelCollision,\n  transitionEndAll,\n  annotate,\n  checkClicked,\n  checkInteraction,\n  convertVisaColor,\n  createTextStrokeFilter,\n  drawTooltip,\n  findTagLevel,\n  formatDataLabel,\n  formatStats,\n  getColors,\n  getContrastingStroke,\n  getPadding,\n  // getScopedData,\n  checkHovered,\n  initTooltipStyle,\n  overrideTitleTooltip,\n  scopeDataKeys,\n  chartAccessors,\n  sankey,\n  sankeyCenter,\n  sankeyJustify,\n  sankeyLeft,\n  sankeyLinkHorizontal,\n  sankeyLinkVertical,\n  sankeyRight,\n  prepareRenderChange,\n  visaColors,\n  validateAccessibilityProps,\n  validateLocalizationProps,\n  setSubTitle\n} = Utils;\n\n@Component({\n  tag: 'alluvial-diagram',\n  styleUrl: 'alluvial-diagram.scss'\n})\nexport class AlluvialDiagram {\n  @Event() clickEvent: EventEmitter;\n  @Event() hoverEvent: EventEmitter;\n  @Event() mouseOutEvent: EventEmitter;\n  @Event() initialLoadEvent: EventEmitter;\n  @Event() initialLoadEndEvent: EventEmitter;\n  @Event() drawStartEvent: EventEmitter;\n  @Event() drawEndEvent: EventEmitter;\n  @Event() transitionEndEvent: EventEmitter;\n\n  // Chart Attributes (1/7)\n  @Prop({ mutable: true }) mainTitle: string = AlluvialDiagramDefaultValues.mainTitle;\n  @Prop({ mutable: true }) subTitle: string | ISubTitleType = AlluvialDiagramDefaultValues.subTitle;\n  @Prop({ mutable: true }) height: number = AlluvialDiagramDefaultValues.height;\n  @Prop({ mutable: true }) width: number = AlluvialDiagramDefaultValues.width;\n  @Prop({ mutable: true }) highestHeadingLevel: string | number = AlluvialDiagramDefaultValues.highestHeadingLevel;\n  @Prop({ mutable: true }) margin: IBoxModelType = AlluvialDiagramDefaultValues.margin;\n  @Prop({ mutable: true }) padding: IBoxModelType = AlluvialDiagramDefaultValues.padding;\n  @Prop({ mutable: true }) layout: string = AlluvialDiagramDefaultValues.layout;\n\n  // Data (2/7)\n  @Prop() linkData: object[];\n  @Prop() nodeData: object[];\n  @Prop() uniqueID: string;\n  @Prop({ mutable: true }) localization: ILocalizationType = AlluvialDiagramDefaultValues.localization;\n  @Prop({ mutable: true }) sourceAccessor: string = AlluvialDiagramDefaultValues.sourceAccessor;\n  @Prop({ mutable: true }) targetAccessor: string = AlluvialDiagramDefaultValues.targetAccessor;\n  @Prop({ mutable: true }) valueAccessor: string = AlluvialDiagramDefaultValues.valueAccessor;\n  @Prop({ mutable: true }) groupAccessor: string = AlluvialDiagramDefaultValues.groupAccessor;\n  @Prop({ mutable: true }) nodeIDAccessor: string = AlluvialDiagramDefaultValues.nodeIDAccessor;\n\n  // Color & Shape (4/7)\n  @Prop({ mutable: true }) nodeConfig: INodeConfigType = AlluvialDiagramDefaultValues.nodeConfig;\n  @Prop({ mutable: true }) linkConfig: ILinkConfigType = AlluvialDiagramDefaultValues.linkConfig;\n  @Prop({ mutable: true }) colorPalette: string = AlluvialDiagramDefaultValues.colorPalette;\n  @Prop({ mutable: true }) colors: string[];\n  @Prop({ mutable: true }) hoverStyle: IHoverStyleType = AlluvialDiagramDefaultValues.hoverStyle;\n  @Prop({ mutable: true }) clickStyle: IClickStyleType = AlluvialDiagramDefaultValues.clickStyle;\n  @Prop({ mutable: true }) cursor: string = AlluvialDiagramDefaultValues.cursor;\n  @Prop({ mutable: true }) hoverOpacity: number = AlluvialDiagramDefaultValues.hoverOpacity;\n  @Prop({ mutable: true }) animationConfig: IAnimationConfig = AlluvialDiagramDefaultValues.animationConfig;\n\n  // Data label (5/7)\n  @Prop({ mutable: true }) dataLabel: IDataLabelType = AlluvialDiagramDefaultValues.dataLabel;\n  @Prop({ mutable: true }) dataKeyNames: object;\n  @Prop({ mutable: true }) showTooltip: boolean = AlluvialDiagramDefaultValues.showTooltip;\n  @Prop({ mutable: true }) tooltipLabel: ITooltipLabelType = AlluvialDiagramDefaultValues.tooltipLabel;\n  @Prop({ mutable: true }) accessibility: IAccessibilityType = AlluvialDiagramDefaultValues.accessibility;\n  @Prop({ mutable: true }) annotations: object[] = AlluvialDiagramDefaultValues.annotations;\n\n  // Interactivity (7/7)\n  @Prop({ mutable: true }) suppressEvents: boolean = AlluvialDiagramDefaultValues.suppressEvents;\n  @Prop({ mutable: true }) hoverHighlight: object;\n  @Prop({ mutable: true }) clickHighlight: object[] = AlluvialDiagramDefaultValues.clickHighlight;\n  @Prop({ mutable: true }) interactionKeys: string[];\n\n  // Testing (8/7)\n  @Prop() unitTest: boolean = false;\n  //  @Prop() debugMode: boolean = false;\n\n  @Element()\n  alluvialDiagramEl: HTMLElement;\n  shouldValidateAccessibility: boolean = true;\n  shouldValidateLocalization: boolean = true;\n  svg: any;\n  root: any;\n  rootG: any;\n  nest: any;\n  alluvialProperties: any;\n  labels: any;\n  tooltipG: any;\n  defaults: boolean;\n  duration: number;\n  innerHeight: number;\n  innerWidth: number;\n  innerPaddedHeight: number;\n  innerPaddedWidth: number;\n  dataTest: any;\n  chartID: string;\n  enterNodeGroups: any;\n  exitNodeGroups: any;\n  updateNodeGroups: any;\n  enterNodes: any;\n  exitNodes: any;\n  updateNodes: any;\n  enterLinks: any;\n  exitLinks: any;\n  enterLinkGroups: any;\n  exitLinkGroups: any;\n  updateLinkGroups: any;\n  updateLinks: any;\n  enteringLabels: any;\n  exitingLabels: any;\n  updatingLabels: any;\n  nodeList: any;\n  linkList: any;\n  innerNodeData: any;\n  innerLinkData: any;\n  preppedData: any;\n  oldNodeCount: any;\n  nodeCount: any;\n  newColumn: any;\n  nodeG: any;\n  linkG: any;\n  labelG: any;\n  subTitleG: any;\n  innerLinkFillMode: any;\n  innerLabelAccessor: any;\n  innerIDAccessor: any;\n  innerNodeAlignment: any;\n  innerNodeInteractionKeys: any;\n  innerLinkInteractionKeys: any;\n  innerInteractionKeys: any = [];\n  colorArr: any;\n  noLinksLeftPadding: any;\n  widthAllNodesNoLinks: any;\n  previousNodeLayers: any;\n  currentNodeLayers: any;\n  previousMinNodeLayer: any;\n  previousMaxNodeLayer: any;\n  currentMaxNodeLayer: any;\n  currentMinNodeLayer: any;\n  topLevel: string = 'h2';\n  bottomLevel: string = 'p';\n  sourceLinksString: string = 'sourceLinks';\n  targetLinksString: string = 'targetLinks';\n  valueString: string = 'value';\n  groupKeys: any;\n  tableData: any;\n  tableColumns: any;\n  secondaryTableData: any;\n  secondaryTableColumns: any;\n  updated: boolean = true;\n  enterSize: number;\n  exitSize: number;\n  shouldSetDimensions: boolean = false;\n  shouldUpdateData: boolean = false;\n  shouldSetColors: boolean = false;\n  shouldSetSubTitle: boolean = false;\n  shouldSetTagLevels: boolean = false;\n  shouldRedrawWrapper: boolean = false;\n  shouldUpdateTableData: boolean = false;\n  shouldUpdateDescriptionWrapper: boolean = false;\n  shouldSetChartAccessibilityCount: boolean = false;\n  shouldSetChartAccessibilityTitle: boolean = false;\n  shouldSetChartAccessibilitySubtitle: boolean = false;\n  shouldSetChartAccessibilityLongDescription: boolean = false;\n  shouldSetChartAccessibilityExecutiveSummary: boolean = false;\n  shouldSetChartAccessibilityPurpose: boolean = false;\n  shouldSetChartAccessibilityContext: boolean = false;\n  shouldSetChartAccessibilityStatisticalNotes: boolean = false;\n  shouldSetChartAccessibilityStructureNotes: boolean = false;\n  shouldSetParentSVGAccessibility: boolean = false;\n  shouldSetGeometryAccessibilityAttributes: boolean = false;\n  shouldSetGeometryAriaLabels: boolean = false;\n  shouldSetGroupAccessibilityLabel: boolean = false;\n  shouldSetSelectionClass: boolean = false;\n  shouldSetAnnotationAccessibility: boolean = false;\n  shouldSetGlobalSelections: boolean = false;\n  shouldSetTestingAttributes: boolean = false;\n  shouldDrawInteractionState: boolean = false;\n  shouldEnterUpdateExit: boolean = false;\n  shouldUpdateNodeGeometries: boolean = false;\n  shouldUpdateNodeStyle: boolean = false;\n  shouldUpdateLinkGeometries: boolean = false;\n  shouldUpdateLinkStyle: boolean = false;\n  shouldDrawNodeLabels: boolean = false;\n  shouldSetNodeDimensions: boolean = false;\n  shouldCallSankeyGenerator: boolean = false;\n  shouldUpdateAnnotations: boolean = false;\n  shouldValidateIdAccessor: boolean = false;\n  shouldValidateLabelText: boolean = false;\n  shouldValidateLinkFillMode: boolean = false;\n  shouldValidateNodeAlignment: boolean = false;\n  shouldValidateInteractionKeys: boolean = false;\n  shouldValidateLinkGroups: boolean = false;\n  shouldUpdateCursor: boolean = false;\n  shouldBindInteractivity: boolean = false;\n  shouldResetRoot: boolean = false;\n  shouldSetNodeLabelOpacity: boolean = false;\n  shouldSetLocalizationConfig: boolean = false;\n  bitmaps: any;\n\n  @Watch('nodeData')\n  @Watch('linkData')\n  dataWatcher(_newData, _oldData) {\n    this.updated = true;\n    this.shouldUpdateData = true;\n    this.shouldSetColors = true;\n    this.shouldValidateIdAccessor = true;\n    this.shouldSetNodeDimensions = true;\n    this.shouldCallSankeyGenerator = true;\n    this.shouldUpdateTableData = true;\n    this.shouldValidateLinkGroups = true;\n    this.shouldValidateAccessibility = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateNodeGeometries = true;\n    this.shouldUpdateNodeStyle = true;\n    this.shouldUpdateLinkGeometries = true;\n    this.shouldDrawNodeLabels = true;\n    this.shouldUpdateLinkStyle = true;\n    this.shouldDrawInteractionState = true;\n    // this.shouldSetNodeLabelOpacity = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('uniqueID')\n  idWatcher(newID, _oldID) {\n    console.error(\n      'Change detected in prop uniqueID from value ' +\n        _oldID +\n        ' to value ' +\n        newID +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.chartID = newID || 'alluvial-diagram-' + uuid();\n    // this.alluvialDiagramEl.id = this.chartID;\n    // this.shouldValidateAccessibility = true;\n    // this.shouldUpdateDescriptionWrapper = true;\n    // this.shouldSetParentSVGAccessibility = true;\n    // this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('highestHeadingLevel')\n  headingWatcher(_newVal, _oldVal) {\n    this.shouldRedrawWrapper = true;\n    this.shouldSetTagLevels = true;\n    this.shouldSetChartAccessibilityCount = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('mainTitle')\n  mainTitleWatcher(_newVal, _oldVal) {\n    this.shouldValidateAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('subTitle')\n  subTitleWatcher(_newVal, _oldVal) {\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('height')\n  @Watch('width')\n  @Watch('padding')\n  @Watch('margin')\n  dimensionWatcher(_newVal, _oldVal) {\n    this.shouldSetDimensions = true;\n    this.shouldSetNodeDimensions = true;\n    this.shouldResetRoot = true;\n    this.shouldCallSankeyGenerator = true;\n    this.shouldSetGlobalSelections = true;\n    // this.shouldEnterUpdateExit = true;\n    this.shouldUpdateNodeGeometries = true;\n    this.shouldUpdateNodeStyle = true;\n    this.shouldUpdateLinkGeometries = true;\n    this.shouldUpdateLinkStyle = true;\n    this.shouldDrawNodeLabels = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('layout')\n  layoutWatcher(_newVal, _oldVal) {\n    this.shouldSetDimensions = true;\n    this.shouldSetNodeDimensions = true;\n    this.shouldResetRoot = true;\n    this.shouldCallSankeyGenerator = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldUpdateNodeGeometries = true;\n    this.shouldUpdateNodeStyle = true;\n    this.shouldUpdateLinkGeometries = true;\n    this.shouldUpdateLinkStyle = true;\n    this.shouldDrawNodeLabels = true;\n    this.shouldUpdateAnnotations = true;\n    console.warn(\n      'Change detected in prop layout from value ' +\n        _oldVal +\n        ' to value ' +\n        _newVal +\n        '. Transitions have yet to be designed in VCC for this prop.'\n    );\n  }\n\n  @Watch('sourceAccessor')\n  sourceAccessorWatcher(_newVal, _oldVal) {\n    console.error(\n      'Change detected in prop sourceAccessor from value ' +\n        _oldVal +\n        ' to value ' +\n        _newVal +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.shouldUpdateData = true;\n    // this.shouldSetNodeDimensions = true;\n    // this.shouldCallSankeyGenerator = true;\n    // this.shouldUpdateTableData = true;\n    // this.shouldSetGlobalSelections = true;\n    // this.shouldEnterUpdateExit = true;\n    // this.shouldUpdateNodeGeometries = true;\n    // this.shouldUpdateNodeStyle = true;\n    // this.shouldUpdateLinkGeometries = true;\n    // this.shouldUpdateLinkStyle = true;\n    // this.shouldDrawInteractionState = true;\n    // this.shouldSetNodeLabelOpacity = true;\n    // this.shouldDrawNodeLabels = true;\n    // this.shouldUpdateAnnotations = true;\n    // this.shouldSetGeometryAriaLabels = true;\n    // if (!(this.interactionKeys && this.interactionKeys.length)) {\n    //   this.shouldValidateInteractionKeys = true;\n    //   this.shouldSetSelectionClass = true;\n    // }\n  }\n\n  @Watch('targetAccessor')\n  targetAccessorWatcher(_newVal, _oldVal) {\n    console.error(\n      'Change detected in prop targetAccessor from value ' +\n        _oldVal +\n        ' to value ' +\n        _newVal +\n        '. This prop cannot be changed after component has loaded.'\n    );\n\n    // this.shouldUpdateData = true;\n    // this.shouldSetNodeDimensions = true;\n    // this.shouldCallSankeyGenerator = true;\n    // this.shouldUpdateTableData = true;\n    // this.shouldSetGlobalSelections = true;\n    // this.shouldEnterUpdateExit = true;\n    // this.shouldUpdateNodeGeometries = true;\n    // this.shouldUpdateNodeStyle = true;\n    // this.shouldUpdateLinkGeometries = true;\n    // this.shouldUpdateLinkStyle = true;\n    // this.shouldDrawInteractionState = true;\n    // this.shouldSetNodeLabelOpacity = true;\n    // this.shouldDrawNodeLabels = true;\n    // this.shouldUpdateAnnotations = true;\n    // this.shouldSetGeometryAriaLabels = true;\n    // if (!(this.interactionKeys && this.interactionKeys.length)) {\n    //   this.shouldValidateInteractionKeys = true;\n    //   this.shouldSetSelectionClass = true;\n    // }\n  }\n\n  @Watch('valueAccessor')\n  valueAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldSetNodeDimensions = true;\n    this.shouldCallSankeyGenerator = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateNodeGeometries = true;\n    this.shouldUpdateNodeStyle = true;\n    this.shouldUpdateLinkGeometries = true;\n    this.shouldUpdateLinkStyle = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetNodeLabelOpacity = true;\n    this.shouldDrawNodeLabels = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('groupAccessor')\n  groupAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldValidateLinkFillMode = true;\n    this.shouldValidateLinkGroups = true;\n    this.shouldSetNodeDimensions = true;\n    this.shouldCallSankeyGenerator = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateNodeGeometries = true;\n    this.shouldUpdateNodeStyle = true;\n    this.shouldUpdateLinkGeometries = true;\n    this.shouldUpdateLinkStyle = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetNodeLabelOpacity = true;\n    this.shouldDrawNodeLabels = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('nodeIDAccessor')\n  nodeIDAccessorWatcher(_newVal, _oldVal) {\n    console.error(\n      'Change detected in prop nodeIDAccessor from value ' +\n        _oldVal +\n        ' to value ' +\n        _newVal +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.shouldUpdateData = true;\n    // this.shouldValidateIdAccessor = true;\n    // this.shouldSetNodeDimensions = true;\n    // this.shouldCallSankeyGenerator = true;\n    // this.shouldUpdateTableData = true;\n    // this.shouldSetGlobalSelections = true;\n    // this.shouldEnterUpdateExit = true;\n    // this.shouldUpdateNodeGeometries = true;\n    // this.shouldUpdateNodeStyle = true;\n    // this.shouldUpdateLinkGeometries = true;\n    // this.shouldUpdateLinkStyle = true;\n    // this.shouldDrawInteractionState = true;\n    // this.shouldSetNodeLabelOpacity = true;\n    // this.shouldDrawNodeLabels = true;\n    // this.shouldUpdateAnnotations = true;\n    // this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('nodeConfig')\n  nodeConfigWatcher(_newVal, _oldVal) {\n    const newAlignmentVal = _newVal && _newVal.alignment;\n    const oldAlignmentVal = _oldVal && _oldVal.alignment;\n    const newCompareVal = _newVal && _newVal.compare;\n    const oldCompareVal = _oldVal && _oldVal.compare;\n    const newFillVal = _newVal && _newVal.fill;\n    const oldFillVal = _oldVal && _oldVal.fill;\n    const newWidthVal = _newVal && _newVal.width;\n    const oldWidthVal = _oldVal && _oldVal.width;\n    const newPaddingVal = _newVal && _newVal.padding;\n    const oldPaddingVal = _oldVal && _oldVal.padding;\n    if (newAlignmentVal !== oldAlignmentVal) {\n      this.shouldValidateNodeAlignment = true;\n    }\n    if (\n      newAlignmentVal !== oldAlignmentVal ||\n      newCompareVal !== oldCompareVal ||\n      newWidthVal !== oldWidthVal ||\n      newPaddingVal !== oldPaddingVal\n    ) {\n      this.shouldSetNodeDimensions = true;\n      this.shouldCallSankeyGenerator = true;\n      this.shouldSetGlobalSelections = true;\n      this.shouldDrawInteractionState = true;\n      this.shouldSetGeometryAccessibilityAttributes = true;\n      this.shouldUpdateNodeGeometries = true;\n      this.shouldUpdateLinkGeometries = true;\n      this.shouldDrawNodeLabels = true;\n      this.shouldUpdateAnnotations = true;\n    }\n    if (newFillVal !== oldFillVal) {\n      this.shouldUpdateNodeStyle = true;\n      this.shouldUpdateLinkStyle = true;\n    }\n  }\n\n  @Watch('linkConfig')\n  linkConfigWatcher(_newVal, _oldVal) {\n    const newFillModeVal = _newVal && _newVal.fillMode;\n    const oldFillModeVal = _oldVal && _oldVal.fillMode;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    // const newOpacityVal = _newVal && _newVal.opacity;\n    // const oldOpacityVal = _oldVal && _oldVal.opacity;\n    if (newFillModeVal !== oldFillModeVal) {\n      this.shouldValidateLinkFillMode = true;\n      this.shouldSetGlobalSelections = true;\n      this.shouldEnterUpdateExit = true;\n      this.shouldUpdateLinkGeometries = true;\n    }\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetNodeDimensions = true;\n      this.shouldCallSankeyGenerator = true;\n      this.shouldSetGlobalSelections = true;\n      this.shouldSetNodeLabelOpacity = true;\n      this.shouldUpdateNodeGeometries = true;\n      this.shouldUpdateLinkGeometries = true;\n      this.shouldDrawNodeLabels = true;\n      this.shouldUpdateAnnotations = true;\n    }\n    this.shouldUpdateLinkStyle = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetTestingAttributes = true;\n    // if (newOpacityVal !== oldOpacityVal) {\n    // }\n  }\n\n  @Watch('colors')\n  @Watch('colorPalette')\n  colorWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldUpdateNodeStyle = true;\n    this.shouldUpdateLinkStyle = true;\n    this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('clickStyle')\n  @Watch('hoverStyle')\n  interactionStyleWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetNodeLabelOpacity = true;\n  }\n\n  @Watch('cursor')\n  cursorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCursor = true;\n  }\n\n  @Watch('hoverOpacity')\n  hoverOpacityWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetNodeLabelOpacity = true;\n  }\n\n  @Watch('dataLabel')\n  dataLabelWatcher(_newVal, _oldVal) {\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    const newLabelAccessorVal = _newVal && _newVal.labelAccessor ? _newVal.labelAccessor : false;\n    const oldLabelAccessorVal = _oldVal && _oldVal.labelAccessor ? _oldVal.labelAccessor : false;\n    if (newLabelAccessorVal !== oldLabelAccessorVal) {\n      this.shouldValidateLabelText = true;\n    }\n    this.shouldDrawNodeLabels = true;\n    this.shouldUpdateTableData = true;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetNodeLabelOpacity = true;\n    }\n  }\n\n  @Watch('tooltipLabel')\n  tooltipLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('showTooltip')\n  showTooltipWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('accessibility')\n  accessibilityWatcher(_newVal, _oldVal) {\n    this.shouldValidateAccessibility = true;\n    const newTitle = _newVal && _newVal.title ? _newVal.title : false;\n    const oldTitle = _oldVal && _oldVal.title ? _oldVal.title : false;\n    if (newTitle !== oldTitle) {\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newExecutiveSummary = _newVal && _newVal.executiveSummary ? _newVal.executiveSummary : false;\n    const oldExecutiveSummary = _oldVal && _oldVal.executiveSummary ? _oldVal.executiveSummary : false;\n    if (newExecutiveSummary !== oldExecutiveSummary) {\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n    }\n    const newPurpose = _newVal && _newVal.purpose ? _newVal.purpose : false;\n    const oldPurpose = _oldVal && _oldVal.purpose ? _oldVal.purpose : false;\n    if (newPurpose !== oldPurpose) {\n      this.shouldSetChartAccessibilityPurpose = true;\n    }\n    const newLongDescription = _newVal && _newVal.longDescription ? _newVal.longDescription : false;\n    const oldLongDescription = _oldVal && _oldVal.longDescription ? _oldVal.longDescription : false;\n    if (newLongDescription !== oldLongDescription) {\n      this.shouldSetChartAccessibilityLongDescription = true;\n    }\n    const newContext = _newVal && _newVal.contextExplanation ? _newVal.contextExplanation : false;\n    const oldContext = _oldVal && _oldVal.contextExplanation ? _oldVal.contextExplanation : false;\n    if (newContext !== oldContext) {\n      this.shouldSetChartAccessibilityContext = true;\n    }\n    const newStatisticalNotes = _newVal && _newVal.statisticalNotes ? _newVal.statisticalNotes : false;\n    const oldStatisticalNotes = _oldVal && _oldVal.statisticalNotes ? _oldVal.statisticalNotes : false;\n    if (newStatisticalNotes !== oldStatisticalNotes) {\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n    }\n    const newStructureNotes = _newVal && _newVal.structureNotes ? _newVal.structureNotes : false;\n    const oldStructureNotes = _oldVal && _oldVal.structureNotes ? _oldVal.structureNotes : false;\n    if (newStructureNotes !== oldStructureNotes) {\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    const newincludeDataKeyNames = _newVal && _newVal.includeDataKeyNames;\n    const oldincludeDataKeyNames = _oldVal && _oldVal.includeDataKeyNames;\n    const newElementDescriptionAccessor =\n      _newVal && _newVal.elementDescriptionAccessor ? _newVal.elementDescriptionAccessor : false;\n    const oldElementDescriptionAccessor =\n      _oldVal && _oldVal.elementDescriptionAccessor ? _oldVal.elementDescriptionAccessor : false;\n    if (\n      newincludeDataKeyNames !== oldincludeDataKeyNames ||\n      newElementDescriptionAccessor !== oldElementDescriptionAccessor\n    ) {\n      if (newincludeDataKeyNames !== oldincludeDataKeyNames) {\n        // this one is tricky because it needs to run after the lifecycle\n        // AND it could run in the off-chance this prop is changed\n        this.shouldSetGroupAccessibilityLabel = true;\n      }\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    // const newTextures = _newVal && _newVal.hideTextures ? _newVal.hideTextures : false;\n    // const oldTextures = _oldVal && _oldVal.hideTextures ? _oldVal.hideTextures : false;\n    // const newExTextures = _newVal && _newVal.showExperimentalTextures ? _newVal.showExperimentalTextures : false;\n    // const oldExTextures = _oldVal && _oldVal.showExperimentalTextures ? _oldVal.showExperimentalTextures : false;\n    // if (newTextures !== oldTextures || newExTextures !== oldExTextures) {\n    //   this.shouldSetTextures = true;\n    //   this.shouldUpdateLegend = true;\n    //   this.shouldDrawInteractionState = true;\n    //   this.shouldCheckLabelColor = true;\n    // }\n    // const newStrokes = _newVal && _newVal.hideStrokes ? _newVal.hideStrokes : false;\n    // const oldStrokes = _oldVal && _oldVal.hideStrokes ? _oldVal.hideStrokes : false;\n    // if (newStrokes !== oldStrokes) {\n    //   this.shouldSetStrokes = true;\n    //   this.shouldUpdateLegend = true;\n    //   this.shouldDrawInteractionState = true;\n    // }\n    const newKeyNav =\n      _newVal && _newVal.keyboardNavConfig && _newVal.keyboardNavConfig.disabled\n        ? _newVal.keyboardNavConfig.disabled\n        : false;\n    const oldKeyNav =\n      _oldVal && _oldVal.keyboardNavConfig && _oldVal.keyboardNavConfig.disabled\n        ? _oldVal.keyboardNavConfig.disabled\n        : false;\n    const newInterface = _newVal && _newVal.elementsAreInterface ? _newVal.elementsAreInterface : false;\n    const oldInterface = _oldVal && _oldVal.elementsAreInterface ? _oldVal.elementsAreInterface : false;\n    if (newKeyNav !== oldKeyNav || newInterface !== oldInterface) {\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetChartAccessibilitySubtitle = true;\n      this.shouldSetChartAccessibilityLongDescription = true;\n      this.shouldSetChartAccessibilityContext = true;\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n      this.shouldSetChartAccessibilityPurpose = true;\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    if (newInterface !== oldInterface) {\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('localization')\n  localizationWatcher(_newVal, _oldVal) {\n    this.shouldValidateLocalization = true;\n\n    // language\n    const newLanguage = _newVal && _newVal.language ? _newVal.language : false;\n    const oldLanguage = _oldVal && _oldVal.language ? _oldVal.language : false;\n    if (newLanguage !== oldLanguage) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n\n    // numeralLocale\n    const newNumeralLocale = _newVal && _newVal.numeralLocale ? _newVal.numeralLocale : false;\n    const oldNumeralLocale = _oldVal && _oldVal.numeralLocale ? _oldVal.numeralLocale : false;\n    if (newNumeralLocale !== oldNumeralLocale) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n  }\n\n  @Watch('annotations')\n  annotationsWatcher(_newVal, _oldVal) {\n    this.shouldValidateAccessibility = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('clickHighlight')\n  clickWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetNodeLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n  }\n\n  @Watch('hoverHighlight')\n  hoverWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetNodeLabelOpacity = true;\n  }\n\n  @Watch('interactionKeys')\n  interactionWatcher(_newVal, _oldVal) {\n    this.shouldSetNodeDimensions = true;\n    this.shouldCallSankeyGenerator = true;\n    this.shouldValidateInteractionKeys = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetNodeLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n  }\n\n  @Watch('dataKeyNames')\n  dataKeyNamesWatcher(_newVal, _oldVal) {\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('suppressEvents')\n  suppressWatcher(_newVal, _oldVal) {\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldValidateAccessibility = true;\n    this.shouldRedrawWrapper = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n    // this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('unitTest')\n  unitTestWatcher(_newVal, _oldVal) {\n    this.shouldSetTestingAttributes = true;\n  }\n\n  componentWillLoad() {\n    const chartID = this.uniqueID || 'alluvial-diagram-' + uuid();\n    this.initialLoadEvent.emit({ chartID: chartID });\n    // contrary to componentWillUpdate, this method appears safe to use for\n    // any calculations we need. Keeping them here reduces future refactor,\n    // since componentWillUpdate should eventually mirror this method\n    return new Promise(resolve => {\n      this.duration = 0;\n      this.defaults = true;\n      this.chartID = chartID;\n      this.alluvialDiagramEl.id = this.chartID;\n      this.setLocalizationConfig();\n      this.setTagLevels();\n      this.prepareData();\n      this.setDimensions();\n      this.validateIdAccessor();\n      this.validateLabelText();\n      this.validateLinkFillMode();\n      this.validateNodeAlignment();\n      this.validateInteractionKeys();\n      this.validateLinkGroups();\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.setColors();\n      this.setNodeDimensions();\n      this.callSankeyGenerator();\n      this.setTableData();\n      resolve('component will load');\n    });\n  }\n\n  componentWillUpdate() {\n    // NEVER put items in this method that rely on props (until stencil bug is resolved)\n    // All items that belong here are currently at the top of render\n    // see: https://github.com/ionic-team/stencil/issues/2061#issuecomment-578282178\n    return new Promise(resolve => {\n      resolve('component will update');\n    });\n  }\n\n  componentDidLoad() {\n    return new Promise(resolve => {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.renderRootElements();\n      this.setTooltipInitialStyle();\n      this.setChartDescriptionWrapper();\n      this.setChartAccessibilityTitle();\n      this.setChartAccessibilitySubtitle();\n      this.setChartAccessibilityLongDescription();\n      this.setChartAccessibilityExecutiveSummary();\n      this.setChartAccessibilityPurpose();\n      this.setChartAccessibilityContext();\n      this.setChartAccessibilityStatisticalNotes();\n      this.setChartAccessibilityStructureNotes();\n      this.setParentSVGAccessibility();\n      this.reSetRoot();\n      this.setSubTitleElements();\n      this.setGlobalSelections();\n      this.setTestingAttributes();\n      this.enterLinkGeometries();\n      this.updateLinkGeometries();\n      this.exitLinkGeometries();\n      this.enterNodeGeometries();\n      this.updateNodeGeometries();\n      this.exitNodeGeometries();\n      this.enterNodeLabels();\n      this.updateNodeLabels();\n      this.exitNodeLabels();\n      this.updateLinkStyle();\n      this.drawNodeGeometries();\n      this.drawLinkGeometries();\n      this.setGeometryAccessibilityAttributes();\n      this.setGeometryAriaLabels();\n      this.setGroupAccessibilityID();\n      this.setChartCountAccessibility();\n      this.setSelectedClass();\n      this.updateCursor();\n      this.drawNodeLabels();\n      this.bindInteractivity();\n      this.drawAnnotations();\n      this.setAnnotationAccessibility();\n      this.onChangeHandler();\n      this.duration = 750;\n      this.defaults = false;\n      hideNonessentialGroups(this.root.node(), null);\n      resolve('component did load');\n    }).then(() => this.initialLoadEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  componentDidUpdate() {\n    return new Promise(resolve => {\n      this.duration = !this.animationConfig || !this.animationConfig.disabled ? 750 : 0;\n      if (this.shouldUpdateDescriptionWrapper) {\n        this.setChartDescriptionWrapper();\n        this.shouldUpdateDescriptionWrapper = false;\n      }\n      if (this.shouldSetChartAccessibilityCount) {\n        this.setChartCountAccessibility();\n        this.shouldSetChartAccessibilityCount = false;\n      }\n      if (this.shouldSetChartAccessibilityTitle) {\n        this.setChartAccessibilityTitle();\n        this.shouldSetChartAccessibilityTitle = false;\n      }\n      if (this.shouldSetChartAccessibilitySubtitle) {\n        this.setChartAccessibilitySubtitle();\n        this.shouldSetChartAccessibilitySubtitle = false;\n      }\n      if (this.shouldSetChartAccessibilityLongDescription) {\n        this.setChartAccessibilityLongDescription();\n        this.shouldSetChartAccessibilityLongDescription = false;\n      }\n      if (this.shouldSetChartAccessibilityExecutiveSummary) {\n        this.setChartAccessibilityExecutiveSummary();\n        this.shouldSetChartAccessibilityExecutiveSummary = false;\n      }\n      if (this.shouldSetChartAccessibilityPurpose) {\n        this.setChartAccessibilityPurpose();\n        this.shouldSetChartAccessibilityPurpose = false;\n      }\n      if (this.shouldSetChartAccessibilityContext) {\n        this.setChartAccessibilityContext();\n        this.shouldSetChartAccessibilityContext = false;\n      }\n      if (this.shouldSetChartAccessibilityStatisticalNotes) {\n        this.setChartAccessibilityStatisticalNotes();\n        this.shouldSetChartAccessibilityStatisticalNotes = false;\n      }\n      if (this.shouldSetChartAccessibilityStructureNotes) {\n        this.setChartAccessibilityStructureNotes();\n        this.shouldSetChartAccessibilityStructureNotes = false;\n      }\n      if (this.shouldSetParentSVGAccessibility) {\n        this.setParentSVGAccessibility();\n        this.shouldSetParentSVGAccessibility = false;\n      }\n      if (this.shouldResetRoot) {\n        this.reSetRoot();\n        this.shouldResetRoot = false;\n      }\n      if (this.shouldSetGlobalSelections) {\n        this.setGlobalSelections();\n        this.shouldSetGlobalSelections = false;\n      }\n      if (this.shouldSetTestingAttributes) {\n        this.setTestingAttributes();\n        this.shouldSetTestingAttributes = false;\n      }\n      if (this.shouldSetSubTitle) {\n        this.setSubTitleElements();\n        this.shouldSetSubTitle = false;\n      }\n      if (this.shouldEnterUpdateExit) {\n        this.enterLinkGeometries();\n        this.updateLinkGeometries();\n        this.exitLinkGeometries();\n        this.enterNodeGeometries();\n        this.updateNodeGeometries();\n        this.exitNodeGeometries();\n        this.enterNodeLabels();\n        this.updateNodeLabels();\n        this.exitNodeLabels();\n        this.shouldEnterUpdateExit = false;\n      }\n      if (this.shouldUpdateNodeGeometries) {\n        this.drawNodeGeometries();\n        this.shouldUpdateNodeGeometries = false;\n      }\n      if (this.shouldUpdateNodeStyle) {\n        this.updateNodeStyle();\n        this.shouldUpdateNodeStyle = false;\n      }\n      if (this.shouldUpdateLinkGeometries) {\n        this.drawLinkGeometries();\n        this.shouldUpdateLinkGeometries = false;\n      }\n      if (this.shouldUpdateLinkStyle) {\n        this.updateLinkStyle();\n        this.shouldUpdateLinkStyle = false;\n      }\n      if (this.shouldSetGeometryAccessibilityAttributes) {\n        this.setGeometryAccessibilityAttributes();\n        this.shouldSetGeometryAccessibilityAttributes = false;\n      }\n      if (this.shouldSetGeometryAriaLabels) {\n        this.setGeometryAriaLabels();\n        this.shouldSetGeometryAriaLabels = false;\n      }\n      if (this.shouldSetGroupAccessibilityLabel) {\n        this.setGroupAccessibilityID();\n        this.shouldSetGroupAccessibilityLabel = false;\n      }\n      if (this.shouldDrawNodeLabels) {\n        this.drawNodeLabels();\n        this.shouldDrawNodeLabels = false;\n      }\n      if (this.shouldDrawInteractionState) {\n        this.updateInteractionState();\n        this.shouldDrawInteractionState = false;\n      }\n      if (this.shouldSetNodeLabelOpacity) {\n        this.setNodeLabelOpacity();\n        this.shouldSetNodeLabelOpacity = false;\n      }\n      if (this.shouldSetSelectionClass) {\n        this.setSelectedClass();\n        this.shouldSetSelectionClass = false;\n      }\n      if (this.shouldUpdateCursor) {\n        this.updateCursor();\n        this.shouldUpdateCursor = false;\n      }\n      if (this.shouldBindInteractivity) {\n        this.bindInteractivity();\n        this.shouldBindInteractivity = false;\n      }\n      if (this.shouldUpdateAnnotations) {\n        this.drawAnnotations();\n        this.shouldUpdateAnnotations = false;\n      }\n      if (this.shouldSetAnnotationAccessibility) {\n        this.setAnnotationAccessibility();\n        this.shouldSetAnnotationAccessibility = false;\n      }\n      this.onChangeHandler();\n      resolve('component did update');\n    }).then(() => this.drawEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  setDimensions() {\n    this.padding = typeof this.padding === 'string' ? getPadding(this.padding) : this.padding;\n\n    // since we hacked sankey.ts for vertical layout, we have to get a bit weird\n    // on the definition of these dimesions and flip things for vertical layout\n    if (this.layout === 'vertical') {\n      this.innerWidth = this.height - this.margin.top - this.margin.bottom;\n      this.innerHeight = this.width - this.margin.left - this.margin.right;\n      this.innerPaddedHeight = this.innerHeight - this.padding.left - this.padding.right;\n      this.innerPaddedWidth = this.innerWidth - this.padding.top - this.padding.bottom;\n    } else {\n      this.innerWidth = this.width - this.margin.left - this.margin.right;\n      this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n      this.innerPaddedHeight = this.innerHeight - this.padding.top - this.padding.bottom;\n      this.innerPaddedWidth = this.innerWidth - this.padding.left - this.padding.right;\n    }\n  }\n\n  prepareData() {\n    this.nodeList = [];\n    this.linkList = [];\n\n    this.linkData.forEach((obj, i) => {\n      const linkObj = {\n        source: obj[this.sourceAccessor],\n        target: obj[this.targetAccessor],\n        value: obj[this.valueAccessor],\n        data: obj\n      };\n\n      if (this.groupAccessor) {\n        linkObj[this.groupAccessor] = obj[this.groupAccessor];\n      }\n\n      this.linkList[i] = linkObj;\n    });\n\n    // if the user did not set this.nodeData, generate node data from link data\n    this.nodeData && this.nodeData.length > 1 ? (this.nodeList = this.nodeData) : this.createNodeList();\n  }\n\n  createNodeList() {\n    this.nodeList = [];\n    this.linkData.map(link => {\n      if (!this.nodeList.some(e => e.id === link[this.sourceAccessor])) {\n        const uniqueSourceID = { id: link[this.sourceAccessor] };\n        this.nodeList.push(uniqueSourceID);\n      }\n      if (!this.nodeList.some(e => e.id === link[this.targetAccessor])) {\n        const uniqueTargetID = { id: link[this.targetAccessor] };\n        this.nodeList.push(uniqueTargetID);\n      }\n    });\n  }\n\n  validateLabelText() {\n    // if label accessor is passed use that, otherwise default to value hardcoded which is the total\n    // of valueAccessor at the node level\n    this.innerLabelAccessor = this.dataLabel.labelAccessor ? this.dataLabel.labelAccessor : this.valueString;\n  }\n\n  // if there is no nodeData present, use 'id', otherwise use the nodeIDAccessor that is passed\n  validateIdAccessor() {\n    this.innerIDAccessor =\n      this.nodeData && this.nodeData.length > 1\n        ? this.nodeList[0][this.nodeIDAccessor]\n          ? this.nodeIDAccessor\n          : 'id'\n        : 'id';\n  }\n\n  validateLinkFillMode() {\n    this.innerLinkFillMode =\n      this.groupAccessor && this.linkConfig.fillMode === 'group'\n        ? 'group'\n        : this.linkConfig.fillMode === 'source'\n        ? 'source'\n        : this.linkConfig.fillMode === 'target'\n        ? 'target'\n        : this.linkConfig.fillMode === 'link'\n        ? 'link'\n        : 'none';\n  }\n\n  validateNodeAlignment() {\n    this.innerNodeAlignment =\n      this.layout === 'vertical'\n        ? this.nodeConfig.alignment === 'bottom'\n          ? sankeyRight\n          : this.nodeConfig.alignment === 'middle'\n          ? sankeyCenter\n          : this.nodeConfig.alignment === 'justify'\n          ? sankeyJustify\n          : sankeyLeft\n        : this.nodeConfig.alignment === 'right'\n        ? sankeyRight\n        : this.nodeConfig.alignment === 'center'\n        ? sankeyCenter\n        : this.nodeConfig.alignment === 'justify'\n        ? sankeyJustify\n        : sankeyLeft;\n  }\n\n  validateInteractionKeys() {\n    this.innerInteractionKeys = [];\n\n    this.innerInteractionKeys =\n      this.interactionKeys && this.interactionKeys.length\n        ? this.interactionKeys\n        : [this.sourceAccessor, this.targetAccessor];\n  }\n\n  validateLinkGroups() {\n    this.groupKeys = [];\n\n    if (this.groupAccessor) {\n      this.groupKeys = this.linkData.map(d => d[this.groupAccessor]).filter((x, i, a) => a.indexOf(x) === i);\n    }\n  }\n\n  shouldValidateLocalizationProps() {\n    const windowInstances = getGlobalInstances();\n    const languageString = windowInstances.i18Next.language;\n    const languageObject = windowInstances.i18Next.getResourceBundle(languageString);\n    const numeralObject = windowInstances.numeral.localeData();\n    if (this.shouldValidateLocalization && !this.localization.skipValidation) {\n      this.shouldValidateLocalization = false;\n      validateLocalizationProps(this.chartID, {\n        ...this.localization,\n        language: languageObject,\n        numeralLocale: numeralObject\n      });\n    }\n  }\n\n  shouldValidateAccessibilityProps() {\n    if (this.shouldValidateAccessibility && !this.accessibility.disableValidation) {\n      this.shouldValidateAccessibility = false;\n      validateAccessibilityProps(\n        this.chartID,\n        { ...this.accessibility },\n        {\n          annotations: this.annotations,\n          data: this.linkData,\n          uniqueID: this.uniqueID,\n          context: {\n            mainTitle: this.mainTitle,\n            onClickEvent: this.suppressEvents ? undefined : this.clickEvent.emit\n          }\n        }\n      );\n    }\n  }\n\n  getLanguageString() {\n    return getActiveLanguageString(this.localization);\n  }\n\n  setLocalizationConfig() {\n    configLocalization(this.localization);\n  }\n\n  setTableData() {\n    // generate scoped and formatted data for data-table component, showing node data\n    const uniqueNodeAccessors = ['nodeIDAccessor', 'valueAccessor'];\n    const nodeAccessors = {\n      singleAccessors: uniqueNodeAccessors,\n      nestedAccessors: [\n        {\n          objectName: 'dataLabel',\n          objectAccessors: ['labelAccessor'],\n          formatAccessors: ['format']\n        }\n      ]\n    };\n\n    const nodeKeys = scopeDataKeys(this, nodeAccessors, 'alluvial-diagram');\n    this.tableData = this.getScopedTableData(this.preppedData.nodes, nodeKeys);\n    this.tableColumns = Object.keys(nodeKeys);\n\n    // create secondary table data for link data\n    // remove dataLabel accessor, as we use this in the nodeData table\n    const linkChartAccessors = chartAccessors;\n    delete linkChartAccessors.nestedAccessors[2];\n    const keys = scopeDataKeys(this, linkChartAccessors, 'alluvial-diagram-secondary-table');\n    this.secondaryTableData = this.getScopedTableData(this.preppedData.links, keys);\n    this.secondaryTableColumns = Object.keys(keys);\n  }\n\n  getScopedTableData(data, keyMap) {\n    const scopedData = [];\n    data.forEach(dataRecord => {\n      const scopedDataRecord = {};\n      // links always have data objects, so will always enter this section of the loop\n      Object.keys(keyMap).forEach(field => {\n        if ('data' in dataRecord && dataRecord.data[field]) {\n          scopedDataRecord[field] =\n            keyMap[field] && dataRecord.data[field]\n              ? formatStats(dataRecord.data[field], keyMap[field])\n              : dataRecord.data[field];\n        } else {\n          if (field === this.valueAccessor) {\n            scopedDataRecord[field] = keyMap[field]\n              ? formatStats(dataRecord[this.valueString], keyMap[field])\n              : dataRecord[this.valueString];\n          } else {\n            scopedDataRecord[field] =\n              keyMap[field] && dataRecord[field] ? formatStats(dataRecord[field], keyMap[field]) : dataRecord[field];\n          }\n        }\n      });\n      scopedData.push(scopedDataRecord);\n    });\n    return scopedData;\n  }\n\n  setNodeDimensions() {\n    // controls node width and node padding\n    this.alluvialProperties = sankey(this.nodeConfig.compare, this.linkConfig.visible, this.layout)\n      .nodeId(d => d[this.innerIDAccessor])\n      .nodeWidth(this.nodeConfig.width)\n      .nodePadding(this.nodeConfig.padding)\n      .nodeAlign(this.innerNodeAlignment)\n      .nodeSort(null)\n      .size([this.innerPaddedWidth, this.innerPaddedHeight]);\n  }\n\n  callSankeyGenerator() {\n    const sankeyData = (nodes, links) =>\n      this.alluvialProperties({\n        nodes: nodes.map(d => ({ ...d })),\n        links: links.map(d => ({ ...d }))\n      });\n    this.preppedData = sankeyData(this.nodeList, this.linkList);\n    this.nodeCount = max(this.preppedData.nodes, d => d.layer);\n  }\n\n  renderRootElements() {\n    this.svg = select(this.alluvialDiagramEl)\n      .select('.visa-viz-d3-alluvial-container')\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height);\n    // .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    this.root = this.svg.append('g').attr('id', 'visa-viz-margin-container-g-' + this.chartID);\n    this.rootG = this.root.append('g').attr('id', 'visa-viz-padding-container-g-' + this.chartID);\n\n    this.nodeG = this.rootG.append('g').attr('class', 'alluvial-node-group');\n    this.linkG = this.rootG.append('g').attr('class', 'alluvial-link-group');\n\n    this.labelG = this.rootG.append('g').attr('class', 'alluvial-dataLabel-group');\n    this.subTitleG = select(this.alluvialDiagramEl).select('.alluvial-sub-title');\n    this.tooltipG = select(this.alluvialDiagramEl).select('.alluvial-tooltip');\n  }\n\n  updateCursor() {\n    this.updateLinks.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    // this.updateNodes.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    this.updatingLabels.attr('cursor', !this.suppressEvents && this.dataLabel.visible ? this.cursor : null);\n  }\n  // reset graph size based on window size\n  reSetRoot() {\n    const changeSvg = prepareRenderChange({\n      selection: this.svg,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeSvg\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    const changeRoot = prepareRenderChange({\n      selection: this.root,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRoot.attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n\n    const changeRootG = prepareRenderChange({\n      selection: this.rootG,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRootG.attr('transform', `translate(${this.padding.left}, ${this.padding.top})`);\n\n    setAccessibilityDescriptionWidth(this.chartID, this.width);\n  }\n\n  setGlobalSelections() {\n    if (this.currentNodeLayers) {\n      this.previousNodeLayers = this.currentNodeLayers;\n    }\n\n    const dataBoundToNodes = this.nodeG\n      .selectAll('.node-wrapper')\n      .data(this.preppedData.nodes, d => d[this.innerIDAccessor]);\n\n    this.enterNodes = dataBoundToNodes\n      .enter()\n      .append('g')\n      .attr('class', 'node-wrapper')\n      .attr('data-offset-group', 'true');\n    this.enterNodes.append('rect').attr('class', 'alluvial-node');\n    this.exitNodes = dataBoundToNodes.exit();\n    this.updateNodes = dataBoundToNodes.merge(this.enterNodes);\n    this.updateNodes.selectAll('.alluvial-node').data(d => [d]);\n\n    this.currentNodeLayers = this.preppedData.nodes;\n    if (this.previousNodeLayers) {\n      const updatingNodesWithoutEnteringNodes = this.currentNodeLayers.filter(item =>\n        this.previousNodeLayers.map(a => a[this.innerIDAccessor]).includes(item.id)\n      );\n      this.previousMaxNodeLayer = max(updatingNodesWithoutEnteringNodes, d => d.layer);\n      this.previousMinNodeLayer = min(updatingNodesWithoutEnteringNodes, d => d.layer);\n\n      const updatingNodesWithoutExitingNodes = this.previousNodeLayers.filter(item =>\n        this.currentNodeLayers.map(a => a[this.innerIDAccessor]).includes(item.id)\n      );\n      this.currentMaxNodeLayer = max(updatingNodesWithoutExitingNodes, d => d.layer);\n      this.currentMinNodeLayer = min(updatingNodesWithoutExitingNodes, d => d.layer);\n    }\n\n    // temporary, to be removed when lifecycle functions are added\n    // tslint:disable-next-line:no-unused-expression\n    // this.updateLinkGroups && this.updateLinkGroups.remove();\n    // tslint:disable-next-line:no-unused-expression\n    // this.updateLinks && this.updateLinks.remove();\n\n    if (this.innerLinkFillMode === 'source' || this.innerLinkFillMode === 'target') {\n      this.updateNodes.each((_, i, n) => {\n        initializeElementAccess(n[i]);\n      });\n      const linkDataGroups = this.preppedData.nodes;\n      const dataBoundToLinkGroups = this.linkG\n        .selectAll('.alluvial-link-wrapper')\n        .data(linkDataGroups, d => d[this.innerIDAccessor]);\n      this.enterLinkGroups = dataBoundToLinkGroups.enter().append('g');\n      this.exitLinkGroups = dataBoundToLinkGroups.exit().remove();\n      this.updateLinkGroups = dataBoundToLinkGroups.merge(this.enterLinkGroups);\n\n      const dataBoundToLinks = this.updateLinkGroups\n        .selectAll('.alluvial-link')\n        .data(d => d.sourceLinks, d => d.data[this.sourceAccessor] + d.data[this.targetAccessor]);\n      this.enterLinks = dataBoundToLinks.enter().append('path');\n      this.exitLinks = dataBoundToLinks.exit();\n      this.updateLinks = dataBoundToLinks.merge(this.enterLinks).attr('data-offset-element', this.innerLinkFillMode);\n    } else {\n      this.updateNodes.attr('tabindex', null);\n\n      const dataBoundToLinks = this.linkG\n        .selectAll('.alluvial-link')\n        .data(this.preppedData.links, d => d.data[this.sourceAccessor] + d.data[this.targetAccessor]);\n      this.enterLinks = dataBoundToLinks.enter().append('path');\n      this.exitLinks = dataBoundToLinks.exit();\n      this.updateLinks = dataBoundToLinks.merge(this.enterLinks).attr('data-offset-element', null);\n    }\n\n    this.exitSize = this.exitLinks.size();\n    this.enterSize = this.enterLinks.size();\n\n    const dataBoundToLabels = this.labelG.selectAll('text').data(this.preppedData.nodes, d => d[this.innerIDAccessor]);\n    this.enteringLabels = dataBoundToLabels.enter().append('text');\n    this.exitingLabels = dataBoundToLabels.exit();\n    this.updatingLabels = dataBoundToLabels.merge(this.enteringLabels);\n  }\n\n  setTestingAttributes() {\n    if (this.unitTest) {\n      select(this.alluvialDiagramEl)\n        .select('.visa-viz-d3-alluvial-container')\n        .attr('data-testid', 'chart-container');\n      select(this.alluvialDiagramEl)\n        .select('.alluvial-main-title')\n        .attr('data-testid', 'main-title');\n      select(this.alluvialDiagramEl)\n        .select('.alluvial-sub-title')\n        .attr('data-testid', 'sub-title');\n      this.svg.attr('data-testid', 'root-svg');\n      this.root.attr('data-testid', 'margin-container');\n      this.rootG.attr('data-testid', 'padding-container');\n      // this.legendG.attr('data-testid', 'legend-container');\n      this.tooltipG.attr('data-testid', 'tooltip-container');\n\n      // add test attributes to nodes\n      // note that nodes are each wrapped in their own G, which is what this grabs\n      this.updateNodes.attr('data-testid', 'node').attr('data-id', d => `node-${d[this.innerIDAccessor]}`);\n\n      // add test attributes to links\n      if (this.innerLinkFillMode === 'source' || this.innerLinkFillMode === 'target') {\n        this.updateLinkGroups\n          .attr('data-testid', 'alluvial-link-group')\n          .attr('data-id', d => `link-group-${d[this.innerIDAccessor]}`);\n      }\n      this.updateLinks\n        .attr('data-testid', 'link')\n        .attr('data-id', d => `link-${d.source[this.innerIDAccessor]}-${d.target[this.innerIDAccessor]}`);\n\n      // add test attributes to labels\n      this.updatingLabels.attr('data-testid', 'dataLabel').attr('data-id', d => `dataLabel-${d[this.innerIDAccessor]}`);\n\n      this.svg.select('defs').attr('data-testid', 'pattern-defs');\n    } else {\n      select(this.alluvialDiagramEl)\n        .select('.visa-viz-d3-alluvial-container')\n        .attr('data-testid', null);\n      select(this.alluvialDiagramEl)\n        .select('.alluvial-main-title')\n        .attr('data-testid', null);\n      select(this.alluvialDiagramEl)\n        .select('.alluvial-sub-title')\n        .attr('data-testid', null);\n      this.svg.attr('data-testid', null);\n      this.root.attr('data-testid', null);\n      this.rootG.attr('data-testid', null);\n      // this.legendG.attr('data-testid', null);\n      this.tooltipG.attr('data-testid', null);\n\n      // add test attributes to nodes\n      this.updateNodes.attr('data-testid', null).attr('data-id', null);\n\n      // add test attributes to links\n      if (this.innerLinkFillMode === 'source' || this.innerLinkFillMode === 'target') {\n        this.updateLinkGroups.attr('data-testid', null).attr('data-id', null);\n      }\n      this.updateLinks.attr('data-testid', null).attr('data-id', null);\n\n      // add test attributes to labels\n      this.updatingLabels.attr('data-testid', null).attr('data-id', null);\n\n      this.svg.select('defs').attr('data-testid', null);\n    }\n  }\n\n  newColumnInterpolationPosition() {\n    return linkHorizontal()\n      .source(d =>\n        d.target.layer <= this.previousMinNodeLayer\n          ? [d.source.x0, d.y0]\n          : d.source.layer >= this.previousMaxNodeLayer\n          ? [d.target.x1, d.y0]\n          : [d.source.x1, d.y0]\n      )\n      .target(d =>\n        d.target.layer <= this.previousMinNodeLayer\n          ? [d.source.x0, d.y0]\n          : d.source.layer >= this.previousMaxNodeLayer\n          ? [d.target.x1, d.y0]\n          : [d.target.x0, d.y1]\n      );\n  }\n\n  newColumnInterpolationPositionVertical() {\n    return linkVertical()\n      .source(d =>\n        d.target.layer <= this.previousMinNodeLayer\n          ? [d.x0, d.source.y0]\n          : d.source.layer >= this.previousMaxNodeLayer\n          ? [d.x0, d.target.y1]\n          : [d.x0, d.source.y1]\n      )\n      .target(d =>\n        d.target.layer <= this.previousMinNodeLayer\n          ? [d.x0, d.source.y0]\n          : d.source.layer >= this.previousMaxNodeLayer\n          ? [d.x0, d.target.y1]\n          : [d.x1, d.target.y0]\n      );\n  }\n\n  enterLinkGeometries() {\n    this.enterLinks.interrupt();\n    const linkOpacity = this.linkConfig.visible ? this.linkConfig.opacity : 0;\n\n    if (this.innerLinkFillMode === 'source' || this.innerLinkFillMode === 'target') {\n      this.enterLinkGroups.attr('class', 'alluvial-link-wrapper');\n    }\n\n    this.enterLinks\n      .attr('class', 'alluvial-link')\n      .classed('entering', true)\n      .attr(\n        'd',\n        this.layout === 'vertical'\n          ? this.newColumnInterpolationPositionVertical()\n          : this.newColumnInterpolationPosition()\n      );\n\n    this.enterLinks\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .attr('stroke-dasharray', (d, i, n) => {\n        d.linelength = n[i].getTotalLength() - 2;\n        // return d.linelength + ' ' + d.linelength;\n        return d.target.layer <= this.previousMinNodeLayer || d.source.layer >= this.previousMaxNodeLayer\n          ? ''\n          : d.linelength + ' ' + d.linelength;\n      })\n      // .attr('stroke-dashoffset', d => d.linelength)\n      .attr('stroke-dashoffset', d =>\n        d.target.layer <= this.previousMinNodeLayer || d.source.layer >= this.previousMaxNodeLayer ? 0 : d.linelength\n      )\n      .attr('stroke-width', d =>\n        d.target.layer <= this.previousMinNodeLayer || d.source.layer >= this.previousMaxNodeLayer\n          ? Math.max(1, d.width)\n          : 0.1\n      )\n      .attr('stroke-opacity', linkOpacity)\n      .transition('enter')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('d', this.layout === 'vertical' ? sankeyLinkVertical() : sankeyLinkHorizontal())\n      .attr('stroke-width', d =>\n        d.target.layer <= this.previousMinNodeLayer || d.source.layer >= this.previousMaxNodeLayer\n          ? Math.max(1, d.width)\n          : 1\n      )\n      .attr('stroke-dashoffset', 0);\n\n    // const test = select(this.svg.node())\n    //   .selectAll('.duplicated-clicked-link');\n\n    // this.enterLinks.each((d, i, n) => {\n    //   const clicked =\n    //     this.clickHighlight &&\n    //     this.clickHighlight.length > 0 &&\n    //     checkClicked(d.data, this.clickHighlight, this.innerInteractionKeys);\n    //   if (clicked) {\n    //     // this.drawDuplicateClickedLink(n[i]);\n    //     // if (n[i].classed('duplicated-clicked-link')){\n    //     // }\n    //   }\n    // });\n  }\n\n  updateLinkGeometries() {\n    this.updateLinks.interrupt();\n    const linkOpacity = this.linkConfig.visible ? this.linkConfig.opacity : 0;\n\n    this.updateLinks\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('stroke-opacity', d => {\n        return checkInteraction(\n          d.data,\n          linkOpacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n          // this.nodeIDAccessor\n        );\n      });\n  }\n\n  exitLinkGeometries() {\n    this.exitLinks.interrupt();\n    const linkOpacity = this.linkConfig.visible ? this.linkConfig.opacity : 0;\n\n    this.exitLinks\n      .attr('stroke-dasharray', (d, i, n) => {\n        d.linelength = n[i].getTotalLength();\n        return d.target.layer <= this.previousMinNodeLayer || d.source.layer >= this.previousMaxNodeLayer\n          ? ''\n          : d.linelength + ' ' + d.linelength;\n      })\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr(\n        'd',\n        this.layout === 'vertical'\n          ? this.newColumnInterpolationPositionVertical()\n          : this.newColumnInterpolationPosition()\n      )\n      .attr('stroke-opacity', linkOpacity)\n      .attr('stroke-dashoffset', d => d.linelength)\n      .attr('stroke-width', d =>\n        d.target.layer <= this.currentMinNodeLayer || d.source.layer >= this.currentMaxNodeLayer\n          ? Math.max(1, d.width)\n          : 0.1\n      )\n      .remove();\n  }\n\n  drawLinkGeometries() {\n    this.removeTemporaryClickedLinks(this.svg.node());\n    // const linkOpacity = this.linkConfig.visible ? this.linkConfig.opacity : 0;\n\n    if (this.innerLinkFillMode === 'source' || this.innerLinkFillMode === 'target') {\n      this.updateLinkGroups.classed('link-group offset-target', true);\n      // .classed('entering', true)\n      // .attr('cursor', !this.suppressEvents ? this.cursor : null);\n    }\n\n    this.updateLinks\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      // .attr('stroke-opacity', d => {\n      //   return checkInteraction(\n      //     d.data,\n      //     linkOpacity,\n      //     this.hoverOpacity,\n      //     this.hoverHighlight,\n      //     this.clickHighlight,\n      //     this.innerInteractionKeys\n      //     // this.nodeIDAccessor\n      //   );\n      // })\n      .attr('d', this.layout === 'vertical' ? sankeyLinkVertical() : sankeyLinkHorizontal())\n      .attr('stroke-width', d => Math.max(1, d.width))\n      .call(transitionEndAll, () => {\n        this.removeTemporaryClickedLinks(this.svg.node());\n        this.updateLinks\n          .classed('entering', false)\n          .attr('d', this.layout === 'vertical' ? sankeyLinkVertical() : sankeyLinkHorizontal())\n          .attr('stroke-dasharray', '');\n\n        this.updateInteractionState();\n        this.updateLinks.each((d, i, n) => {\n          const clicked =\n            this.clickHighlight &&\n            this.clickHighlight.length > 0 &&\n            checkClicked(d.data, this.clickHighlight, this.innerInteractionKeys);\n          if (clicked) {\n            // this will add a non-interactive duplicate of each clicked link above the existing ones\n            // so that the link visually appears above all other links, but the keyboard nav order does not change\n            this.drawDuplicateClickedLink(n[i], d);\n          }\n        });\n      });\n\n    this.updateLinks\n      .transition('accessibilityAfterExit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        // before we exit geometries, we need to check if a focus exists or not\n        const focusDidExist = checkAccessFocus(this.rootG.node());\n        // then we must remove the exiting elements\n        this.exitLinks.remove();\n        // then our util can count geometries\n        this.setChartCountAccessibility();\n        // our group's label should update with new counts too\n        this.setGroupAccessibilityID();\n        // since items exited, labels must receive updated values\n        this.setGeometryAriaLabels();\n        // and also make sure the user's focus isn't lost\n        retainAccessFocus({\n          parentGNode: this.rootG.node(),\n          focusDidExist\n          // recursive: true\n        });\n        // now we can emit the event that transitions are complete\n        this.transitionEndEvent.emit({ chartID: this.chartID });\n      });\n  }\n\n  // creates a clone of clicked links\n  drawDuplicateClickedLink(inputElement, d) {\n    const source = inputElement;\n    const className = 'vcl-accessibility-focus';\n    const parent = source.parentNode;\n    const sourceCopy = source.cloneNode();\n    select(sourceCopy)\n      .classed('alluvial-link', false)\n      .classed(className + '-highlight ' + className + '-hover', true)\n      .classed('duplicated-clicked-link', true)\n      .classed('entering', false)\n      .data([d.data])\n      .attr('focusable', false)\n      .attr('aria-label', null)\n      .attr('aria-hidden', true)\n      .attr('role', null)\n      .style('pointer-events', 'none')\n      .attr('tabindex', null);\n\n    if (this.innerLinkFillMode === 'source' || this.innerLinkFillMode === 'target') {\n      const parentOfParent = parent.parentNode;\n      const validSiblings = select(parentOfParent).selectAll('.link-group')._groups[0];\n      const lastGroup = validSiblings[validSiblings.length - 1];\n      lastGroup.appendChild(sourceCopy);\n    } else {\n      parent.appendChild(sourceCopy);\n    }\n  }\n\n  removeTemporaryClickedLinks(root) {\n    select(root)\n      .selectAll('.duplicated-clicked-link')\n      .remove();\n  }\n\n  updateLinkStyle() {\n    this.updateLinks\n      .attr('stroke', d =>\n        this.clickHighlight.length > 0 &&\n        checkClicked(d.data, this.clickHighlight, this.innerInteractionKeys) &&\n        this.clickStyle.color\n          ? visaColors[this.clickStyle.color] || this.clickStyle.color\n          : this.hoverHighlight &&\n            checkHovered(d.data, this.hoverHighlight, this.innerInteractionKeys) &&\n            this.hoverStyle.color\n          ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n          : this.innerLinkFillMode === 'group'\n          ? this.colorArr[this.groupKeys.indexOf(d[this.groupAccessor])]\n          : this.innerLinkFillMode === 'none'\n          ? this.colorArr[0] || '#E4E4E4'\n          : this.innerLinkFillMode === 'link'\n          ? this.colorArr[d.index]\n          : this.innerLinkFillMode === 'source'\n          ? this.colorArr[d.source.index]\n          : this.colorArr[d.target.index]\n      )\n      .attr('fill', 'none');\n  }\n\n  enterNodeGeometries() {\n    this.enterNodes.interrupt();\n\n    if (!this.defaults) {\n      this.enterNodes.classed('entering', true);\n    }\n\n    this.enterNodes\n      .select('.alluvial-node')\n      // .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .attr('fill', (_, i) => (this.nodeConfig.fill ? this.colorArr[i] || this.colorArr[0] : '#E4E4E4'))\n      .attr('stroke', (_, i) =>\n        getContrastingStroke(this.nodeConfig.fill ? this.colorArr[i] || this.colorArr[0] : '#E4E4E4')\n      )\n      .attr('stroke-width', '1px')\n      .attr('x', d => d.x0)\n      .attr('y', d => d.y0)\n      .attr('height', d => d.y1 - d.y0)\n      .attr('opacity', 0)\n      .attr('width', d => d.x1 - d.x0);\n\n    // .transition('enter_nodes')\n    // .delay(20 * this.duration)\n    // .duration(this.duration)\n    // .ease(easeCircleIn)\n    // .attr('x', d => d.x0)\n    // .attr('y', d => d.y0)\n    // .attr('height', d => d.y1 - d.y0)\n    // .attr('width', d => d.x1 - d.x0)\n    // .attr('opacity', 1);\n\n    // this.enterNodeGroups\n    //   .attr('class', 'node-wrapper')\n    //   .attr('data-offset-group', 'true');\n    // this.enterNodes\n    //   .attr('class', 'alluvial-node');\n  }\n\n  updateNodeGeometries() {\n    this.updateNodes.interrupt();\n\n    this.updateNodes\n      .select('.alluvial-node')\n      .transition('node_opacity')\n      .duration((_, i, n) => {\n        if (select(n[i].parentNode).classed('entering')) {\n          // select(n[i].parentNode).classed('entering', false);\n          return this.duration / 3;\n        }\n        return 0;\n      })\n      // .duration(this.duration)\n      .delay((_, i, n) => {\n        return select(n[i].parentNode).classed('entering') ? this.duration / 1.2 : 0;\n      })\n      .ease(easeCircleIn)\n      .attr(\n        'opacity',\n        1\n        // d => {\n        //   return checkInteraction(\n        //     d.data,\n        //     1,\n        //     this.hoverOpacity,\n        //     this.hoverHighlight,\n        //     this.clickHighlight,\n        //     this.innerInteractionKeys\n        //     // this.nodeIDAccessor\n        //   );\n        // }\n      );\n  }\n\n  exitNodeGeometries() {\n    this.exitNodes.interrupt();\n\n    this.exitNodes\n      .select('.alluvial-node')\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 3)\n      .attr('opacity', 0)\n      .attr('width', 0)\n      .select(function() {\n        return this.parentNode;\n      })\n      .remove();\n  }\n\n  drawNodeGeometries() {\n    this.updateNodes\n      .select('.alluvial-node')\n      // .on('click', !this.suppressEvents ? d => this.onClickHandler(d) : null)\n      // .on('mouseover', !this.suppressEvents ? d => this.onHoverHandler(d) : null)\n      // .on('mouseover', !this.suppressEvents ? d => this.onHoverHandler(d) : null)\n      // .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      // .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .transition('update_nodes')\n      .duration((_, i, n) => {\n        return select(n[i].parentNode).classed('entering') ? this.duration / 3 : this.duration;\n      })\n      .delay((_, i, n) => {\n        return select(n[i].parentNode).classed('entering') ? this.duration / 1.2 : 0;\n      })\n      .ease(easeCircleIn)\n      .attr('x', d => d.x0)\n      .attr('y', d => d.y0)\n      .attr('height', d => d.y1 - d.y0)\n      .attr('width', d => d.x1 - d.x0)\n      .attr('opacity', 1)\n      .call(transitionEndAll, () => {\n        this.updateNodes.classed('entering', false);\n        // .attr('opacity', 1)\n        // .attr('d', sankeyLinkHorizontal())\n        // .attr('stroke-dasharray', '');\n      });\n    // d => {\n    // let matchHover = true;\n    // if (d[this.sourceLinksString].length) {\n    //   matchHover = d[this.sourceLinksString].some(\n    //     linkData =>\n    //       checkInteraction(\n    //         linkData,\n    //         1,\n    //         this.hoverOpacity,\n    //         this.hoverHighlight,\n    //         this.clickHighlight,\n    //         this.innerInteractionKeys,\n    //         this.nodeIDAccessor\n    //       ) >= 1\n    //   );\n    // }\n    // if (d[this.targetLinksString].length) {\n    //   matchHover = d[this.targetLinksString].some(\n    //     linkData =>\n    //       checkInteraction(\n    //         linkData,\n    //         1,\n    //         this.hoverOpacity,\n    //         this.hoverHighlight,\n    //         this.clickHighlight,\n    //         this.innerInteractionKeys,\n    //         this.nodeIDAccessor\n    //       ) >= 1\n    //   );\n    // }\n    // return matchHover ? 1 : this.hoverOpacity;\n    // })\n  }\n\n  updateNodeStyle() {\n    this.updateNodes\n      .select('.alluvial-node')\n      .attr('fill', (_, i) => (this.nodeConfig.fill ? this.colorArr[i] || this.colorArr[0] : '#E4E4E4'));\n    this.updateNodes\n      .select('.alluvial-node')\n      .attr('stroke', (_, i) =>\n        getContrastingStroke(this.nodeConfig.fill ? this.colorArr[i] || this.colorArr[0] : '#E4E4E4')\n      );\n    this.updateNodes.select('.alluvial-node').attr('stroke-width', '1px');\n  }\n\n  // at some point we could extract this to dataLabel.ts, but not now\n  // the additional selection of this below will skip any transition that\n  // is taking place in the selection, we need to use transition on update\n  // but not on entry, need to look into this more.\n  placeNodeLabels({\n    root,\n    layout,\n    dataLabel,\n    innerPaddedWidth\n  }: {\n    root?: any;\n    layout?: string;\n    dataLabel: any;\n    innerPaddedWidth?: number;\n  }) {\n    // scenarios we need to account for\n    // vertical - top, middle, bottom, auto\n    // horizontal - top, middle, bottom, auto\n    let xPlacement, yPlacement, offsetX, offsetY, textAnchor;\n\n    // note: keep in mind that width/height have been flipped for vertical\n    if (layout === 'vertical') {\n      switch (dataLabel.placement) {\n        case 'outside':\n          xPlacement = d => d.x0 + (d.x1 - d.x0) / 2;\n          yPlacement = d => {\n            return d.y0 < innerPaddedWidth / 2 ? d.y0 : d.y1;\n          };\n          offsetX = '0.0em';\n          offsetY = d => (d.y0 < innerPaddedWidth / 2 ? '-0.5em' : '1.3em');\n          textAnchor = 'middle';\n          break;\n        case 'on-node':\n          xPlacement = d => d.x0 + (d.x1 - d.x0) / 2;\n          yPlacement = d => d.y0 + (d.y1 - d.y0) / 2;\n          offsetX = '0.0em';\n          offsetY = '0.4em';\n          textAnchor = 'middle';\n          break;\n        case 'inside':\n          xPlacement = d => d.x0 + (d.x1 - d.x0) / 2;\n          yPlacement = d => (d.y0 < innerPaddedWidth / 2 ? d.y1 : d.y0);\n          offsetX = '0.0em';\n          offsetY = d => (d.y0 < innerPaddedWidth / 2 ? '1.3em' : '-0.5em');\n          textAnchor = 'middle';\n          break;\n        default:\n          xPlacement = d => d.x0 + (d.x1 - d.x0) / 2;\n          yPlacement = d => (d.y0 < innerPaddedWidth / 2 ? d.y1 : d.y0);\n          offsetX = '0.0em';\n          offsetY = d => (d.y0 < innerPaddedWidth / 2 ? '1.3em' : '-0.5em');\n          textAnchor = 'middle';\n          break;\n      }\n    } else {\n      switch (dataLabel.placement) {\n        case 'outside':\n          xPlacement = d => (d.x0 < innerPaddedWidth / 2 ? d.x0 : d.x1);\n          yPlacement = d => d.y0 + (d.y1 - d.y0) / 2;\n          offsetX = d => (d.x0 < innerPaddedWidth / 2 ? '-0.5em' : '0.5em');\n          offsetY = '0.4em';\n          textAnchor = d => (d.x0 < innerPaddedWidth / 2 ? 'end' : 'start');\n          break;\n        case 'on-node':\n          xPlacement = d => d.x0 + (d.x1 - d.x0) / 2;\n          yPlacement = d => d.y0 + (d.y1 - d.y0) / 2;\n          offsetX = '0.0em';\n          offsetY = '0.4em';\n          textAnchor = 'middle';\n          break;\n        case 'inside':\n          xPlacement = d => (d.x0 < innerPaddedWidth / 2 ? d.x1 : d.x0);\n          yPlacement = d => d.y0 + (d.y1 - d.y0) / 2;\n          offsetX = d => (d.x0 < innerPaddedWidth / 2 ? '0.5em' : '-0.5em');\n          offsetY = '0.4em';\n          textAnchor = d => (d.x0 < innerPaddedWidth / 2 ? 'start' : 'end');\n          break;\n        default:\n          xPlacement = d => (d.x0 < innerPaddedWidth / 2 ? d.x1 : d.x0);\n          yPlacement = d => d.y0 + (d.y1 - d.y0) / 2;\n          offsetX = d => (d.x0 < innerPaddedWidth / 2 ? '0.5em' : '-0.5em');\n          offsetY = '0.4em';\n          textAnchor = d => (d.x0 < innerPaddedWidth / 2 ? 'start' : 'end');\n          break;\n      }\n    }\n\n    // now we use d3 each to call the above accessors for each node label placement\n    // if we need to skip the transition at times we can use the .each() function like below\n    // .each((_, i, n) => {\n    //   select(n[i]) // this new selection will be outside of the transition scope\n    //    .attr(...)\n    // });\n    // the call below will be within the transition scope of the selection passed\n    root\n      .attr('x', xPlacement)\n      .attr('y', yPlacement)\n      .attr('dx', offsetX)\n      .attr('dy', offsetY)\n      .attr('data-dx', offsetX)\n      .attr('data-dy', offsetY)\n      .attr('text-anchor', textAnchor);\n    // we handle these attributes slightly differently in the functions below\n    // .attr('data-x', xPlacement)\n    // .attr('data-use-dx', true)\n    // .attr('data-y', yPlacement)\n    // .attr('data-use-dy', true)\n  }\n\n  enterNodeLabels() {\n    this.enteringLabels.interrupt();\n    const opacity = this.dataLabel.visible ? 1 : 0;\n    const hiddenOpacity = this.dataLabel.visible ? Number.EPSILON : 0;\n    this.widthAllNodesNoLinks = this.nodeCount * this.nodeConfig.width + this.nodeCount * this.nodeConfig.width;\n    this.noLinksLeftPadding = (this.innerPaddedWidth - this.widthAllNodesNoLinks) / 2;\n\n    this.enteringLabels\n      .attr('class', 'alluvial-diagram-dataLabel entering')\n      .attr('cursor', !this.suppressEvents && this.dataLabel.visible ? this.cursor : null)\n      .attr('opacity', d => {\n        if (this.linkConfig.visible) {\n          let matchHover = true;\n          if (d[this.sourceLinksString].length) {\n            matchHover = d[this.sourceLinksString].some(\n              linkData =>\n                checkInteraction(\n                  linkData.data,\n                  opacity,\n                  this.hoverOpacity,\n                  this.hoverHighlight,\n                  this.clickHighlight,\n                  this.innerInteractionKeys\n                ) >= 1\n            );\n          }\n          if (d[this.targetLinksString].length) {\n            matchHover = d[this.targetLinksString].some(\n              linkData =>\n                checkInteraction(\n                  linkData.data,\n                  opacity,\n                  this.hoverOpacity,\n                  this.hoverHighlight,\n                  this.clickHighlight,\n                  this.innerInteractionKeys\n                ) >= 1\n            );\n          }\n          return matchHover ? hiddenOpacity : 0;\n        } else {\n          return d.layer === 0 ? hiddenOpacity : d.layer === this.nodeCount ? hiddenOpacity : 0;\n        }\n      });\n\n    this.placeNodeLabels({\n      root: this.enteringLabels,\n      layout: this.layout,\n      dataLabel: this.dataLabel,\n      innerPaddedWidth: this.innerPaddedWidth\n    });\n  }\n\n  updateNodeLabels() {\n    this.updatingLabels.interrupt('label_opacity');\n    const opacity = this.dataLabel.visible ? 1 : 0;\n\n    this.updatingLabels\n      .transition('label_opacity')\n      .ease(easeCircleIn)\n      // .duration(this.duration)\n      .duration((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          return this.duration / 3;\n        }\n        return 0;\n      })\n      // .duration(this.duration)\n      .delay((_, i, n) => {\n        return select(n[i]).classed('entering') ? this.duration / 1.2 : 0;\n      })\n      .attr('opacity', d => {\n        if (this.linkConfig.visible) {\n          let matchHover = true;\n          if (d[this.sourceLinksString].length) {\n            matchHover = d[this.sourceLinksString].some(\n              linkData =>\n                checkInteraction(\n                  linkData.data,\n                  opacity,\n                  this.hoverOpacity,\n                  this.hoverHighlight,\n                  this.clickHighlight,\n                  this.innerInteractionKeys\n                ) >= 1\n            );\n          }\n          if (d[this.targetLinksString].length) {\n            matchHover = d[this.targetLinksString].some(\n              linkData =>\n                checkInteraction(\n                  linkData.data,\n                  opacity,\n                  this.hoverOpacity,\n                  this.hoverHighlight,\n                  this.clickHighlight,\n                  this.innerInteractionKeys\n                ) >= 1\n            );\n          }\n          return matchHover ? 1 : 0;\n        } else {\n          return d.layer === 0 ? opacity : d.layer === this.nodeCount ? opacity : 0;\n        }\n      });\n  }\n\n  exitNodeLabels() {\n    this.exitingLabels.interrupt();\n\n    this.exitingLabels\n      .transition('exit_labels')\n      // .duration(this.duration)\n      .duration(this.duration / 3)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  addStrokeUnder() {\n    const filter = createTextStrokeFilter({\n      root: this.svg.node(),\n      id: this.chartID,\n      color: '#ffffff'\n    });\n    this.updatingLabels.attr('filter', filter);\n  }\n\n  drawNodeLabels() {\n    // const opacity = this.dataLabel.visible ? 1 : 0;\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n    const cloneAdjustment = hideOnly ? 0 : 4;\n\n    this.widthAllNodesNoLinks = this.nodeCount * this.nodeConfig.width * 2;\n    this.noLinksLeftPadding = (this.innerPaddedWidth - this.widthAllNodesNoLinks) / 2;\n    const nodeLabelUpdate = this.updatingLabels\n      .text(d =>\n        this.dataLabel.format\n          ? formatDataLabel(d, this.innerLabelAccessor, this.dataLabel.format)\n          : d[this.innerLabelAccessor]\n      )\n      .attr('data-x', d =>\n        this.layout === 'vertical'\n          ? d.x0 + (d.x1 - d.x0) / 2\n          : this.dataLabel.placement === 'outside'\n          ? d.x0 < this.innerPaddedWidth / 2\n            ? d.x0 - cloneAdjustment\n            : d.x1 + cloneAdjustment\n          : d.x0 < this.innerPaddedWidth / 2\n          ? d.x1 + cloneAdjustment\n          : d.x0 - cloneAdjustment\n      ) // note we hacked vertical layout so still have to use width here\n      .attr('data-y', d =>\n        this.layout === 'vertical'\n          ? this.dataLabel.placement === 'outside'\n            ? d.y0 < this.innerPaddedWidth / 2\n              ? d.y0 - cloneAdjustment\n              : d.y1 + cloneAdjustment\n            : d.y0 < this.innerPaddedWidth / 2\n            ? d.y1 + cloneAdjustment\n            : d.y0 - cloneAdjustment\n          : d.y0 + (d.y1 - d.y0) / 2\n      )\n      .attr('data-translate-x', this.padding.left + this.margin.left)\n      .attr('data-translate-y', this.padding.top + this.margin.top)\n      .attr('data-use-dx', hideOnly)\n      .attr('data-use-dy', hideOnly)\n      .transition('update_labels')\n      .duration((_, i, n) => {\n        return select(n[i]).classed('entering') ? this.duration / 3 : this.duration;\n      })\n      .delay((_, i, n) => {\n        return select(n[i]).classed('entering') ? this.duration / 1.2 : 0;\n      })\n      .ease(easeCircleIn);\n\n    if (this.dataLabel.visible && (this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly)) {\n      // we only need the node outlines and correct attributes on them\n      const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n      const nodeRects = this.updateNodes\n        .select('.alluvial-node')\n        .attr('data-x', d => d.x0)\n        .attr('data-y', d => d.y0)\n        .attr('data-translate-x', this.padding.left + this.margin.left)\n        .attr('data-translate-y', this.padding.top + this.margin.top)\n        .attr('data-height', d => d.y1 - d.y0)\n        .attr('data-width', d => d.x1 - d.x0)\n        .each((d, i, n) => {\n          // for each node, we create a clone and place it\n          // on either side of the rect to hack an inside/outside\n          // placement from the collision util\n          if (!hideOnly) {\n            const source = n[i];\n            const parent = source.parentNode;\n            const className = 'alluvial-node-collision-clone';\n            const sourceCopy = source.cloneNode();\n            select(sourceCopy)\n              .classed('alluvial-node', false)\n              .classed(className, true)\n              .classed('entering', false)\n              .data([d])\n              .attr('focusable', false)\n              .attr('aria-label', null)\n              .attr('aria-hidden', true)\n              .attr('role', null)\n              .style('pointer-events', 'none')\n              .style('visibility', 'hidden')\n              .attr('tabindex', null)\n              .attr(\n                'data-x',\n                this.layout === 'vertical'\n                  ? d.x0\n                  : collisionPlacement === 'all'\n                  ? d.x0\n                  : collisionPlacement === 'outside'\n                  ? d.x0 < this.innerPaddedWidth / 2\n                    ? d.x0 - cloneAdjustment\n                    : d.x1 + cloneAdjustment\n                  : d.x0 < this.innerPaddedWidth / 2\n                  ? d.x1 + cloneAdjustment\n                  : d.x0 - cloneAdjustment\n              ) // note we hacked vertical layout so still have to use width here\n              .attr(\n                'data-y',\n                this.layout === 'vertical'\n                  ? collisionPlacement === 'all'\n                    ? d.y0\n                    : collisionPlacement === 'outside'\n                    ? d.y0 < this.innerPaddedWidth / 2\n                      ? d.y0 - cloneAdjustment\n                      : d.y1 + cloneAdjustment\n                    : d.y0 < this.innerPaddedWidth / 2\n                    ? d.y1 + cloneAdjustment\n                    : d.y0 - cloneAdjustment\n                  : d.y0\n              )\n              .attr(\n                'data-width',\n                this.layout === 'vertical' ? d.x1 - d.x0 : collisionPlacement === 'all' ? d.x1 - d.x0 : 1\n              )\n              .attr(\n                'data-height',\n                this.layout === 'vertical' ? (collisionPlacement === 'all' ? d.y1 - d.y0 : 1) : d.y1 - d.y0\n              );\n\n            // temporarily append these to the parent\n            parent.appendChild(sourceCopy);\n          }\n        });\n      const clonedRects = this.updateNodes.select('.alluvial-node-collision-clone');\n      this.bitmaps = resolveLabelCollision({\n        labelSelection: nodeLabelUpdate,\n        avoidMarks: hideOnly ? [nodeRects] : [nodeRects, clonedRects],\n        validPositions: hideOnly ? ['middle'] : this.layout === 'vertical' ? ['top', 'bottom'] : ['left', 'right'],\n        offsets: hideOnly ? [1] : [4, 4],\n        accessors: [this.innerIDAccessor],\n        size: [roundTo(this.width, 0), roundTo(this.height, 0)], // we need the whole width for series labels\n        hideOnly: this.dataLabel.visible && hideOnly\n      });\n      clonedRects.remove();\n\n      // if we are in hide only we need to add attributes back\n      if (hideOnly) {\n        this.placeNodeLabels({\n          root: nodeLabelUpdate,\n          layout: this.layout,\n          dataLabel: this.dataLabel,\n          innerPaddedWidth: this.innerPaddedWidth\n        });\n      }\n    } else {\n      this.placeNodeLabels({\n        root: nodeLabelUpdate,\n        layout: this.layout,\n        dataLabel: this.dataLabel,\n        innerPaddedWidth: this.innerPaddedWidth\n      });\n    }\n    // we need to call this after the transitions\n    nodeLabelUpdate.call(transitionEndAll, () => {\n      this.updatingLabels.classed('entering', false);\n      this.addStrokeUnder();\n    });\n  }\n\n  setNodeLabelOpacity() {\n    this.updatingLabels.interrupt('label_opacity');\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n    const cloneAdjustment = hideOnly ? 0 : 4;\n    const addCollisionClass =\n      this.dataLabel.visible && (this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly);\n    const opacity = this.dataLabel.visible ? 1 : 0;\n\n    this.updatingLabels.attr('opacity', (d, i, n) => {\n      const prevOpacity = +select(n[i]).attr('opacity');\n      const styleVisibility = select(n[i]).style('visibility');\n      let targetOpacity;\n      if (this.linkConfig.visible) {\n        let matchHover = true;\n        if (d[this.sourceLinksString].length) {\n          matchHover = d[this.sourceLinksString].some(\n            linkData =>\n              checkInteraction(\n                linkData.data,\n                opacity,\n                this.hoverOpacity,\n                this.hoverHighlight,\n                this.clickHighlight,\n                this.innerInteractionKeys\n              ) >= 1\n          );\n        }\n        if (d[this.targetLinksString].length) {\n          matchHover = d[this.targetLinksString].some(\n            linkData =>\n              checkInteraction(\n                linkData.data,\n                opacity,\n                this.hoverOpacity,\n                this.hoverHighlight,\n                this.clickHighlight,\n                this.innerInteractionKeys\n              ) >= 1\n          );\n        }\n        targetOpacity = matchHover ? opacity : 0;\n      } else {\n        targetOpacity = d.layer === 0 ? opacity : d.layer === this.nodeCount ? opacity : 0;\n      }\n      if (\n        ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n        addCollisionClass\n      ) {\n        if (targetOpacity === 1) {\n          select(n[i])\n            .classed('collision-added', true)\n            .style('visibility', null);\n        } else {\n          select(n[i]).classed('collision-removed', true);\n        }\n      }\n      return targetOpacity;\n    });\n\n    if (addCollisionClass) {\n      const labelsAdded = this.updatingLabels.filter((_, i, n) => select(n[i]).classed('collision-added'));\n      const labelsRemoved = this.updatingLabels\n        .filter((_, i, n) => select(n[i]).classed('collision-removed'))\n        .attr('data-use-dx', hideOnly) // need to add this for remove piece of collision below\n        .attr('data-use-dy', hideOnly);\n\n      // we can now remove labels as well if we need to...\n      if (labelsRemoved.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsRemoved,\n          avoidMarks: [],\n          validPositions: ['middle'],\n          offsets: [1],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n          hideOnly: false,\n          removeOnly: true\n        });\n\n        // remove temporary class now\n        labelsRemoved.classed('collision-removed', false);\n      }\n\n      // we can now add labels as well if we need to...\n      if (labelsAdded.size() > 0) {\n        // we only need the node outlines and correct attributes on them\n        const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n        const nodeRects = this.updateNodes\n          .select('.alluvial-node')\n          .attr('data-x', d => d.x0)\n          .attr('data-y', d => d.y0)\n          .attr('data-translate-x', this.padding.left + this.margin.left)\n          .attr('data-translate-y', this.padding.top + this.margin.top)\n          .attr('data-height', d => d.y1 - d.y0)\n          .attr('data-width', d => d.x1 - d.x0)\n          .each((d, i, n) => {\n            // for each node, we create a clone and place it\n            // on either side of the rect to hack an inside/outside\n            // placement from the collision util\n            if (!hideOnly) {\n              const source = n[i];\n              const parent = source.parentNode;\n              const className = 'alluvial-node-collision-clone';\n              const sourceCopy = source.cloneNode();\n              select(sourceCopy)\n                .classed('alluvial-node', false)\n                .classed(className, true)\n                .classed('entering', false)\n                .data([d])\n                .attr('focusable', false)\n                .attr('aria-label', null)\n                .attr('aria-hidden', true)\n                .attr('role', null)\n                .style('pointer-events', 'none')\n                .style('visibility', 'hidden')\n                .attr('tabindex', null)\n                .attr(\n                  'data-x',\n                  this.layout === 'vertical'\n                    ? d.x0\n                    : collisionPlacement === 'all'\n                    ? d.x0\n                    : collisionPlacement === 'outside'\n                    ? d.x0 < this.innerPaddedWidth / 2\n                      ? d.x0 - cloneAdjustment\n                      : d.x1 + cloneAdjustment\n                    : d.x0 < this.innerPaddedWidth / 2\n                    ? d.x1 + cloneAdjustment\n                    : d.x0 - cloneAdjustment\n                ) // note we hacked vertical layout so still have to use width here\n                .attr(\n                  'data-y',\n                  this.layout === 'vertical'\n                    ? collisionPlacement === 'all'\n                      ? d.y0\n                      : collisionPlacement === 'outside'\n                      ? d.y0 < this.innerPaddedWidth / 2\n                        ? d.y0 - cloneAdjustment\n                        : d.y1 + cloneAdjustment\n                      : d.y0 < this.innerPaddedWidth / 2\n                      ? d.y1 + cloneAdjustment\n                      : d.y0 - cloneAdjustment\n                    : d.y0\n                )\n                .attr(\n                  'data-width',\n                  this.layout === 'vertical' ? d.x1 - d.x0 : collisionPlacement === 'all' ? d.x1 - d.x0 : 1\n                )\n                .attr(\n                  'data-height',\n                  this.layout === 'vertical' ? (collisionPlacement === 'all' ? d.y1 - d.y0 : 1) : d.y1 - d.y0\n                );\n              // temporarily append these to the parent\n              parent.appendChild(sourceCopy);\n            }\n          });\n        const clonedRects = this.updateNodes.select('.alluvial-node-collision-clone');\n        this.bitmaps = resolveLabelCollision({\n          labelSelection: labelsAdded,\n          bitmaps: this.bitmaps,\n          avoidMarks: hideOnly ? [nodeRects] : [nodeRects, clonedRects],\n          validPositions: hideOnly ? ['middle'] : this.layout === 'vertical' ? ['top', 'bottom'] : ['left', 'right'],\n          offsets: hideOnly ? [1] : [4, 4],\n          accessors: [this.innerIDAccessor],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)], // we need the whole width for series labels\n          hideOnly: this.dataLabel.visible && hideOnly,\n          suppressMarkDraw: true\n        });\n        clonedRects.remove();\n\n        // if we are in hide only we need to add attributes back\n        if (hideOnly) {\n          this.placeNodeLabels({\n            root: labelsAdded,\n            layout: this.layout,\n            dataLabel: this.dataLabel,\n            innerPaddedWidth: this.innerPaddedWidth\n          });\n        }\n\n        // remove temporary class now\n        labelsAdded.classed('collision-added', false);\n      }\n    }\n  }\n\n  updateInteractionState() {\n    // we created an \"opacity\" transition namespace in update's transition\n    // we override it here to instantly display opacity state (below)\n    this.removeTemporaryClickedLinks(this.svg.node());\n    this.updateLinks.interrupt('opacity');\n\n    // we use this.update and this.labelCurrent from setGlobalSelection here\n    // the lifecycle state does not matter (enter/update/exit)\n    // since interaction state can happen at any time\n    const linkOpacity = this.linkConfig.visible ? this.linkConfig.opacity : 0;\n    this.updateLinks\n      .attr('stroke-opacity', d => {\n        return checkInteraction(\n          d.data,\n          linkOpacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n          // this.nodeIDAccessor\n        );\n      })\n      .attr('stroke', d =>\n        this.clickHighlight.length > 0 &&\n        checkClicked(d.data, this.clickHighlight, this.innerInteractionKeys) &&\n        this.clickStyle.color\n          ? visaColors[this.clickStyle.color] || this.clickStyle.color\n          : this.hoverHighlight &&\n            checkHovered(d.data, this.hoverHighlight, this.innerInteractionKeys) &&\n            this.hoverStyle.color\n          ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n          : this.innerLinkFillMode === 'group'\n          ? this.colorArr[this.groupKeys.indexOf(d[this.groupAccessor])]\n          : this.innerLinkFillMode === 'none'\n          ? this.colorArr[0] || '#E4E4E4'\n          : this.innerLinkFillMode === 'link'\n          ? this.colorArr[d.index]\n          : this.innerLinkFillMode === 'source'\n          ? this.colorArr[d.source.index]\n          : this.colorArr[d.target.index]\n      );\n\n    this.updateLinks.each((d, i, n) => {\n      const clicked =\n        this.clickHighlight &&\n        this.clickHighlight.length > 0 &&\n        checkClicked(d.data, this.clickHighlight, this.innerInteractionKeys);\n      if (clicked) {\n        // this will add a non-interactive duplicate of each clicked link above the existing ones\n        // so that the link visually appears above all other links, but the keyboard nav order does not change\n        this.drawDuplicateClickedLink(n[i], d);\n      }\n    });\n  }\n\n  bindInteractivity() {\n    this.updateLinks\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  // positions are broken when dealing with vertical sankey\n  drawAnnotations() {\n    const positionData = this.preppedData;\n    const preppedAnnotations = [];\n    this.annotations.forEach((datum: any) => {\n      const d = { ...datum };\n      let internalData = datum.data;\n      if (positionData && internalData) {\n        if (d.positionType === 'node' && d.data.hasOwnProperty(this.innerIDAccessor)) {\n          const index = positionData.nodes.findIndex(x => x[this.innerIDAccessor] === d.data[this.innerIDAccessor]);\n          internalData = positionData.nodes[index];\n        } else if (\n          d.positionType === 'source' ||\n          (d.positionType === 'target' &&\n            d.data.hasOwnProperty(this.sourceAccessor) &&\n            d.data.hasOwnProperty(this.targetAccessor))\n        ) {\n          const index = positionData.links.findIndex(\n            x =>\n              x.data[this.sourceAccessor] === d.data[this.sourceAccessor] &&\n              x.data[this.targetAccessor] === d.data[this.targetAccessor]\n          );\n          internalData = positionData.links[index];\n        }\n      }\n      if (d.positionType && internalData) {\n        if (d.positionType === 'target' && internalData.target) {\n          d.x = internalData.target.x0;\n          d.y = internalData.y1;\n        } else if (d.positionType === 'source' && internalData.source) {\n          d.x = internalData.source.x1;\n          d.y = internalData.y0;\n        } else if (d.positionType === 'node') {\n          d.x = internalData.x1;\n          d.y = (internalData.y1 + internalData.y0) / 2;\n        }\n      }\n      // we need to wipe the data before we pass it in, so that the x and y are used instead!\n      delete d.data;\n      preppedAnnotations.push(d);\n    });\n    annotate({\n      source: this.rootG.node(),\n      data: preppedAnnotations,\n      ignoreScales: true,\n      // xScale: this.x,\n      // xAccessor: this.layout !== 'horizontal' ? this.ordinalAccessor : this.valueAccessor,\n      // yScale: this.y,\n      // yAccessor: this.layout !== 'horizontal' ? this.valueAccessor : this.ordinalAccessor,\n      width: this.width,\n      height: this.height,\n      padding: this.padding,\n      margin: this.margin,\n      bitmaps: this.bitmaps\n    });\n  }\n\n  setSubTitleElements() {\n    setSubTitle({\n      root: this.subTitleG,\n      subTitle: this.subTitle\n    });\n  }\n\n  setColors() {\n    this.colorArr = this.colors ? convertVisaColor(this.colors) : getColors(this.colorPalette, this.nodeList.length);\n  }\n\n  setTagLevels() {\n    this.topLevel = findTagLevel(this.highestHeadingLevel);\n    this.bottomLevel = findTagLevel(this.highestHeadingLevel, 3);\n  }\n\n  setChartDescriptionWrapper() {\n    // this initializes the accessibility description section of the chart\n    initializeDescriptionRoot({\n      language: this.getLanguageString(),\n      rootEle: this.alluvialDiagramEl, // this.lineChartEl,\n      title: this.accessibility.title || this.mainTitle,\n      chartTag: 'alluvial-diagram',\n      uniqueID: this.chartID,\n      highestHeadingLevel: this.highestHeadingLevel,\n      redraw: this.shouldRedrawWrapper,\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      hideDataTable: this.accessibility.hideDataTableButton\n    });\n    this.shouldRedrawWrapper = false;\n  }\n\n  setParentSVGAccessibility() {\n    // this sets the accessibility features of the root SVG element\n    const keys = scopeDataKeys(this, chartAccessors, 'alluvial-diagram');\n    setAccessibilityController({\n      language: this.getLanguageString(),\n      node: this.svg.node(),\n      chartTag: 'alluvial-diagram',\n      title: this.accessibility.title || this.mainTitle,\n      description: this.subTitle,\n      uniqueID: this.chartID,\n      geomType: 'link',\n      includeKeyNames: this.accessibility.includeDataKeyNames,\n      dataKeys: keys,\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.innerIDAccessor,\n      groupKeys: ['value'],\n      groupName: 'node',\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled\n    });\n  }\n\n  setGeometryAccessibilityAttributes() {\n    // this makes sure every geom element has correct event handlers + semantics (role, tabindex, etc)\n    this.updateLinks.each((_d, i, n) => {\n      initializeElementAccess(n[i]);\n    });\n  }\n\n  setGeometryAriaLabels() {\n    // this adds an ARIA label to each geom (a description read by screen readers)\n    const keys = scopeDataKeys(this, chartAccessors, 'alluvial-diagram');\n    this.updateLinks.each((_d, i, n) => {\n      setElementFocusHandler({\n        node: n[i],\n        geomType: 'link',\n        includeKeyNames: this.accessibility.includeDataKeyNames,\n        dataKeys: keys,\n        dataKeyNames: this.dataKeyNames,\n        groupName: 'node',\n        uniqueID: this.chartID,\n        disableKeyNav:\n          this.suppressEvents &&\n          this.accessibility.elementsAreInterface === false &&\n          this.accessibility.keyboardNavConfig &&\n          this.accessibility.keyboardNavConfig.disabled\n      });\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setGroupAccessibilityID() {\n    // this sets an ARIA label on all the g elements in the chart\n    this.updateNodes.each((_, i, n) => {\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setChartCountAccessibility() {\n    // this is our automated section that describes the chart contents\n    // (like geometry and gorup counts, etc)\n    setAccessChartCounts({\n      rootEle: this.alluvialDiagramEl, // this.lineChartEl,\n      parentGNode: this.linkG.node(), // this.dotG.node(), // pass the wrapper to <g> or geometries here, should be single node selection\n      chartTag: 'alluvial-diagram',\n      geomType: 'link',\n      groupName: 'node'\n      // recursive: true\n    });\n  }\n\n  setSelectedClass() {\n    this.updateLinks\n      .classed('highlight', d => {\n        const selected = checkInteraction(d.data, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n        return this.clickHighlight && this.clickHighlight.length ? selected : false;\n      })\n      .each((d, i, n) => {\n        let selected = checkInteraction(d.data, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n        selected = this.clickHighlight && this.clickHighlight.length ? selected : false;\n        const selectable = this.accessibility.elementsAreInterface;\n        setElementInteractionAccessState(n[i], selected, selectable);\n      });\n  }\n\n  setChartAccessibilityTitle() {\n    setAccessTitle(this.getLanguageString(), this.alluvialDiagramEl, this.accessibility.title || this.mainTitle);\n  }\n\n  setChartAccessibilitySubtitle() {\n    setAccessSubtitle(this.getLanguageString(), this.alluvialDiagramEl, this.subTitle);\n  }\n\n  setChartAccessibilityLongDescription() {\n    setAccessLongDescription(this.getLanguageString(), this.alluvialDiagramEl, this.accessibility.longDescription);\n  }\n\n  setChartAccessibilityExecutiveSummary() {\n    setAccessExecutiveSummary(this.getLanguageString(), this.alluvialDiagramEl, this.accessibility.executiveSummary);\n  }\n\n  setChartAccessibilityPurpose() {\n    setAccessPurpose(this.getLanguageString(), this.alluvialDiagramEl, this.accessibility.purpose);\n  }\n\n  setChartAccessibilityContext() {\n    setAccessContext(this.getLanguageString(), this.alluvialDiagramEl, this.accessibility.contextExplanation);\n  }\n\n  setChartAccessibilityStatisticalNotes() {\n    setAccessStatistics(this.getLanguageString(), this.alluvialDiagramEl, this.accessibility.statisticalNotes);\n  }\n\n  setChartAccessibilityStructureNotes() {\n    setAccessStructure(this.getLanguageString(), this.alluvialDiagramEl, this.accessibility.structureNotes);\n  }\n\n  setAnnotationAccessibility() {\n    setAccessAnnotation(this.getLanguageString(), this.alluvialDiagramEl, this.annotations, undefined);\n  }\n\n  onChangeHandler() {\n    if (this.accessibility && typeof this.accessibility.onChangeFunc === 'function') {\n      const d = {\n        updated: this.updated,\n        added: this.enterSize,\n        removed: this.exitSize\n      };\n      this.accessibility.onChangeFunc(d);\n    }\n    this.updated = false;\n    this.enterSize = 0;\n    this.exitSize = 0;\n  }\n\n  onClickHandler(d, n) {\n    this.clickEvent.emit({ data: d.data, target: n });\n  }\n\n  onHoverHandler(d, n) {\n    overrideTitleTooltip(this.chartID, true);\n    this.hoverEvent.emit({ data: d.data, target: n });\n    if (this.showTooltip) {\n      this.eventsTooltip({ data: d.data, evt: event, isToShow: true });\n    }\n  }\n\n  onMouseOutHandler() {\n    overrideTitleTooltip(this.chartID, false);\n    this.mouseOutEvent.emit();\n    if (this.showTooltip) {\n      this.eventsTooltip({ isToShow: false });\n    }\n  }\n\n  // set initial style (instead of copying css class across the lib)\n  setTooltipInitialStyle() {\n    initTooltipStyle(this.tooltipG);\n  }\n\n  // tooltip\n  eventsTooltip({ data, evt, isToShow }: { data?: any; evt?: any; isToShow: boolean }) {\n    drawTooltip({\n      root: this.tooltipG,\n      data,\n      event: evt,\n      isToShow,\n      tooltipLabel: this.tooltipLabel,\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.groupAccessor,\n      xAccessor: this.sourceAccessor, // map source to x for default tooltip logic\n      yAccessor: this.targetAccessor, // map source to y for default tooltip logic\n      valueAccessor: this.valueAccessor,\n      ordinalAccessor: this.innerIDAccessor,\n      chartType: 'alluvial-diagram'\n    });\n  }\n\n  render() {\n    this.drawStartEvent.emit({ chartID: this.chartID });\n    // everything between this comment and the third should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n    this.init();\n    if (this.shouldSetLocalizationConfig) {\n      this.setLocalizationConfig();\n      this.shouldSetLocalizationConfig = false;\n    }\n    if (this.shouldSetTagLevels) {\n      this.setTagLevels();\n      this.shouldSetTagLevels = false;\n    }\n    if (this.shouldUpdateData) {\n      this.prepareData();\n      this.shouldUpdateData = false;\n    }\n    if (this.shouldSetDimensions) {\n      this.setDimensions();\n      this.shouldSetDimensions = false;\n    }\n    if (this.shouldValidateLabelText) {\n      this.validateLabelText();\n      this.shouldValidateLabelText = false;\n    }\n    if (this.shouldValidateLinkFillMode) {\n      this.validateLinkFillMode();\n      this.shouldValidateLinkFillMode = false;\n    }\n    if (this.shouldValidateNodeAlignment) {\n      this.validateNodeAlignment();\n      this.shouldValidateNodeAlignment = false;\n    }\n    if (this.shouldValidateInteractionKeys) {\n      this.validateInteractionKeys();\n      this.shouldValidateInteractionKeys = false;\n    }\n    if (this.shouldValidateLinkGroups) {\n      this.validateLinkGroups();\n      this.shouldValidateLinkGroups = true;\n    }\n    if (this.shouldValidateLocalization) {\n      this.shouldValidateLocalizationProps();\n      this.shouldValidateLocalization = false;\n    }\n    if (this.shouldValidateAccessibility) {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateAccessibility = false;\n    }\n    if (this.shouldSetColors) {\n      this.setColors();\n      this.shouldSetColors = false;\n    }\n    if (this.shouldValidateIdAccessor) {\n      this.validateIdAccessor();\n      this.shouldValidateIdAccessor = false;\n    }\n    if (this.shouldSetNodeDimensions) {\n      this.setNodeDimensions();\n      this.shouldSetNodeDimensions = false;\n    }\n    if (this.shouldCallSankeyGenerator) {\n      this.callSankeyGenerator();\n      this.shouldCallSankeyGenerator = false;\n    }\n    if (this.shouldUpdateTableData) {\n      this.setTableData();\n      this.shouldUpdateTableData = false;\n    }\n\n    return (\n      // <div class=\"alluvial-diagram\">alluvial-diagram</div>;\n      <div>\n        <div class=\"o-layout\">\n          <div class=\"o-layout--chart\">\n            <this.topLevel class=\"alluvial-main-title vcl-main-title\">{this.mainTitle}</this.topLevel>\n            <this.bottomLevel class=\"visa-ui-text--instructions alluvial-sub-title vcl-sub-title\" />\n            <keyboard-instructions\n              uniqueID={this.chartID}\n              geomType={'node'}\n              groupName={'node collection'} // taken from initializeDescriptionRoot, on bar this should be \"bar group\", stacked bar is \"stack\", and clustered is \"cluster\"\n              language={this.getLanguageString()}\n              chartTag={'alluvial-diagram'}\n              width={this.width - (this.margin ? this.margin.right || 0 : 0)}\n              isInteractive={this.accessibility.elementsAreInterface}\n              hasCousinNavigation={this.innerLinkFillMode === 'source' || this.innerLinkFillMode === 'target'}\n              disabled={\n                this.suppressEvents &&\n                this.accessibility.elementsAreInterface === false &&\n                this.accessibility.keyboardNavConfig &&\n                this.accessibility.keyboardNavConfig.disabled\n              } // the chart is \"simple\"\n            />\n            <div class=\"visa-viz-d3-alluvial-container\" />\n            <div class=\"alluvial-tooltip vcl-tooltip\" style={{ display: this.showTooltip ? 'block' : 'none' }} />\n            <data-table\n              uniqueID={this.chartID}\n              isCompact\n              language={this.getLanguageString()}\n              tableColumns={this.tableColumns}\n              dataKeyNames={this.dataKeyNames}\n              data={this.tableData}\n              secondaryData={this.secondaryTableData}\n              secondaryTableColumns={this.secondaryTableColumns}\n              padding={this.padding}\n              margin={this.margin}\n              hideDataTable={this.accessibility.hideDataTableButton}\n              unitTest={this.unitTest}\n            />\n          </div>\n        </div>\n        {/* <canvas id=\"bitmap-render\" /> */}\n      </div>\n    );\n  }\n  private init() {\n    // reading properties\n    const keys = Object.keys(AlluvialDiagramDefaultValues);\n    let i = 0;\n    const exceptions = {\n      hoverOpacity: {\n        exception: 0\n      },\n      showTooltip: {\n        exception: false\n      },\n      mainTitle: {\n        exception: ''\n      },\n      subTitle: {\n        exception: ''\n      },\n      linkConfig: {\n        ...{\n          exception: false\n        }\n      }\n    };\n    for (i = 0; i < keys.length; i++) {\n      const exception = !exceptions[keys[i]] ? false : this[keys[i]] === exceptions[keys[i]].exception;\n      this[keys[i]] = this[keys[i]] || exception ? this[keys[i]] : AlluvialDiagramDefaultValues[keys[i]];\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}