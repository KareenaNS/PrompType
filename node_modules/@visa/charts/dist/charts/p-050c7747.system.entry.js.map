{"version":3,"names":["propDefaultValues","Utils","ClusteredBarChartDefaultValues","mainTitle","subTitle","text","height","width","margin","top","bottom","right","left","padding","localization","ordinalAccessor","valueAccessor","groupAccessor","reverseOrder","layout","xAxis","yAxis","wrapLabel","colorPalette","colorPaletteCategorical","hoverStyle","clickStyle","referenceStyle","cursor","roundedCorner","barIntervalRatio","groupIntervalRatio","hoverOpacity","dataLabel","legend","categoryLegend","tooltipLabel","showTooltip","accessibility","animationConfig","highestHeadingLevel","referenceLines","annotations","clickHighlight","suppressEvents","clusteredBarChartCss","ClusteredBarChartStyle0","configLocalization","getGlobalInstances","getActiveLanguageString","verifyTextHasSpace","checkAttributeTransitions","createTextStrokeFilter","drawHoverStrokes","removeHoverStrokes","buildStrokes","convertColorsToTextures","initializeDescriptionRoot","initializeElementAccess","setElementFocusHandler","setElementAccessID","setAccessibilityController","hideNonessentialGroups","setAccessTitle","setAccessSubtitle","setAccessLongDescription","setAccessExecutiveSummary","setAccessPurpose","setAccessContext","setAccessStatistics","setAccessChartCounts","setAccessXAxis","setAccessYAxis","setAccessStructure","setAccessAnnotation","retainAccessFocus","checkAccessFocus","setElementInteractionAccessState","setAccessibilityDescriptionWidth","autoTextColor","annotate","chartAccessors","convertVisaColor","checkInteraction","checkClicked","checkHovered","drawAxis","drawGrid","drawLegend","setLegendInteractionState","drawTooltip","formatDataLabel","formatDate","getColors","getLicenses","getPadding","getScopedData","initTooltipStyle","overrideTitleTooltip","placeDataLabels","scopeDataKeys","transitionEndAll","visaColors","validateAccessibilityProps","validateLocalizationProps","findTagLevel","prepareRenderChange","roundTo","resolveLabelCollision","setSubTitle","setReferenceLine","ClusteredBarChart","exports","this","shouldValidateAccessibility","shouldValidateLocalization","nest","datakeys","legendData","updated","shouldValidate","shouldUpdateData","shouldSetDimensions","shouldUpdateScales","shouldValidateAxes","shouldUpdateAnnotations","shouldResetRoot","shouldUpdateTableData","shouldSetColors","shouldSetSubTitle","shouldValidateLabelPlacement","shouldValidateDataLabelAccessor","shouldValidateInteractionKeys","shouldSetSelectionClass","shouldUpdateXAxis","shouldUpdateYAxis","shouldUpdateXGrid","shouldUpdateYGrid","shouldUpdateBaseline","shouldCheckValueAxis","shouldCheckLabelAxis","shouldSetGlobalSelections","shouldEnterUpdateExit","shouldUpdateGeometries","shouldUpdateCorners","shouldUpdateLegendData","shouldUpdateLegend","shouldUpdateLegendInteractivity","shouldSetLegendCursor","shouldUpdateReferenceLines","shouldUpdateCursor","shouldDrawInteractionState","shouldSetLabelOpacity","shouldSetLabelPosition","shouldSetLabelContent","shouldCheckLabelColor","shouldBindInteractivity","shouldUpdateDescriptionWrapper","shouldSetChartAccessibilityTitle","shouldSetChartAccessibilitySubtitle","shouldSetChartAccessibilityLongDescription","shouldSetChartAccessibilityExecutiveSummary","shouldSetChartAccessibilityStatisticalNotes","shouldSetChartAccessibilityStructureNotes","shouldSetParentSVGAccessibility","shouldSetGeometryAccessibilityAttributes","shouldSetGeometryAriaLabels","shouldSetGroupAccessibilityLabel","shouldSetChartAccessibilityPurpose","shouldSetChartAccessibilityContext","shouldSetTestingAttributes","shouldRedrawWrapper","shouldSetTagLevels","shouldSetChartAccessibilityCount","shouldSetYAxisAccessibility","shouldSetXAxisAccessibility","shouldSetAnnotationAccessibility","shouldSetTextures","shouldSetStrokes","shouldSetLocalizationConfig","strokes","topLevel","bottomLevel","textTreatmentHandler","d","i","n","me","select","bgColor","_this","length","innerInteractionKeys","color","hoverHighlight","preparedColors","autoPlacementBackgroundColor","placement","collisionPlacement","attr","y","dark_text","classed","root","svg","node","id","chartID","class_1","prototype","dataWatcher","_newData","_oldData","idWatcher","newID","_oldID","console","error","headingWatcher","_newVal","_oldVal","titleWatcher","subtitleWatcher","dimensionWatcher","layoutWatcher","ordinalAccessorWatcher","interactionKeys","valueAccessorWatcher","groupAccessorWatcher","reverseOrderWatcher","xAxisWatcher","newGridVal","gridVisible","oldGridVal","newTickInterval","tickInterval","oldTickInterval","yAxisWatcher","wrapLabelWatcher","colorsWatcher","hoverStyleWatcher","clickStyleWatcher","referenceWatcher","cursorWatcher","cornerWatcher","intervalRatioWatcher","groupIntervalRatioWatcher","hoverOpacityWatcher","labelWatcher","newPlacementVal","oldPlacementVal","newCollisionPlacementVal","oldCollisionPlacementVal","newVisibleVal","visible","oldVisibleVal","newAccessor","labelAccessor","oldAccessor","newFormatVal","format","oldFormatVal","newCollisionHideOnlyVal","collisionHideOnly","oldCollisionHideOnlyVal","tooltipLabelWatcher","accessibilityWatcher","newTitle","title","oldTitle","newExecutiveSummary","executiveSummary","oldExecutiveSummary","newPurpose","purpose","oldPurpose","newLongDescription","longDescription","oldLongDescription","newContext","contextExplanation","oldContext","newStatisticalNotes","statisticalNotes","oldStatisticalNotes","newStructureNotes","structureNotes","oldStructureNotes","newincludeDataKeyNames","includeDataKeyNames","oldincludeDataKeyNames","newElementDescriptionAccessor","elementDescriptionAccessor","oldElementDescriptionAccessor","newTextures","hideTextures","oldTextures","newSmallValue","showSmallLabels","oldSmallValue","newStrokes","hideStrokes","oldStrokes","newKeyNav","keyboardNavConfig","disabled","oldKeyNav","newInterface","elementsAreInterface","oldInterface","legendWatcher","newInteractiveVal","interactive","oldInteractiveVal","localizationWatcher","newLanguage","language","oldLanguage","newNumeralLocale","numeralLocale","oldNumeralLocale","annotationsWatcher","valueOverrideWatcher","clickWatcher","hoverWatcher","interactionWatcher","dataKeyNamesWatcher","suppressWatcher","unitTestWatcher","componentWillLoad","uniqueID","uuid","initialLoadEvent","emit","Promise","resolve","duration","defaults","clusteredBarChartEl","setLocalizationConfig","setTagLevels","prepareData","prepareLegendData","setDimensions","prepareScales","validateInteractionKeys","validateDataLabelAccessor","validateAxes","validateLabelPlacement","setTableData","shouldValidateAccessibilityProps","shouldValidateLocalizationProps","setColors","componentWillUpdate","componentDidLoad","renderRootElements","setTooltipInitialStyle","setChartDescriptionWrapper","setChartAccessibilityTitle","setChartAccessibilitySubtitle","setChartAccessibilityLongDescription","setChartAccessibilityExecutiveSummary","setChartAccessibilityPurpose","setChartAccessibilityContext","setChartAccessibilityStatisticalNotes","setChartAccessibilityStructureNotes","setParentSVGAccessibility","reSetRoot","setTextures","setStrokes","setSubTitleElements","drawXGrid","drawYGrid","setGlobalSelections","setTestingAttributes","enterGeometries","updateGeometries","exitGeometries","enterDataLabels","updateDataLabels","exitDataLabels","drawGeometries","setChartCountAccessibility","setGeometryAccessibilityAttributes","setGeometryAriaLabels","drawLegendElements","bindLegendInteractivity","setLabelContent","processLabelPosition","updateLabels","drawReferenceLines","setSelectedClass","checkLabelColorAgainstBackground","updateCursor","bindInteractivity","drawAnnotations","setAnnotationAccessibility","drawXAxis","setXAxisAccessibility","drawYAxis","setYAxisAccessibility","drawBaseline","onChangeHandler","barG","setGroupAccessibilityID","then","initialLoadEndEvent","componentDidUpdate","setRoundedCorners","setLabelPosition","updateInteractionState","setLabelOpacity","setLegendCursor","drawEndEvent","windowInstances","languageString","i18Next","languageObject","getResourceBundle","numeralObject","numeral","localeData","skipValidation","Object","assign","disableValidation","data","context","onClickEvent","clickEvent","undefined","innerLabelAccessor","getLanguageString","innerHeight","innerWidth","innerPaddedHeight","innerPaddedWidth","map","parseFloat","Date","date","offsetTimezone","key","entries","keys","tableData","tableColumns","minBarValue","minValueOverride","min","maxBarValue","maxValueOverride","max","scaleLinear","domain","Math","range","x0","scaleBand","x1","values","rangeRound","bandwidth","x","y0","y1","innerXAxis","innerYAxis","subTitleG","colors","colorsArray","colorArr","colorsToConvert","textures","rootSVG","scheme","disableTransitions","copy","append","rootG","gridG","labelG","legendG","tooltipG","referencesG","unitTest","updateBarWrappers","concat","update","updateLabelWrappers","selectAll","changeSvg","selection","namespace","easing","easeCircleIn","changeRoot","changeRootG","axisAccessor","axisLabel","label","dataKeyNames","axisScale","hide","rootEle","hasXAxis","xAxisLabel","hasYAxis","yAxisLabel","markOffset","dataBoundToWrappers","enterBarWrappers","enter","exitBarWrappers","exit","merge","dataBoundToGeometries","enterSize","size","exitSize","dataBoundToLabelWrappers","enterLabelWrappers","exitLabelWrappers","dataBoundToLabels","enterLabels","exitLabels","interrupt","ordinalAxis","ordinalDimension","valueAxis","valueDimension","choice","each","_","_d","on","onClickHandler","onHoverHandler","onMouseOutHandler","clicked","hovered","baseColor","abs","p","parentNode","groupEntering","xStart","datum","xCenter","xPercent","shift","order","transition","ease","axisOfShift","dimensionOfShift","innerPaddedDimension","toUpperCase","substring","self","transform","baseVal","consolidate","matrix","e","call","focusDidExist","remove","parentGNode","geometryIsUpdating","numeric","newValue","delay","transitionEndEvent","state","inputElement","strokeWidth","fill","addCollisionClass","hideOnly","processLabelOpacity","labelsAdded","filter","labelsRemoved","bitmaps","labelSelection","avoidMarks","validPositions","offsets","accessors","removeOnly","opacity","fullBandwidth","prevOpacity","styleVisibility","style","dimensions","hasRoom","fontSize","targetOpacity","selected","selectable","Number","EPSILON","zeroScale","oneScale","breadth","changeLabelWrappers","enteringOnly","updatingOnly","runTransition","redrawBitmap","suppressMarkDraw","textHeight","collisionSettings","vertical","middle","horizontal","boundsScope","textElement","getComputedStyle","changeLabels","xScale","yScale","chartType","avoidCollision","runOccupancyBitmap","groupName","baseColorArr","type","labelKey","labels","hoverEvent","target","source","xAccessor","yAccessor","chartTag","redraw","disableKeyNav","hideDataTable","hideDataTableButton","description","geomType","includeKeyNames","dataKeys","onChangeFunc","added","removed","eventsTooltip","evt","event","isToShow","mouseOutEvent","_a","render","drawStartEvent","theme","init","h","class","display","isInteractive","hasCousinNavigation","isCompact","exceptions","exception","window"],"sources":["src/components/clustered-bar-chart/clustered-bar-chart-default-values.ts","src/components/clustered-bar-chart/clustered-bar-chart.scss?tag=clustered-bar-chart","src/components/clustered-bar-chart/clustered-bar-chart.tsx"],"sourcesContent":["/**\n * Copyright (c) 2020, 2021, 2022, 2023 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport Utils from '@visa/visa-charts-utils';\n\nconst { propDefaultValues } = Utils;\n\nexport class ClusteredBarChartDefaultValues {\n  static readonly mainTitle = 'Clustered Bar Chart Title';\n  static readonly subTitle = propDefaultValues.subTitle.text;\n  static readonly height = 250;\n  static readonly width = 675;\n  static readonly margin = {\n    top: 400 * 0.01,\n    bottom: 400 * 0.01,\n    right: 400 * 0.01,\n    left: 400 * 0.01\n  };\n  static readonly padding = {\n    top: 20,\n    bottom: 50,\n    right: 50,\n    left: 50\n  };\n\n  static readonly localization = propDefaultValues.localization;\n\n  static readonly ordinalAccessor = 'label';\n  static readonly valueAccessor = 'value';\n  static readonly groupAccessor = 'category';\n  static readonly reverseOrder = false;\n\n  static readonly layout = propDefaultValues.layout;\n  static readonly xAxis = propDefaultValues.xAxis;\n  static readonly yAxis = propDefaultValues.yAxis;\n  static readonly wrapLabel = propDefaultValues.wrapLabel;\n\n  static readonly colorPalette = propDefaultValues.colorPaletteCategorical;\n  static readonly hoverStyle = propDefaultValues.hoverStyle;\n  static readonly clickStyle = propDefaultValues.clickStyle;\n  static readonly referenceStyle = propDefaultValues.referenceStyle;\n  static readonly cursor = propDefaultValues.cursor;\n  static readonly roundedCorner = propDefaultValues.roundedCorner;\n  static readonly barIntervalRatio = propDefaultValues.barIntervalRatio;\n  static readonly groupIntervalRatio = propDefaultValues.barIntervalRatio;\n  static readonly hoverOpacity = propDefaultValues.hoverOpacity;\n\n  static readonly dataLabel = propDefaultValues.dataLabel;\n  static readonly dataKeyNames;\n\n  static readonly legend = propDefaultValues.categoryLegend;\n  static readonly tooltipLabel = propDefaultValues.tooltipLabel;\n  static readonly showTooltip = propDefaultValues.showTooltip;\n  static readonly accessibility = propDefaultValues.accessibility;\n  static readonly animationConfig = propDefaultValues.animationConfig;\n  static readonly highestHeadingLevel = propDefaultValues.highestHeadingLevel;\n\n  static readonly referenceLines = propDefaultValues.referenceLines;\n  static readonly annotations = propDefaultValues.annotations;\n\n  static readonly clickHighlight = propDefaultValues.clickHighlight;\n  static readonly hoverHighlight;\n  static readonly suppressEvents = propDefaultValues.suppressEvents;\n}\n","/**\n * Copyright (c) 2020, 2021, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nclustered-bar-chart {\n  .annotations {\n    pointer-events: none;\n    .handle {\n      pointer-events: all;\n    }\n  }\n\n  .screen-reader-info {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n\n  .data-table-link {\n    color: #767676;\n    text-decoration: none;\n    font-size: 12px;\n    margin-left: 5%;\n  }\n\n  .hidden {\n    display: none;\n  }\n  cursor: default;\n  #visa-viz-d3-clustered-bar-container {\n    clear: both;\n  }\n\n  .clustered-bar-legend {\n    font-size: 1em;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n    .legend {\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n      margin-right: 10px;\n    }\n\n    .key-dot {\n      margin: 3px 8px;\n    }\n  }\n\n  .light {\n    .grid {\n      line {\n        stroke: #c9c9c9;\n        stroke-opacity: 1;\n        stroke-width: 0.8;\n        // shape-rendering: crispEdges;\n        // stroke-dasharray: 4, 4;\n      }\n      path {\n        stroke-width: 0;\n      }\n    }\n    .axis {\n      font-size: 12px;\n      .tick {\n        text {\n          fill: #767676;\n        }\n        line {\n          stroke: #767676;\n        }\n      }\n\n      &-label {\n        // axis label\n        text-anchor: middle;\n        font: 1rem sans-serif;\n      }\n\n      &-mark {\n        // axis mark\n        color: #949494;\n        stroke-width: 2px;\n      }\n    }\n\n    .y.axis {\n      path {\n        stroke: #767676;\n        opacity: 0;\n      }\n    }\n    .x.axis {\n      path {\n        stroke: transparent;\n      }\n    }\n  }\n  .dark {\n    .grid {\n      line {\n        stroke: lightgrey;\n        stroke-opacity: 0.7;\n        shape-rendering: crispEdges;\n      }\n      path {\n        stroke-width: 0;\n      }\n    }\n    .axis {\n      font-size: 12px;\n      .tick {\n        line {\n          stroke: lightgrey;\n        }\n        text {\n          fill: grey;\n        }\n      }\n      path {\n        stroke: black;\n      }\n\n      &-label {\n        text-anchor: middle;\n        font: 1rem sans-serif;\n      }\n    }\n    .o-layout--chart svg {\n      background: black;\n      .clustered-bar-dataLabel-vertical {\n        text-anchor: middle;\n      }\n      .clustered-bar-dataLabel-horizontal {\n        text-anchor: start;\n      }\n    }\n  }\n\n  //TBD: add color based on scheme\n  // .r.axis circle {\n  //   stroke: #cccccc;\n  //   stroke-width: 1px;\n  //   fill: none;\n  // }\n\n  //Text alignment, not impacted by color theme\n  // .a.axis text {\n  //   text-anchor: middle;\n  //   font-size: 10pt;\n  // }\n  //\n  // .r.axis text {\n  //   text-anchor: end;\n  //   font-size: 8pt;\n  // }\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport { Component, Element, Prop, Watch, h, Event, EventEmitter } from '@stencil/core';\nimport { select, event } from 'd3-selection';\nimport { max, min } from 'd3-array';\nimport { scaleBand, scaleLinear } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport { easeCircleIn } from 'd3-ease';\nimport {\n  ILocalizationType,\n  IBoxModelType,\n  IHoverStyleType,\n  IClickStyleType,\n  IAxisType,\n  IReferenceStyleType,\n  IDataLabelType,\n  ITooltipLabelType,\n  IAccessibilityType,\n  IAnimationConfig,\n  ILegendType,\n  ISubTitleType\n} from '@visa/charts-types';\nimport { ClusteredBarChartDefaultValues } from './clustered-bar-chart-default-values';\nimport 'd3-transition';\nimport Utils from '@visa/visa-charts-utils';\nimport { v4 as uuid } from 'uuid';\nconst {\n  configLocalization,\n  getGlobalInstances,\n  getActiveLanguageString,\n  verifyTextHasSpace,\n  checkAttributeTransitions,\n  createTextStrokeFilter,\n  drawHoverStrokes,\n  removeHoverStrokes,\n  buildStrokes,\n  convertColorsToTextures,\n  initializeDescriptionRoot,\n  initializeElementAccess,\n  setElementFocusHandler,\n  setElementAccessID,\n  setAccessibilityController,\n  hideNonessentialGroups,\n  setAccessTitle,\n  setAccessSubtitle,\n  setAccessLongDescription,\n  setAccessExecutiveSummary,\n  setAccessPurpose,\n  setAccessContext,\n  setAccessStatistics,\n  setAccessChartCounts,\n  setAccessXAxis,\n  setAccessYAxis,\n  setAccessStructure,\n  setAccessAnnotation,\n  retainAccessFocus,\n  checkAccessFocus,\n  setElementInteractionAccessState,\n  setAccessibilityDescriptionWidth,\n  autoTextColor,\n  annotate,\n  chartAccessors,\n  convertVisaColor,\n  checkInteraction,\n  checkClicked,\n  checkHovered,\n  drawAxis,\n  drawGrid,\n  drawLegend,\n  setLegendInteractionState,\n  drawTooltip,\n  formatDataLabel,\n  formatDate,\n  getColors,\n  getLicenses,\n  getPadding,\n  getScopedData,\n  initTooltipStyle,\n  overrideTitleTooltip,\n  placeDataLabels,\n  scopeDataKeys,\n  transitionEndAll,\n  visaColors,\n  validateAccessibilityProps,\n  validateLocalizationProps,\n  findTagLevel,\n  prepareRenderChange,\n  roundTo,\n  resolveLabelCollision,\n  setSubTitle,\n  setReferenceLine\n} = Utils;\n\n@Component({\n  tag: 'clustered-bar-chart',\n  styleUrl: 'clustered-bar-chart.scss'\n})\nexport class ClusteredBarChart {\n  @Event() clickEvent: EventEmitter;\n  @Event() hoverEvent: EventEmitter;\n  @Event() mouseOutEvent: EventEmitter;\n  @Event() initialLoadEvent: EventEmitter;\n  @Event() initialLoadEndEvent: EventEmitter;\n  @Event() drawStartEvent: EventEmitter;\n  @Event() drawEndEvent: EventEmitter;\n  @Event() transitionEndEvent: EventEmitter;\n\n  // Chart Attributes (1/7)\n  @Prop({ mutable: true }) mainTitle: string = ClusteredBarChartDefaultValues.mainTitle;\n  @Prop({ mutable: true }) subTitle: string | ISubTitleType = ClusteredBarChartDefaultValues.subTitle;\n  @Prop({ mutable: true }) height: number = ClusteredBarChartDefaultValues.height;\n  @Prop({ mutable: true }) width: number = ClusteredBarChartDefaultValues.width;\n  @Prop({ mutable: true }) layout: string = ClusteredBarChartDefaultValues.layout;\n  @Prop({ mutable: true }) margin: IBoxModelType = ClusteredBarChartDefaultValues.margin;\n  @Prop({ mutable: true }) padding: IBoxModelType = ClusteredBarChartDefaultValues.padding;\n  @Prop({ mutable: true }) highestHeadingLevel: string | number = ClusteredBarChartDefaultValues.highestHeadingLevel;\n\n  // Data (2/7)\n  @Prop() data;\n  @Prop() uniqueID;\n  @Prop({ mutable: true }) localization: ILocalizationType = ClusteredBarChartDefaultValues.localization;\n  @Prop({ mutable: true }) ordinalAccessor: string = ClusteredBarChartDefaultValues.ordinalAccessor;\n  @Prop({ mutable: true }) valueAccessor: string = ClusteredBarChartDefaultValues.valueAccessor;\n  @Prop({ mutable: true }) groupAccessor: string = ClusteredBarChartDefaultValues.groupAccessor;\n  @Prop({ mutable: true }) reverseOrder: boolean = ClusteredBarChartDefaultValues.reverseOrder;\n\n  // Axis (3/7)\n  @Prop({ mutable: true }) xAxis: IAxisType = ClusteredBarChartDefaultValues.xAxis;\n  @Prop({ mutable: true }) yAxis: IAxisType = ClusteredBarChartDefaultValues.yAxis;\n  @Prop({ mutable: true }) wrapLabel: boolean = ClusteredBarChartDefaultValues.wrapLabel;\n\n  // Color & Shape (4/7)\n  @Prop({ mutable: true }) colorPalette: string = ClusteredBarChartDefaultValues.colorPalette;\n  @Prop({ mutable: true }) colors: string[];\n  @Prop({ mutable: true }) hoverStyle: IHoverStyleType = ClusteredBarChartDefaultValues.hoverStyle;\n  @Prop({ mutable: true }) clickStyle: IClickStyleType = ClusteredBarChartDefaultValues.clickStyle;\n  @Prop({ mutable: true }) referenceStyle: IReferenceStyleType = ClusteredBarChartDefaultValues.referenceStyle;\n  @Prop({ mutable: true }) cursor: string = ClusteredBarChartDefaultValues.cursor;\n  @Prop({ mutable: true }) roundedCorner: number = ClusteredBarChartDefaultValues.roundedCorner;\n  @Prop({ mutable: true }) barIntervalRatio: number = ClusteredBarChartDefaultValues.barIntervalRatio;\n  @Prop({ mutable: true }) groupIntervalRatio: number = ClusteredBarChartDefaultValues.groupIntervalRatio;\n  @Prop({ mutable: true }) hoverOpacity: number = ClusteredBarChartDefaultValues.hoverOpacity;\n  @Prop({ mutable: true }) animationConfig: IAnimationConfig = ClusteredBarChartDefaultValues.animationConfig;\n\n  // Data label (5/7)\n  @Prop({ mutable: true }) dataLabel: IDataLabelType = ClusteredBarChartDefaultValues.dataLabel;\n  @Prop({ mutable: true }) dataKeyNames: object;\n  @Prop({ mutable: true }) showTooltip: boolean = ClusteredBarChartDefaultValues.showTooltip;\n  @Prop({ mutable: true }) tooltipLabel: ITooltipLabelType = ClusteredBarChartDefaultValues.tooltipLabel;\n  @Prop({ mutable: true }) accessibility: IAccessibilityType = ClusteredBarChartDefaultValues.accessibility;\n  @Prop({ mutable: true }) legend: ILegendType = ClusteredBarChartDefaultValues.legend;\n  @Prop({ mutable: true }) annotations: object[] = ClusteredBarChartDefaultValues.annotations;\n\n  // Calculation (6/7)\n  @Prop({ mutable: true }) minValueOverride: number;\n  @Prop({ mutable: true }) maxValueOverride: number;\n  @Prop({ mutable: true }) referenceLines: object[] = ClusteredBarChartDefaultValues.referenceLines;\n\n  // Interactivity (7/7)\n  @Prop({ mutable: true }) suppressEvents: boolean = ClusteredBarChartDefaultValues.suppressEvents;\n  @Prop({ mutable: true }) hoverHighlight: object;\n  @Prop({ mutable: true }) clickHighlight: object[] = ClusteredBarChartDefaultValues.clickHighlight;\n  @Prop({ mutable: true }) interactionKeys: string[];\n\n  // Testing & Debug (8/8)\n  @Prop() unitTest: boolean = false;\n  // @Prop() debugMode: boolean = false;\n\n  // Element\n  @Element()\n  clusteredBarChartEl: HTMLElement;\n  shouldValidateAccessibility: boolean = true;\n  shouldValidateLocalization: boolean = true;\n  svg: any;\n  root: any;\n  rootG: any;\n  barG: any;\n  gridG: any;\n  bars: any;\n  labelG: any;\n  labels: any;\n  referencesG: any;\n  defaults: boolean;\n  current: any;\n  enter: any;\n  exit: any;\n  update: any;\n  enterBarWrappers: any;\n  updateBarWrappers: any;\n  exitBarWrappers: any;\n  // vertical layout\n  x0: any;\n  x1: any;\n  y: any;\n  // horizontal layout\n  y0: any;\n  y1: any;\n  x: any;\n  innerHeight: number;\n  innerWidth: number;\n  innerPaddedHeight: number;\n  innerPaddedWidth: number;\n  innerXAxis: any;\n  innerYAxis: any;\n  nest: any = [];\n  datakeys: any = [];\n  legendData: any = [];\n  colorArr: any;\n  preparedColors: any;\n  duration: number;\n  legendG: any;\n  subTitleG: any;\n  tooltipG: any;\n  updated: boolean = true;\n  enterSize: number;\n  exitSize: number;\n  enterLabels: any;\n  exitLabels: any;\n  updateLabels: any;\n  enterLabelWrappers: any;\n  updateLabelWrappers: any;\n  exitLabelWrappers: any;\n  tableData: any;\n  tableColumns: any;\n  chartID: string;\n  innerInteractionKeys: any;\n  innerLabelAccessor: string;\n  shouldValidate: boolean = false;\n  shouldUpdateData: boolean = false;\n  shouldSetDimensions: boolean = false;\n  shouldUpdateScales: boolean = false;\n  shouldValidateAxes: boolean = false;\n  shouldUpdateAnnotations: boolean = false;\n  shouldResetRoot: boolean = false;\n  shouldUpdateTableData: boolean = false;\n  shouldSetColors: boolean = false;\n  shouldSetSubTitle: boolean = false;\n  shouldValidateLabelPlacement: boolean = false;\n  shouldValidateDataLabelAccessor: boolean = false;\n  shouldValidateInteractionKeys: boolean = false;\n  shouldSetSelectionClass: boolean = false;\n  shouldUpdateXAxis: boolean = false;\n  shouldUpdateYAxis: boolean = false;\n  shouldUpdateXGrid: boolean = false;\n  shouldUpdateYGrid: boolean = false;\n  shouldUpdateBaseline: boolean = false;\n  shouldCheckValueAxis: boolean = false;\n  shouldCheckLabelAxis: boolean = false;\n  shouldSetGlobalSelections: boolean = false;\n  shouldEnterUpdateExit: boolean = false;\n  shouldUpdateGeometries: boolean = false;\n  shouldUpdateCorners: boolean = false;\n  shouldUpdateLegendData: boolean = false;\n  shouldUpdateLegend: boolean = false;\n  shouldUpdateLegendInteractivity: boolean = false;\n  shouldSetLegendCursor: boolean = false;\n  shouldUpdateReferenceLines: boolean = false;\n  shouldUpdateCursor: boolean = false;\n  shouldDrawInteractionState: boolean = false;\n  shouldSetLabelOpacity: boolean = false;\n  shouldSetLabelPosition: boolean = false;\n  shouldSetLabelContent: boolean = false;\n  shouldCheckLabelColor: boolean = false;\n  shouldBindInteractivity: boolean = false;\n  shouldUpdateDescriptionWrapper: boolean = false;\n  shouldSetChartAccessibilityTitle: boolean = false;\n  shouldSetChartAccessibilitySubtitle: boolean = false;\n  shouldSetChartAccessibilityLongDescription: boolean = false;\n  shouldSetChartAccessibilityExecutiveSummary: boolean = false;\n  shouldSetChartAccessibilityStatisticalNotes: boolean = false;\n  shouldSetChartAccessibilityStructureNotes: boolean = false;\n  shouldSetParentSVGAccessibility: boolean = false;\n  shouldSetGeometryAccessibilityAttributes: boolean = false;\n  shouldSetGeometryAriaLabels: boolean = false;\n  shouldSetGroupAccessibilityLabel: boolean = false;\n  shouldSetChartAccessibilityPurpose: boolean = false;\n  shouldSetChartAccessibilityContext: boolean = false;\n  shouldSetTestingAttributes: boolean = false;\n  shouldRedrawWrapper: boolean = false;\n  shouldSetTagLevels: boolean = false;\n  shouldSetChartAccessibilityCount: boolean = false;\n  shouldSetYAxisAccessibility: boolean = false;\n  shouldSetXAxisAccessibility: boolean = false;\n  shouldSetAnnotationAccessibility: boolean = false;\n  shouldSetTextures: boolean = false;\n  shouldSetStrokes: boolean = false;\n  shouldSetLocalizationConfig: boolean = false;\n  strokes: any = {};\n  topLevel: string = 'h2';\n  bottomLevel: string = 'p';\n  bitmaps: any;\n\n  @Watch('data')\n  dataWatcher(_newData, _oldData) {\n    this.updated = true;\n    this.shouldUpdateData = true;\n    this.shouldSetColors = true;\n    this.shouldSetTextures = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldSetLabelContent = true;\n    this.shouldSetLabelPosition = true;\n    // this.shouldDrawInteractionState = true; // called from updateGeometries\n    // this.shouldCheckLabelColor = true; // called from updateGeometries\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateLegendData = true;\n    this.shouldUpdateScales = true;\n    this.shouldValidate = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('uniqueID')\n  idWatcher(newID, _oldID) {\n    console.error(\n      'Change detected in prop uniqueID from value ' +\n        _oldID +\n        ' to value ' +\n        newID +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.chartID = newID || 'clustered-bar-chart-' + uuid();\n    // this.clusteredBarChartEl.id = this.chartID;\n    // this.shouldValidate = true;\n    // this.shouldUpdateDescriptionWrapper = true;\n    // this.shouldSetParentSVGAccessibility = true;\n    // this.shouldDrawInteractionState = true;\n    // this.shouldUpdateLegend = true;\n    // this.shouldSetStrokes = true;\n  }\n\n  @Watch('highestHeadingLevel')\n  headingWatcher(_newVal, _oldVal) {\n    this.shouldRedrawWrapper = true;\n    this.shouldSetTagLevels = true;\n    this.shouldSetChartAccessibilityCount = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('mainTitle')\n  titleWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('subTitle')\n  subtitleWatcher(_newVal, _oldVal) {\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('height')\n  @Watch('width')\n  @Watch('padding')\n  @Watch('margin')\n  dimensionWatcher(_newVal, _oldVal) {\n    this.shouldSetDimensions = true;\n    this.shouldUpdateScales = true;\n    this.shouldResetRoot = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('layout')\n  layoutWatcher(_newVal, _oldVal) {\n    this.shouldValidateLabelPlacement = true;\n    this.shouldUpdateScales = true;\n    this.shouldValidateAxes = true;\n    this.shouldResetRoot = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetTestingAttributes = true;\n  }\n\n  @Watch('ordinalAccessor')\n  ordinalAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateLegendData = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetColors = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('valueAccessor')\n  valueAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetColors = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckValueAxis = true;\n    this.shouldValidateDataLabelAccessor = true;\n    this.shouldSetLabelContent = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n  }\n\n  @Watch('groupAccessor')\n  groupAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldCheckLabelAxis = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('reverseOrder')\n  reverseOrderWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    if (this.layout === 'vertical') {\n      this.shouldValidateAxes = true;\n      this.shouldUpdateXAxis = true;\n      this.shouldSetXAxisAccessibility = true;\n    } else if (this.layout === 'horizontal') {\n      this.shouldValidateAxes = true;\n      this.shouldUpdateYAxis = true;\n      this.shouldSetYAxisAccessibility = true;\n    }\n  }\n\n  @Watch('xAxis')\n  xAxisWatcher(_newVal, _oldVal) {\n    this.shouldValidateAxes = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateXGrid = true;\n    }\n  }\n\n  @Watch('yAxis')\n  yAxisWatcher(_newVal, _oldVal) {\n    this.shouldValidateAxes = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateYGrid = true;\n    }\n  }\n\n  @Watch('wrapLabel')\n  wrapLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n  }\n\n  @Watch('colors')\n  @Watch('colorPalette')\n  colorsWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n  }\n\n  @Watch('hoverStyle')\n  hoverStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('clickStyle')\n  clickStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('referenceLines')\n  @Watch('referenceStyle')\n  referenceWatcher(_newVal, _oldVal) {\n    this.shouldUpdateReferenceLines = true;\n  }\n\n  @Watch('cursor')\n  cursorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCursor = true;\n    this.shouldSetLegendCursor = true;\n  }\n\n  @Watch('roundedCorner')\n  cornerWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCorners = true;\n  }\n\n  @Watch('barIntervalRatio')\n  intervalRatioWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldCheckLabelAxis = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('groupIntervalRatio')\n  groupIntervalRatioWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('hoverOpacity')\n  hoverOpacityWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n  }\n\n  @Watch('dataLabel')\n  labelWatcher(_newVal, _oldVal) {\n    const newPlacementVal = _newVal && _newVal.placement ? _newVal.placement : false;\n    const oldPlacementVal = _oldVal && _oldVal.placement ? _oldVal.placement : false;\n    const newCollisionPlacementVal = _newVal && _newVal.collisionPlacement ? _newVal.collisionPlacement : false;\n    const oldCollisionPlacementVal = _oldVal && _oldVal.collisionPlacement ? _oldVal.collisionPlacement : false;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    const newAccessor = _newVal && _newVal.labelAccessor ? _newVal.labelAccessor : false;\n    const oldAccessor = _oldVal && _oldVal.labelAccessor ? _oldVal.labelAccessor : false;\n    const newFormatVal = _newVal && _newVal.format ? _newVal.format : false;\n    const oldFormatVal = _oldVal && _oldVal.format ? _oldVal.format : false;\n    const newCollisionHideOnlyVal = _newVal && _newVal.collisionHideOnly ? _newVal.collisionHideOnly : false;\n    const oldCollisionHideOnlyVal = _oldVal && _oldVal.collisionHideOnly ? _oldVal.collisionHideOnly : false;\n    // if only visible changes we just flip opacity, but don't redraw\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetLabelOpacity = true;\n    }\n    // any placement related stuff and we do a full redraw, no opacity\n    if (\n      newPlacementVal !== oldPlacementVal ||\n      newCollisionPlacementVal !== oldCollisionPlacementVal ||\n      newCollisionHideOnlyVal !== oldCollisionHideOnlyVal\n    ) {\n      this.shouldValidateLabelPlacement = true;\n      this.shouldSetLabelPosition = true;\n      this.shouldCheckLabelColor = true;\n    }\n    // text/format required redraw/table but no opacity\n    if (newAccessor !== oldAccessor || newFormatVal !== oldFormatVal) {\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldUpdateTableData = true;\n      this.shouldSetLabelContent = true;\n      this.shouldCheckLabelColor = true;\n    }\n  }\n\n  @Watch('tooltipLabel')\n  tooltipLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('accessibility')\n  accessibilityWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    const newTitle = _newVal && _newVal.title ? _newVal.title : false;\n    const oldTitle = _oldVal && _oldVal.title ? _oldVal.title : false;\n    if (newTitle !== oldTitle) {\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newExecutiveSummary = _newVal && _newVal.executiveSummary ? _newVal.executiveSummary : false;\n    const oldExecutiveSummary = _oldVal && _oldVal.executiveSummary ? _oldVal.executiveSummary : false;\n    if (newExecutiveSummary !== oldExecutiveSummary) {\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n    }\n    const newPurpose = _newVal && _newVal.purpose ? _newVal.purpose : false;\n    const oldPurpose = _oldVal && _oldVal.purpose ? _oldVal.purpose : false;\n    if (newPurpose !== oldPurpose) {\n      this.shouldSetChartAccessibilityPurpose = true;\n    }\n    const newLongDescription = _newVal && _newVal.longDescription ? _newVal.longDescription : false;\n    const oldLongDescription = _oldVal && _oldVal.longDescription ? _oldVal.longDescription : false;\n    if (newLongDescription !== oldLongDescription) {\n      this.shouldSetChartAccessibilityLongDescription = true;\n    }\n    const newContext = _newVal && _newVal.contextExplanation ? _newVal.contextExplanation : false;\n    const oldContext = _oldVal && _oldVal.contextExplanation ? _oldVal.contextExplanation : false;\n    if (newContext !== oldContext) {\n      this.shouldSetChartAccessibilityContext = true;\n    }\n    const newStatisticalNotes = _newVal && _newVal.statisticalNotes ? _newVal.statisticalNotes : false;\n    const oldStatisticalNotes = _oldVal && _oldVal.statisticalNotes ? _oldVal.statisticalNotes : false;\n    if (newStatisticalNotes !== oldStatisticalNotes) {\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n    }\n    const newStructureNotes = _newVal && _newVal.structureNotes ? _newVal.structureNotes : false;\n    const oldStructureNotes = _oldVal && _oldVal.structureNotes ? _oldVal.structureNotes : false;\n    if (newStructureNotes !== oldStructureNotes) {\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    const newincludeDataKeyNames = _newVal && _newVal.includeDataKeyNames;\n    const oldincludeDataKeyNames = _oldVal && _oldVal.includeDataKeyNames;\n    const newElementDescriptionAccessor =\n      _newVal && _newVal.elementDescriptionAccessor ? _newVal.elementDescriptionAccessor : false;\n    const oldElementDescriptionAccessor =\n      _oldVal && _oldVal.elementDescriptionAccessor ? _oldVal.elementDescriptionAccessor : false;\n    if (\n      newincludeDataKeyNames !== oldincludeDataKeyNames ||\n      newElementDescriptionAccessor !== oldElementDescriptionAccessor\n    ) {\n      if (newincludeDataKeyNames !== oldincludeDataKeyNames) {\n        // this one is tricky because it needs to run after the lifecycle\n        // AND it could run in the off-chance this prop is changed\n        this.shouldSetGroupAccessibilityLabel = true;\n      }\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newTextures = _newVal && _newVal.hideTextures ? _newVal.hideTextures : false;\n    const oldTextures = _oldVal && _oldVal.hideTextures ? _oldVal.hideTextures : false;\n    if (newTextures !== oldTextures) {\n      this.shouldSetTextures = true;\n      this.shouldUpdateLegend = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newSmallValue = _newVal && _newVal.showSmallLabels ? _newVal.showSmallLabels : false;\n    const oldSmallValue = _oldVal && _oldVal.showSmallLabels ? _oldVal.showSmallLabels : false;\n    if (newSmallValue !== oldSmallValue) {\n      this.shouldSetLabelOpacity = true;\n    }\n    const newStrokes = _newVal && _newVal.hideStrokes ? _newVal.hideStrokes : false;\n    const oldStrokes = _oldVal && _oldVal.hideStrokes ? _oldVal.hideStrokes : false;\n    if (newStrokes !== oldStrokes) {\n      this.shouldUpdateLegend = true;\n      this.shouldSetStrokes = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newKeyNav =\n      _newVal && _newVal.keyboardNavConfig && _newVal.keyboardNavConfig.disabled\n        ? _newVal.keyboardNavConfig.disabled\n        : false;\n    const oldKeyNav =\n      _oldVal && _oldVal.keyboardNavConfig && _oldVal.keyboardNavConfig.disabled\n        ? _oldVal.keyboardNavConfig.disabled\n        : false;\n    const newInterface = _newVal && _newVal.elementsAreInterface ? _newVal.elementsAreInterface : false;\n    const oldInterface = _oldVal && _oldVal.elementsAreInterface ? _oldVal.elementsAreInterface : false;\n    if (newKeyNav !== oldKeyNav || newInterface !== oldInterface) {\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetChartAccessibilitySubtitle = true;\n      this.shouldSetChartAccessibilityLongDescription = true;\n      this.shouldSetChartAccessibilityContext = true;\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n      this.shouldSetChartAccessibilityPurpose = true;\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    if (newInterface !== oldInterface) {\n      this.shouldDrawInteractionState = true;\n    }\n  }\n\n  @Watch('legend')\n  legendWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLegend = true;\n    const newInteractiveVal = _newVal && _newVal.interactive;\n    const oldInteractiveVal = _oldVal && _oldVal.interactive;\n    if (newInteractiveVal !== oldInteractiveVal) {\n      this.shouldSetLegendCursor = true;\n      this.shouldUpdateLegendInteractivity = true;\n    }\n  }\n\n  @Watch('localization')\n  localizationWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n\n    // language\n    const newLanguage = _newVal && _newVal.language ? _newVal.language : false;\n    const oldLanguage = _oldVal && _oldVal.language ? _oldVal.language : false;\n    if (newLanguage !== oldLanguage) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldSetLabelContent = true;\n      this.shouldCheckLabelColor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n\n    // numeralLocale\n    const newNumeralLocale = _newVal && _newVal.numeralLocale ? _newVal.numeralLocale : false;\n    const oldNumeralLocale = _oldVal && _oldVal.numeralLocale ? _oldVal.numeralLocale : false;\n    if (newNumeralLocale !== oldNumeralLocale) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldSetLabelContent = true;\n      this.shouldCheckLabelColor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n  }\n\n  @Watch('annotations')\n  annotationsWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetAnnotationAccessibility = true;\n  }\n\n  @Watch('maxValueOverride')\n  @Watch('minValueOverride')\n  valueOverrideWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldCheckValueAxis = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('clickHighlight')\n  clickWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetSelectionClass = true;\n  }\n\n  @Watch('hoverHighlight')\n  hoverWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n  }\n\n  @Watch('interactionKeys')\n  interactionWatcher(_newVal, _oldVal) {\n    this.shouldValidateInteractionKeys = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('dataKeyNames')\n  dataKeyNamesWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('suppressEvents')\n  suppressWatcher(_newVal, _oldVal) {\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldSetLegendCursor = true;\n    this.shouldUpdateLegendInteractivity = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldRedrawWrapper = true;\n    this.shouldValidate = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('unitTest')\n  unitTestWatcher(_newVal, _oldVal) {\n    this.shouldSetTestingAttributes = true;\n  }\n\n  componentWillLoad() {\n    const chartID = this.uniqueID || 'clustered-bar-chart-' + uuid();\n    this.initialLoadEvent.emit({ chartID: chartID });\n    // contrary to componentWillUpdate, this method appears safe to use for\n    // any calculations we need. Keeping them here reduces future refactor,\n    // since componentWillUpdate should eventually mirror this method\n    return new Promise(resolve => {\n      this.duration = 0;\n      this.defaults = true;\n      this.chartID = chartID;\n      this.clusteredBarChartEl.id = this.chartID;\n      this.setLocalizationConfig();\n      this.setTagLevels();\n      this.prepareData();\n      this.prepareLegendData();\n      this.setDimensions();\n      this.prepareScales();\n      this.validateInteractionKeys();\n      this.validateDataLabelAccessor();\n      this.validateAxes();\n      this.validateLabelPlacement();\n      this.setTableData();\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.setColors();\n      resolve('component will load');\n    });\n  }\n\n  componentWillUpdate() {\n    // NEVER put items in this method that rely on props (until stencil bug is resolved)\n    // All items that belong here are currently at the top of render\n    // see: https://github.com/ionic-team/stencil/issues/2061#issuecomment-578282178\n    return new Promise(resolve => {\n      resolve('component will update');\n    });\n  }\n\n  componentDidLoad() {\n    return new Promise(resolve => {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.renderRootElements();\n      this.setTooltipInitialStyle();\n      this.setChartDescriptionWrapper();\n      this.setChartAccessibilityTitle();\n      this.setChartAccessibilitySubtitle();\n      this.setChartAccessibilityLongDescription();\n      this.setChartAccessibilityExecutiveSummary();\n      this.setChartAccessibilityPurpose();\n      this.setChartAccessibilityContext();\n      this.setChartAccessibilityStatisticalNotes();\n      this.setChartAccessibilityStructureNotes();\n      this.setParentSVGAccessibility();\n      this.reSetRoot();\n      this.setTextures();\n      this.setStrokes();\n      this.setSubTitleElements();\n      this.drawXGrid();\n      this.drawYGrid();\n      this.setGlobalSelections();\n      this.setTestingAttributes();\n      this.enterGeometries();\n      this.updateGeometries();\n      this.exitGeometries();\n      this.enterDataLabels();\n      this.updateDataLabels();\n      this.exitDataLabels();\n      this.drawGeometries();\n      this.setChartCountAccessibility();\n      this.setGeometryAccessibilityAttributes();\n      this.setGeometryAriaLabels();\n      this.drawLegendElements();\n      this.bindLegendInteractivity();\n      this.setLabelContent();\n      this.processLabelPosition(this.updateLabels, false, true, false);\n      this.drawReferenceLines();\n      this.setSelectedClass();\n      this.checkLabelColorAgainstBackground();\n      this.updateCursor();\n      this.bindInteractivity();\n      this.drawAnnotations();\n      this.setAnnotationAccessibility();\n      this.drawXAxis();\n      this.setXAxisAccessibility();\n      this.drawYAxis();\n      this.setYAxisAccessibility();\n      this.drawBaseline();\n      this.onChangeHandler();\n\n      // we want to hide all child <g> of this.root BUT we want to make sure not to hide the\n      // parent<g> that contains our geometries! In a subGroup chart (like stacked bars),\n      // we want to pass the PARENT of all the <g>s that contain bars\n      hideNonessentialGroups(this.root.node(), this.barG.node());\n      this.setGroupAccessibilityID();\n      this.defaults = false;\n\n      // catch all to remove entering class from labels once we have loaded component\n      this.updateLabels.classed('entering', false);\n      resolve('component did load');\n    }).then(() => this.initialLoadEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  componentDidUpdate() {\n    return new Promise(resolve => {\n      this.duration = !this.animationConfig || !this.animationConfig.disabled ? 750 : 0;\n      if (this.shouldUpdateDescriptionWrapper) {\n        this.setChartDescriptionWrapper();\n        this.shouldUpdateDescriptionWrapper = false;\n      }\n      if (this.shouldSetChartAccessibilityCount) {\n        this.setChartCountAccessibility();\n        this.shouldSetChartAccessibilityCount = false;\n      }\n      if (this.shouldSetChartAccessibilityTitle) {\n        this.setChartAccessibilityTitle();\n        this.shouldSetChartAccessibilityTitle = false;\n      }\n      if (this.shouldSetChartAccessibilitySubtitle) {\n        this.setChartAccessibilitySubtitle();\n        this.shouldSetChartAccessibilitySubtitle = false;\n      }\n      if (this.shouldSetChartAccessibilityLongDescription) {\n        this.setChartAccessibilityLongDescription();\n        this.shouldSetChartAccessibilityLongDescription = false;\n      }\n      if (this.shouldSetChartAccessibilityExecutiveSummary) {\n        this.setChartAccessibilityExecutiveSummary();\n        this.shouldSetChartAccessibilityExecutiveSummary = false;\n      }\n      if (this.shouldSetChartAccessibilityPurpose) {\n        this.setChartAccessibilityPurpose();\n        this.shouldSetChartAccessibilityPurpose = false;\n      }\n      if (this.shouldSetChartAccessibilityContext) {\n        this.setChartAccessibilityContext();\n        this.shouldSetChartAccessibilityContext = false;\n      }\n      if (this.shouldSetChartAccessibilityStatisticalNotes) {\n        this.setChartAccessibilityStatisticalNotes();\n        this.shouldSetChartAccessibilityStatisticalNotes = false;\n      }\n      if (this.shouldSetChartAccessibilityStructureNotes) {\n        this.setChartAccessibilityStructureNotes();\n        this.shouldSetChartAccessibilityStructureNotes = false;\n      }\n      if (this.shouldSetParentSVGAccessibility) {\n        this.setParentSVGAccessibility();\n        this.shouldSetParentSVGAccessibility = false;\n      }\n      if (this.shouldResetRoot) {\n        this.reSetRoot();\n        this.shouldResetRoot = false;\n      }\n      if (this.shouldSetTextures) {\n        this.setTextures();\n        this.shouldSetTextures = false;\n      }\n      if (this.shouldSetStrokes) {\n        this.setStrokes();\n        this.shouldSetStrokes = false;\n      }\n      if (this.shouldSetGlobalSelections) {\n        this.setGlobalSelections();\n        this.shouldSetGlobalSelections = false;\n      }\n      if (this.shouldSetTestingAttributes) {\n        this.setTestingAttributes();\n        this.shouldSetTestingAttributes = false;\n      }\n      if (this.shouldSetSubTitle) {\n        this.setSubTitleElements();\n        this.shouldSetSubTitle = false;\n      }\n      if (this.shouldUpdateXGrid) {\n        this.drawXGrid();\n        this.shouldUpdateXGrid = false;\n      }\n      if (this.shouldUpdateYGrid) {\n        this.drawYGrid();\n        this.shouldUpdateYGrid = false;\n      }\n      if (this.shouldEnterUpdateExit) {\n        this.enterGeometries();\n        this.updateGeometries();\n        this.exitGeometries();\n        this.enterDataLabels();\n        this.updateDataLabels();\n        this.exitDataLabels();\n        this.shouldEnterUpdateExit = false;\n      }\n      if (this.shouldUpdateGeometries) {\n        this.drawGeometries();\n        this.shouldUpdateGeometries = false;\n      }\n      if (this.shouldSetGeometryAccessibilityAttributes) {\n        this.setGeometryAccessibilityAttributes();\n        this.shouldSetGeometryAccessibilityAttributes = false;\n      }\n      if (this.shouldSetGeometryAriaLabels) {\n        this.setGeometryAriaLabels();\n        this.shouldSetGeometryAriaLabels = false;\n      }\n      if (this.shouldSetGroupAccessibilityLabel) {\n        this.setGroupAccessibilityID();\n        this.shouldSetGroupAccessibilityLabel = false;\n      }\n      if (this.shouldUpdateCorners) {\n        this.setRoundedCorners();\n        this.shouldUpdateCorners = false;\n      }\n      if (this.shouldUpdateLegend) {\n        this.drawLegendElements();\n        this.shouldUpdateLegend = false;\n      }\n      if (this.shouldSetLabelContent) {\n        this.setLabelContent();\n        this.shouldSetLabelContent = false;\n      }\n      if (this.shouldSetLabelPosition) {\n        this.setLabelPosition();\n        this.shouldSetLabelPosition = false;\n      }\n      if (this.shouldUpdateReferenceLines) {\n        this.drawReferenceLines();\n        this.shouldUpdateReferenceLines = false;\n      }\n      if (this.shouldDrawInteractionState) {\n        this.updateInteractionState();\n        this.shouldDrawInteractionState = false;\n      }\n      if (this.shouldSetLabelOpacity) {\n        this.setLabelOpacity();\n        this.shouldSetLabelOpacity = false;\n      }\n      if (this.shouldCheckLabelColor) {\n        this.checkLabelColorAgainstBackground();\n        this.shouldCheckLabelColor = false;\n      }\n      if (this.shouldSetSelectionClass) {\n        this.setSelectedClass();\n        this.shouldSetSelectionClass = false;\n      }\n      if (this.shouldUpdateLegendInteractivity) {\n        this.bindLegendInteractivity();\n        this.shouldUpdateLegendInteractivity = false;\n      }\n      if (this.shouldSetLegendCursor) {\n        this.setLegendCursor();\n        this.shouldSetLegendCursor = false;\n      }\n      if (this.shouldUpdateCursor) {\n        this.updateCursor();\n        this.shouldUpdateCursor = false;\n      }\n      if (this.shouldBindInteractivity) {\n        this.bindInteractivity();\n        this.shouldBindInteractivity = false;\n      }\n      if (this.shouldUpdateAnnotations) {\n        this.drawAnnotations();\n        this.shouldUpdateAnnotations = false;\n      }\n      if (this.shouldSetAnnotationAccessibility) {\n        this.setAnnotationAccessibility();\n        this.shouldSetAnnotationAccessibility = false;\n      }\n      if (this.shouldUpdateXAxis) {\n        this.drawXAxis();\n        this.shouldUpdateXAxis = false;\n      }\n      if (this.shouldSetXAxisAccessibility) {\n        this.setXAxisAccessibility();\n        this.shouldSetXAxisAccessibility = false;\n      }\n      if (this.shouldUpdateYAxis) {\n        this.drawYAxis();\n        this.shouldUpdateYAxis = false;\n      }\n      if (this.shouldSetYAxisAccessibility) {\n        this.setYAxisAccessibility();\n        this.shouldSetYAxisAccessibility = false;\n      }\n      if (this.shouldUpdateBaseline) {\n        this.drawBaseline();\n        this.shouldUpdateBaseline = false;\n      }\n      this.onChangeHandler();\n      this.updateLabels.classed('entering', false);\n      resolve('component did update');\n    }).then(() => this.drawEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  shouldValidateLocalizationProps() {\n    const windowInstances = getGlobalInstances();\n    const languageString = windowInstances.i18Next.language;\n    const languageObject = windowInstances.i18Next.getResourceBundle(languageString);\n    const numeralObject = windowInstances.numeral.localeData();\n    if (this.shouldValidateLocalization && !this.localization.skipValidation) {\n      this.shouldValidateLocalization = false;\n      validateLocalizationProps(this.chartID, {\n        ...this.localization,\n        language: languageObject,\n        numeralLocale: numeralObject\n      });\n    }\n  }\n\n  shouldValidateAccessibilityProps() {\n    if (this.shouldValidateAccessibility && !this.accessibility.disableValidation) {\n      this.shouldValidateAccessibility = false;\n      validateAccessibilityProps(\n        this.chartID,\n        { ...this.accessibility },\n        {\n          annotations: this.annotations,\n          data: this.data,\n          uniqueID: this.uniqueID,\n          context: {\n            mainTitle: this.mainTitle,\n            onClickEvent: !this.suppressEvents ? this.clickEvent.emit : undefined\n          }\n        }\n      );\n    }\n  }\n\n  validateInteractionKeys() {\n    this.innerInteractionKeys =\n      this.interactionKeys && this.interactionKeys.length ? this.interactionKeys : [this.ordinalAccessor];\n  }\n\n  validateDataLabelAccessor() {\n    this.innerLabelAccessor = this.dataLabel.labelAccessor ? this.dataLabel.labelAccessor : this.valueAccessor;\n  }\n\n  validateLabelPlacement() {\n    // check data label placement assignment based on layout\n    if (this.layout === 'vertical') {\n      if (\n        this.dataLabel.placement !== 'top' &&\n        this.dataLabel.placement !== 'bottom' &&\n        this.dataLabel.placement !== 'auto'\n      ) {\n        this.dataLabel.placement = 'top';\n      }\n    } else {\n      if (\n        this.dataLabel.placement !== 'right' &&\n        this.dataLabel.placement !== 'left' &&\n        this.dataLabel.placement !== 'auto'\n      ) {\n        this.dataLabel.placement = 'right';\n      }\n    }\n  }\n\n  getLanguageString() {\n    return getActiveLanguageString(this.localization);\n  }\n\n  setLocalizationConfig() {\n    configLocalization(this.localization);\n  }\n\n  setDimensions() {\n    this.padding = typeof this.padding === 'string' ? getPadding(this.padding) : this.padding;\n\n    // before we render/load we need to set our height and width based on props\n    this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n    this.innerWidth = this.width - this.margin.left - this.margin.right;\n\n    this.innerPaddedHeight = this.innerHeight - this.padding.top - this.padding.bottom;\n    this.innerPaddedWidth = this.innerWidth - this.padding.left - this.padding.right;\n  }\n\n  prepareData() {\n    // check data format & offset time object\n    this.data.map(d => {\n      d[this.valueAccessor] = parseFloat(d[this.valueAccessor]);\n      d[this.groupAccessor] =\n        d[this.groupAccessor] instanceof Date\n          ? formatDate({\n              date: d[this.groupAccessor],\n              format: this.layout === 'vertical' ? this.xAxis.format : this.yAxis.format,\n              offsetTimezone: true\n            })\n          : d[this.groupAccessor];\n    });\n\n    this.nest = nest()\n      .key(d => d[this.groupAccessor])\n      .entries(this.data);\n\n    // Get all item categories\n    this.datakeys = this.nest.map(d => d.key);\n  }\n\n  setTableData() {\n    // generate scoped and formatted data for data-table component\n    const keys = scopeDataKeys(this, chartAccessors, 'clustered-bar-chart');\n    this.tableData = getScopedData(this.data, keys);\n    this.tableColumns = Object.keys(keys);\n  }\n\n  prepareScales() {\n    const minBarValue =\n      this.minValueOverride && this.minValueOverride < min(this.data, d => d[this.valueAccessor])\n        ? this.minValueOverride\n        : min(this.data, d => d[this.valueAccessor]);\n\n    const maxBarValue =\n      this.maxValueOverride && this.maxValueOverride > max(this.data, d => d[this.valueAccessor])\n        ? this.maxValueOverride\n        : max(this.data, d => d[this.valueAccessor]);\n\n    // scale band based on layout of chart\n    if (this.layout === 'vertical') {\n      this.y = scaleLinear()\n        .domain([Math.min(0, minBarValue), Math.max(0, maxBarValue)])\n        .range([this.innerPaddedHeight, 0]);\n\n      this.x0 = scaleBand()\n        .domain(this.datakeys)\n        .range(this.reverseOrder ? [this.innerPaddedWidth, 0] : [0, this.innerPaddedWidth])\n        .padding(this.groupIntervalRatio);\n\n      this.x1 = scaleBand()\n        .domain(this.nest[0].values.map(d => d[this.ordinalAccessor]))\n        .rangeRound([0, this.x0.bandwidth()])\n        .padding(this.barIntervalRatio);\n    } else if (this.layout === 'horizontal') {\n      this.x = scaleLinear()\n        .domain([Math.min(0, minBarValue), Math.max(0, maxBarValue)])\n        .range([0, this.innerPaddedWidth]);\n\n      this.y0 = scaleBand()\n        .domain(this.datakeys)\n        .range(this.reverseOrder ? [this.innerPaddedHeight, 0] : [0, this.innerPaddedHeight])\n        .padding(this.groupIntervalRatio);\n\n      this.y1 = scaleBand()\n        .domain(this.nest[0].values.map(d => d[this.ordinalAccessor]))\n        .rangeRound([0, this.y0.bandwidth()])\n        .padding(this.barIntervalRatio);\n    }\n  }\n\n  validateAxes() {\n    // check whether we are going to display axis and then update props\n    this.innerXAxis = { ...this.xAxis, gridVisible: !(this.layout === 'vertical') && this.xAxis.gridVisible };\n    this.innerYAxis = { ...this.yAxis, gridVisible: this.layout === 'vertical' && this.yAxis.gridVisible };\n  }\n\n  setSubTitleElements() {\n    setSubTitle({\n      root: this.subTitleG,\n      subTitle: this.subTitle\n    });\n  }\n\n  setColors() {\n    this.preparedColors = this.colors\n      ? convertVisaColor(this.colors)\n      : getColors(this.colorPalette, this.nest[0].values.length);\n  }\n\n  setTextures() {\n    const colorsArray = this.preparedColors.range ? this.preparedColors.range() : this.preparedColors;\n    if (this.accessibility.hideTextures || colorsArray.length > 6) {\n      this.colorArr = this.preparedColors;\n    } else {\n      const colorsToConvert = colorsArray;\n      const textures = convertColorsToTextures({\n        colors: colorsToConvert,\n        rootSVG: this.svg.node(),\n        id: this.chartID,\n        scheme: 'categorical',\n        disableTransitions: !this.duration\n      });\n      this.colorArr = this.preparedColors.range ? this.preparedColors.copy().range(textures) : textures;\n    }\n  }\n\n  setStrokes() {\n    this.strokes = buildStrokes({\n      root: this.svg.node(),\n      id: this.chartID,\n      colors: this.preparedColors.range ? this.preparedColors.range() : this.preparedColors,\n      clickStyle: this.clickStyle,\n      hoverStyle: this.hoverStyle\n    });\n  }\n\n  renderRootElements() {\n    this.svg = select(this.clusteredBarChartEl)\n      .select('.visa-viz-d3-clustered-bar-container')\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    this.root = this.svg.append('g').attr('id', 'visa-viz-margin-container-g-' + this.chartID);\n    this.rootG = this.root.append('g').attr('id', 'visa-viz-padding-container-g-' + this.chartID);\n\n    this.gridG = this.rootG.append('g').attr('class', 'grid-group');\n    this.barG = this.rootG.append('g').attr('class', 'clustered-bar-group');\n\n    this.labelG = this.rootG.append('g').attr('class', 'clustered-bar-dataLabel-group');\n\n    this.legendG = select(this.clusteredBarChartEl)\n      .select('.clustered-bar-legend')\n      .append('svg');\n\n    this.subTitleG = select(this.clusteredBarChartEl).select('.clustered-bar-sub-title');\n    this.tooltipG = select(this.clusteredBarChartEl).select('.clustered-bar-tooltip');\n\n    this.referencesG = this.rootG.append('g').attr('class', 'clustered-bar-reference-line-group');\n  }\n\n  setTestingAttributes() {\n    if (this.unitTest) {\n      select(this.clusteredBarChartEl)\n        .select('.visa-viz-d3-clustered-bar-container')\n        .attr('data-testid', 'chart-container');\n      select(this.clusteredBarChartEl)\n        .select('.clustered-bar-main-title')\n        .attr('data-testid', 'main-title');\n      select(this.clusteredBarChartEl)\n        .select('.clustered-bar-sub-title')\n        .attr('data-testid', 'sub-title');\n\n      this.svg.attr('data-testid', 'root-svg');\n      this.root.attr('data-testid', 'margin-container');\n      this.rootG.attr('data-testid', 'padding-container');\n      this.legendG.attr('data-testid', 'legend-container');\n      this.tooltipG.attr('data-testid', 'tooltip-container');\n\n      this.barG.attr('data-testid', 'clustered-bar-group');\n      this.updateBarWrappers\n        .attr('data-testid', 'clustered-bar-wrapper')\n        .attr('data-id', d => `clustered-bar-wrapper-${d.key}`);\n      this.update\n        .attr('data-testid', 'bar')\n        .attr('data-id', d => `bar-${d[this.groupAccessor]}-${d[this.ordinalAccessor]}`);\n\n      this.labelG.attr('data-testid', 'clustered-bar-dataLabel-group');\n      this.updateLabelWrappers\n        .attr('data-testid', 'clustered-bar-dataLabel-wrapper')\n        .attr('data-id', d => `clustered-bar-dataLabel-wrapper-${d.key}`);\n      this.updateLabels\n        .attr('data-testid', 'dataLabel')\n        .attr('data-id', d => `dataLabel-${d[this.groupAccessor]}-${d[this.ordinalAccessor]}`);\n\n      this.referencesG.attr('data-testid', 'reference-line-group');\n      this.svg.select('defs').attr('data-testid', 'pattern-defs');\n\n      // reference lines do not have global selections\n      this.referencesG.selectAll('.clustered-bar-reference-line').attr('data-testid', 'reference-line');\n\n      this.referencesG.selectAll('.clustered-bar-reference-line-label').attr('data-testid', 'reference-line-label');\n    } else {\n      select(this.clusteredBarChartEl)\n        .select('.visa-viz-d3-clustered-bar-container')\n        .attr('data-testid', null);\n      select(this.clusteredBarChartEl)\n        .select('.clustered-bar-main-title')\n        .attr('data-testid', null);\n      select(this.clusteredBarChartEl)\n        .select('.clustered-bar-sub-title')\n        .attr('data-testid', null);\n      this.svg.attr('data-testid', null);\n      this.root.attr('data-testid', null);\n      this.rootG.attr('data-testid', null);\n      this.legendG.attr('data-testid', null);\n      this.tooltipG.attr('data-testid', null);\n\n      this.barG.attr('data-testid', null);\n      this.updateBarWrappers.attr('data-testid', null).attr('data-id', null);\n      this.update.attr('data-testid', null).attr('data-id', null);\n\n      this.labelG.attr('data-testid', null);\n      this.updateLabelWrappers.attr('data-testid', null).attr('data-id', null);\n      this.updateLabels.attr('data-testid', null).attr('data-id', null);\n\n      this.referencesG.attr('data-testid', null);\n      this.svg.select('defs').attr('data-testid', null);\n\n      // reference lines do not have global selections\n      this.referencesG.selectAll('.clustered-bar-reference-line').attr('data-testid', null);\n\n      this.referencesG.selectAll('.clustered-bar-reference-line-label').attr('data-testid', null);\n    }\n  }\n\n  // reset graph size based on window size\n  reSetRoot() {\n    const changeSvg = prepareRenderChange({\n      selection: this.svg,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeSvg\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    const changeRoot = prepareRenderChange({\n      selection: this.root,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRoot.attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n\n    const changeRootG = prepareRenderChange({\n      selection: this.rootG,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRootG.attr('transform', `translate(${this.padding.left}, ${this.padding.top})`);\n\n    setAccessibilityDescriptionWidth(this.chartID, this.width);\n  }\n\n  // draw axis line\n  drawXAxis() {\n    const axisAccessor = this.layout === 'vertical' ? this.groupAccessor : this.valueAccessor;\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.xAxis.label;\n\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.layout === 'vertical' ? this.x0 : this.x,\n      left: false,\n      wrapLabel: this.wrapLabel && this.layout === 'vertical' ? this.x0.bandwidth() : '',\n      format: this.xAxis.format,\n      tickInterval: this.xAxis.tickInterval,\n      label: axisLabel, // this.xAxis.label,\n      padding: this.padding,\n      hide: !this.innerXAxis.visible,\n      duration: this.duration\n    });\n  }\n\n  drawYAxis() {\n    const axisAccessor = this.layout === 'vertical' ? this.valueAccessor : this.groupAccessor;\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.yAxis.label;\n\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.layout === 'vertical' ? this.y : this.y0,\n      left: true,\n      wrapLabel: this.wrapLabel ? this.padding.left || 100 : '',\n      format: this.yAxis.format,\n      tickInterval: this.yAxis.tickInterval,\n      label: axisLabel, // this.yAxis.label,\n      padding: this.padding,\n      hide: !this.innerYAxis.visible,\n      duration: this.duration\n    });\n  }\n\n  setXAxisAccessibility() {\n    const axisAccessor = this.layout === 'vertical' ? this.groupAccessor : this.valueAccessor;\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.xAxis.label;\n\n    setAccessXAxis({\n      rootEle: this.clusteredBarChartEl,\n      hasXAxis: this.innerXAxis ? this.innerXAxis.visible : false,\n      xAxis: this.layout === 'vertical' ? this.x0 || false : this.x || false, // this is optional for some charts, if hasXAxis is always false\n      xAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasXAxis is always false\n    });\n  }\n\n  setYAxisAccessibility() {\n    const axisAccessor = this.layout === 'vertical' ? this.valueAccessor : this.groupAccessor;\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.yAxis.label;\n\n    setAccessYAxis({\n      rootEle: this.clusteredBarChartEl,\n      hasYAxis: this.innerYAxis ? this.innerYAxis.visible : false,\n      yAxis: this.layout === 'vertical' ? this.y || false : this.y0 || false, // this is optional for some charts, if hasXAxis is always false\n      yAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasXAxis is always false\n    });\n  }\n\n  drawBaseline() {\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.layout === 'vertical' ? this.x0 : this.x,\n      left: false,\n      padding: this.padding,\n      markOffset: this.layout === 'vertical' ? this.y(0) || -1 : this.y0(0) || -1,\n      hide: !(this.layout === 'vertical'),\n      duration: this.duration\n    });\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.layout === 'vertical' ? this.y : this.y0,\n      left: true,\n      padding: this.padding,\n      markOffset: this.layout === 'vertical' ? this.x0(0) || -1 : this.x(0) || -1,\n      hide: this.layout === 'vertical',\n      duration: this.duration\n    });\n  }\n\n  // dashed line grid for chart\n  drawXGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.layout === 'vertical' ? this.x0 : this.x,\n      false,\n      !this.innerXAxis.gridVisible,\n      this.xAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  drawYGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.layout === 'vertical' ? this.y : this.y0,\n      true,\n      !this.innerYAxis.gridVisible,\n      this.yAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  setGlobalSelections() {\n    const dataBoundToWrappers = this.barG.selectAll('.clustered-bar-wrapper').data(this.nest, d => d.key);\n\n    this.enterBarWrappers = dataBoundToWrappers.enter().append('g');\n    this.exitBarWrappers = dataBoundToWrappers.exit();\n    this.updateBarWrappers = dataBoundToWrappers.merge(this.enterBarWrappers);\n\n    const dataBoundToGeometries = this.updateBarWrappers\n      .selectAll('.clustered-bar')\n      .data(d => d.values, d => d[this.ordinalAccessor]);\n\n    this.enter = dataBoundToGeometries.enter().append('rect');\n    this.exit = dataBoundToGeometries.exit();\n    this.update = dataBoundToGeometries.merge(this.enter);\n\n    this.enterSize = this.enter.size();\n    this.exitSize = this.exit.size();\n\n    const dataBoundToLabelWrappers = this.labelG.selectAll('g').data(this.nest, d => d.key);\n\n    this.enterLabelWrappers = dataBoundToLabelWrappers.enter().append('g');\n    this.exitLabelWrappers = dataBoundToLabelWrappers.exit();\n    this.updateLabelWrappers = dataBoundToLabelWrappers.merge(this.enterLabelWrappers);\n\n    const dataBoundToLabels = this.updateLabelWrappers\n      .selectAll('text')\n      .data(d => d.values, d => d[this.ordinalAccessor]);\n    this.enterLabels = dataBoundToLabels.enter().append('text');\n    this.exitLabels = dataBoundToLabels.exit();\n    this.updateLabels = dataBoundToLabels.merge(this.enterLabels);\n    // this.labels\n  }\n\n  enterGeometries() {\n    this.enter.interrupt();\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    const choice = this.layout === 'vertical' ? 'max' : 'min';\n\n    this.enterBarWrappers\n      .attr('class', 'clustered-bar-wrapper')\n      .classed('entering', true)\n      .attr('transform', d =>\n        this.layout === 'vertical' ? 'translate(' + this.x0(d.key) + ',0)' : 'translate(0,' + this.y0(d.key) + ')'\n      )\n      .each((_, i, n) => {\n        initializeElementAccess(n[i]);\n      });\n\n    this.enter\n      .attr('class', 'clustered-bar')\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .attr('rx', this.roundedCorner)\n      .attr('ry', this.roundedCorner)\n      .each((_d, i, n) => {\n        initializeElementAccess(n[i]);\n      })\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .attr('fill', (d, i) => {\n        const clicked =\n          this.clickHighlight &&\n          this.clickHighlight.length > 0 &&\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n        const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n        const baseColor = this.colorArr[i];\n        return clicked && this.clickStyle.color\n          ? visaColors[this.clickStyle.color] || this.clickStyle.color\n          : clicked\n          ? baseColor\n          : hovered && this.hoverStyle.color\n          ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n          : baseColor;\n      })\n      .attr('opacity', 0)\n      .attr(valueAxis, d => this[valueAxis](Math[choice](0, d[this.valueAccessor])))\n      .attr(\n        valueDimension,\n        d =>\n          Math.abs(\n            this.layout === 'vertical'\n              ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n              : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n          ) || 0.000001 // avoiding getBBox dimension and coordinates issues\n      )\n      .attr(ordinalAxis, d => this[ordinalAxis + '1'](d[this.ordinalAccessor]))\n      .attr(ordinalDimension, this[ordinalAxis + '1'].bandwidth());\n\n    if (!this.defaults) {\n      this.enter\n        .classed('entering', true)\n        .attr(ordinalAxis, (d, i, n) => {\n          const p = select(n[i].parentNode);\n          const groupEntering = p.classed('entering');\n          let xStart = groupEntering\n            ? this[ordinalAxis + '0'](p.datum().key)\n            : this[ordinalAxis + '1'](d[this.ordinalAccessor]);\n          const xCenter = groupEntering\n            ? this[ordinalAxis + '0'].bandwidth() / 2\n            : this[ordinalAxis + '1'].bandwidth() / 2;\n          const xPercent = (xStart + xCenter) / (this.innerPaddedWidth / 2);\n          xStart = groupEntering ? 0 : xStart;\n          const shift = xStart + xCenter * xPercent;\n          return shift;\n        })\n        .attr(ordinalDimension, 0);\n    }\n    this.enterBarWrappers.order();\n    this.enter.order();\n  }\n\n  updateGeometries() {\n    this.update.interrupt();\n\n    this.update\n      .transition('opacity')\n      .duration((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          select(n[i]).classed('entering', false);\n          return this.duration;\n        }\n        return 0;\n      })\n      .ease(easeCircleIn)\n      .attr('opacity', d =>\n        checkInteraction(d, 1, this.hoverOpacity, this.hoverHighlight, this.clickHighlight, this.innerInteractionKeys)\n      );\n  }\n\n  exitGeometries() {\n    this.exitBarWrappers.interrupt();\n    this.exit.interrupt();\n\n    const axisOfShift = this.layout === 'vertical' ? 'x' : 'y';\n    const dimensionOfShift = this.layout === 'vertical' ? 'width' : 'height';\n    const innerPaddedDimension = 'innerPadded' + dimensionOfShift[0].toUpperCase() + dimensionOfShift.substring(1);\n\n    this.exit\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .attr(axisOfShift, (_d, i, n) => {\n        const self = select(n[i]);\n        let shift = +self.attr(axisOfShift) + +self.attr(dimensionOfShift) / 2;\n        shift =\n          +self.attr(axisOfShift) + (+self.attr(dimensionOfShift) / 2) * (shift / (this[innerPaddedDimension] / 2));\n        return shift;\n      })\n      .attr(dimensionOfShift, 0);\n\n    this.exitSize += this.exitBarWrappers.selectAll('.clustered-bar').size();\n\n    this.exitBarWrappers\n      .selectAll('.clustered-bar')\n      .transition('exit_wrappers')\n      .duration(this.duration * 0.75)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .attr(axisOfShift, (_, i, n) => {\n        const p = n[i].parentNode;\n        const xStart = p.transform.baseVal.consolidate().matrix.e;\n        const xCenter = this[axisOfShift + '0'].bandwidth() / 2;\n        const xPercent = (xStart + xCenter) / (this[innerPaddedDimension] / 2);\n        const shift = xCenter * xPercent;\n        return shift;\n      })\n      .attr(dimensionOfShift, 0);\n\n    this.update\n      .transition('accessibilityAfterExit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        // before we exit geometries, we need to check if a focus exists or not\n        const focusDidExist = checkAccessFocus(this.rootG.node());\n        // then we must remove the exiting elements\n        this.exit.remove();\n        this.exitBarWrappers.remove();\n        // then our util can count geometries\n        this.setChartCountAccessibility();\n        // our group's label should update with new counts too\n        this.setGroupAccessibilityID();\n        // since items exited, labels must receive updated values\n        this.setGeometryAriaLabels();\n        // and also make sure the user's focus isn't lost\n        retainAccessFocus({\n          parentGNode: this.rootG.node(),\n          focusDidExist\n          // recursive: true\n        });\n      });\n  }\n\n  drawGeometries() {\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    const choice = this.layout === 'vertical' ? 'max' : 'min';\n\n    this.updateBarWrappers\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('transform', d =>\n        this.layout === 'vertical' ? 'translate(' + this.x0(d.key) + ',0)' : 'translate(0,' + this.y0(d.key) + ')'\n      )\n      .call(transitionEndAll, () => {\n        this.updateBarWrappers.classed('entering', false);\n      });\n\n    this.update\n      .classed('geometryIsMoving', (d, i, n) => {\n        const geometryIsUpdating = checkAttributeTransitions(select(n[i]), [\n          {\n            attr: ordinalAxis,\n            numeric: true,\n            newValue: this[ordinalAxis + '1'](d[this.ordinalAccessor])\n          },\n          {\n            attr: ordinalDimension,\n            numeric: true,\n            newValue: this[ordinalAxis + '1'].bandwidth()\n          },\n          {\n            attr: valueAxis,\n            numeric: true,\n            newValue: this[valueAxis](Math[choice](0, d[this.valueAccessor])) // this.y(d[this.valueAccessor]))\n          },\n          {\n            attr: valueDimension,\n            numeric: true,\n            newValue:\n              Math.abs(\n                this.layout === 'vertical'\n                  ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n                  : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n              ) || 0.000001\n          }\n        ]);\n        return geometryIsUpdating;\n      })\n      .attr(\n        `data-${ordinalAxis}`,\n        d =>\n          this.layout === 'vertical'\n            ? this[ordinalAxis + '1'](d[this.ordinalAccessor]) //+ this.x0(d[this.groupAccessor])\n            : this[ordinalAxis + '1'](d[this.ordinalAccessor]) //+ this.y0(d[this.groupAccessor])\n      )\n      .attr(\n        `data-translate-x`,\n        d => (this.layout === 'vertical' ? this.x0(d[this.groupAccessor]) : 0) + this.padding.left + this.margin.left\n      )\n      .attr(\n        `data-translate-y`,\n        d => (this.layout === 'vertical' ? 0 : this.y0(d[this.groupAccessor])) + this.padding.top + this.margin.top\n      )\n      .attr(`data-${ordinalDimension}`, this[ordinalAxis + '1'].bandwidth())\n      .attr(`data-${valueAxis}`, d => this[valueAxis](Math[choice](0, d[this.valueAccessor])))\n      .attr(\n        `data-${valueDimension}`,\n        d =>\n          Math.abs(\n            this.layout === 'vertical'\n              ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n              : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n          ) || 0.000001\n      )\n      .transition('update')\n      .duration((_, i, n) => {\n        return select(n[i]).classed('entering') ? this.duration / 2 : this.duration;\n      })\n      .delay((_, i, n) => {\n        return select(n[i]).classed('entering') ? this.duration / 2 : 0;\n      })\n      .ease(easeCircleIn)\n      .attr(valueAxis, d => this[valueAxis](Math[choice](0, d[this.valueAccessor])))\n      .attr(\n        valueDimension,\n        d =>\n          Math.abs(\n            this.layout === 'vertical'\n              ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n              : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n          ) || 0.000001\n      )\n      .attr(ordinalAxis, d => this[ordinalAxis + '1'](d[this.ordinalAccessor]))\n      .attr(ordinalDimension, this[ordinalAxis + '1'].bandwidth())\n      .call(transitionEndAll, () => {\n        this.update.classed('geometryIsMoving', false);\n\n        this.updateInteractionState();\n        this.checkLabelColorAgainstBackground();\n        // we must make sure if geometries move, that our focus indicator does too\n        retainAccessFocus({\n          parentGNode: this.rootG.node()\n        });\n        // now we can emit the event that transitions are complete\n        this.transitionEndEvent.emit({ chartID: this.chartID });\n      });\n  }\n\n  updateInteractionState() {\n    removeHoverStrokes(this.svg.node());\n    // we created an \"opacity\" transition namespace in update's transition\n    // we override it here to instantly display opacity state (below)\n    this.update.interrupt('opacity');\n\n    // we use this.update and this.updateLabels from setGlobalSelection here\n    // the lifecycle state does not matter (enter/update/exit)\n    // since interaction state can happen at any time\n    // first we address interaction state on marks/bars\n    this.update\n      .attr('opacity', d =>\n        checkInteraction(d, 1, this.hoverOpacity, this.hoverHighlight, this.clickHighlight, this.innerInteractionKeys)\n      )\n      .attr('fill', (d, i) => {\n        const clicked =\n          this.clickHighlight &&\n          this.clickHighlight.length > 0 &&\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n        const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n        const baseColor = this.colorArr[i];\n        return clicked && this.clickStyle.color\n          ? visaColors[this.clickStyle.color] || this.clickStyle.color\n          : clicked\n          ? baseColor\n          : hovered && this.hoverStyle.color\n          ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n          : baseColor;\n      })\n      .attr('filter', (d, i, n) => {\n        if (!this.accessibility.hideStrokes && !select(n[i]).classed('geometryIsMoving')) {\n          const clicked =\n            this.clickHighlight &&\n            this.clickHighlight.length > 0 &&\n            checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n          const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n          const baseColor = this.preparedColors[i];\n          const state = clicked ? 'click' : hovered && !select(n[i]).classed('geometryIsMoving') ? 'hover' : 'rest';\n          const color =\n            clicked && this.clickStyle.color\n              ? visaColors[this.clickStyle.color] || this.clickStyle.color\n              : clicked\n              ? baseColor\n              : hovered && this.hoverStyle.color\n              ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n              : baseColor;\n          if (state === 'hover') {\n            drawHoverStrokes({\n              inputElement: n[i],\n              id: this.chartID,\n              key: d[this.ordinalAccessor] + d[this.groupAccessor],\n              strokeWidth: this.hoverStyle.strokeWidth,\n              fill: color\n            });\n          }\n          return this.strokes[state + color];\n        }\n        return null;\n      });\n    retainAccessFocus({\n      parentGNode: this.rootG.node()\n    });\n\n    // then we set the legend interactive state\n    setLegendInteractionState({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.ordinalAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.hoverStyle,\n      clickStyle: this.clickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n\n    // and lastly we have to check for labels, especially when auto placement is in place\n    this.updateLabels.interrupt('opacity');\n    const addCollisionClass = this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly;\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n\n    this.processLabelOpacity(this.updateLabels, addCollisionClass);\n\n    // if we have collision on, we need to update the bitmap on interaction\n    if (addCollisionClass) {\n      const labelsAdded = this.updateLabels.filter((_, i, n) => select(n[i]).classed('collision-added'));\n      const labelsRemoved = this.updateLabels\n        .filter((_, i, n) => select(n[i]).classed('collision-removed'))\n        .attr('data-use-dx', hideOnly) // need to add this for remove piece of collision below\n        .attr('data-use-dy', hideOnly); // .transition().duration(0);\n\n      // we can now remove labels as well if we need to...\n      if (labelsRemoved.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsRemoved,\n          avoidMarks: [],\n          validPositions: ['middle'],\n          offsets: [1],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n          hideOnly: false,\n          removeOnly: true\n        });\n\n        // remove temporary class now\n        labelsRemoved.classed('collision-removed', false);\n      }\n\n      // we can now add labels as well if we need to...\n      if (labelsAdded.size() > 0) {\n        this.processLabelPosition(labelsAdded, false, false, true);\n        // remove temporary class now\n        labelsAdded.classed('collision-added', false);\n      }\n    }\n  }\n\n  setLabelOpacity() {\n    this.processLabelOpacity(this.updateLabels);\n  }\n\n  processLabelOpacity(selection, addCollisionClass?) {\n    const opacity = this.dataLabel.visible ? 1 : 0;\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    const fullBandwidth = this[ordinalAxis + '0'].bandwidth() / this.nest[0].values.length;\n\n    selection.attr('opacity', (d, i, n) => {\n      const prevOpacity = +select(n[i]).attr('opacity');\n      const styleVisibility = select(n[i]).style('visibility');\n      const dimensions = {};\n      dimensions[ordinalDimension] =\n        this.dataLabel.placement === 'left' || this.dataLabel.placement === 'bottom'\n          ? this[ordinalAxis + '1'].bandwidth()\n          : fullBandwidth;\n      if (this.dataLabel.placement === 'left' || this.dataLabel.placement === 'bottom') {\n        dimensions[valueDimension] = Math.abs(\n          this.layout === 'vertical'\n            ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n            : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n        );\n      }\n      const hasRoom =\n        this.dataLabel.placement === 'auto' ||\n        this.dataLabel.collisionHideOnly ||\n        this.accessibility.showSmallLabels ||\n        verifyTextHasSpace({\n          text: formatDataLabel(d, this.innerLabelAccessor, this.dataLabel.format),\n          dimensions,\n          fontSize: 14\n        });\n      const targetOpacity = hasRoom\n        ? checkInteraction(\n            d,\n            opacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n          ? 0\n          : 1\n        : 0;\n      if (\n        ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n        addCollisionClass\n      ) {\n        if (targetOpacity === 1) {\n          select(n[i])\n            .classed('collision-added', true)\n            .style('visibility', null);\n        } else {\n          select(n[i]).classed('collision-removed', true);\n        }\n      }\n      return targetOpacity;\n    });\n  }\n\n  checkLabelColorAgainstBackground() {\n    this.updateLabels.attr('fill', (d, i, n) => {\n      return this.textTreatmentHandler(d, i, n);\n    });\n  }\n\n  setRoundedCorners() {\n    this.update\n      .transition('corners')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('rx', this.roundedCorner)\n      .attr('ry', this.roundedCorner);\n  }\n\n  textTreatmentHandler = (d, i, n) => {\n    const me = select(n[i]);\n    const bgColor =\n      this.clickHighlight &&\n      this.clickHighlight.length > 0 &&\n      checkClicked(d, this.clickHighlight, this.innerInteractionKeys) &&\n      this.clickStyle.color\n        ? visaColors[this.clickStyle.color] || this.clickStyle.color\n        : this.hoverHighlight &&\n          checkHovered(d, this.hoverHighlight, this.innerInteractionKeys) &&\n          this.hoverStyle.color\n        ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n        : this.preparedColors[i];\n\n    const autoPlacementBackgroundColor =\n      this.dataLabel.placement === 'auto' // can ignore this for collisionHideOnly\n        ? this.layout === 'vertical'\n          ? (this.dataLabel.collisionPlacement === 'top' && me.attr('data-baseline') !== 'bottom') ||\n            (this.dataLabel.collisionPlacement === 'middle' && me.attr('data-baseline') !== 'bottom') ||\n            (this.dataLabel.collisionPlacement === 'bottom' &&\n              me.attr('data-baseline') === 'bottom' &&\n              ((d[this.valueAccessor] >= 0 && this.y(0) - this.y(d[this.valueAccessor]) > 20) ||\n                (d[this.valueAccessor] < 0 && this.y(0) - this.y(d[this.valueAccessor]) < -20))) // if bottom we can check against baseline value of 0, helps to handle charts with negative values\n          : (this.dataLabel.collisionPlacement === 'right' && me.attr('data-align') !== 'left') ||\n            (this.dataLabel.collisionPlacement === 'middle' && me.attr('data-align') !== 'left') ||\n            (this.dataLabel.collisionPlacement === 'left' && me.attr('data-align') !== 'right')\n        : false;\n    const color =\n      autoPlacementBackgroundColor || this.dataLabel.placement === 'bottom' || this.dataLabel.placement === 'left'\n        ? autoTextColor(bgColor)\n        : visaColors.dark_text;\n    me.attr(\n      'filter',\n      !me.classed('textIsMoving')\n        ? createTextStrokeFilter({\n            root: this.svg.node(),\n            id: this.chartID,\n            color:\n              autoPlacementBackgroundColor ||\n              this.dataLabel.placement === 'bottom' ||\n              this.dataLabel.placement === 'left'\n                ? bgColor\n                : '#ffffff'\n          })\n        : null\n    );\n    return color;\n  };\n\n  setSelectedClass() {\n    this.update.classed('highlight', (d, i, n) => {\n      let selected = checkInteraction(d, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n      selected = this.clickHighlight && this.clickHighlight.length ? selected : false;\n      const selectable = this.accessibility.elementsAreInterface;\n      setElementInteractionAccessState(n[i], selected, selectable);\n      return selected;\n    });\n  }\n\n  updateCursor() {\n    this.update.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    this.updateLabels.attr('cursor', !this.suppressEvents ? this.cursor : null);\n  }\n\n  enterDataLabels() {\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const opacity = this.dataLabel.visible ? 1 : 0;\n\n    this.enterLabelWrappers\n      .attr('class', 'clustered-bar-label-wrapper')\n      .classed('entering', true)\n      .attr('transform', d =>\n        this.layout === 'vertical' ? 'translate(' + this.x0(d.key) + ',0)' : 'translate(0,' + this.y0(d.key) + ')'\n      );\n\n    this.enterLabels\n      .attr('class', 'clustered-bar-dataLabel')\n      .classed('entering', true)\n      .classed('clustered-bar-dataLabel-horizontal', false)\n      .classed('clustered-bar-dataLabel-vertical', false)\n      .classed('clustered-bar-dataLabel-' + this.layout, true)\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .attr('opacity', d =>\n        checkInteraction(\n          d,\n          opacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        ) < 1\n          ? 0\n          : Number.EPSILON\n      )\n      .attr('fill', this.textTreatmentHandler)\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    this.enterLabels.attr(ordinalAxis, (d, i, n) => {\n      const zeroScale = ordinalAxis + '0';\n      const oneScale = ordinalAxis + '1';\n      const breadth = ordinalAxis === 'x' ? 'innerPaddedWidth' : 'innerPaddedHeight';\n      const p = select(n[i].parentNode);\n      const groupEntering = p.classed('entering');\n      let xStart = groupEntering ? this[zeroScale](p.datum().key) : this[oneScale](d[this.ordinalAccessor]);\n      const xCenter = groupEntering ? this[zeroScale].bandwidth() / 2 : this[oneScale].bandwidth() / 2;\n      const xPercent = (xStart + xCenter) / (this[breadth] / 2);\n      xStart = groupEntering ? 0 : xStart;\n      const shift = xStart + xCenter * xPercent;\n      return shift;\n    });\n  }\n\n  updateDataLabels() {\n    this.updateLabels.interrupt();\n    const opacity = this.dataLabel.visible ? 1 : 0;\n\n    this.updateLabels\n      .transition('opacity')\n      .duration((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          // select(n[i]).classed('entering', false);\n          return this.duration / 4;\n        }\n        return 0;\n      })\n      .delay((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          // select(n[i]).classed('entering', false);\n          return (this.duration / 4) * 3;\n        }\n        return 0;\n      })\n      .ease(easeCircleIn)\n      .attr('opacity', d =>\n        checkInteraction(\n          d,\n          opacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        ) < 1\n          ? 0\n          : 1\n      )\n      .call(transitionEndAll, () => {\n        this.updateLabels.classed('entering', false);\n        // this.checkLabelColorAgainstBackground();\n      });\n  }\n\n  exitDataLabels() {\n    this.exitLabelWrappers\n      .selectAll('text')\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 3)\n      .attr('opacity', 0)\n      .call(transitionEndAll, () => {\n        this.exitLabelWrappers.remove();\n      });\n\n    this.exitLabels\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 3)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  setLabelContent() {\n    this.updateLabels.text(d => formatDataLabel(d, this.innerLabelAccessor, this.dataLabel.format));\n  }\n\n  setLabelPosition() {\n    // position the label wrappers with/without transition\n    this.updateLabelWrappers\n      .classed('clustered-bar-dataLabel-horizontal', false)\n      .classed('clustered-bar-dataLabel-vertical', false)\n      .classed('clustered-bar-dataLabel-' + this.layout, true);\n\n    const changeLabelWrappers = prepareRenderChange({\n      selection: this.updateLabelWrappers,\n      duration: this.duration,\n      namespace: 'position-label-wrappers',\n      easing: easeCircleIn\n    });\n\n    changeLabelWrappers\n      .attr('transform', d =>\n        this.layout === 'vertical' ? 'translate(' + this.x0(d.key) + ',0)' : 'translate(0,' + this.y0(d.key) + ')'\n      )\n      .call(transitionEndAll, () => {\n        this.updateLabelWrappers.classed('entering', false);\n      });\n\n    // we have to run this filter as there are times when enter/update will one another's nodes in them.\n    const enteringOnly = this.enterLabels.filter((_, i, n) => {\n      return select(n[i]).classed('entering');\n    });\n    const updatingOnly = this.updateLabels.filter((_, i, n) => {\n      return !select(n[i]).classed('entering');\n    });\n\n    // if we have enter and update we need to process them separately\n    // enter with no transition, update with transition\n    // the transition is the main reason we need to do this.\n    if (enteringOnly.size() > 0) {\n      this.processLabelPosition(enteringOnly, false, true, false);\n      this.processLabelPosition(updatingOnly, true, false, true);\n    } else {\n      // otherwise we can just process update and do it all in one step with transition\n      // doing this all at once saves processing time from calling resolveLabelCollision less\n      this.processLabelPosition(updatingOnly, true, true, false);\n    }\n  }\n\n  processLabelPosition(selection, runTransition?, redrawBitmap?, suppressMarkDraw?) {\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    const choice = this.layout === 'vertical' ? 'max' : 'min';\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n    let textHeight = 15; // default label is usually 15\n    const collisionSettings = {\n      vertical: {\n        top: {\n          validPositions: ['top', 'bottom'],\n          offsets: [4, 1]\n        },\n        middle: {\n          validPositions: ['middle', 'top'],\n          offsets: [1, textHeight / 2]\n        },\n        bottom: {\n          validPositions: ['middle', 'top'],\n          offsets: [1, textHeight / 2]\n        }\n      },\n      horizontal: {\n        right: {\n          validPositions: ['right', 'left'],\n          offsets: [4, 8]\n        },\n        middle: {\n          validPositions: ['middle', 'right'],\n          offsets: [1, 15]\n        },\n        left: {\n          validPositions: ['left', 'right'],\n          offsets: [1, 20]\n        }\n      }\n    };\n\n    const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n    const boundsScope =\n      collisionPlacement && collisionSettings[this.layout][collisionPlacement] // check whether placement provided maps correctly\n        ? this.dataLabel.collisionPlacement\n        : this.layout === 'vertical'\n        ? 'top' // if we don't have collisionPlacement\n        : 'right';\n\n    // prep the data- attributes for label collision algorithm\n    // only needs to be run if we are running collision though\n    selection\n      .style('visibility', (_, i, n) =>\n        this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly\n          ? select(n[i]).style('visibility')\n          : null\n      )\n      .attr(`data-${ordinalAxis}`, (d, i, n) => {\n        if (i === 0) {\n          // we just need to check this on one element\n          const textElement = n[i];\n          const style = getComputedStyle(textElement);\n          const fontSize = parseFloat(style.fontSize);\n          textHeight = Math.max(fontSize - 1, 1); // clone.getBBox().height;\n        }\n\n        return this[ordinalAxis + '1'](d[this.ordinalAccessor]);\n      })\n      .attr(\n        `data-translate-x`,\n        d => (this.layout === 'vertical' ? this.x0(d[this.groupAccessor]) : 0) + this.padding.left + this.margin.left\n      )\n      .attr(\n        `data-translate-y`,\n        d => (this.layout === 'vertical' ? 0 : this.y0(d[this.groupAccessor])) + this.padding.top + this.margin.top\n      )\n      .attr(`data-${ordinalDimension}`, this[ordinalAxis + '1'].bandwidth())\n      .attr(`data-${valueAxis}`, d => this[valueAxis](Math[choice](0, d[this.valueAccessor])))\n      .attr(\n        `data-${valueDimension}`,\n        d =>\n          Math.abs(\n            this.layout === 'vertical'\n              ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n              : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n          ) || 0.000001\n      );\n\n    // we use prepareRenderChange to use or not use .transition()\n    // immediate - label enter and interaction effects\n    // transition - update effects (e.g., data change)\n    const changeLabels = prepareRenderChange({\n      selection: selection,\n      duration: !runTransition ? 0 : this.duration,\n      namespace: 'position-labels',\n      easing: easeCircleIn\n    });\n\n    this.bitmaps = placeDataLabels({\n      root: changeLabels,\n      xScale: this.layout === 'vertical' ? this.x1 : this.x,\n      yScale: this.layout === 'vertical' ? this.y : this.y1,\n      ordinalAccessor: this.ordinalAccessor,\n      valueAccessor: this.valueAccessor,\n      placement: this.dataLabel.placement,\n      layout: this.layout,\n      chartType: 'bar',\n      avoidCollision: {\n        runOccupancyBitmap: this.dataLabel.visible && this.dataLabel.placement === 'auto',\n        bitmaps: !redrawBitmap ? this.bitmaps : undefined,\n        labelSelection: changeLabels,\n        avoidMarks: [this.update],\n        validPositions: hideOnly ? ['middle'] : collisionSettings[this.layout][boundsScope].validPositions,\n        offsets: hideOnly ? [1] : collisionSettings[this.layout][boundsScope].offsets,\n        accessors: [this.groupAccessor, this.ordinalAccessor, 'key'], // key is created for lines by nesting done in line,\n        size: [roundTo(this.width, 0), roundTo(this.height, 0)], // for some reason the bitmap needs width instead of inner padded width here\n        boundsScope: hideOnly ? undefined : boundsScope,\n        hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly,\n        suppressMarkDraw: suppressMarkDraw\n      }\n    });\n  }\n\n  drawReferenceLines() {\n    setReferenceLine({\n      groupName: 'cluster',\n      root: this.referencesG,\n      referenceLines: this.referenceLines,\n      referenceStyle: this.referenceStyle,\n      innerPaddedWidth: this.innerPaddedWidth,\n      innerPaddedHeight: this.innerPaddedHeight,\n      duration: this.duration,\n      layout: this.layout,\n      x: this.x,\n      y: this.y,\n      unitTest: this.unitTest\n    });\n  }\n\n  prepareLegendData() {\n    this.legendData = this.nest[0].values;\n  }\n\n  drawLegendElements() {\n    drawLegend({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      width: this.innerPaddedWidth,\n      height: this.margin.top + 20,\n      colorArr: this.colorArr,\n      baseColorArr: this.preparedColors,\n      hideStrokes: this.accessibility.hideStrokes,\n      margin: this.margin,\n      padding: this.padding,\n      duration: this.duration,\n      type: 'bar',\n      fontSize: 16,\n      data: this.legendData,\n      labelKey: this.ordinalAccessor,\n      label: this.legend.labels,\n      hide: !this.legend.visible,\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.ordinalAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.hoverStyle,\n      clickStyle: this.clickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  bindLegendInteractivity() {\n    select(this.clusteredBarChartEl)\n      .selectAll('.legend')\n      .style('cursor', this.legend.interactive && !this.suppressEvents ? this.cursor : '')\n      .on('click', this.legend.interactive && !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on(\n        'mouseover',\n        this.legend.interactive && !this.suppressEvents\n          ? (d, i, n) => {\n              this.hoverEvent.emit({ data: d, target: n[i] });\n            }\n          : null\n      )\n      .on('mouseout', this.legend.interactive && !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  setLegendCursor() {\n    select(this.clusteredBarChartEl)\n      .selectAll('.legend')\n      .style('cursor', this.legend.interactive && !this.suppressEvents ? this.cursor : null);\n  }\n\n  bindInteractivity() {\n    this.update\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    this.updateLabels\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  drawAnnotations() {\n    annotate({\n      source: this.rootG.node(),\n      data: this.annotations,\n      xScale: this.layout !== 'horizontal' ? this.x0 : this.x,\n      xAccessor: this.layout !== 'horizontal' ? this.groupAccessor : this.valueAccessor,\n      yScale: this.layout !== 'horizontal' ? this.y : this.y0,\n      yAccessor: this.layout !== 'horizontal' ? this.valueAccessor : this.groupAccessor,\n      width: this.width,\n      height: this.height,\n      padding: this.padding,\n      margin: this.margin,\n      bitmaps: this.bitmaps\n    });\n  }\n\n  setAnnotationAccessibility() {\n    setAccessAnnotation(this.getLanguageString(), this.clusteredBarChartEl, this.annotations, this.referenceLines);\n  }\n\n  // new accessibility functions added here\n  setTagLevels() {\n    this.topLevel = findTagLevel(this.highestHeadingLevel);\n    this.bottomLevel = findTagLevel(this.highestHeadingLevel, 3);\n  }\n\n  setChartDescriptionWrapper() {\n    initializeDescriptionRoot({\n      language: this.getLanguageString(),\n      rootEle: this.clusteredBarChartEl,\n      title: this.accessibility.title || this.mainTitle,\n      chartTag: 'clustered-bar-chart',\n      uniqueID: this.chartID,\n      highestHeadingLevel: this.highestHeadingLevel,\n      redraw: this.shouldRedrawWrapper,\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      hideDataTable: this.accessibility.hideDataTableButton\n    });\n    this.shouldRedrawWrapper = false;\n  }\n\n  setParentSVGAccessibility() {\n    setAccessibilityController({\n      chartTag: 'clustered-bar-chart',\n      language: this.getLanguageString(),\n      node: this.svg.node(),\n      title: this.accessibility.title || this.mainTitle,\n      description: this.subTitle,\n      uniqueID: this.chartID,\n      geomType: 'bar',\n      includeKeyNames: this.accessibility.includeDataKeyNames,\n      dataKeys: scopeDataKeys(this, chartAccessors, 'clustered-bar-chart'),\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.groupAccessor,\n      groupName: 'cluster',\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled\n      // groupKeys: [],\n      // nested: '',\n      // recursive: true\n    });\n  }\n\n  setGeometryAccessibilityAttributes() {\n    this.update.each((_d, i, n) => {\n      initializeElementAccess(n[i]);\n    });\n  }\n\n  setGeometryAriaLabels() {\n    const keys = scopeDataKeys(this, chartAccessors, 'clustered-bar-chart');\n    this.update.each((_d, i, n) => {\n      setElementFocusHandler({\n        chartTag: 'clustered-bar-chart',\n        language: this.getLanguageString(),\n        node: n[i],\n        geomType: 'bar',\n        includeKeyNames: this.accessibility.includeDataKeyNames,\n        dataKeys: keys,\n        dataKeyNames: this.dataKeyNames,\n        groupName: 'cluster',\n        uniqueID: this.chartID,\n        disableKeyNav:\n          this.suppressEvents &&\n          this.accessibility.elementsAreInterface === false &&\n          this.accessibility.keyboardNavConfig &&\n          this.accessibility.keyboardNavConfig.disabled\n      });\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setGroupAccessibilityID() {\n    this.updateBarWrappers.each((_, i, n) => {\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setChartAccessibilityTitle() {\n    setAccessTitle(this.getLanguageString(), this.clusteredBarChartEl, this.accessibility.title || this.mainTitle);\n  }\n\n  setChartAccessibilitySubtitle() {\n    setAccessSubtitle(this.getLanguageString(), this.clusteredBarChartEl, this.subTitle);\n  }\n\n  setChartAccessibilityLongDescription() {\n    setAccessLongDescription(this.getLanguageString(), this.clusteredBarChartEl, this.accessibility.longDescription);\n  }\n\n  setChartAccessibilityExecutiveSummary() {\n    setAccessExecutiveSummary(this.getLanguageString(), this.clusteredBarChartEl, this.accessibility.executiveSummary);\n  }\n\n  setChartAccessibilityPurpose() {\n    setAccessPurpose(this.getLanguageString(), this.clusteredBarChartEl, this.accessibility.purpose);\n  }\n\n  setChartAccessibilityContext() {\n    setAccessContext(this.getLanguageString(), this.clusteredBarChartEl, this.accessibility.contextExplanation);\n  }\n\n  setChartAccessibilityStatisticalNotes() {\n    setAccessStatistics(this.getLanguageString(), this.clusteredBarChartEl, this.accessibility.statisticalNotes);\n  }\n\n  setChartCountAccessibility() {\n    setAccessChartCounts({\n      rootEle: this.clusteredBarChartEl,\n      parentGNode: this.barG.node(), // pass the wrapper to <g> or geometries here, should be single node selection\n      chartTag: 'clustered-bar-chart',\n      geomType: 'bar',\n      groupName: 'cluster'\n      // recursive: true\n    });\n  }\n\n  setChartAccessibilityStructureNotes() {\n    setAccessStructure(this.getLanguageString(), this.clusteredBarChartEl, this.accessibility.structureNotes);\n  }\n  // new accessibility stuff ends here\n\n  onChangeHandler() {\n    if (this.accessibility && typeof this.accessibility.onChangeFunc === 'function') {\n      const d = {\n        updated: this.updated,\n        added: this.enterSize,\n        removed: this.exitSize\n      };\n      this.accessibility.onChangeFunc(d);\n    }\n    this.updated = false;\n    this.enterSize = 0;\n    this.exitSize = 0;\n  }\n\n  onClickHandler(d, n) {\n    this.clickEvent.emit({ data: d, target: n });\n  }\n\n  onHoverHandler(d, n) {\n    overrideTitleTooltip(this.chartID, true);\n    this.hoverEvent.emit({ data: d, target: n });\n    if (this.showTooltip && d[this.ordinalAccessor]) {\n      this.eventsTooltip({ data: d, evt: event, isToShow: true });\n    }\n  }\n\n  onMouseOutHandler() {\n    overrideTitleTooltip(this.chartID, false);\n    this.mouseOutEvent.emit();\n    if (this.showTooltip) {\n      this.eventsTooltip({ isToShow: false });\n    }\n  }\n\n  // set initial style (instead of copying css class across the lib)\n  setTooltipInitialStyle() {\n    initTooltipStyle(this.tooltipG);\n  }\n\n  // tooltip\n  eventsTooltip({ data, evt, isToShow }: { data?: any; evt?: any; isToShow: boolean }) {\n    drawTooltip({\n      root: this.tooltipG,\n      data,\n      event: evt,\n      isToShow,\n      tooltipLabel: this.tooltipLabel,\n      xAxis: this.xAxis,\n      yAxis: this.yAxis,\n      dataLabel: this.dataLabel,\n      dataKeyNames: this.dataKeyNames,\n      layout: this.layout,\n      ordinalAccessor: this.groupAccessor, // on purpose - to match tooltip util format\n      groupAccessor: this.ordinalAccessor, // on purpose - to match tooltip util format\n      valueAccessor: this.valueAccessor,\n      chartType: 'clustered'\n    });\n  }\n\n  render() {\n    this.drawStartEvent.emit({ chartID: this.chartID });\n    // hardcoded theme to light until we add this functionality\n    const theme = 'light';\n\n    // everything between this comment and the third should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n    this.init();\n    if (this.shouldSetLocalizationConfig) {\n      this.setLocalizationConfig();\n      this.shouldSetLocalizationConfig = false;\n    }\n    if (this.shouldSetTagLevels) {\n      this.setTagLevels();\n      this.shouldSetTagLevels = false;\n    }\n    if (this.shouldCheckValueAxis) {\n      if (this.layout === 'horizontal') {\n        this.shouldUpdateXAxis = true;\n        this.shouldUpdateXGrid = true;\n      } else if (this.layout === 'vertical') {\n        this.shouldUpdateYAxis = true;\n        this.shouldUpdateYGrid = true;\n      }\n      this.shouldCheckValueAxis = false;\n    }\n    if (this.shouldCheckLabelAxis) {\n      if (this.layout === 'vertical') {\n        this.shouldUpdateXAxis = true;\n        this.shouldUpdateXGrid = true;\n        this.shouldSetXAxisAccessibility = true;\n      } else if (this.layout === 'horizontal') {\n        this.shouldUpdateYAxis = true;\n        this.shouldUpdateYGrid = true;\n        this.shouldSetYAxisAccessibility = true;\n      }\n      this.shouldCheckLabelAxis = false;\n    }\n    if (this.shouldUpdateData) {\n      this.prepareData();\n      this.shouldUpdateData = false;\n    }\n    if (this.shouldUpdateLegendData) {\n      this.prepareLegendData();\n      this.shouldUpdateLegendData = false;\n    }\n    if (this.shouldSetDimensions) {\n      this.setDimensions();\n      this.shouldSetDimensions = false;\n    }\n    if (this.shouldUpdateScales) {\n      this.prepareScales();\n      this.shouldUpdateScales = false;\n    }\n    if (this.shouldValidateInteractionKeys) {\n      this.validateInteractionKeys();\n      this.shouldValidateInteractionKeys = false;\n    }\n    if (this.shouldValidateDataLabelAccessor) {\n      this.validateDataLabelAccessor();\n      this.shouldValidateDataLabelAccessor = false;\n    }\n    if (this.shouldValidateAxes) {\n      this.validateAxes();\n      this.shouldValidateAxes = false;\n    }\n    if (this.shouldUpdateTableData) {\n      this.setTableData();\n      this.shouldUpdateTableData = false;\n    }\n    if (this.shouldValidate) {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.shouldValidate = false;\n    }\n    if (this.shouldSetColors) {\n      this.setColors();\n      this.shouldSetColors = false;\n    }\n    if (this.shouldValidateLabelPlacement) {\n      this.validateLabelPlacement();\n      this.shouldValidateLabelPlacement = false;\n    }\n    // Everything between this comment and the first should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n\n    return (\n      <div class={`o-layout is--${this.layout} ${theme}`}>\n        <div class=\"o-layout--chart\">\n          <this.topLevel class=\"clustered-bar-main-title vcl-main-title\">{this.mainTitle}</this.topLevel>\n          <this.bottomLevel class=\"visa-ui-text--instructions clustered-bar-sub-title vcl-sub-title\" />\n          <div class=\"clustered-bar-legend vcl-legend\" style={{ display: this.legend.visible ? 'block' : 'none' }} />\n          <keyboard-instructions\n            uniqueID={this.chartID}\n            geomType={'bar'}\n            groupName={'cluster'} // taken from initializeDescriptionRoot, on bar this should be \"bar group\", stacked bar is \"stack\", and clustered is \"cluster\"\n            language={this.getLanguageString()}\n            chartTag={'clustered-bar-chart'}\n            width={this.width - (this.margin ? this.margin.right || 0 : 0)}\n            isInteractive={this.accessibility.elementsAreInterface}\n            hasCousinNavigation // on bar this requires checking for groupAccessor\n            disabled={\n              this.suppressEvents &&\n              this.accessibility.elementsAreInterface === false &&\n              this.accessibility.keyboardNavConfig &&\n              this.accessibility.keyboardNavConfig.disabled\n            } // the chart is \"simple\"\n          />\n          <div class=\"visa-viz-d3-clustered-bar-container\" />\n          <div class=\"clustered-bar-tooltip vcl-tooltip\" style={{ display: this.showTooltip ? 'block' : 'none' }} />\n          <data-table\n            uniqueID={this.chartID}\n            isCompact\n            language={this.getLanguageString()}\n            tableColumns={this.tableColumns}\n            dataKeyNames={this.dataKeyNames}\n            data={this.tableData}\n            padding={this.padding}\n            margin={this.margin}\n            hideDataTable={this.accessibility.hideDataTableButton}\n            unitTest={this.unitTest}\n          />\n        </div>\n        {/* <canvas id=\"bitmap-render\" /> */}\n      </div>\n    );\n  }\n  private init() {\n    // reading properties\n    const keys = Object.keys(ClusteredBarChartDefaultValues);\n    let i = 0;\n    // accept 0 or false as default value\n    const exceptions = {\n      mainTitle: {\n        exception: ''\n      },\n      subTitle: {\n        exception: ''\n      },\n      barIntervalRatio: {\n        exception: 0\n      },\n      groupIntervalRatio: {\n        exception: 0\n      },\n      showTooltip: {\n        exception: false\n      },\n      wrapLabel: {\n        exception: false\n      },\n      hoverOpacity: {\n        exception: 0\n      }\n    };\n    for (i = 0; i < keys.length; i++) {\n      const exception = !exceptions[keys[i]] ? false : this[keys[i]] === exceptions[keys[i]].exception;\n      this[keys[i]] = this[keys[i]] || exception ? this[keys[i]] : ClusteredBarChartDefaultValues[keys[i]];\n    }\n  }\n}\n\n// incorporate OSS licenses into build\nwindow['VisaChartsLibOSSLicenses'] = getLicenses(); // tslint:disable-line no-string-literal\n"],"mappings":"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","ignoreList":[]}