{"version":3,"names":["ascending","a","b","NaN","descending","bisector","f","compare1","compare2","delta","length","d","x","zero","left","lo","hi","mid","right","center","i","number","ascendingBisect","bisectRight","bisect","exports","e10","Math","sqrt","e5","e2","tickSpec","start","stop","count","step","max","power","floor","log10","error","pow","factor","i1","i2","inc","round","ticks","reverse","_a","n","Array","tickIncrement","tickStep","interpolateRound","t","initRange","domain","range","arguments","this","initInterpolator","interpolator","prefix","Map","prototype","map","constructor","has","key","get","set","value","remove","property","clear","keys","push","slice","values","entries","size","empty","each","object","isArray","o","nest","sortKeys","sortValues","rollup","apply","array","depth","createResult","setResult","sort","keyValue","valuesByKey","result","sortKey","v","k","createObject","setObject","createMap","setMap","order","implicit","name","ordinal","index","unknown","scale","_","call","copy","constant","unit","identity","normalize","isNaN","clamper","min","bimap","interpolate","d0","d1","r0","r1","polymap","j","r","source","target","clamp","transformer","interpolateValue","transform","untransform","piecewise","output","input","rescale","invert","y","interpolateNumber","rangeRound","u","continuous","formatDecimal","abs","toLocaleString","replace","toString","formatDecimalParts","p","toExponential","indexOf","coefficient","exponent","formatGroup","grouping","thousands","width","g","substring","join","formatNumerals","numerals","re","formatSpecifier","specifier","match","exec","Error","FormatSpecifier","fill","align","sign","symbol","comma","precision","trim","type","undefined","formatTrim","s","out","i0","prefixExponent","formatPrefixAuto","formatRounded","formatTypes","toFixed","c","e","toPrecision","X","toUpperCase","prefixes","formatLocale","locale","group","Number","currencyPrefix","currency","currencySuffix","decimal","String","percent","minus","nan","newFormat","test","toLowerCase","suffix","formatType","maybeSuffix","format","valuePrefix","valueSuffix","valueNegative","charCodeAt","Infinity","padding","formatPrefix","defaultLocale","definition","precisionFixed","precisionPrefix","precisionRound","tickFormat","linearish","nice","ceil","linear"],"sources":["node_modules/d3-array/src/ascending.js","node_modules/d3-array/src/descending.js","node_modules/d3-array/src/bisector.js","node_modules/d3-array/src/number.js","node_modules/d3-array/src/bisect.js","node_modules/d3-array/src/ticks.js","node_modules/d3-interpolate/src/round.js","node_modules/d3-scale/src/init.js","node_modules/d3-collection/src/map.js","node_modules/d3-collection/src/nest.js","node_modules/d3-scale/src/array.js","node_modules/d3-scale/src/ordinal.js","node_modules/d3-scale/src/constant.js","node_modules/d3-scale/src/number.js","node_modules/d3-scale/src/continuous.js","node_modules/d3-format/src/formatDecimal.js","node_modules/d3-format/src/exponent.js","node_modules/d3-format/src/formatGroup.js","node_modules/d3-format/src/formatNumerals.js","node_modules/d3-format/src/formatSpecifier.js","node_modules/d3-format/src/formatTrim.js","node_modules/d3-format/src/formatPrefixAuto.js","node_modules/d3-format/src/formatRounded.js","node_modules/d3-format/src/formatTypes.js","node_modules/d3-format/src/identity.js","node_modules/d3-format/src/locale.js","node_modules/d3-format/src/defaultLocale.js","node_modules/d3-format/src/precisionFixed.js","node_modules/d3-format/src/precisionPrefix.js","node_modules/d3-format/src/precisionRound.js","node_modules/d3-scale/src/tickFormat.js","node_modules/d3-scale/src/linear.js"],"sourcesContent":["export default function ascending(a, b) {\n  return a == null || b == null ? NaN : a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n","import ascending from \"./ascending.js\";\nimport descending from \"./descending.js\";\n\nexport default function bisector(f) {\n  let compare1, compare2, delta;\n\n  // If an accessor is specified, promote it to a comparator. In this case we\n  // can test whether the search value is (self-) comparable. We can’t do this\n  // for a comparator (except for specific, known comparators) because we can’t\n  // tell if the comparator is symmetric, and an asymmetric comparator can’t be\n  // used to test whether a single value is comparable.\n  if (f.length !== 2) {\n    compare1 = ascending;\n    compare2 = (d, x) => ascending(f(d), x);\n    delta = (d, x) => f(d) - x;\n  } else {\n    compare1 = f === ascending || f === descending ? f : zero;\n    compare2 = f;\n    delta = f;\n  }\n\n  function left(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function right(a, x, lo = 0, hi = a.length) {\n    if (lo < hi) {\n      if (compare1(x, x) !== 0) return hi;\n      do {\n        const mid = (lo + hi) >>> 1;\n        if (compare2(a[mid], x) <= 0) lo = mid + 1;\n        else hi = mid;\n      } while (lo < hi);\n    }\n    return lo;\n  }\n\n  function center(a, x, lo = 0, hi = a.length) {\n    const i = left(a, x, lo, hi - 1);\n    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;\n  }\n\n  return {left, center, right};\n}\n\nfunction zero() {\n  return 0;\n}\n","export default function number(x) {\n  return x === null ? NaN : +x;\n}\n\nexport function* numbers(values, valueof) {\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {\n        yield value;\n      }\n    }\n  }\n}\n","import ascending from \"./ascending.js\";\nimport bisector from \"./bisector.js\";\nimport number from \"./number.js\";\n\nconst ascendingBisect = bisector(ascending);\nexport const bisectRight = ascendingBisect.right;\nexport const bisectLeft = ascendingBisect.left;\nexport const bisectCenter = bisector(number).center;\nexport default bisectRight;\n","const e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction tickSpec(start, stop, count) {\n  const step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log10(step)),\n      error = step / Math.pow(10, power),\n      factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;\n  let i1, i2, inc;\n  if (power < 0) {\n    inc = Math.pow(10, -power) / factor;\n    i1 = Math.round(start * inc);\n    i2 = Math.round(stop * inc);\n    if (i1 / inc < start) ++i1;\n    if (i2 / inc > stop) --i2;\n    inc = -inc;\n  } else {\n    inc = Math.pow(10, power) * factor;\n    i1 = Math.round(start / inc);\n    i2 = Math.round(stop / inc);\n    if (i1 * inc < start) ++i1;\n    if (i2 * inc > stop) --i2;\n  }\n  if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start, stop, count * 2);\n  return [i1, i2, inc];\n}\n\nexport default function ticks(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  if (!(count > 0)) return [];\n  if (start === stop) return [start];\n  const reverse = stop < start, [i1, i2, inc] = reverse ? tickSpec(stop, start, count) : tickSpec(start, stop, count);\n  if (!(i2 >= i1)) return [];\n  const n = i2 - i1 + 1, ticks = new Array(n);\n  if (reverse) {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) * inc;\n  } else {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) * inc;\n  }\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  return tickSpec(start, stop, count)[2];\n}\n\nexport function tickStep(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  const reverse = stop < start, inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);\n  return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return Math.round(a * (1 - t) + b * t);\n  };\n}\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.interpolator(domain); break;\n    default: this.interpolator(interpolator).domain(domain); break;\n  }\n  return this;\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\nimport {initRange} from \"./init\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal() {\n  var index = map(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateNumber, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function identity(x) {\n  return x;\n}\n\nfunction normalize(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(isNaN(b) ? NaN : 0.5);\n}\n\nfunction clamper(domain) {\n  var a = domain[0], b = domain[domain.length - 1], t;\n  if (a > b) t = a, a = b, b = t;\n  return function(x) { return Math.max(a, Math.min(b, x)); };\n}\n\n// normalize(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// interpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding range value x in [a,b].\nfunction bimap(domain, range, interpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = normalize(d1, d0), r0 = interpolate(r1, r0);\n  else d0 = normalize(d0, d1), r0 = interpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, interpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = normalize(domain[i], domain[i + 1]);\n    r[i] = interpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport function transformer() {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      transform,\n      untransform,\n      unknown,\n      clamp = identity,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : (output || (output = piecewise(domain.map(transform), range, interpolate)))(transform(clamp(x)));\n  }\n\n  scale.invert = function(y) {\n    return clamp(untransform((input || (input = piecewise(range, domain.map(transform), interpolateNumber)))(y)));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), clamp === identity || (clamp = clamper(domain)), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = _ ? clamper(domain) : identity, scale) : clamp !== identity;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t, u) {\n    transform = t, untransform = u;\n    return rescale();\n  };\n}\n\nexport default function continuous(transform, untransform) {\n  return transformer()(transform, untransform);\n}\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": formatDecimal,\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"-\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"],\n  minus: \"-\"\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent.js\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport continuous, {copy, identity} from \"./continuous\";\nimport {initRange} from \"./init\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    var d = domain();\n    return tickFormat(d[0], d[d.length - 1], count == null ? 10 : count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(identity, identity);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  initRange.apply(scale, arguments);\n\n  return linearish(scale);\n}\n"],"mappings":"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","ignoreList":[]}