{"version":3,"names":["Step","context","t","this","_context","_t","prototype","areaStart","_line","areaEnd","NaN","lineStart","_x","_y","_point","lineEnd","lineTo","closePath","point","x","y","moveTo","x1","curveStep","propDefaultValues","Utils","LineChartDefaultValues","highestHeadingLevel","mainTitle","subTitle","text","height","width","margin","top","bottom","right","left","padding","localization","ordinalAccessor","valueAccessor","seriesAccessor","accessibility","animationConfig","xAxis","xAxisDate","yAxis","showBaselineX","showBaselineTrue","wrapLabel","colorPalette","colorPaletteCategorical","hoverStyle","clickStyle","referenceStyle","strokeWidth","strokeWidth2","showDots","dotRadius","dotRadius4","lineCurve","hoverOpacity","cursor","dataLabel","dataLabelLine","seriesLabel","legend","categoryLegend","tooltipLabel","secondaryLines","showTooltip","suppressEvents","referenceLines","annotations","clickHighlight","lineChartCss","LineChartStyle0","getGlobalInstances","configLocalization","getActiveLanguageString","getAccessibleStrokes","ensureTextContrast","createTextStrokeFilter","findTagLevel","prepareRenderChange","initializeDescriptionRoot","initializeElementAccess","setElementFocusHandler","setElementAccessID","setAccessibilityController","hideNonessentialGroups","setAccessTitle","setAccessSubtitle","setAccessLongDescription","setAccessExecutiveSummary","setAccessPurpose","setAccessContext","setAccessStatistics","setAccessStructure","setAccessChartCounts","setAccessXAxis","setAccessYAxis","setAccessAnnotation","retainAccessFocus","checkAccessFocus","setElementInteractionAccessState","setAccessibilityDescriptionWidth","annotate","chartAccessors","checkInteraction","checkClicked","checkHovered","checkLabelDisplayOnly","convertVisaColor","drawAxis","drawGrid","drawLegend","setLegendInteractionState","drawTooltip","formatDataLabel","getColors","getLicenses","getPadding","getScopedData","initTooltipStyle","overrideTitleTooltip","placeDataLabels","resolveLines","scopeDataKeys","transitionEndAll","visaColors","validateAccessibilityProps","validateLocalizationProps","roundTo","resolveLabelCollision","setSubTitle","setReferenceLine","LineChart","exports","shouldValidateAccessibility","shouldValidateLocalization","updated","time","timemillisecond","timeMillisecond","timesecond","timeSecond","timeminute","timeMinute","timehour","timeHour","timeday","timeDay","timeweek","timeWeek","timemonth","timeMonth","timeyear","timeYear","curveOptions","linear","curveLinear","step","catmullRom","curveCatmullRom","shouldUpdateXAxis","shouldUpdateYAxis","shouldUpdateXGrid","shouldUpdateYGrid","shouldValidate","shouldUpdateData","shouldSetDimensions","shouldUpdateScales","shouldUpdateTableData","shouldUpdateLabels","shouldUpdateAnnotations","shouldDrawInteractionState","shouldSetSelectionClass","shouldUpdateCursor","shouldSetColors","shouldSetSubTitle","shouldUpdateLines","shouldUpdatePoints","shouldUpdateLegend","shouldUpdateReferenceLines","shouldBindInteractivity","shouldUpdateLegendInteractivity","shouldResetRoot","shouldUpdateBaseline","shouldValidateInteractionKeys","shouldUpdateLabelData","shouldValidateDataLabelAccessor","shouldEnterUpdateExit","shouldSetGlobalSelections","shouldSetTestingAttributes","shouldSetLabelOpacity","shouldSetSeriesLabelOpacity","shouldSetLegendCursor","shouldAddStrokeUnder","shouldValidateSeriesLabels","shouldUpdateSeriesLabels","shouldUpdateColors","shouldUpdateStrokeWidth","shouldUpdateInterpolationData","shouldUpdateDotRadius","shouldUpdateDescriptionWrapper","shouldSetChartAccessibilityTitle","shouldSetChartAccessibilitySubtitle","shouldSetChartAccessibilityLongDescription","shouldSetChartAccessibilityExecutiveSummary","shouldSetChartAccessibilityStatisticalNotes","shouldSetChartAccessibilityStructureNotes","shouldSetParentSVGAccessibility","shouldSetGeometryAccessibilityAttributes","shouldSetGeometryAriaLabels","shouldSetGroupAccessibilityLabel","shouldSetChartAccessibilityPurpose","shouldSetChartAccessibilityContext","shouldRedrawWrapper","shouldSetTagLevels","shouldSetChartAccessibilityCount","shouldSetYAxisAccessibility","shouldSetXAxisAccessibility","shouldSetAnnotationAccessibility","shouldUpdateDashPatterns","shouldSetLocalizationConfig","topLevel","bottomLevel","strokes","b","short","med","long","dashPatterns","hiddenHash","collisionSettings","all","validPositions","offsets","middle","handleStrokeDasharray","d","i","_this","keys","includes","key","hideTextures","calculateStrokeWidth","data","useChildData","values","seriesInteraction","innerInteractionKeys","hoverHighlight","handleDotStroke","n","hideStrokes","clicked","length","hovered","baseColor","select","parentNode","attr","color","toLowerCase","handleLineStroke","colorArr","handleSeriesTextFill","rawColors","textColors","handleTextFill","class_1","dataWatcher","_newData","_oldData","idWatcher","newID","_oldID","console","error","headingWatcher","_newVal","_oldVal","titleWatcher","subtitleWatcher","dimensionWatcher","seriesAccessorWatcher","interactionKeys","ordinalAccessorWatcher","valueAccessorWatcher","xAxisWatcher","newGridVal","gridVisible","oldGridVal","newTickInterval","tickInterval","oldTickInterval","newUnit","unit","oldUnit","yAxisWatcher","wrapLabelWatcher","showBaselineXWatcher","paletteWatcher","colorsWatcher","clickStyleWatcher","hoverStyleWatcher","referenceWatcher","cursorWatcher","strokeWidthWatcher","showDotsWatcher","dotRadiusWatcher","lineCurveWatcher","_newLineCurve","_oldLineCurve","warn","hoverOpacityWatcher","dataLabelWatcher","newVisibleVal","visible","oldVisibleVal","newAccessor","labelAccessor","oldAccessor","newDisplayOnlyVal","displayOnly","oldDisplayOnlyVal","seriesLabelWatcher","tooltipLabelWatcher","showTooltipWatcher","accessibilityWatcher","newTitle","title","oldTitle","newExecutiveSummary","executiveSummary","oldExecutiveSummary","newPurpose","purpose","oldPurpose","newLongDescription","longDescription","oldLongDescription","newContext","contextExplanation","oldContext","newStatisticalNotes","statisticalNotes","oldStatisticalNotes","newStructureNotes","structureNotes","oldStructureNotes","newincludeDataKeyNames","includeDataKeyNames","oldincludeDataKeyNames","newElementDescriptionAccessor","elementDescriptionAccessor","oldElementDescriptionAccessor","newSmallValue","showSmallLabels","oldSmallValue","newStrokes","oldStrokes","newTextures","oldTextures","newKeyNav","keyboardNavConfig","disabled","oldKeyNav","newInterface","elementsAreInterface","oldInterface","localizationWatcher","newLanguage","language","oldLanguage","newNumeralLocale","numeralLocale","oldNumeralLocale","legendWatcher","newInteractiveVal","interactive","oldInteractiveVal","annotationsWatcher","valueOverrideWatcher","secondaryLinesWatcher","newDataLabelVal","showDataLabel","oldDataLabelVal","newSeriesLabelVal","showSeriesLabel","oldSeriesLabelVal","newKeysVal","oldKeysVal","newOpacityVal","opacity","oldOpacityVal","clickWatcher","hoverWatcher","interactionWatcher","dataKeyNamesWatcher","suppressWatcher","unitTestWatcher","componentWillLoad","chartID","uniqueID","uuid","initialLoadEvent","emit","Promise","resolve","duration","defaults","lineChartEl","id","setLocalizationConfig","setTagLevels","setDimensions","prepareScales","prepareData","prepareLabelData","updateInterpolationData","validateInteractionKeys","validateDataLabelAccessor","validateSeriesLabels","setTableData","shouldValidateAccessibilityProps","shouldValidateLocalizationProps","setColors","componentWillUpdate","componentDidLoad","renderRootElements","setTooltipInitialStyle","setChartDescriptionWrapper","setChartAccessibilityTitle","setChartAccessibilitySubtitle","setChartAccessibilityLongDescription","setChartAccessibilityExecutiveSummary","setChartAccessibilityPurpose","setChartAccessibilityContext","setChartAccessibilityStatisticalNotes","setChartAccessibilityStructureNotes","setParentSVGAccessibility","reSetRoot","drawXGrid","drawYGrid","setSubTitleElements","setGlobalSelections","setTestingAttributes","enterLines","updateLines","exitLines","enterPoints","updatePoints","exitPoints","drawLines","drawPoints","enterSeriesLabels","updateSeriesLabels","exitSeriesLabels","enterDataLabels","updateDataLabels","exitDataLabels","setChartCountAccessibility","setGeometryAccessibilityAttributes","setGeometryAriaLabels","drawLegendElements","drawDataLabels","drawSeriesLabels","addStrokeUnder","drawReferenceLines","setSelectedClass","updateCursor","bindInteractivity","bindLegendInteractivity","setLegendCursor","drawXAxis","setXAxisAccessibility","drawYAxis","setYAxisAccessibility","drawBaseline","drawAnnotations","setAnnotationAccessibility","root","node","dotG","setGroupAccessibilityID","onChangeHandler","then","initialLoadEndEvent","componentDidUpdate","updateColors","updateStrokeWidth","updateDotRadius","updateInteractionState","updateStrokePattern","setLabelOpacity","setSeriesLabelOpacity","drawEndEvent","windowInstances","languageString","i18Next","languageObject","getResourceBundle","numeralObject","numeral","localeData","skipValidation","Object","assign","disableValidation","onClickEvent","undefined","clickEvent","innerHeight","innerWidth","innerPaddedHeight","innerPaddedWidth","innerLabelAccessor","getLanguageString","nest","interpolating","oldXDomain","domain","oldXRange","range","oldYDomain","oldYRange","scaleLinear","line","curve","map","minValue","min","parseFloat","maxValue","max","minValueOverride","maxValueOverride","xDomainUnique","Date","maxDate","minDate","timeDiffInMilliseconds","count","genericTimePadding","scaleTime","getTime","filter","a","indexOf","sort","timeTool","offset","scalePoint","xIndex","defined","isNaN","filteredData","hashObject","concat","placement","collisionHideOnly","entries","dotNest","minArray_1","maxArray_1","firstArray_1","lastArray_1","forEach","item","minIdx","minIndex","minItem","maxIdx","maxIndex","maxItem","firstItem","find","val","lastItem","__spreadArray","reverse","push","displayOnlyLabelData","first","last","parent","interpolate","get","start","end","resolved","change_1","subTitleG","colors","adjustedColors","adjusted","innerScopeDataKeys","innerChartSingleAccessors","singleAccessors","accessor","innerChartAccessors","tableData","tableColumns","svg","labels","seriesLabelG","append","rootG","gridG","lineG","legendG","tooltipG","referencesG","changeSvg","selection","namespace","easing","easeCircleIn","changeRoot","changeRootG","dataBoundToLines","selectAll","enter","exit","update","merge","enterSize","size","dataBoundToDotWrappers","enterDotWrappers","exitDotWrappers","updateDotWrappers","dataBountToSeriesLabels","seriesLabelEnter","seriesLabelExit","seriesLabelUpdate","dataBoundToLabels","enteringLabelGroups","exitingLabelGroups","updatingLabelGroups","remove","dataBoundToDots","enterDots","exitDots","updateDots","dataBoundToLabelChildren","enteringLabels","exitingLabels","updatingLabels","exitSize","unitTest","axisLabel","label","dataKeyNames","bandWidth","axisScale","dateFormat","format","hide","rootEle","hasXAxis","xAxisLabel","hasYAxis","yAxisLabel","markOffset","interrupt","on","onClickHandler","onHoverHandler","onMouseOutHandler","linelength","getTotalLength","transition","ease","call","lineOpacity","Math","classed","_","each","_d","order","dotOpacity","lineDotOpacity","delay","exitWholeGroup","focusDidExist","parentGNode","updateTransition","transitionEndEvent","me","selected","selectable","labelDetails","isRight","seriesLabelOpacity","Number","EPSILON","hideOnly","seriesUpdate","style","textElement","getComputedStyle","fontSize","textHeight","bitmaps","labelSelection","avoidMarks","accessors","childrenEnter","xScale","yScale","chartType","fullEnter","hidden","labelOpacity","targetOpacity","parentOpacity","updateChildren","collisionPlacement","avoidCollision","runOccupancyBitmap","addCollisionClass","prevOpacity","styleVisibility","labelsAdded","labelsRemoved","removeOnly","suppressMarkDraw","groupAccessor","groupName","source","xAccessor","yAccessor","noSeriesAccessor","type","secondary","hoverEvent","target","chartTag","redraw","disableKeyNav","hideDataTable","hideDataTableButton","description","geomType","includeKeyNames","dataKeys","onChangeFunc","added","removed","hasTooltip","eventsTooltip","evt","event","isToShow","mouseOutEvent","_a","render","drawStartEvent","init","h","class","display","isInteractive","hasCousinNavigation","isCompact","exceptions","exception","window"],"sources":["node_modules/d3-shape/src/curve/step.js","src/components/line-chart/line-chart-default-values.ts","src/components/line-chart/line-chart.scss?tag=line-chart","src/components/line-chart/line-chart.tsx"],"sourcesContent":["function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport Utils from '@visa/visa-charts-utils';\n\nconst { propDefaultValues } = Utils;\nexport class LineChartDefaultValues {\n  static readonly highestHeadingLevel = propDefaultValues.highestHeadingLevel;\n  static readonly mainTitle = 'Line Chart Title';\n  static readonly subTitle = propDefaultValues.subTitle.text;\n  static readonly height = 300;\n  static readonly width = 650;\n  static readonly margin = {\n    top: 300 * 0.01,\n    bottom: 300 * 0.01,\n    right: 650 * 0.01,\n    left: 650 * 0.01\n  };\n  static readonly padding = {\n    top: 20,\n    bottom: 50,\n    right: 50,\n    left: 50\n  };\n\n  static readonly localization = propDefaultValues.localization;\n\n  static readonly ordinalAccessor = 'label';\n  static readonly valueAccessor = 'value';\n  static readonly seriesAccessor = 'series';\n\n  static readonly accessibility = propDefaultValues.accessibility;\n  static readonly animationConfig = propDefaultValues.animationConfig;\n  static readonly xAxis = propDefaultValues.xAxisDate;\n  static readonly yAxis = propDefaultValues.yAxis;\n  static readonly showBaselineX = propDefaultValues.showBaselineTrue;\n  static readonly wrapLabel = propDefaultValues.wrapLabel;\n  static readonly colorPalette = propDefaultValues.colorPaletteCategorical;\n\n  static readonly hoverStyle = propDefaultValues.hoverStyle;\n  static readonly clickStyle = propDefaultValues.clickStyle;\n\n  static readonly referenceStyle = propDefaultValues.referenceStyle;\n\n  static readonly strokeWidth = propDefaultValues.strokeWidth2;\n  static readonly showDots = propDefaultValues.showDots;\n  static readonly dotRadius = propDefaultValues.dotRadius4;\n  static readonly lineCurve = propDefaultValues.lineCurve;\n  static readonly hoverOpacity = propDefaultValues.hoverOpacity;\n  static readonly cursor = propDefaultValues.cursor;\n\n  static readonly dataLabel = propDefaultValues.dataLabelLine;\n  static readonly dataKeyNames;\n  static readonly seriesLabel = propDefaultValues.seriesLabel;\n  static readonly legend = propDefaultValues.categoryLegend;\n  static readonly tooltipLabel = propDefaultValues.tooltipLabel;\n\n  static readonly secondaryLines = propDefaultValues.secondaryLines;\n\n  static readonly showTooltip = propDefaultValues.showTooltip;\n  static readonly suppressEvents = propDefaultValues.suppressEvents;\n  static readonly referenceLines = propDefaultValues.referenceLines;\n  static readonly annotations = propDefaultValues.annotations;\n\n  static readonly hoverHighlight;\n  static readonly clickHighlight = propDefaultValues.clickHighlight;\n}\n","/**\n * Copyright (c) 2020, 2021, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nline-chart {\n  .annotations {\n    pointer-events: none;\n    .handle {\n      pointer-events: all;\n    }\n  }\n\n  .screen-reader-info {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n\n  .data-table-link {\n    color: #767676;\n    text-decoration: none;\n    font-size: 12px;\n    margin-left: 5%;\n  }\n\n  .hidden {\n    display: none;\n  }\n\n  cursor: default;\n  .axis {\n    font-size: 12px;\n    text {\n      //font: 0.65rem;\n      fill: #767676;\n    }\n\n    &-label {\n      // axis label\n      text-anchor: middle;\n      font: 1rem sans-serif;\n    }\n\n    &-mark {\n      // axis mark\n      color: #949494;\n      stroke-width: 2px;\n    }\n\n    path {\n      color: transparent;\n      stroke-width: 2px;\n    }\n  }\n\n  .grid {\n    line {\n      stroke: #c9c9c9;\n      stroke-opacity: 0.6;\n      // shape-rendering: crispEdges;\n      // stroke-dasharray: 4, 4;\n    }\n\n    path {\n      stroke-width: 0;\n      stroke: #767676;\n    }\n  }\n\n  .line-group {\n    transition: opacity 0.5s linear;\n\n    &__inactive {\n      opacity: 0;\n    }\n\n    .line-plot {\n      fill: none;\n    }\n\n    .dot {\n      stroke: #ffffff;\n    }\n    .line-series-label {\n      font-size: 1em;\n    }\n  }\n\n  .line-dataLabel-group {\n    text {\n      //font-size: 12px;\n    }\n  }\n\n  .line-legend {\n    font-size: 1em;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n\n    .legend {\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n    }\n  }\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport { Component, Element, Prop, Watch, h, Event, EventEmitter } from '@stencil/core';\n\nimport { select, event } from 'd3-selection';\nimport { max, min, minIndex, maxIndex } from 'd3-array';\nimport { timeMillisecond, timeSecond, timeMinute, timeHour, timeDay, timeWeek, timeMonth, timeYear } from 'd3-time';\nimport { scalePoint, scaleLinear, scaleTime } from 'd3-scale';\nimport { line, curveLinear, curveStep, curveCatmullRom } from 'd3-shape';\nimport { nest } from 'd3-collection';\nimport {\n  IBoxModelType,\n  ILocalizationType,\n  IHoverStyleType,\n  IClickStyleType,\n  IAxisType,\n  IReferenceStyleType,\n  IDataLabelType,\n  ITooltipLabelType,\n  IAccessibilityType,\n  IAnimationConfig,\n  ILegendType,\n  ISeriesLabelType,\n  ISecondaryLinesType,\n  ISubTitleType\n} from '@visa/charts-types';\nimport { LineChartDefaultValues } from './line-chart-default-values';\nimport { easeCircleIn } from 'd3-ease';\nimport 'd3-transition';\nimport { v4 as uuid } from 'uuid';\nimport Utils from '@visa/visa-charts-utils';\nconst {\n  getGlobalInstances,\n  configLocalization,\n  getActiveLanguageString,\n  getAccessibleStrokes,\n  ensureTextContrast,\n  createTextStrokeFilter,\n  findTagLevel,\n  prepareRenderChange,\n  initializeDescriptionRoot,\n  initializeElementAccess,\n  setElementFocusHandler,\n  setElementAccessID,\n  setAccessibilityController,\n  hideNonessentialGroups,\n  setAccessTitle,\n  setAccessSubtitle,\n  setAccessLongDescription,\n  setAccessExecutiveSummary,\n  setAccessPurpose,\n  setAccessContext,\n  setAccessStatistics,\n  setAccessStructure,\n  setAccessChartCounts,\n  setAccessXAxis,\n  setAccessYAxis,\n  setAccessAnnotation,\n  retainAccessFocus,\n  checkAccessFocus,\n  setElementInteractionAccessState,\n  setAccessibilityDescriptionWidth,\n  annotate,\n  chartAccessors,\n  checkInteraction,\n  checkClicked,\n  checkHovered,\n  checkLabelDisplayOnly,\n  convertVisaColor,\n  drawAxis,\n  drawGrid,\n  drawLegend,\n  setLegendInteractionState,\n  drawTooltip,\n  formatDataLabel,\n  getColors,\n  getLicenses,\n  getPadding,\n  getScopedData,\n  initTooltipStyle,\n  overrideTitleTooltip,\n  placeDataLabels,\n  resolveLines,\n  scopeDataKeys,\n  transitionEndAll,\n  visaColors,\n  validateAccessibilityProps,\n  validateLocalizationProps,\n  roundTo,\n  resolveLabelCollision,\n  setSubTitle,\n  setReferenceLine\n} = Utils;\n\n@Component({\n  tag: 'line-chart',\n  styleUrl: 'line-chart.scss'\n})\nexport class LineChart {\n  @Event() clickEvent: EventEmitter;\n  @Event() hoverEvent: EventEmitter;\n  @Event() mouseOutEvent: EventEmitter;\n  @Event() initialLoadEvent: EventEmitter;\n  @Event() initialLoadEndEvent: EventEmitter;\n  @Event() drawStartEvent: EventEmitter;\n  @Event() drawEndEvent: EventEmitter;\n  @Event() transitionEndEvent: EventEmitter;\n\n  // Chart Attributes (1/7)\n  @Prop({ mutable: true }) localization: ILocalizationType = LineChartDefaultValues.localization;\n  @Prop({ mutable: true }) mainTitle: string = LineChartDefaultValues.mainTitle;\n  @Prop({ mutable: true }) subTitle: string | ISubTitleType = LineChartDefaultValues.subTitle;\n  @Prop({ mutable: true }) height: number = LineChartDefaultValues.height;\n  @Prop({ mutable: true }) width: number = LineChartDefaultValues.width;\n  @Prop({ mutable: true }) highestHeadingLevel: string | number = LineChartDefaultValues.highestHeadingLevel;\n  @Prop({ mutable: true }) margin: IBoxModelType = LineChartDefaultValues.margin;\n  @Prop({ mutable: true }) padding: IBoxModelType = LineChartDefaultValues.padding;\n\n  // Data (2/7)\n  @Prop() data: object[];\n  @Prop() uniqueID: string;\n  @Prop({ mutable: true }) ordinalAccessor: string = LineChartDefaultValues.ordinalAccessor;\n  @Prop({ mutable: true }) valueAccessor: string = LineChartDefaultValues.valueAccessor;\n  @Prop({ mutable: true }) seriesAccessor: string = LineChartDefaultValues.seriesAccessor;\n\n  // Axis (3/7)\n  @Prop({ mutable: true }) xAxis: IAxisType = LineChartDefaultValues.xAxis;\n  @Prop({ mutable: true }) yAxis: IAxisType = LineChartDefaultValues.yAxis;\n  @Prop({ mutable: true }) wrapLabel: boolean = LineChartDefaultValues.wrapLabel;\n  @Prop({ mutable: true }) showBaselineX: boolean = LineChartDefaultValues.showBaselineX;\n\n  // Color & Shape (4/7)\n  @Prop({ mutable: true }) colorPalette: string = LineChartDefaultValues.colorPalette;\n  @Prop({ mutable: true }) colors: string[];\n  @Prop({ mutable: true }) hoverStyle: IHoverStyleType = LineChartDefaultValues.hoverStyle;\n  @Prop({ mutable: true }) clickStyle: IClickStyleType = LineChartDefaultValues.clickStyle;\n  @Prop({ mutable: true }) referenceStyle: IReferenceStyleType = LineChartDefaultValues.referenceStyle;\n  @Prop({ mutable: true }) cursor: string = LineChartDefaultValues.cursor;\n  @Prop({ mutable: true }) hoverOpacity: number = LineChartDefaultValues.hoverOpacity;\n  @Prop({ mutable: true }) animationConfig: IAnimationConfig = LineChartDefaultValues.animationConfig;\n  @Prop({ mutable: true }) strokeWidth: number = LineChartDefaultValues.strokeWidth;\n  @Prop({ mutable: true }) showDots: boolean = LineChartDefaultValues.showDots;\n  @Prop({ mutable: true }) dotRadius: number = LineChartDefaultValues.dotRadius;\n  @Prop({ mutable: true }) lineCurve: string = LineChartDefaultValues.lineCurve;\n\n  // Data label (5/7)\n  @Prop({ mutable: true }) dataLabel: IDataLabelType = LineChartDefaultValues.dataLabel;\n  @Prop({ mutable: true }) dataKeyNames: object;\n  @Prop({ mutable: true }) showTooltip: boolean = LineChartDefaultValues.showTooltip;\n  @Prop({ mutable: true }) tooltipLabel: ITooltipLabelType = LineChartDefaultValues.tooltipLabel;\n  @Prop({ mutable: true }) accessibility: IAccessibilityType = LineChartDefaultValues.accessibility;\n  @Prop({ mutable: true }) legend: ILegendType = LineChartDefaultValues.legend;\n  @Prop({ mutable: true }) annotations: object[] = LineChartDefaultValues.annotations;\n  @Prop({ mutable: true }) seriesLabel: ISeriesLabelType = LineChartDefaultValues.seriesLabel;\n\n  // Calculation (6/7)\n  @Prop() maxValueOverride: number;\n  @Prop() minValueOverride: number;\n  @Prop({ mutable: true }) referenceLines: object[] = LineChartDefaultValues.referenceLines;\n  @Prop({ mutable: true }) secondaryLines: ISecondaryLinesType = LineChartDefaultValues.secondaryLines;\n\n  // Interactivity (7/7)\n  @Prop({ mutable: true }) suppressEvents: boolean = LineChartDefaultValues.suppressEvents;\n  @Prop({ mutable: true }) hoverHighlight: object;\n  @Prop({ mutable: true }) clickHighlight: object[] = LineChartDefaultValues.clickHighlight;\n  @Prop({ mutable: true }) interactionKeys: string[];\n\n  // Testing (8/7)\n  @Prop() unitTest: boolean = false;\n  //  @Prop() debugMode: boolean = false;\n\n  @Element()\n  lineChartEl: HTMLElement;\n  shouldValidateAccessibility: boolean = true;\n  shouldValidateLocalization: boolean = true;\n  svg: any;\n  root: any;\n  rootG: any;\n  gridG: any;\n  lineG: any;\n  dotG: any;\n  seriesLabelG: any;\n  line: any;\n  x: any;\n  y: any;\n  xIndex: any;\n  nest: any;\n  dotNest: any;\n  map: any;\n  interpolating: any;\n  innerHeight: number;\n  innerWidth: number;\n  innerPaddedHeight: number;\n  innerPaddedWidth: number;\n  referencesG: any;\n  defaults: boolean;\n  duration: number;\n  legendG: any;\n  tooltipG: any;\n  subTitleG: any;\n  labels: any;\n  displayOnlyLabelData: any;\n  colorArr: any;\n  rawColors: any;\n  textColors: any;\n  seriesInteraction: any;\n  tableData: any;\n  tableColumns: any;\n  updated: boolean = true;\n  enterSize: number;\n  exitSize: number;\n  enter: any;\n  exit: any;\n  update: any;\n  enterDotWrappers: any;\n  updateDotWrappers: any;\n  exitDotWrappers: any;\n  enterDots: any;\n  updateDots: any;\n  exitDots: any;\n  enteringLabelGroups: any;\n  exitingLabelGroups: any;\n  updatingLabelGroups: any;\n  enteringLabels: any;\n  exitingLabels: any;\n  updatingLabels: any;\n  seriesLabelEnter: any;\n  seriesLabelUpdate: any;\n  seriesLabelExit: any;\n  labelDetails: any;\n  isRight: any;\n  time = {\n    timemillisecond: timeMillisecond,\n    timesecond: timeSecond,\n    timeminute: timeMinute,\n    timehour: timeHour,\n    timeday: timeDay,\n    timeweek: timeWeek,\n    timemonth: timeMonth,\n    timeyear: timeYear\n  };\n  curveOptions = {\n    linear: curveLinear,\n    step: curveStep,\n    catmullRom: curveCatmullRom\n  };\n  chartID: string;\n  innerInteractionKeys: any;\n  innerLabelAccessor: string;\n  shouldUpdateXAxis: boolean = false;\n  shouldUpdateYAxis: boolean = false;\n  shouldUpdateXGrid: boolean = false;\n  shouldUpdateYGrid: boolean = false;\n  shouldValidate: boolean = false;\n  shouldUpdateData: boolean = false;\n  shouldSetDimensions: boolean = false;\n  shouldUpdateScales: boolean = false;\n  shouldUpdateTableData: boolean = false;\n  shouldUpdateLabels: boolean = false;\n  shouldUpdateAnnotations: boolean = false;\n  shouldDrawInteractionState: boolean = false;\n  shouldSetSelectionClass: boolean = false;\n  shouldUpdateCursor: boolean = false;\n  shouldSetColors: boolean = false;\n  shouldSetSubTitle: boolean = false;\n  shouldUpdateLines: boolean = false;\n  shouldUpdatePoints: boolean = false;\n  shouldUpdateLegend: boolean = false;\n  shouldUpdateReferenceLines: boolean = false;\n  shouldBindInteractivity: boolean = false;\n  shouldUpdateLegendInteractivity: boolean = false;\n  shouldResetRoot: boolean = false;\n  shouldUpdateBaseline: boolean = false;\n  shouldValidateInteractionKeys: boolean = false;\n  shouldUpdateLabelData: boolean = false;\n  shouldValidateDataLabelAccessor: boolean = false;\n  shouldEnterUpdateExit: boolean = false;\n  shouldSetGlobalSelections: boolean = false;\n  shouldSetTestingAttributes: boolean = false;\n  shouldSetLabelOpacity: boolean = false;\n  shouldSetSeriesLabelOpacity: boolean = false;\n  shouldSetLegendCursor: boolean = false;\n  shouldAddStrokeUnder: boolean = false;\n  shouldValidateSeriesLabels: boolean = false;\n  shouldUpdateSeriesLabels: boolean = false;\n  shouldUpdateColors: boolean = false;\n  shouldUpdateStrokeWidth: boolean = false;\n  shouldUpdateInterpolationData: boolean = false;\n  shouldUpdateDotRadius: boolean = false;\n  shouldUpdateDescriptionWrapper: boolean = false;\n  shouldSetChartAccessibilityTitle: boolean = false;\n  shouldSetChartAccessibilitySubtitle: boolean = false;\n  shouldSetChartAccessibilityLongDescription: boolean = false;\n  shouldSetChartAccessibilityExecutiveSummary: boolean = false;\n  shouldSetChartAccessibilityStatisticalNotes: boolean = false;\n  shouldSetChartAccessibilityStructureNotes: boolean = false;\n  shouldSetParentSVGAccessibility: boolean = false;\n  shouldSetGeometryAccessibilityAttributes: boolean = false;\n  shouldSetGeometryAriaLabels: boolean = false;\n  shouldSetGroupAccessibilityLabel: boolean = false;\n  shouldSetChartAccessibilityPurpose: boolean = false;\n  shouldSetChartAccessibilityContext: boolean = false;\n  shouldRedrawWrapper: boolean = false;\n  shouldSetTagLevels: boolean = false;\n  shouldSetChartAccessibilityCount: boolean = false;\n  shouldSetYAxisAccessibility: boolean = false;\n  shouldSetXAxisAccessibility: boolean = false;\n  shouldSetAnnotationAccessibility: boolean = false;\n  shouldUpdateDashPatterns: boolean = false;\n  shouldSetLocalizationConfig: boolean = false;\n  topLevel: string = 'h2';\n  bottomLevel: string = 'p';\n  strokes: any = {};\n  b: string = ',';\n  short: string = '2,2';\n  med: string = '4,2';\n  long: string = '8,2';\n  dashPatterns: any = [\n    '',\n    this.long,\n    this.long + this.b + this.med,\n    this.short + this.b + this.long + this.b + this.long,\n    this.short + this.b + this.short + this.b + this.long\n  ];\n  bitmaps: any;\n  hiddenHash: object = {};\n  collisionSettings: object = {\n    all: {\n      validPositions: ['top', 'bottom', 'left', 'right', 'bottom-right', 'bottom-left', 'top-left', 'top-right'],\n      offsets: [3, 2, 4, 4, 1, 1, 1, 1]\n    },\n    top: {\n      validPositions: ['top', 'top-left', 'top-right'],\n      offsets: [3, 1, 1]\n    },\n    middle: {\n      validPositions: ['left', 'right'],\n      offsets: [4, 4]\n    },\n    bottom: {\n      validPositions: ['bottom', 'bottom-left', 'bottom-right'],\n      offsets: [2, 1, 1]\n    },\n    right: {\n      validPositions: ['right', 'top-right', 'bottom-right'],\n      offsets: [4, 1, 1]\n    },\n    left: {\n      validPositions: ['left', 'top-left', 'bottom-left'],\n      offsets: [4, 1, 1]\n    }\n  };\n\n  @Watch('data')\n  dataWatcher(_newData, _oldData) {\n    this.updated = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateData = true;\n    this.shouldUpdateLabelData = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldSetColors = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateTableData = true;\n    this.shouldValidate = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n  }\n\n  @Watch('uniqueID')\n  idWatcher(newID, _oldID) {\n    console.error(\n      'Change detected in prop uniqueID from value ' +\n        _oldID +\n        ' to value ' +\n        newID +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.chartID = newID;\n    // this.lineChartEl.id = this.chartID;\n    // this.shouldValidate = true;\n    // this.shouldUpdateDescriptionWrapper = true;\n    // this.shouldSetParentSVGAccessibility = true;\n    // this.shouldUpdateLegend = true;\n    // this.shouldAddStrokeUnder = true;\n  }\n\n  @Watch('highestHeadingLevel')\n  headingWatcher(_newVal, _oldVal) {\n    this.shouldRedrawWrapper = true;\n    this.shouldSetTagLevels = true;\n    this.shouldSetChartAccessibilityCount = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('mainTitle')\n  titleWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('subTitle')\n  subtitleWatcher(_newVal, _oldVal) {\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('height')\n  @Watch('width')\n  @Watch('padding')\n  @Watch('margin')\n  dimensionWatcher(_newVal, _oldVal) {\n    this.shouldSetDimensions = true;\n    this.shouldResetRoot = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('seriesAccessor')\n  seriesAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateData = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldSetColors = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldValidate = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n  }\n\n  @Watch('ordinalAccessor')\n  ordinalAccessorWatcher(_newVal, _oldVal) {\n    this.shouldSetGlobalSelections = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateStrokeWidth = true;\n  }\n\n  @Watch('valueAccessor')\n  valueAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldSetColors = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldValidateDataLabelAccessor = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGlobalSelections = true;\n  }\n\n  @Watch('xAxis')\n  xAxisWatcher(_newVal, _oldVal) {\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    const newUnit = _newVal && _newVal.unit ? _newVal.unit : false;\n    const oldUnit = _oldVal && _oldVal.unit ? _oldVal.unit : false;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateXGrid = true;\n    }\n    if (newUnit !== oldUnit) {\n      this.shouldUpdateScales = true;\n      this.shouldUpdateInterpolationData = true;\n      this.shouldUpdateLines = true;\n      this.shouldUpdatePoints = true;\n      this.shouldUpdateXGrid = true;\n      this.shouldUpdateSeriesLabels = true;\n      this.shouldUpdateLabels = true;\n      this.shouldUpdateReferenceLines = true;\n      this.shouldUpdateAnnotations = true;\n    }\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n  }\n\n  @Watch('yAxis')\n  yAxisWatcher(_newVal, _oldVal) {\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateYGrid = true;\n    }\n  }\n\n  @Watch('wrapLabel')\n  wrapLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n  }\n\n  @Watch('showBaselineX')\n  showBaselineXWatcher(_newVal, _oldVal) {\n    this.shouldUpdateBaseline = true;\n  }\n\n  @Watch('colorPalette')\n  paletteWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldUpdateColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n  }\n\n  @Watch('colors')\n  colorsWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldUpdateColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n  }\n\n  @Watch('clickStyle')\n  clickStyleWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n  }\n\n  @Watch('hoverStyle')\n  hoverStyleWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n  }\n\n  @Watch('referenceLines')\n  @Watch('referenceStyle')\n  referenceWatcher(_newVal, _oldVal) {\n    this.shouldUpdateReferenceLines = true;\n  }\n\n  @Watch('cursor')\n  cursorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCursor = true;\n    this.shouldSetLegendCursor = true;\n  }\n\n  @Watch('strokeWidth')\n  strokeWidthWatcher(_newVal, _oldVal) {\n    this.shouldUpdateStrokeWidth = true;\n  }\n\n  @Watch('showDots')\n  showDotsWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('dotRadius')\n  dotRadiusWatcher(_newVal, _oldVal) {\n    this.shouldUpdateDotRadius = true;\n  }\n\n  @Watch('lineCurve')\n  lineCurveWatcher(_newLineCurve, _oldLineCurve) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    console.warn(\n      'Change detected in prop lineCurve from value ' +\n        _newLineCurve +\n        ' to value ' +\n        _oldLineCurve +\n        '. Transition effects for this prop have not been implemented.'\n    );\n  }\n\n  @Watch('hoverOpacity')\n  hoverOpacityWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n  }\n\n  @Watch('dataLabel')\n  dataLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTableData = true;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    const newAccessor = _newVal && _newVal.labelAccessor ? _newVal.labelAccessor : false;\n    const oldAccessor = _oldVal && _oldVal.labelAccessor ? _oldVal.labelAccessor : false;\n    const newDisplayOnlyVal = _newVal && _newVal.displayOnly;\n    const oldDisplayOnlyVal = _oldVal && _oldVal.displayOnly;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetLabelOpacity = true;\n    }\n    if (newDisplayOnlyVal !== oldDisplayOnlyVal) {\n      this.shouldUpdateLabelData = true;\n      this.shouldSetLabelOpacity = true;\n    }\n    if (newAccessor !== oldAccessor) {\n      this.shouldValidateDataLabelAccessor = true;\n    }\n  }\n\n  @Watch('seriesLabel')\n  seriesLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateTableData = true;\n    this.shouldValidateSeriesLabels = true;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetSeriesLabelOpacity = true;\n    }\n  }\n\n  @Watch('tooltipLabel')\n  tooltipLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('showTooltip')\n  showTooltipWatcher(_newVal, _oldVal) {\n    // this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('accessibility')\n  accessibilityWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    const newTitle = _newVal && _newVal.title ? _newVal.title : false;\n    const oldTitle = _oldVal && _oldVal.title ? _oldVal.title : false;\n    if (newTitle !== oldTitle) {\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newExecutiveSummary = _newVal && _newVal.executiveSummary ? _newVal.executiveSummary : false;\n    const oldExecutiveSummary = _oldVal && _oldVal.executiveSummary ? _oldVal.executiveSummary : false;\n    if (newExecutiveSummary !== oldExecutiveSummary) {\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n    }\n    const newPurpose = _newVal && _newVal.purpose ? _newVal.purpose : false;\n    const oldPurpose = _oldVal && _oldVal.purpose ? _oldVal.purpose : false;\n    if (newPurpose !== oldPurpose) {\n      this.shouldSetChartAccessibilityPurpose = true;\n    }\n    const newLongDescription = _newVal && _newVal.longDescription ? _newVal.longDescription : false;\n    const oldLongDescription = _oldVal && _oldVal.longDescription ? _oldVal.longDescription : false;\n    if (newLongDescription !== oldLongDescription) {\n      this.shouldSetChartAccessibilityLongDescription = true;\n    }\n    const newContext = _newVal && _newVal.contextExplanation ? _newVal.contextExplanation : false;\n    const oldContext = _oldVal && _oldVal.contextExplanation ? _oldVal.contextExplanation : false;\n    if (newContext !== oldContext) {\n      this.shouldSetChartAccessibilityContext = true;\n    }\n    const newStatisticalNotes = _newVal && _newVal.statisticalNotes ? _newVal.statisticalNotes : false;\n    const oldStatisticalNotes = _oldVal && _oldVal.statisticalNotes ? _oldVal.statisticalNotes : false;\n    if (newStatisticalNotes !== oldStatisticalNotes) {\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n    }\n    const newStructureNotes = _newVal && _newVal.structureNotes ? _newVal.structureNotes : false;\n    const oldStructureNotes = _oldVal && _oldVal.structureNotes ? _oldVal.structureNotes : false;\n    if (newStructureNotes !== oldStructureNotes) {\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    const newincludeDataKeyNames = _newVal && _newVal.includeDataKeyNames;\n    const oldincludeDataKeyNames = _oldVal && _oldVal.includeDataKeyNames;\n    const newElementDescriptionAccessor =\n      _newVal && _newVal.elementDescriptionAccessor ? _newVal.elementDescriptionAccessor : false;\n    const oldElementDescriptionAccessor =\n      _oldVal && _oldVal.elementDescriptionAccessor ? _oldVal.elementDescriptionAccessor : false;\n    if (\n      newincludeDataKeyNames !== oldincludeDataKeyNames ||\n      newElementDescriptionAccessor !== oldElementDescriptionAccessor\n    ) {\n      if (newincludeDataKeyNames !== oldincludeDataKeyNames) {\n        // this one is tricky because it needs to run after the lifecycle\n        // AND it could run in the off-chance this prop is changed\n        this.shouldSetGroupAccessibilityLabel = true;\n      }\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newSmallValue = _newVal && _newVal.showSmallLabels ? _newVal.showSmallLabels : false;\n    const oldSmallValue = _oldVal && _oldVal.showSmallLabels ? _oldVal.showSmallLabels : false;\n    if (newSmallValue !== oldSmallValue) {\n      this.shouldSetLabelOpacity = true;\n    }\n    const newStrokes = _newVal && _newVal.hideStrokes ? _newVal.hideStrokes : false;\n    const oldStrokes = _oldVal && _oldVal.hideStrokes ? _oldVal.hideStrokes : false;\n    if (newStrokes !== oldStrokes) {\n      this.shouldUpdateStrokeWidth = true;\n      this.shouldSetColors = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newTextures = _newVal && _newVal.hideTextures ? _newVal.hideTextures : false;\n    const oldTextures = _oldVal && _oldVal.hideTextures ? _oldVal.hideTextures : false;\n    if (newTextures !== oldTextures) {\n      this.shouldUpdateDashPatterns = true;\n      this.shouldUpdateLegend = true;\n    }\n    const newKeyNav =\n      _newVal && _newVal.keyboardNavConfig && _newVal.keyboardNavConfig.disabled\n        ? _newVal.keyboardNavConfig.disabled\n        : false;\n    const oldKeyNav =\n      _oldVal && _oldVal.keyboardNavConfig && _oldVal.keyboardNavConfig.disabled\n        ? _oldVal.keyboardNavConfig.disabled\n        : false;\n    const newInterface = _newVal && _newVal.elementsAreInterface ? _newVal.elementsAreInterface : false;\n    const oldInterface = _oldVal && _oldVal.elementsAreInterface ? _oldVal.elementsAreInterface : false;\n    if (newKeyNav !== oldKeyNav || newInterface !== oldInterface) {\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetChartAccessibilitySubtitle = true;\n      this.shouldSetChartAccessibilityLongDescription = true;\n      this.shouldSetChartAccessibilityContext = true;\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n      this.shouldSetChartAccessibilityPurpose = true;\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    if (newInterface !== oldInterface) {\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('localization')\n  localizationWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n\n    // language\n    const newLanguage = _newVal && _newVal.language ? _newVal.language : false;\n    const oldLanguage = _oldVal && _oldVal.language ? _oldVal.language : false;\n    if (newLanguage !== oldLanguage) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n\n    // numeralLocale\n    const newNumeralLocale = _newVal && _newVal.numeralLocale ? _newVal.numeralLocale : false;\n    const oldNumeralLocale = _oldVal && _oldVal.numeralLocale ? _oldVal.numeralLocale : false;\n    if (newNumeralLocale !== oldNumeralLocale) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n  }\n\n  @Watch('legend')\n  legendWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLegend = true;\n    const newInteractiveVal = _newVal && _newVal.interactive;\n    const oldInteractiveVal = _oldVal && _oldVal.interactive;\n    if (newInteractiveVal !== oldInteractiveVal) {\n      this.shouldSetLegendCursor = true;\n      this.shouldUpdateLegendInteractivity = true;\n    }\n  }\n\n  @Watch('annotations')\n  annotationsWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetAnnotationAccessibility = true;\n  }\n\n  @Watch('maxValueOverride')\n  @Watch('minValueOverride')\n  valueOverrideWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('secondaryLines')\n  secondaryLinesWatcher(_newVal, _oldVal) {\n    const newDataLabelVal = _newVal && _newVal.showDataLabel;\n    const oldDataLabelVal = _oldVal && _oldVal.showDataLabel;\n    const newSeriesLabelVal = _newVal && _newVal.showSeriesLabel;\n    const oldSeriesLabelVal = _oldVal && _oldVal.showSeriesLabel;\n    const newKeysVal = _newVal && _newVal.keys ? _newVal.keys : false;\n    const oldKeysVal = _oldVal && _oldVal.keys ? _oldVal.keys : false;\n    const newOpacityVal = _newVal && _newVal.opacity ? _newVal.opacity : 0;\n    const oldOpacityVal = _oldVal && _oldVal.opacity ? _oldVal.opacity : 0;\n    if (newKeysVal !== oldKeysVal) {\n      this.shouldUpdateLines = true;\n      this.shouldUpdateStrokeWidth = true;\n      this.shouldSetLabelOpacity = true;\n      this.shouldSetSeriesLabelOpacity = true;\n    }\n    if (newDataLabelVal !== oldDataLabelVal) {\n      this.shouldSetLabelOpacity = true;\n    }\n    if (newSeriesLabelVal !== oldSeriesLabelVal) {\n      this.shouldUpdateLabels = true;\n    }\n    if (newOpacityVal !== oldOpacityVal) {\n      this.shouldDrawInteractionState = true;\n      this.shouldSetSeriesLabelOpacity = true;\n    }\n  }\n\n  @Watch('clickHighlight')\n  clickWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n  }\n\n  @Watch('hoverHighlight')\n  hoverWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n  }\n\n  @Watch('interactionKeys')\n  interactionWatcher(_newVal, _oldVal) {\n    this.shouldValidateInteractionKeys = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n  }\n\n  @Watch('dataKeyNames')\n  dataKeyNamesWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('suppressEvents')\n  suppressWatcher(_newVal, _oldVal) {\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldSetLegendCursor = true;\n    this.shouldUpdateLegendInteractivity = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldRedrawWrapper = true;\n    this.shouldValidate = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('unitTest')\n  unitTestWatcher(_newVal, _oldVal) {\n    this.shouldSetTestingAttributes = true;\n  }\n\n  componentWillLoad() {\n    const chartID = this.uniqueID || 'line-chart-' + uuid();\n    this.initialLoadEvent.emit({ chartID: chartID });\n    // contrary to componentWillUpdate, this method appears safe to use for\n    // any calculations we need. Keeping them here reduces future refactor,\n    // since componentWillUpdate should eventually mirror this method\n    return new Promise(resolve => {\n      this.duration = 0;\n      this.defaults = true;\n      this.chartID = chartID;\n      this.lineChartEl.id = this.chartID;\n      this.setLocalizationConfig();\n      this.setTagLevels();\n      this.setDimensions();\n      this.prepareScales();\n      this.prepareData();\n      this.prepareLabelData();\n      this.updateInterpolationData();\n      this.validateInteractionKeys();\n      this.validateDataLabelAccessor();\n      this.validateSeriesLabels();\n      this.setTableData();\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.setColors();\n      resolve('component will load');\n    });\n  }\n\n  componentWillUpdate() {\n    // NEVER put items in this method that rely on props (until stencil bug is resolved)\n    // All items that belong here are currently at the top of render\n    // see: https://github.com/ionic-team/stencil/issues/2061#issuecomment-578282178\n    return new Promise(resolve => {\n      resolve('component will update');\n    });\n  }\n\n  componentDidLoad() {\n    return new Promise(resolve => {\n      this.renderRootElements();\n      this.setTooltipInitialStyle();\n      this.setChartDescriptionWrapper();\n\n      this.setChartAccessibilityTitle();\n      this.setChartAccessibilitySubtitle();\n      this.setChartAccessibilityLongDescription();\n      this.setChartAccessibilityExecutiveSummary();\n      this.setChartAccessibilityPurpose();\n      this.setChartAccessibilityContext();\n      this.setChartAccessibilityStatisticalNotes();\n      this.setChartAccessibilityStructureNotes();\n      this.setParentSVGAccessibility();\n      this.reSetRoot();\n      this.drawXGrid();\n      this.drawYGrid();\n      this.setSubTitleElements();\n      this.setGlobalSelections();\n      this.setTestingAttributes();\n      this.enterLines();\n      this.updateLines();\n      this.exitLines();\n      this.enterPoints();\n      this.updatePoints();\n      this.exitPoints();\n      this.drawLines();\n      this.drawPoints();\n      this.enterSeriesLabels();\n      this.updateSeriesLabels();\n      this.exitSeriesLabels();\n      this.enterDataLabels();\n      this.updateDataLabels();\n      this.exitDataLabels();\n      // this.setSeriesLabelOpacity();\n      this.setChartCountAccessibility();\n      this.setGeometryAccessibilityAttributes();\n      this.setGeometryAriaLabels();\n      this.drawLegendElements();\n      this.drawDataLabels();\n      this.drawSeriesLabels();\n      this.addStrokeUnder();\n      this.drawReferenceLines();\n      this.setSelectedClass();\n      this.updateCursor();\n      this.bindInteractivity();\n      this.bindLegendInteractivity();\n      this.setLegendCursor();\n      this.drawXAxis();\n      this.setXAxisAccessibility();\n      this.drawYAxis();\n      this.setYAxisAccessibility();\n      this.drawBaseline();\n      this.drawAnnotations();\n      this.setAnnotationAccessibility();\n      hideNonessentialGroups(this.root.node(), this.dotG.node());\n      this.setGroupAccessibilityID();\n      this.onChangeHandler();\n      this.defaults = false;\n      resolve('component did load');\n    }).then(() => this.initialLoadEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  componentDidUpdate() {\n    return new Promise(resolve => {\n      this.duration = !this.animationConfig || !this.animationConfig.disabled ? 750 : 0;\n      if (this.shouldUpdateDescriptionWrapper) {\n        this.setChartDescriptionWrapper();\n        this.shouldUpdateDescriptionWrapper = false;\n      }\n      if (this.shouldSetChartAccessibilityCount) {\n        this.setChartCountAccessibility();\n        this.shouldSetChartAccessibilityCount = false;\n      }\n      if (this.shouldSetChartAccessibilityTitle) {\n        this.setChartAccessibilityTitle();\n        this.shouldSetChartAccessibilityTitle = false;\n      }\n      if (this.shouldSetChartAccessibilitySubtitle) {\n        this.setChartAccessibilitySubtitle();\n        this.shouldSetChartAccessibilitySubtitle = false;\n      }\n      if (this.shouldSetChartAccessibilityLongDescription) {\n        this.setChartAccessibilityLongDescription();\n        this.shouldSetChartAccessibilityLongDescription = false;\n      }\n      if (this.shouldSetChartAccessibilityExecutiveSummary) {\n        this.setChartAccessibilityExecutiveSummary();\n        this.shouldSetChartAccessibilityExecutiveSummary = false;\n      }\n      if (this.shouldSetChartAccessibilityPurpose) {\n        this.setChartAccessibilityPurpose();\n        this.shouldSetChartAccessibilityPurpose = false;\n      }\n      if (this.shouldSetChartAccessibilityContext) {\n        this.setChartAccessibilityContext();\n        this.shouldSetChartAccessibilityContext = false;\n      }\n      if (this.shouldSetChartAccessibilityStatisticalNotes) {\n        this.setChartAccessibilityStatisticalNotes();\n        this.shouldSetChartAccessibilityStatisticalNotes = false;\n      }\n      if (this.shouldSetChartAccessibilityStructureNotes) {\n        this.setChartAccessibilityStructureNotes();\n        this.shouldSetChartAccessibilityStructureNotes = false;\n      }\n      if (this.shouldSetParentSVGAccessibility) {\n        this.setParentSVGAccessibility();\n        this.shouldSetParentSVGAccessibility = false;\n      }\n      if (this.shouldResetRoot) {\n        this.reSetRoot();\n        this.shouldResetRoot = false;\n      }\n      if (this.shouldSetGlobalSelections) {\n        this.setGlobalSelections();\n        this.shouldSetGlobalSelections = false;\n      }\n      if (this.shouldSetTestingAttributes) {\n        this.setTestingAttributes();\n        this.shouldSetTestingAttributes = false;\n      }\n      if (this.shouldSetSubTitle) {\n        this.setSubTitleElements();\n        this.shouldSetSubTitle = false;\n      }\n      if (this.shouldUpdateXGrid) {\n        this.drawXGrid();\n        this.shouldUpdateXGrid = false;\n      }\n      if (this.shouldUpdateYGrid) {\n        this.drawYGrid();\n        this.shouldUpdateYGrid = false;\n      }\n      if (this.shouldEnterUpdateExit) {\n        this.enterLines();\n        this.updateLines();\n        this.exitLines();\n        this.enterPoints();\n        this.updatePoints();\n        this.exitPoints();\n        this.enterSeriesLabels();\n        this.updateSeriesLabels();\n        this.exitSeriesLabels();\n        this.enterDataLabels();\n        this.updateDataLabels();\n        this.exitDataLabels();\n        this.shouldEnterUpdateExit = false;\n      }\n      if (this.shouldUpdateLines) {\n        this.drawLines();\n        this.shouldUpdateLines = false;\n      }\n      if (this.shouldUpdatePoints) {\n        this.drawPoints();\n        this.shouldUpdatePoints = false;\n      }\n      if (this.shouldSetGeometryAccessibilityAttributes) {\n        this.setGeometryAccessibilityAttributes();\n        this.shouldSetGeometryAccessibilityAttributes = false;\n      }\n      if (this.shouldSetGeometryAriaLabels) {\n        this.setGeometryAriaLabels();\n        this.shouldSetGeometryAriaLabels = false;\n      }\n      if (this.shouldSetGroupAccessibilityLabel) {\n        this.setGroupAccessibilityID();\n        this.shouldSetGroupAccessibilityLabel = false;\n      }\n      if (this.shouldUpdateColors) {\n        this.updateColors();\n        this.shouldUpdateColors = false;\n      }\n      if (this.shouldUpdateLegend) {\n        this.drawLegendElements();\n        this.shouldUpdateLegend = false;\n      }\n      if (this.shouldUpdateLabels) {\n        this.drawDataLabels();\n        this.shouldUpdateLabels = false;\n      }\n      if (this.shouldUpdateSeriesLabels) {\n        this.drawSeriesLabels();\n        this.shouldUpdateSeriesLabels = false;\n      }\n      if (this.addStrokeUnder) {\n        this.addStrokeUnder();\n        this.shouldAddStrokeUnder = false;\n      }\n      if (this.shouldUpdateReferenceLines) {\n        this.drawReferenceLines();\n        this.shouldUpdateReferenceLines = false;\n      }\n      if (this.shouldUpdateStrokeWidth) {\n        this.updateStrokeWidth();\n        this.shouldUpdateStrokeWidth = false;\n      }\n      if (this.shouldUpdateDotRadius) {\n        this.updateDotRadius();\n        this.shouldUpdateDotRadius = false;\n      }\n      if (this.shouldDrawInteractionState) {\n        this.updateInteractionState();\n        this.shouldDrawInteractionState = false;\n      }\n      if (this.shouldUpdateDashPatterns) {\n        this.updateStrokePattern();\n        this.shouldUpdateDashPatterns = false;\n      }\n      if (this.shouldSetLabelOpacity) {\n        this.setLabelOpacity();\n        this.shouldSetLabelOpacity = false;\n      }\n      if (this.shouldSetSeriesLabelOpacity) {\n        this.setSeriesLabelOpacity();\n        this.shouldSetSeriesLabelOpacity = false;\n      }\n      if (this.shouldSetSelectionClass) {\n        this.setSelectedClass();\n        this.shouldSetSelectionClass = false;\n      }\n      if (this.shouldUpdateLegendInteractivity) {\n        this.bindLegendInteractivity();\n        this.shouldUpdateLegendInteractivity = false;\n      }\n      if (this.shouldSetLegendCursor) {\n        this.setLegendCursor();\n        this.shouldSetLegendCursor = false;\n      }\n      if (this.shouldUpdateCursor) {\n        this.updateCursor();\n        this.shouldUpdateCursor = false;\n      }\n      if (this.shouldBindInteractivity) {\n        this.bindInteractivity();\n        this.shouldBindInteractivity = false;\n      }\n      if (this.shouldUpdateXAxis) {\n        this.drawXAxis();\n        this.shouldUpdateXAxis = false;\n      }\n      if (this.shouldSetXAxisAccessibility) {\n        this.setXAxisAccessibility();\n        this.shouldSetXAxisAccessibility = false;\n      }\n      if (this.shouldUpdateYAxis) {\n        this.drawYAxis();\n        this.shouldUpdateYAxis = false;\n      }\n      if (this.shouldSetYAxisAccessibility) {\n        this.setYAxisAccessibility();\n        this.shouldSetYAxisAccessibility = false;\n      }\n      if (this.shouldUpdateAnnotations) {\n        this.drawAnnotations();\n        this.shouldUpdateAnnotations = false;\n      }\n      if (this.shouldSetAnnotationAccessibility) {\n        this.setAnnotationAccessibility();\n        this.shouldSetAnnotationAccessibility = false;\n      }\n      if (this.shouldUpdateBaseline) {\n        this.drawBaseline();\n        this.shouldUpdateBaseline = false;\n      }\n      this.onChangeHandler();\n      resolve('component did update');\n    }).then(() => this.drawEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  shouldValidateLocalizationProps() {\n    const windowInstances = getGlobalInstances();\n    const languageString = windowInstances.i18Next.language;\n    const languageObject = windowInstances.i18Next.getResourceBundle(languageString);\n    const numeralObject = windowInstances.numeral.localeData();\n    if (this.shouldValidateLocalization && !this.localization.skipValidation) {\n      this.shouldValidateLocalization = false;\n      validateLocalizationProps(this.chartID, {\n        ...this.localization,\n        language: languageObject,\n        numeralLocale: numeralObject\n      });\n    }\n  }\n\n  shouldValidateAccessibilityProps() {\n    if (this.shouldValidateAccessibility && !this.accessibility.disableValidation) {\n      this.shouldValidateAccessibility = false;\n      validateAccessibilityProps(\n        this.chartID,\n        { ...this.accessibility },\n        {\n          annotations: this.annotations,\n          data: this.data,\n          uniqueID: this.uniqueID,\n          context: {\n            mainTitle: this.mainTitle,\n            onClickEvent: this.suppressEvents ? undefined : this.clickEvent.emit\n          }\n        }\n      );\n    }\n  }\n\n  setDimensions() {\n    this.padding = typeof this.padding === 'string' ? getPadding(this.padding) : this.padding;\n    this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n    this.innerWidth = this.width - this.margin.left - this.margin.right;\n\n    this.innerPaddedHeight = this.innerHeight - this.padding.top - this.padding.bottom;\n    this.innerPaddedWidth = this.innerWidth - this.padding.left - this.padding.right;\n  }\n\n  validateInteractionKeys() {\n    this.innerInteractionKeys =\n      this.interactionKeys && this.interactionKeys.length ? this.interactionKeys : [this.seriesAccessor];\n\n    this.seriesInteraction =\n      this.innerInteractionKeys.length === 1 && this.innerInteractionKeys[0] === this.seriesAccessor;\n  }\n\n  validateDataLabelAccessor() {\n    this.innerLabelAccessor = this.dataLabel.labelAccessor ? this.dataLabel.labelAccessor : this.valueAccessor;\n  }\n\n  getLanguageString() {\n    return getActiveLanguageString(this.localization);\n  }\n\n  setLocalizationConfig() {\n    configLocalization(this.localization);\n  }\n\n  prepareScales() {\n    if (this.nest) {\n      this.interpolating = this.nest;\n      const oldXDomain = this.x.domain();\n      const oldXRange = this.x.range();\n      const oldYDomain = this.y.domain();\n      const oldYRange = this.y.range();\n      this.interpolating.x = this.x.domain(oldXDomain).range(oldXRange);\n      this.interpolating.y = scaleLinear()\n        .domain(oldYDomain)\n        .range(oldYRange);\n      this.interpolating.line = line()\n        .x(d => this.interpolating.x(d[this.ordinalAccessor]))\n        .y(d => this.interpolating.y(d[this.valueAccessor]))\n        .curve(this.curveOptions[this.lineCurve] || this.curveOptions['linear']);\n      this.interpolating.map = this.map;\n    }\n\n    const minValue = min(this.data, d => parseFloat(d[this.valueAccessor]));\n    const maxValue = max(this.data, d => parseFloat(d[this.valueAccessor]));\n\n    this.y = scaleLinear()\n      .domain([\n        this.minValueOverride || this.minValueOverride === 0\n          ? this.minValueOverride\n          : minValue - (maxValue - minValue) * 0.1,\n        this.maxValueOverride || this.maxValueOverride === 0\n          ? this.maxValueOverride\n          : maxValue + (maxValue - minValue) * 0.1\n      ])\n      .range([this.innerPaddedHeight, 0]);\n\n    // set xAxis scale : date\n    let xDomainUnique = [];\n    if (this.data[0][this.ordinalAccessor] instanceof Date) {\n      const maxDate = max(this.data, d => d[this.ordinalAccessor]);\n      const minDate = min(this.data, d => d[this.ordinalAccessor]);\n      const timeDiffInMilliseconds = timeMillisecond.count(minDate, maxDate);\n      const genericTimePadding = timeDiffInMilliseconds / 12;\n\n      this.x = scaleTime()\n        .domain([minDate, maxDate])\n        .range([0, this.innerPaddedWidth]);\n\n      // need a unique listing of all times provided for data-index attribute\n      xDomainUnique = this.data\n        .map(d => d[this.ordinalAccessor].getTime())\n        .filter((x, i, a) => a.indexOf(x) === i)\n        .sort((a, b) => a - b);\n\n      if (this.xAxis.unit) {\n        const timeTool = this.time['time' + this.xAxis.unit];\n        this.x.domain([timeTool.offset(minDate, -1), timeTool.offset(maxDate, +1)]);\n      } else {\n        this.x.domain([\n          new Date(timeMillisecond.offset(minDate, -genericTimePadding)),\n          new Date(timeMillisecond.offset(maxDate, genericTimePadding))\n        ]);\n      }\n    } else {\n      // set xAxis scale : ordinal value\n      this.x = scalePoint()\n        .domain(this.data.map(d => d[this.ordinalAccessor]))\n        .padding(0.5)\n        .range([0, this.innerPaddedWidth]);\n\n      // need a unique listing of all ordinal values for data-index attribute\n      xDomainUnique = this.data.map(d => d[this.ordinalAccessor]).filter((x, i, a) => a.indexOf(x) === i);\n    }\n\n    // this scale is used to derive the data-index based on scale result\n    this.xIndex = scalePoint()\n      .domain(xDomainUnique)\n      .range([0, xDomainUnique.length - 1]);\n\n    this.line = line()\n      .defined(d => !isNaN(d[this.valueAccessor]) && d[this.valueAccessor] !== null)\n      .x(d => this.x(d[this.ordinalAccessor]))\n      .y(d => this.y(d[this.valueAccessor]))\n      .curve(this.curveOptions[this.lineCurve] || this.curveOptions['linear']);\n  }\n\n  prepareData() {\n    const filteredData = this.data.filter(d => {\n      const hashObject = this.hiddenHash[`${d[this.ordinalAccessor]}-${d[this.seriesAccessor] || 'b'}`];\n      if (\n        hashObject &&\n        (this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly) &&\n        !d['enter'] &&\n        !d['exit']\n      ) {\n        d['hidden'] = hashObject['data-label-hidden'];\n        d['auto-x'] = hashObject.x;\n        d['auto-y'] = hashObject.y;\n        d['auto-text-anchor'] = hashObject['text-anchor'];\n      }\n      return !isNaN(d[this.valueAccessor]) && d[this.valueAccessor] !== null;\n    });\n\n    this.nest = nest()\n      .key(d => d[this.seriesAccessor])\n      .entries(this.data);\n\n    this.dotNest = nest()\n      .key(d => d[this.seriesAccessor])\n      .entries(filteredData);\n\n    this.map = nest()\n      .key(d => d[this.seriesAccessor])\n      .map(filteredData);\n  }\n\n  prepareLabelData() {\n    if (this.nest) {\n      let minArray = [];\n      let maxArray = [];\n      let firstArray = [];\n      let lastArray = [];\n\n      this.nest.forEach(item => {\n        const values = item.values;\n        // min\n        const minIdx = minIndex(values, d => d[this.valueAccessor]);\n        const minItem = values[minIdx];\n        // max\n        const maxIdx = maxIndex(values, d => d[this.valueAccessor]);\n        const maxItem = values[maxIdx];\n        // first\n        const firstItem = values.find(val => val[this.valueAccessor] != null);\n        // last\n        const lastItem = [...values].reverse().find(val => val[this.valueAccessor] != null);\n\n        // array creation with tracked items\n        minArray.push(minItem);\n        maxArray.push(maxItem);\n        firstArray.push(firstItem);\n        lastArray.push(lastItem);\n      });\n\n      this.displayOnlyLabelData = {\n        first: firstArray,\n        last: lastArray,\n        min: minArray,\n        max: maxArray\n      };\n    }\n  }\n\n  updateInterpolationData() {\n    if (this.interpolating) {\n      // for interpolating, we have to do this twice now, for dotNest and Nest\n      this.dotNest.forEach(parent => {\n        parent.interpolate = {};\n\n        const left = this.interpolating.map.get(parent.key);\n        const right = parent.values;\n\n        if (!left) {\n          parent.interpolate.start = right;\n          parent.interpolate.end = right;\n        } else {\n          const resolved = resolveLines(left, right, this.ordinalAccessor);\n          if (!resolved.length) {\n            parent.interpolate.start = left;\n            parent.interpolate.end = right;\n          } else {\n            parent.interpolate.start = resolved[0];\n            parent.interpolate.end = resolved[1];\n          }\n        }\n      });\n\n      // original nest interpolation before the creation of dotNest\n      let change = this.nest.length;\n      this.nest.forEach(parent => {\n        parent.interpolate = {};\n\n        const left = this.interpolating.map.get(parent.key);\n        const right = parent.values;\n\n        if (!left) {\n          parent.interpolate.start = right;\n          parent.interpolate.end = right;\n        } else {\n          const resolved = resolveLines(left, right, this.ordinalAccessor);\n          if (!resolved.length) {\n            parent.interpolate.start = left;\n            parent.interpolate.end = right;\n            change--;\n          } else {\n            parent.interpolate.start = resolved[0];\n            parent.interpolate.end = resolved[1];\n          }\n        }\n      });\n      if (!change && this.nest.length === this.interpolating.length) {\n        this.interpolating = false;\n      }\n    }\n  }\n\n  setSubTitleElements() {\n    setSubTitle({\n      root: this.subTitleG,\n      subTitle: this.subTitle\n    });\n  }\n\n  setColors() {\n    this.rawColors = this.colors ? convertVisaColor(this.colors) : getColors(this.colorPalette, this.nest.length);\n    this.textColors = {};\n    let adjustedColors = this.rawColors;\n    this.strokes = {};\n    if (!this.accessibility.hideStrokes) {\n      adjustedColors = [];\n    }\n    this.rawColors.forEach(color => {\n      if (!this.accessibility.hideStrokes) {\n        const strokes = getAccessibleStrokes(color);\n        const adjusted = strokes.length === 2 ? strokes[1] : strokes[0];\n        this.strokes[color.toLowerCase()] = adjusted;\n        adjustedColors.push(adjusted);\n      }\n      this.textColors[color.toLowerCase()] = ensureTextContrast(color, '#ffffff', 4.5);\n    });\n    if (this.hoverStyle && this.hoverStyle.color) {\n      if (!this.accessibility.hideStrokes) {\n        const strokes = getAccessibleStrokes(this.hoverStyle.color);\n        const adjusted = strokes.length === 2 ? strokes[1] : strokes[0];\n        this.strokes[this.hoverStyle.color.toLowerCase()] = adjusted;\n      }\n      this.textColors[this.hoverStyle.color.toLowerCase()] = ensureTextContrast(this.hoverStyle.color, '#ffffff', 4.5);\n    }\n    if (this.clickStyle && this.clickStyle.color) {\n      if (!this.accessibility.hideStrokes) {\n        const strokes = getAccessibleStrokes(this.clickStyle.color);\n        const adjusted = strokes.length === 2 ? strokes[1] : strokes[0];\n        this.strokes[this.clickStyle.color.toLowerCase()] = adjusted;\n      }\n      this.textColors[this.clickStyle.color.toLowerCase()] = ensureTextContrast(this.clickStyle.color, '#ffffff', 4.5);\n    }\n    this.colorArr = adjustedColors;\n  }\n\n  innerScopeDataKeys() {\n    // generate scoped and formatted data for data-table component\n    // we also scope singleAccessor array in chartAccessors based on what is actually in the data\n    const innerChartSingleAccessors = [];\n    chartAccessors.singleAccessors.forEach(accessor => {\n      if (this[accessor] && min(this.data, d => d[this[accessor]]) !== undefined) {\n        innerChartSingleAccessors.push(accessor);\n      }\n    });\n    const innerChartAccessors = { ...chartAccessors, singleAccessors: innerChartSingleAccessors };\n    return scopeDataKeys(this, innerChartAccessors, 'line-chart');\n  }\n\n  setTableData() {\n    const keys = this.innerScopeDataKeys();\n\n    this.tableData = getScopedData(this.data, keys);\n    this.tableColumns = Object.keys(keys);\n  }\n\n  addStrokeUnder() {\n    const filter = createTextStrokeFilter({\n      root: this.svg.node(),\n      id: this.chartID,\n      color: '#ffffff'\n    });\n    this.labels.attr('filter', filter);\n    this.seriesLabelG.attr('filter', filter);\n  }\n\n  // reset graph size based on window size\n  renderRootElements() {\n    this.svg = select(this.lineChartEl)\n      .select('.visa-viz-d3-line-container')\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    this.root = this.svg.append('g').attr('id', 'visa-viz-margin-container-g-' + this.chartID);\n    this.rootG = this.root.append('g').attr('id', 'visa-viz-padding-container-g-' + this.chartID);\n\n    this.gridG = this.rootG.append('g').attr('class', 'grid-group');\n\n    // this.lineG = this.rootG.select('.line-wrapper-group');\n    this.lineG = this.rootG.append('g').attr('class', 'line-group line-wrapper-group');\n    this.seriesLabelG = this.rootG.append('g').attr('class', 'line-series-wrapper');\n    this.dotG = this.rootG.append('g').attr('class', 'dot-group');\n\n    this.labels = this.rootG.append('g').attr('class', 'line-dataLabel-group');\n    this.legendG = select(this.lineChartEl)\n      .select('.line-legend')\n      .append('svg');\n\n    this.subTitleG = select(this.lineChartEl).select('.line-sub-title');\n    this.tooltipG = select(this.lineChartEl).select('.line-tooltip');\n    this.referencesG = this.rootG.append('g').attr('class', 'line-reference-line-group');\n  }\n\n  reSetRoot() {\n    const changeSvg = prepareRenderChange({\n      selection: this.svg,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeSvg\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    const changeRoot = prepareRenderChange({\n      selection: this.root,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRoot.attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n\n    const changeRootG = prepareRenderChange({\n      selection: this.rootG,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRootG.attr('transform', `translate(${this.padding.left}, ${this.padding.top})`);\n\n    setAccessibilityDescriptionWidth(this.chartID, this.width);\n  }\n\n  setGlobalSelections() {\n    const dataBoundToLines = this.lineG.selectAll('.line-plot').data(this.nest, d => d.key);\n    this.enter = dataBoundToLines.enter().append('path');\n    this.exit = dataBoundToLines.exit();\n    this.update = dataBoundToLines.merge(this.enter);\n    this.enterSize = this.enter.size();\n\n    const dataBoundToDotWrappers = this.dotG.selectAll('.line-dot-wrapper').data(this.dotNest, d => d.key);\n    this.enterDotWrappers = dataBoundToDotWrappers.enter().append('g');\n    this.exitDotWrappers = dataBoundToDotWrappers.exit();\n    this.updateDotWrappers = dataBoundToDotWrappers.merge(this.enterDotWrappers);\n\n    const dataBountToSeriesLabels = this.seriesLabelG.selectAll('.line-series-label').data(this.dotNest, d => d.key);\n    this.seriesLabelEnter = dataBountToSeriesLabels.enter().append('text');\n    this.seriesLabelExit = dataBountToSeriesLabels.exit();\n    this.seriesLabelUpdate = dataBountToSeriesLabels.merge(this.seriesLabelEnter);\n\n    const dataBoundToLabels = this.labels.selectAll('g').data(this.dotNest, d => d.key);\n    this.enteringLabelGroups = dataBoundToLabels.enter().append('g');\n    this.exitingLabelGroups = dataBoundToLabels.exit();\n    this.updatingLabelGroups = dataBoundToLabels.merge(this.enteringLabelGroups);\n\n    if (this.interpolating) {\n      this.updateDotWrappers.selectAll('circle').remove();\n      const dataBoundToDots = this.updateDotWrappers.selectAll('circle').data(d => d.interpolate.start);\n      this.enterDots = dataBoundToDots.enter().append('circle');\n      this.exitDots = dataBoundToDots.exit();\n      this.updateDots = dataBoundToDots.merge(this.enterDots);\n      // this.updateDots = this.updateDotWrappers.selectAll('circle').data(d => d.interpolate.end);\n\n      this.updatingLabelGroups.selectAll('.line-dataLabel').remove();\n      const dataBoundToLabelChildren = this.updatingLabelGroups\n        .selectAll('.line-dataLabel')\n        .data(d => d.interpolate.start);\n\n      this.enteringLabels = dataBoundToLabelChildren.enter().append('text');\n      this.exitingLabels = dataBoundToLabelChildren.exit();\n      this.updatingLabels = dataBoundToLabelChildren.merge(this.enteringLabels);\n      // this.updatingLabels = this.updatingLabelGroups.selectAll('.line-dataLabel').data(d => d.interpolate.end);\n    } else {\n      const dataBoundToDots = this.updateDotWrappers\n        .selectAll('circle')\n        .data(d => d.values, d => d[this.ordinalAccessor]);\n\n      this.enterDots = dataBoundToDots.enter().append('circle');\n      this.exitDots = dataBoundToDots.exit();\n      this.updateDots = dataBoundToDots.merge(this.enterDots);\n\n      this.enterSize = this.enterDots.size();\n      this.exitSize = this.exitDots.size();\n\n      const dataBoundToLabelChildren = this.updatingLabelGroups\n        .selectAll('.line-dataLabel')\n        .data(d => d.values, d => d[this.ordinalAccessor]);\n\n      this.enteringLabels = dataBoundToLabelChildren.enter().append('text');\n      this.exitingLabels = dataBoundToLabelChildren.exit();\n      this.updatingLabels = dataBoundToLabelChildren.merge(this.enteringLabels);\n    }\n  }\n\n  setTestingAttributes() {\n    if (this.unitTest) {\n      select(this.lineChartEl)\n        .select('.visa-viz-d3-line-container')\n        .attr('data-testid', 'chart-container');\n      select(this.lineChartEl)\n        .select('.line-main-title')\n        .attr('data-testid', 'main-title');\n      select(this.lineChartEl)\n        .select('.line-sub-title')\n        .attr('data-testid', 'sub-title');\n      this.svg.attr('data-testid', 'root-svg');\n      this.root.attr('data-testid', 'margin-container');\n      this.rootG.attr('data-testid', 'padding-container');\n      this.legendG.attr('data-testid', 'legend-container');\n      this.tooltipG.attr('data-testid', 'tooltip-container');\n      this.gridG.attr('data-testid', 'grid-group');\n\n      this.referencesG.attr('data-testid', 'reference-line-group');\n\n      // add test attributes to lines and series labels\n      this.lineG.attr('data-testid', 'line-group');\n      this.update.attr('data-testid', 'line').attr('data-id', d => `line-${d.key}`);\n      this.seriesLabelG.attr('data-testid', 'line-series-label-container');\n      this.seriesLabelUpdate\n        .attr('data-testid', 'line-series-label')\n        .attr('data-id', d => `line-series-label-${d.key}`);\n\n      // add test atttributes to line colors\n      this.dotG.attr('data-testid', 'marker-group');\n      this.updateDotWrappers.attr('data-testid', 'marker-series-group').attr('data-id', d => `marker-series-${d.key}`);\n      this.updateDots\n        .attr('data-testid', 'marker')\n        .attr('data-id', d => `marker-${d[this.seriesAccessor]}-${d[this.ordinalAccessor]}`);\n\n      // add test attributes to labels\n      this.labels.attr('data-testid', 'dataLabel-group-container');\n      this.updatingLabelGroups.attr('data-testid', 'dataLabel-group').attr('data-id', d => `dataLabel-group-${d.key}`);\n      this.updatingLabels\n        .attr('data-testid', 'dataLabel')\n        .attr('data-id', d => `dataLabel-${d[this.seriesAccessor]}-${d[this.ordinalAccessor]}`);\n\n      this.svg.select('defs').attr('data-testid', 'pattern-defs');\n    } else {\n      select(this.lineChartEl)\n        .select('.visa-viz-d3-line-container')\n        .attr('data-testid', null);\n      select(this.lineChartEl)\n        .select('.line-main-title')\n        .attr('data-testid', null);\n      select(this.lineChartEl)\n        .select('.line-sub-title')\n        .attr('data-testid', null);\n      this.svg.attr('data-testid', null);\n      this.root.attr('data-testid', null);\n      this.rootG.attr('data-testid', null);\n      this.legendG.attr('data-testid', null);\n      this.tooltipG.attr('data-testid', null);\n      this.gridG.attr('data-testid', null);\n\n      this.referencesG.attr('data-testid', null);\n\n      // add test attributes to lines and series labels\n      this.lineG.attr('data-testid', null);\n      this.update.attr('data-testid', null).attr('data-id', null);\n      this.seriesLabelG.attr('data-testid', null);\n      this.seriesLabelUpdate.attr('data-testid', null).attr('data-id', null);\n\n      // add test atttributes to line colors\n      this.dotG.attr('data-testid', null);\n      this.updateDotWrappers.attr('data-testid', null).attr('data-id', null);\n      this.updateDots.attr('data-testid', null).attr('data-id', null);\n\n      // add test attributes to labels\n      this.labels.attr('data-testid', null);\n      this.updatingLabelGroups.attr('data-testid', null).attr('data-id', null);\n      this.updatingLabels.attr('data-testid', null).attr('data-id', null);\n\n      this.svg.select('defs').attr('data-testid', null);\n    }\n  }\n\n  drawXAxis() {\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.ordinalAccessor]\n        ? this.dataKeyNames[this.ordinalAccessor]\n        : this.xAxis.label;\n\n    const bandWidth = (this.innerPaddedWidth / this.nest[0].values.length) * 0.7;\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.x,\n      left: false,\n      wrapLabel: this.wrapLabel ? bandWidth : '',\n      dateFormat: this.xAxis.format,\n      format: this.xAxis.format,\n      tickInterval: this.xAxis.tickInterval,\n      label: axisLabel, // this.xAxis.label,\n      padding: this.padding,\n      hide: !this.xAxis.visible,\n      duration: this.duration\n    });\n  }\n\n  drawYAxis() {\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.valueAccessor]\n        ? this.dataKeyNames[this.valueAccessor]\n        : this.yAxis.label;\n\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.y,\n      left: true,\n      wrapLabel: this.wrapLabel ? this.padding.left : '',\n      format: this.yAxis.format,\n      tickInterval: this.yAxis.tickInterval,\n      label: axisLabel, // this.yAxis.label,\n      padding: this.padding,\n      hide: !this.yAxis.visible,\n      duration: this.duration\n    });\n  }\n\n  setXAxisAccessibility() {\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.ordinalAccessor]\n        ? this.dataKeyNames[this.ordinalAccessor]\n        : this.xAxis.label;\n\n    setAccessXAxis({\n      rootEle: this.lineChartEl,\n      hasXAxis: this.xAxis ? this.xAxis.visible : false,\n      xAxis: this.x,\n      xAxisLabel: axisLabel ? axisLabel : ''\n    });\n  }\n\n  setYAxisAccessibility() {\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.valueAccessor]\n        ? this.dataKeyNames[this.valueAccessor]\n        : this.yAxis.label;\n\n    setAccessYAxis({\n      rootEle: this.lineChartEl,\n      hasYAxis: this.yAxis ? this.yAxis.visible : false,\n      yAxis: this.y,\n      yAxisLabel: axisLabel ? axisLabel : ''\n    });\n  }\n\n  drawBaseline() {\n    drawAxis({\n      root: this.gridG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.x,\n      left: false,\n      padding: this.padding,\n      markOffset: this.y(0) || -1,\n      hide: !this.showBaselineX,\n      duration: this.duration\n    });\n  }\n\n  // dashed line grid for chart\n  drawXGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.x,\n      false,\n      !this.xAxis.gridVisible,\n      this.xAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  drawYGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.y,\n      true,\n      !this.yAxis.gridVisible,\n      this.yAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  enterLines() {\n    this.enter.interrupt();\n\n    this.enter\n      .attr('class', 'line-plot entering')\n      .attr('d', d => this.line(d.values))\n      .attr('data-d', d => this.line(d.values))\n      .attr('data-translate-x', this.margin.left + this.padding.left);\n\n    this.enter\n      .attr('cursor', !this.suppressEvents && this.seriesInteraction ? this.cursor : null)\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onHoverHandler(d.values[0], n[i], false);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents && this.seriesInteraction ? () => this.onMouseOutHandler() : null)\n      .attr('stroke-dasharray', (d, i, n) => {\n        d.linelength = n[i].getTotalLength();\n        return d.linelength + ' ' + d.linelength;\n      })\n      .attr('stroke-dashoffset', d => d.linelength)\n      .attr('stroke-width', 0.1)\n      .transition('enter')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('stroke-dashoffset', 0)\n      .attr('stroke-width', d => this.calculateStrokeWidth(d, true))\n      .call(transitionEndAll, () => {\n        this.enter.attr('stroke-dasharray', this.handleStrokeDasharray);\n      });\n  }\n\n  updateLines() {\n    this.update.interrupt();\n\n    this.update\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', d => {\n        // check if interactionKeys includes seriesAccessor, if not then hide lines\n        const lineOpacity = this.secondaryLines.keys.includes(d.key) ? this.secondaryLines.opacity : 1;\n        if (!this.seriesInteraction) {\n          return lineOpacity;\n        } else if (this.secondaryLines.keys.includes(d.key)) {\n          return checkInteraction(\n            d.values[0],\n            this.secondaryLines.opacity,\n            Math.min(this.secondaryLines.opacity, this.hoverOpacity),\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        } else {\n          return checkInteraction(\n            d.values[0], // use first data point of each line to decide interaction highlight\n            lineOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        }\n      });\n  }\n\n  exitLines() {\n    this.exit\n      .attr('stroke-dasharray', (d, i, n) => {\n        d.linelength = n[i].getTotalLength();\n        return d.linelength + ' ' + d.linelength;\n      })\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', 0)\n      .attr('stroke-dashoffset', d => d.linelength)\n      .attr('stroke-width', 0.1)\n      .remove();\n  }\n  // lines based on data\n  drawLines() {\n    if (this.interpolating) {\n      this.update.attr('d', (d, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          return this.line(d.values);\n        }\n        return this.interpolating.line(d.interpolate.start);\n      });\n    }\n\n    this.update\n      .attr('stroke', this.handleLineStroke)\n      .attr('fill', 'none')\n      .attr('data-d', d => (this.interpolating ? this.line(d.interpolate.end) : this.line(d.values)))\n      .attr('data-translate-x', this.margin.left + this.padding.left)\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('d', d => (this.interpolating ? this.line(d.interpolate.end) : this.line(d.values)))\n      .call(transitionEndAll, () => {\n        this.update\n          .classed('entering', false)\n          .attr('d', d => this.line(d.values))\n          .attr('stroke-dasharray', this.handleStrokeDasharray);\n      });\n  }\n\n  enterPoints() {\n    this.enterDotWrappers.interrupt();\n    this.enterDots.interrupt();\n\n    this.enterDotWrappers\n      .attr('class', 'line-dot-wrapper')\n      .attr('fill', (_, i) => this.rawColors[i] || this.rawColors[0])\n      // bind interactivity for keyboard nav if series interactivity is enabled\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onHoverHandler(d.values[0], n[i], false);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents && this.seriesInteraction ? () => this.onMouseOutHandler() : null)\n      .each((_, i, n) => {\n        // we bind accessible interactivity and semantics here (role, tabindex, etc)\n        initializeElementAccess(n[i]);\n      });\n\n    this.enterDots\n      .each((_d, i, n) => {\n        initializeElementAccess(n[i]);\n      })\n      .attr('stroke', this.handleDotStroke)\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .attr('data-fill', true)\n      .attr('data-translate-x', this.margin.left + this.padding.left)\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i], true) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    if (this.interpolating) {\n      this.enterDots\n        .attr('cx', d => this.interpolating.x(d[this.ordinalAccessor]))\n        .attr('cy', d => this.interpolating.y(d[this.valueAccessor]))\n        .attr('r', d =>\n          d.enter\n            ? 0\n            : checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        );\n\n      this.enterDotWrappers\n        .selectAll('circle')\n        .attr('r', 0)\n        .attr('cx', d => this.x(d[this.ordinalAccessor]))\n        .attr('cy', d => this.y(d[this.valueAccessor]))\n        .classed('entering', true)\n        .attr('opacity', 0);\n    }\n    this.updateDotWrappers.order();\n    this.updateDots.order();\n  }\n\n  updatePoints() {\n    this.updateDotWrappers.interrupt();\n    this.updateDots.interrupt();\n\n    const dotOpacity = this.showDots ? 1 : 0;\n\n    this.updateDotWrappers.attr('opacity', d => {\n      const lineDotOpacity = this.secondaryLines.keys.includes(d.key) ? this.secondaryLines.opacity : 1;\n      return lineDotOpacity;\n    });\n\n    if (this.interpolating) {\n      this.updateDots.attr('opacity', d => {\n        this.exitSize += d.exit ? 1 : 0;\n        this.enterSize += d.enter ? 1 : 0;\n        return d.enter ? 0 : 1;\n      });\n\n      this.updateDots = this.updateDotWrappers\n        .selectAll('circle')\n        .data(d => d.interpolate.end)\n        .classed('exiting', d => d.exit);\n\n      this.updateDots\n        .transition('opacity')\n        .ease(easeCircleIn)\n        .duration((_, i, n) => {\n          if (select(n[i]).classed('entering')) {\n            return this.duration / 2;\n          }\n          return this.duration;\n        })\n        .delay((_, i, n) => {\n          if (select(n[i]).classed('entering')) {\n            return this.duration * 0.75 * (i / (n.length - 1));\n          }\n          return 0;\n        })\n        .attr('opacity', d => {\n          return checkInteraction(\n            d,\n            dotOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        })\n        .attr('data-index', d => {\n          return this.xIndex(\n            d[this.ordinalAccessor] instanceof Date ? d[this.ordinalAccessor].getTime() : d[this.ordinalAccessor]\n          );\n        });\n    } else {\n      this.updateDots\n        .transition('opacity')\n        .ease(easeCircleIn)\n        .duration(this.duration)\n        .attr('opacity', d => {\n          return checkInteraction(\n            d,\n            dotOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        })\n        .attr('data-index', d => {\n          return this.xIndex(\n            d[this.ordinalAccessor] instanceof Date ? d[this.ordinalAccessor].getTime() : d[this.ordinalAccessor]\n          );\n        });\n    }\n  }\n\n  exitPoints() {\n    this.exitDots.interrupt();\n\n    this.exitDots\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', 0)\n      .attr('r', 0);\n\n    this.exitDotWrappers\n      .selectAll('circle')\n      .each(d => {\n        d.exitWholeGroup = true;\n      })\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .delay((_, i, n) => {\n        return this.duration - this.duration * (i / (n.length - 1));\n      })\n      .attr('opacity', 0)\n      .attr('r', 0);\n\n    // this new transtition ensures that the chart counts and all labels\n    // correctly reflect the newest information\n    this.updateDots\n      .transition('accessibilityAfterExit')\n      .duration(this.duration / 2)\n      .delay((_, i, n) => {\n        return this.duration - this.duration * (i / (n.length - 1));\n      })\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        // before we exit geometries, we need to check if a focus exists or not\n        const focusDidExist = checkAccessFocus(this.rootG.node());\n        // then we must remove the exiting elements\n        this.exitDots.remove();\n        this.exitDotWrappers.remove();\n        this.svg.selectAll('.exiting').remove();\n        // updateDots/labels will keep references to the removed elements unless we reassign\n        this.updateDots = this.updateDotWrappers.selectAll('circle');\n        this.updatingLabels = this.updatingLabelGroups.selectAll('.line-dataLabel');\n        // then our util can count geometries\n        this.setChartCountAccessibility();\n        // our group's label should update with new counts too\n        this.setGroupAccessibilityID();\n        // since items exited, labels must receive updated values\n        this.setGeometryAriaLabels();\n        // and also make sure the user's focus isn't lost\n        retainAccessFocus({\n          parentGNode: this.rootG.node(),\n          focusDidExist\n          // recursive: true\n        });\n      });\n  }\n\n  // draw dots\n  drawPoints() {\n    // this.updateDots.interrupt();\n    this.updateDotWrappers\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.hoverHighlight || this.clickHighlight ? 0 : this.duration);\n    let updateTransition;\n    if (this.interpolating) {\n      updateTransition = this.updateDots\n        .attr('data-cx', d => this.x(d[this.ordinalAccessor]))\n        .attr('data-cy', d => this.y(d[this.valueAccessor]))\n        .attr('data-translate-x', this.padding.left + this.margin.left)\n        .attr('data-r', d =>\n          d.exit\n            ? 0\n            : checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        )\n        .transition('update')\n        .ease(easeCircleIn)\n        .duration((_, i, n) => {\n          if (select(n[i]).classed('entering')) {\n            return this.duration / 2;\n          }\n          return this.duration;\n        })\n        .delay((_, i, n) => {\n          if (select(n[i]).classed('entering')) {\n            return this.duration * 0.75 * (i / (n.length - 1));\n          }\n          return 0;\n        })\n        .attr('r', d =>\n          d.exit\n            ? 0\n            : checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        );\n    } else {\n      updateTransition = this.updateDots\n        .attr('r', d =>\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        )\n        .attr('data-cx', d => this.x(d[this.ordinalAccessor]))\n        .attr('data-cy', d => this.y(d[this.valueAccessor]))\n        .attr('data-translate-x', this.padding.left + this.margin.left)\n        .attr('data-r', d =>\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        )\n        .transition('update')\n        .ease(easeCircleIn)\n        .duration(this.duration);\n    }\n\n    this.updateDots.attr('stroke', this.handleDotStroke);\n    updateTransition\n      .attr('cx', d => this.x(d[this.ordinalAccessor]))\n      .attr('cy', d => this.y(d[this.valueAccessor]))\n      .call(transitionEndAll, () => {\n        this.updateDots.classed('entering', false).each(d => {\n          d.enter = false;\n        });\n        // we must make sure if geometries move, that our focus indicator does too\n        retainAccessFocus({\n          parentGNode: this.rootG.node()\n        });\n\n        // now we can emit the event that transitions are complete\n        this.transitionEndEvent.emit({ chartID: this.chartID });\n      });\n  }\n\n  updateStrokePattern() {\n    this.update.attr('stroke-dasharray', this.handleStrokeDasharray);\n  }\n\n  handleStrokeDasharray = (d, i) => {\n    return this.secondaryLines.keys.includes(d.key)\n      ? this.short\n      : !this.accessibility.hideTextures\n      ? this.dashPatterns[i]\n      : '';\n  };\n\n  updateDotRadius() {\n    this.updateDots\n      .each((d, i, n) => {\n        const me = select(n[i]);\n        if (!d.enter && !me.classed('entering') && !d.exit) {\n          me.attr('r', () =>\n            checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n              ? this.dotRadius +\n                (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n              : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n              ? this.dotRadius +\n                (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n              : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n              ? this.dotRadius + 0.5\n              : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n          );\n        }\n      })\n      .attr('stroke', this.handleDotStroke);\n  }\n  setSelectedClass() {\n    this.updateDots.classed('highlight', (d, i, n) => {\n      let selected = checkInteraction(d, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n      selected = this.clickHighlight && this.clickHighlight.length ? selected : false;\n      const selectable = this.accessibility.elementsAreInterface;\n      setElementInteractionAccessState(n[i], selected, selectable);\n      return selected;\n    });\n  }\n  // draw series label\n\n  validateSeriesLabels() {\n    this.labelDetails = { ...this.seriesLabel };\n    if (!this.labelDetails.placement) {\n      this.labelDetails.placement = '';\n    }\n    if (!this.labelDetails.label || !this.labelDetails.label.length) {\n      this.labelDetails.label = '';\n    }\n\n    this.isRight = this.labelDetails.placement !== 'left';\n  }\n\n  enterSeriesLabels() {\n    this.seriesLabelEnter.interrupt();\n\n    this.seriesLabelEnter\n      .attr('opacity', d => {\n        const seriesLabelOpacity = !this.seriesLabel.visible\n          ? 0\n          : this.secondaryLines.keys.includes(d.key) &&\n            (!this.secondaryLines.showSeriesLabel || this.secondaryLines.opacity < 1)\n          ? 0\n          : 1;\n        // check if interactionKeys includes seriesAccessor, if not then don't check seriesLabel for interaction\n        if (!this.seriesInteraction) {\n          return seriesLabelOpacity;\n        } else {\n          return checkInteraction(\n            d.values[0],\n            seriesLabelOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n            ? 0\n            : Number.EPSILON;\n        }\n      })\n      .attr('class', 'line-series-label')\n      .attr('cursor', !this.suppressEvents && this.seriesInteraction ? this.cursor : null)\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onHoverHandler(d.values[0], n[i], false);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents && this.seriesInteraction ? () => this.onMouseOutHandler() : null)\n      .attr('fill', this.handleSeriesTextFill)\n      .attr('x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n      .attr('y', d =>\n        this.isRight\n          ? this.y(d.values[d.values.length - 1][this.valueAccessor])\n          : this.y(d.values[0][this.valueAccessor])\n      )\n      .attr('text-anchor', this.isRight ? 'start' : 'end')\n      .attr('dx', this.isRight ? '0.1em' : '-0.1em')\n      .attr('dy', '0.3em');\n  }\n\n  updateSeriesLabels() {\n    this.seriesLabelUpdate.interrupt();\n\n    this.seriesLabelUpdate\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', d => {\n        const seriesLabelOpacity = !this.seriesLabel.visible\n          ? 0\n          : this.secondaryLines.keys.includes(d.key) &&\n            (!this.secondaryLines.showSeriesLabel || this.secondaryLines.opacity < 1)\n          ? 0\n          : 1;\n        // check if interactionKeys includes seriesAccessor, if not then don't check seriesLabel for interaction\n        if (!this.seriesInteraction) {\n          return seriesLabelOpacity;\n        } else {\n          return checkInteraction(\n            d.values[0],\n            seriesLabelOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n            ? 0\n            : 1;\n        }\n      });\n  }\n\n  exitSeriesLabels() {\n    this.seriesLabelExit\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  drawSeriesLabels() {\n    const hideOnly = this.labelDetails.placement !== 'auto' && this.labelDetails.collisionHideOnly;\n\n    this.seriesLabelUpdate.text((d, i) =>\n      this.secondaryLines.keys.includes(d.key) && !this.secondaryLines.showSeriesLabel\n        ? ''\n        : this.labelDetails.label\n        ? this.labelDetails.label[i]\n        : !d.key || d.key === 'undefined'\n        ? ''\n        : d.key\n    );\n\n    const seriesUpdate = this.seriesLabelUpdate\n      .style('visibility', (_, i, n) =>\n        this.labelDetails.placement === 'auto' || this.labelDetails.collisionHideOnly\n          ? select(n[i]).style('visibility')\n          : null\n      )\n      .attr('data-x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n      .attr('data-y', (d, i, n) => {\n        const textElement = n[i];\n        const style = getComputedStyle(textElement);\n        const fontSize = parseFloat(style.fontSize);\n        const textHeight = Math.max(fontSize - 1, 1); // clone.getBBox().height;\n\n        return this.isRight\n          ? this.y(d.values[d.values.length - 1][this.valueAccessor]) + 0.3 * textHeight\n          : this.y(d.values[0][this.valueAccessor]) + 0.3 * textHeight;\n      })\n      .attr('data-translate-x', this.padding.left + this.margin.left)\n      .attr('dx', this.isRight ? '0.1em' : '-0.1em')\n      .attr('dy', '0.3em')\n      // if we are re-running collision we need text-anchor for bounds calc, but don't want to actually adjust\n      // text via text-anchor attribute\n      .attr('data-text-anchor', this.isRight ? 'start' : 'end')\n      .attr('data-use-dx', hideOnly)\n      .attr('data-use-dy', hideOnly)\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration);\n\n    // if we keep this in here, we are assuming the last point will always be on the right of the chart\n    // it also adds about 8-9 ms per run to redraw this.update to canvas => bitmap\n    if (this.labelDetails.visible && (this.labelDetails.placement === 'auto' || this.labelDetails.collisionHideOnly)) {\n      this.bitmaps = resolveLabelCollision({\n        bitmaps: this.bitmaps,\n        labelSelection: seriesUpdate,\n        avoidMarks: [], // [this.updateDots], // this will link the series label to the last point in the line\n        validPositions: hideOnly ? ['middle'] : ['middle', 'top', 'bottom'],\n        offsets: hideOnly ? [1] : [1, 1, 1],\n        accessors: ['key'],\n        size: [roundTo(this.width, 0), roundTo(this.innerPaddedHeight, 0)],\n        hideOnly: this.labelDetails.visible && hideOnly\n      });\n\n      // if we are in hide only we need to add attributes back\n      if (hideOnly) {\n        seriesUpdate\n          .attr('text-anchor', this.isRight ? 'start' : 'end')\n          .attr('x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n          .attr('y', d =>\n            this.isRight\n              ? this.y(d.values[d.values.length - 1][this.valueAccessor])\n              : this.y(d.values[0][this.valueAccessor])\n          )\n          .attr('dx', this.isRight ? '0.1em' : '-0.1em')\n          .attr('dy', '0.3em');\n      }\n    } else {\n      seriesUpdate\n        .attr('text-anchor', this.isRight ? 'start' : 'end')\n        .attr('x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n        .attr('y', d =>\n          this.isRight\n            ? this.y(d.values[d.values.length - 1][this.valueAccessor])\n            : this.y(d.values[0][this.valueAccessor])\n        )\n        .attr('dx', this.isRight ? '0.1em' : '-0.1em')\n        .attr('dy', '0.3em');\n    }\n  }\n\n  enterDataLabels() {\n    this.enteringLabelGroups.interrupt();\n\n    this.enteringLabelGroups\n      .attr('class', 'line-label-wrapper')\n      .attr('opacity', 0)\n      .attr('fill', (_, i) => this.rawColors[i] || this.rawColors[0]);\n\n    this.enteringLabels.attr('fill', this.handleTextFill);\n\n    if (this.interpolating) {\n      const childrenEnter = this.enteringLabels.attr('class', 'line-dataLabel').attr('opacity', Number.EPSILON);\n\n      placeDataLabels({\n        root: childrenEnter,\n        xScale: this.interpolating.x,\n        yScale: this.interpolating.y,\n        ordinalAccessor: this.ordinalAccessor,\n        valueAccessor: this.valueAccessor,\n        placement: this.dataLabel.placement,\n        chartType: 'line'\n      });\n\n      this.updatingLabels.attr('opacity', d =>\n        d.enter\n          ? Number.EPSILON\n          : checkInteraction(\n              d,\n              checkLabelDisplayOnly(this.dataLabel.visible, this.dataLabel.displayOnly, d, this.displayOnlyLabelData, [\n                this.ordinalAccessor,\n                this.seriesAccessor\n              ]),\n              this.hoverOpacity,\n              this.hoverHighlight,\n              this.clickHighlight,\n              this.innerInteractionKeys\n            ) < 1\n          ? 0\n          : checkLabelDisplayOnly(this.dataLabel.visible, this.dataLabel.displayOnly, d, this.displayOnlyLabelData, [\n              this.ordinalAccessor,\n              this.seriesAccessor\n            ])\n      );\n\n      const fullEnter = this.enteringLabelGroups\n        .selectAll('.line-dataLabel')\n        .attr('opacity', Number.EPSILON)\n        .classed('entering', true);\n\n      placeDataLabels({\n        root: fullEnter,\n        xScale: this.x,\n        yScale: this.y,\n        ordinalAccessor: this.ordinalAccessor,\n        valueAccessor: this.valueAccessor,\n        placement: this.dataLabel.placement,\n        chartType: 'line'\n      });\n    } else {\n      const childrenEnter = this.enteringLabels.attr('opacity', Number.EPSILON).attr('class', 'line-dataLabel');\n\n      placeDataLabels({\n        root: childrenEnter,\n        xScale: this.x,\n        yScale: this.y,\n        ordinalAccessor: this.ordinalAccessor,\n        valueAccessor: this.valueAccessor,\n        placement: this.dataLabel.placement,\n        chartType: 'line'\n      });\n    }\n\n    // now we check whether we have auto collision to consider\n    if (this.dataLabel.placement === 'auto') {\n      this.updatingLabels.each((d, i, n) => {\n        // we check hash for each updated label, don't touch enter/exit/hidden stuff at all\n        if (\n          !d.enter &&\n          !d.exit &&\n          !d.hidden &&\n          (d['auto-x'] || d['auto-x'] === 0) &&\n          (d['auto-y'] || d['auto-y'] === 0)\n        ) {\n          select(n[i])\n            .attr('x', +select(n[i]).attr('x') + (+d['auto-x'] || 0))\n            .attr('y', +select(n[i]).attr('y') + (+d['auto-y'] || 0))\n            .attr('text-anchor', d['auto-text-anchor']);\n        }\n      });\n    }\n  }\n\n  updateDataLabels() {\n    this.updatingLabelGroups.interrupt('opacity');\n    this.updatingLabelGroups.attr('opacity', d => {\n      const labelOpacity = !this.dataLabel.visible\n        ? 0\n        : this.secondaryLines.keys.includes(d.key) &&\n          (!this.secondaryLines.showDataLabel || this.secondaryLines.opacity < 1)\n        ? 0\n        : 1;\n      return labelOpacity;\n    });\n\n    if (this.interpolating) {\n      this.updatingLabels = this.updatingLabelGroups\n        .selectAll('.line-dataLabel')\n        .data(d => d.interpolate.end)\n        .classed('exiting', d => d.exit);\n\n      this.updatingLabels\n        .transition('opacity')\n        .ease(easeCircleIn)\n        .duration((_, i, n) => {\n          if (select(n[i]).classed('entering')) {\n            return this.duration / 2;\n          }\n          return this.duration;\n        })\n        .delay((_, i, n) => {\n          if (select(n[i]).classed('entering')) {\n            return this.duration * 0.75 * (i / (n.length - 1));\n          }\n          return 0;\n        })\n        .attr('opacity', (d, i, n) => {\n          const targetOpacity = d.exit\n            ? 0\n            : checkInteraction(\n                d,\n                checkLabelDisplayOnly(\n                  this.dataLabel.visible,\n                  this.dataLabel.displayOnly,\n                  d,\n                  this.displayOnlyLabelData,\n                  [this.ordinalAccessor, this.seriesAccessor]\n                ),\n                this.hoverOpacity,\n                this.hoverHighlight,\n                this.clickHighlight,\n                this.innerInteractionKeys\n              ) < 1\n            ? 0\n            : checkLabelDisplayOnly(this.dataLabel.visible, this.dataLabel.displayOnly, d, this.displayOnlyLabelData, [\n                this.ordinalAccessor,\n                this.seriesAccessor\n              ]);\n          const parentOpacity = +select(n[i].parentNode).attr('opacity');\n          select(n[i]).attr('data-hidden', parentOpacity === 0 || targetOpacity === 0 ? 'true' : null);\n          return targetOpacity;\n        });\n    } else {\n      this.updatingLabels.attr('opacity', (d, i, n) => {\n        const targetOpacity =\n          checkInteraction(\n            d,\n            checkLabelDisplayOnly(this.dataLabel.visible, this.dataLabel.displayOnly, d, this.displayOnlyLabelData, [\n              this.ordinalAccessor,\n              this.seriesAccessor\n            ]),\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n            ? 0\n            : checkLabelDisplayOnly(this.dataLabel.visible, this.dataLabel.displayOnly, d, this.displayOnlyLabelData, [\n                this.ordinalAccessor,\n                this.seriesAccessor\n              ]);\n        const parentOpacity = +select(n[i].parentNode).attr('opacity');\n        select(n[i]).attr('data-hidden', parentOpacity === 0 || targetOpacity === 0 ? 'true' : null);\n        return targetOpacity;\n      });\n    }\n  }\n\n  exitDataLabels() {\n    this.exitingLabels.interrupt();\n\n    this.exitingLabels\n      .attr('data-hidden', 'true')\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', 0)\n      .remove();\n\n    this.exitingLabelGroups\n      .attr('data-hidden', 'true')\n      .selectAll('.line-dataLabel')\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .delay((_, i, n) => {\n        return this.duration - this.duration * (i / (n.length - 1));\n      })\n      .attr('opacity', 0)\n      .call(transitionEndAll, () => {\n        this.exitingLabelGroups.remove();\n      });\n  }\n\n  drawDataLabels() {\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n\n    let updateChildren = this.updatingLabels.text(d => {\n      return formatDataLabel(d, this.innerLabelAccessor, this.dataLabel.format);\n    });\n    if (this.interpolating) {\n      updateChildren = this.updatingLabels\n        .style('visibility', (d, i, n) =>\n          this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly\n            ? d.hidden\n              ? 'hidden'\n              : select(n[i]).style('visibility')\n            : null\n        )\n        .attr('data-x', d => this.x(d[this.ordinalAccessor]))\n        .attr('data-y', d => this.y(d[this.valueAccessor]))\n        .attr('data-translate-x', this.margin.left + this.padding.left)\n        .transition('update')\n        .ease(easeCircleIn)\n        .duration((_, i, n) => {\n          if (select(n[i]).classed('entering')) {\n            return this.duration / 2;\n          }\n          return this.duration;\n        })\n        .delay((_, i, n) => {\n          if (select(n[i]).classed('entering')) {\n            return this.duration * 0.75 * (i / (n.length - 1));\n          }\n          return 0;\n        });\n    } else {\n      updateChildren = this.updatingLabels\n        .style('visibility', (d, i, n) =>\n          this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly\n            ? d.hidden\n              ? 'hidden'\n              : select(n[i]).style('visibility')\n            : null\n        )\n        .attr('data-x', d => this.x(d[this.ordinalAccessor]))\n        .attr('data-y', d => this.y(d[this.valueAccessor]))\n        .attr('data-translate-x', this.margin.left + this.padding.left)\n        .transition('update')\n        .ease(easeCircleIn)\n        .duration(this.duration);\n    }\n    const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n    const validPositions = hideOnly\n      ? ['middle']\n      : collisionPlacement && this.collisionSettings[collisionPlacement] // check whether placement provided maps correctly\n      ? this.collisionSettings[collisionPlacement].validPositions\n      : this.collisionSettings['all'].validPositions;\n    const offsets = hideOnly\n      ? [1]\n      : collisionPlacement && this.collisionSettings[collisionPlacement] // check whether placement provided maps correctly\n      ? this.collisionSettings[collisionPlacement].offsets\n      : this.collisionSettings['all'].offsets;\n\n    this.bitmaps = placeDataLabels({\n      root: updateChildren, // this must have a transition cause we copy it\n      xScale: this.x,\n      yScale: this.y,\n      ordinalAccessor: this.ordinalAccessor,\n      valueAccessor: this.valueAccessor,\n      placement: this.dataLabel.placement,\n      chartType: 'line',\n      avoidCollision: {\n        runOccupancyBitmap: this.dataLabel.visible && this.dataLabel.placement === 'auto',\n        labelSelection: updateChildren,\n        avoidMarks: [this.updateDots, this.update],\n        validPositions,\n        offsets,\n        accessors: [this.ordinalAccessor, this.seriesAccessor, 'key'], // key is created for lines by nesting done in line,\n        size: [roundTo(this.width, 0), roundTo(this.innerPaddedHeight, 0)],\n        hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly\n      }\n    });\n\n    // we need to maintain some values since line has customized lifecycle setup\n    updateChildren.call(transitionEndAll, () => {\n      this.hiddenHash = {}; // empty out hash each time to be safe\n      this.updatingLabels.each((d, i, n) => {\n        // store results to hash so we can use them in lifecycle (specific to line/parallel lifecycle only)\n        this.hiddenHash[`${d[this.ordinalAccessor]}-${d[this.seriesAccessor] || 'b'}`] = {\n          'data-label-hidden': select(n[i]).attr('data-label-hidden') === 'true',\n          x: +select(n[i]).attr('x') - +select(n[i]).attr('data-x'),\n          y: +select(n[i]).attr('y') - +select(n[i]).attr('data-y'),\n          'text-anchor': select(n[i]).attr('text-anchor')\n        };\n      });\n    });\n  }\n\n  updateStrokeWidth() {\n    this.update.attr('stroke-width', d => this.calculateStrokeWidth(d, true));\n    this.updateDots.attr('stroke', this.handleDotStroke);\n  }\n\n  calculateStrokeWidth = (data, useChildData?) => {\n    const d = !useChildData ? data : data.values[0];\n    return !useChildData || this.seriesInteraction\n      ? checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n        ? this.clickStyle.strokeWidth || this.strokeWidth\n        : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n        ? this.hoverStyle.strokeWidth || this.strokeWidth\n        : !this.secondaryLines.keys.includes(d[this.seriesAccessor])\n        ? this.strokeWidth\n        : 1\n      : !this.secondaryLines.keys.includes(d[this.seriesAccessor])\n      ? this.strokeWidth\n      : 1;\n  };\n\n  handleDotStroke = (d, i, n) => {\n    if (!this.accessibility.hideStrokes) {\n      const clicked =\n        this.clickHighlight &&\n        this.clickHighlight.length > 0 &&\n        checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n      const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n      const baseColor = select(n[i].parentNode).attr('fill');\n      const color =\n        clicked && this.clickStyle.color\n          ? visaColors[this.clickStyle.color] || this.clickStyle.color\n          : clicked\n          ? baseColor\n          : hovered && this.hoverStyle.color\n          ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n          : baseColor;\n      select(n[i]).attr('stroke-width', this.calculateStrokeWidth(d));\n      select(n[i]).attr('fill', color);\n      return this.strokes[color.toLowerCase()];\n    }\n    return null;\n  };\n\n  handleLineStroke = (data, i) => {\n    const baseColor = this.colorArr[i] || this.colorArr[0];\n    const d = data.values[0];\n    const clicked = checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n    const hovered = checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n    return this.seriesInteraction\n      ? clicked && this.clickStyle.color\n        ? this.strokes[(visaColors[this.clickStyle.color] || this.clickStyle.color).toLowerCase()]\n        : clicked\n        ? baseColor\n        : hovered && this.hoverStyle.color\n        ? this.strokes[(visaColors[this.hoverStyle.color] || this.hoverStyle.color).toLowerCase()]\n        : baseColor\n      : baseColor;\n  };\n\n  handleSeriesTextFill = (data, i) => {\n    const baseColor = this.rawColors[i] || this.rawColors[0];\n    const d = data.values[0];\n    const clicked = checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n    const hovered = checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n    const color = this.seriesInteraction\n      ? clicked && this.clickStyle.color\n        ? visaColors[this.clickStyle.color] || this.clickStyle.color\n        : clicked\n        ? baseColor\n        : hovered && this.hoverStyle.color\n        ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n        : baseColor\n      : baseColor;\n    return this.textColors[color.toLowerCase()];\n  };\n\n  handleTextFill = (d, i, n) => {\n    const clicked =\n      this.clickHighlight &&\n      this.clickHighlight.length > 0 &&\n      checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n    const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n    const baseColor = select(n[i].parentNode).attr('fill');\n    const color =\n      clicked && this.clickStyle.color\n        ? visaColors[this.clickStyle.color] || this.clickStyle.color\n        : clicked\n        ? baseColor\n        : hovered && this.hoverStyle.color\n        ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n        : baseColor;\n    return this.textColors[color.toLowerCase()];\n  };\n\n  updateColors() {\n    this.updateDotWrappers.attr('fill', (_, i) => this.rawColors[i] || this.rawColors[0]);\n    this.updateDots.attr('stroke', this.handleDotStroke);\n    this.update.attr('stroke', this.handleLineStroke);\n    this.seriesLabelUpdate.attr('fill', this.handleSeriesTextFill);\n    this.updatingLabelGroups.attr('fill', (_, i) => this.rawColors[i] || this.rawColors[0]);\n    this.updatingLabels.attr('fill', this.handleTextFill);\n  }\n\n  setLabelOpacity() {\n    // this.updatingLabelGroups.interrupt();\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n    const addCollisionClass = this.dataLabel.placement === 'auto' || hideOnly;\n    const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n\n    this.updatingLabelGroups.attr('opacity', d => {\n      const labelOpacity = !this.dataLabel.visible\n        ? 0\n        : this.secondaryLines.keys.includes(d.key) &&\n          (!this.secondaryLines.showDataLabel || this.secondaryLines.opacity < 1)\n        ? 0\n        : 1;\n      return labelOpacity;\n    });\n    if (this.interpolating) {\n      this.updatingLabels.each((d, i, n) => {\n        const me = select(n[i]);\n        const prevOpacity = +me.attr('opacity');\n        const styleVisibility = me.style('visibility');\n        if (!d.enter && !me.classed('entering') && !d.exit) {\n          me.attr('opacity', () => {\n            const targetOpacity =\n              checkInteraction(\n                d,\n                checkLabelDisplayOnly(\n                  this.dataLabel.visible,\n                  this.dataLabel.displayOnly,\n                  d,\n                  this.displayOnlyLabelData,\n                  [this.ordinalAccessor, this.seriesAccessor]\n                ),\n                this.hoverOpacity,\n                this.hoverHighlight,\n                this.clickHighlight,\n                this.innerInteractionKeys\n              ) < 1\n                ? 0\n                : checkLabelDisplayOnly(\n                    this.dataLabel.visible,\n                    this.dataLabel.displayOnly,\n                    d,\n                    this.displayOnlyLabelData,\n                    [this.ordinalAccessor, this.seriesAccessor]\n                  );\n\n            const parentOpacity = +select(n[i].parentNode).attr('opacity');\n            me.attr('data-hidden', parentOpacity === 0 || targetOpacity === 0 ? 'true' : null);\n            if (\n              ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n              (this.dataLabel.placement === 'auto' || hideOnly)\n            ) {\n              if (targetOpacity === 1) {\n                select(n[i])\n                  .classed('collision-added', true)\n                  .style('visibility', null);\n              } else {\n                select(n[i]).classed('collision-removed', true);\n              }\n            }\n            return targetOpacity;\n          });\n        }\n      });\n    } else {\n      this.updatingLabels.attr('opacity', (d, i, n) => {\n        const prevOpacity = +select(n[i]).attr('opacity');\n        const styleVisibility = select(n[i]).style('visibility');\n        const targetOpacity =\n          checkInteraction(\n            d,\n            checkLabelDisplayOnly(this.dataLabel.visible, this.dataLabel.displayOnly, d, this.displayOnlyLabelData, [\n              this.ordinalAccessor,\n              this.seriesAccessor\n            ]),\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n            ? 0\n            : checkLabelDisplayOnly(this.dataLabel.visible, this.dataLabel.displayOnly, d, this.displayOnlyLabelData, [\n                this.ordinalAccessor,\n                this.seriesAccessor\n              ]);\n        const parentOpacity = +select(n[i].parentNode).attr('opacity');\n        select(n[i]).attr('data-hidden', parentOpacity === 0 || targetOpacity === 0 ? 'true' : null);\n        if (\n          ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n          (this.dataLabel.placement === 'auto' || hideOnly)\n        ) {\n          if (targetOpacity === 1) {\n            select(n[i])\n              .classed('collision-added', true)\n              .style('visibility', null);\n          } else {\n            select(n[i]).classed('collision-removed', true);\n          }\n        }\n        return targetOpacity;\n      });\n    }\n\n    if (addCollisionClass) {\n      const labelsAdded = this.updatingLabels\n        .filter((_, i, n) => select(n[i]).classed('collision-added'))\n        .transition()\n        .duration(0);\n      const labelsRemoved = this.updatingLabels.filter((_, i, n) => select(n[i]).classed('collision-removed')); // .transition().duration(0);\n      const validPositions = hideOnly\n        ? ['middle']\n        : collisionPlacement && this.collisionSettings[collisionPlacement] // check whether placement provided maps correctly\n        ? this.collisionSettings[collisionPlacement].validPositions\n        : this.collisionSettings['all'].validPositions;\n      const offsets = hideOnly\n        ? [1]\n        : collisionPlacement && this.collisionSettings[collisionPlacement] // check whether placement provided maps correctly\n        ? this.collisionSettings[collisionPlacement].offsets\n        : this.collisionSettings['all'].offsets;\n\n      // we can now remove labels as well if we need to...\n      if (labelsRemoved.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsRemoved,\n          avoidMarks: [], // [this.updateDots], // this will link the series label to the last point in the line\n          validPositions: ['middle'],\n          offsets: [1],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.innerPaddedHeight, 0)],\n          hideOnly: false,\n          removeOnly: true\n        });\n\n        // remove temporary class now\n        labelsRemoved.classed('collision-removed', false);\n      }\n\n      // we can now add labels as well if we need to...\n      if (labelsAdded.size() > 0) {\n        this.bitmaps = placeDataLabels({\n          root: labelsAdded,\n          xScale: this.x,\n          yScale: this.y,\n          ordinalAccessor: this.ordinalAccessor,\n          valueAccessor: this.valueAccessor,\n          placement: this.dataLabel.placement,\n          chartType: 'line',\n          avoidCollision: {\n            runOccupancyBitmap: this.dataLabel.visible && this.dataLabel.placement === 'auto',\n            bitmaps: this.bitmaps,\n            labelSelection: labelsAdded,\n            avoidMarks: [this.updateDots, this.update],\n            validPositions,\n            offsets,\n            accessors: [this.ordinalAccessor, this.seriesAccessor, 'key'], // key is created for lines by nesting done in line,\n            size: [roundTo(this.width, 0), roundTo(this.innerPaddedHeight, 0)],\n            hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly,\n            suppressMarkDraw: true\n          }\n        });\n\n        // we need to maintain some values since line has customized lifecycle setup\n        labelsAdded.call(transitionEndAll, () => {\n          this.updatingLabels.each((d, i, n) => {\n            select(n[i]).classed('collision-added', false);\n            // store results to hash so we can use them in lifecycle (specific to line/parallel lifecycle only)\n            this.hiddenHash[`${d[this.ordinalAccessor]}-${d[this.seriesAccessor] || 'b'}`] = {\n              'data-label-hidden': select(n[i]).attr('data-label-hidden') === 'true',\n              x: +select(n[i]).attr('x') - +select(n[i]).attr('data-x'),\n              y: +select(n[i]).attr('y') - +select(n[i]).attr('data-y'),\n              'text-anchor': select(n[i]).attr('text-anchor')\n            };\n          });\n        });\n      }\n    }\n  }\n\n  setSeriesLabelOpacity() {\n    const hideOnly = this.labelDetails.placement !== 'auto' && this.labelDetails.collisionHideOnly;\n    const addCollisionClass = this.labelDetails.placement === 'auto' || hideOnly;\n\n    this.seriesLabelUpdate.interrupt('opacity');\n\n    this.seriesLabelUpdate.attr('opacity', (d, i, n) => {\n      const prevOpacity = +select(n[i]).attr('opacity');\n      const styleVisibility = select(n[i]).style('visibility');\n      const seriesLabelOpacity = !this.seriesLabel.visible\n        ? 0\n        : this.secondaryLines.keys.includes(d.key) &&\n          (!this.secondaryLines.showSeriesLabel || this.secondaryLines.opacity < 1)\n        ? 0\n        : 1;\n      // check if interactionKeys includes seriesAccessor, if not then don't check seriesLabel for interaction\n      if (!this.seriesInteraction) {\n        select(n[i]).attr('data-hidden', seriesLabelOpacity === 0 ? 'true' : null);\n        return seriesLabelOpacity;\n      } else {\n        const targetOpacity =\n          checkInteraction(\n            d.values[0],\n            seriesLabelOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n            ? 0\n            : 1;\n        select(n[i]).attr('data-hidden', targetOpacity === 0 ? 'true' : null);\n        if (\n          ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n          (this.labelDetails.placement === 'auto' || hideOnly)\n        ) {\n          if (targetOpacity === 1) {\n            select(n[i])\n              .classed('collision-added', true)\n              .style('visibility', null);\n          } else {\n            select(n[i]).classed('collision-removed', true);\n          }\n        }\n        return targetOpacity;\n      }\n    });\n\n    if (addCollisionClass) {\n      const labelsAdded = this.seriesLabelUpdate\n        .filter((_, i, n) => select(n[i]).classed('collision-added'))\n        .attr(\n          'data-text-anchor',\n          (_, i, n) => select(n[i]).attr('collision-text-anchor') || select(n[i]).attr('data-text-anchor')\n        )\n        .attr('collision-text-anchor', null);\n\n      const labelsRemoved = this.seriesLabelUpdate\n        .filter((_, i, n) => select(n[i]).classed('collision-removed'))\n        .attr('data-use-dx', hideOnly)\n        .attr('data-use-dy', hideOnly)\n        .attr('keep-data-y', hideOnly)\n        .attr('collision-text-anchor', (_, i, n) => select(n[i]).attr('data-text-anchor'))\n        .attr('data-text-anchor', null); // need this for remove only\n\n      // we can now remove labels as well if we need to...\n      if (labelsRemoved.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsRemoved,\n          avoidMarks: [], // [this.updateDots], // this will link the series label to the last point in the line\n          validPositions: ['middle'],\n          offsets: [1],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.innerPaddedHeight, 0)],\n          hideOnly: false,\n          removeOnly: true\n        });\n\n        // remove temporary class now\n        labelsRemoved.classed('collision-removed', false).attr('keep-data-y', null);\n      }\n\n      // we can now add labels as well if we need to...\n      if (labelsAdded.size() > 0) {\n        // if we keep this in here, we are assuming the last point will always be on the right of the chart\n        // it also adds about 8-9 ms per run to redraw this.update to canvas => bitmap\n        if (\n          this.labelDetails.visible &&\n          (this.labelDetails.placement === 'auto' || this.labelDetails.collisionHideOnly)\n        ) {\n          this.bitmaps = resolveLabelCollision({\n            bitmaps: this.bitmaps,\n            labelSelection: labelsAdded,\n            avoidMarks: [], // [this.updateDots], // this will link the series label to the last point in the line\n            validPositions: hideOnly ? ['middle'] : ['middle', 'top', 'bottom'],\n            offsets: hideOnly ? [1] : [1, 1, 1],\n            accessors: ['key'],\n            size: [roundTo(this.width, 0), roundTo(this.innerPaddedHeight, 0)],\n            hideOnly: this.labelDetails.visible && hideOnly,\n            suppressMarkDraw: true\n          });\n\n          // if we are in hide only we need to add attributes back\n          if (hideOnly) {\n            labelsAdded\n              .attr('text-anchor', this.isRight ? 'start' : 'end')\n              .attr('x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n              .attr('y', d =>\n                this.isRight\n                  ? this.y(d.values[d.values.length - 1][this.valueAccessor])\n                  : this.y(d.values[0][this.valueAccessor])\n              )\n              .attr('dx', this.isRight ? '0.1em' : '-0.1em')\n              .attr('dy', '0.3em');\n          }\n        }\n\n        // remove temporary class now\n        labelsAdded.classed('collision-added', false);\n      }\n    }\n  }\n\n  updateInteractionState() {\n    // we created an \"opacity\" transition namespace in update's transition\n    // we override it here to instantly display opacity state (below)\n    this.update.interrupt('opacity');\n\n    // we use this.update and this.updatingLabels from setGlobalSelection here\n    // the lifecycle state does not matter (enter/update/exit)\n    // since interaction state can happen at any time\n    const dotOpacity = this.showDots ? 1 : 0;\n    this.update.attr('opacity', d => {\n      // check if interactionKeys includes seriesAccessor, if not then hide lines\n      const lineOpacity = this.secondaryLines.keys.includes(d.key) ? this.secondaryLines.opacity : 1;\n      if (!this.seriesInteraction) {\n        return lineOpacity;\n      } else if (this.secondaryLines.keys.includes(d.key)) {\n        return checkInteraction(\n          d.values[0],\n          this.secondaryLines.opacity,\n          Math.min(this.secondaryLines.opacity, this.hoverOpacity),\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        );\n      } else {\n        return checkInteraction(\n          d.values[0], // use first data point of each line to decide interaction highlight\n          lineOpacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        );\n      }\n    });\n\n    this.updateDotWrappers.attr('opacity', d => {\n      const lineDotOpacity = this.secondaryLines.keys.includes(d.key) ? this.secondaryLines.opacity : 1;\n      return lineDotOpacity;\n    });\n\n    this.updateDots.each((d, i, n) => {\n      const me = select(n[i]);\n      if (!d.enter && !me.classed('entering') && !d.exit) {\n        me.attr('opacity', () => {\n          return checkInteraction(\n            d,\n            dotOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        });\n      }\n    });\n\n    retainAccessFocus({\n      parentGNode: this.rootG.node()\n    });\n\n    setLegendInteractionState({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.seriesAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.hoverStyle,\n      clickStyle: this.clickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  updateCursor() {\n    this.update.attr('cursor', !this.suppressEvents && this.seriesInteraction ? this.cursor : null);\n    this.updateDotWrappers.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    this.seriesLabelUpdate.attr('cursor', !this.suppressEvents && this.seriesInteraction ? this.cursor : null);\n    this.updatingLabels.attr('cursor', !this.suppressEvents ? this.cursor : null);\n  }\n\n  drawReferenceLines() {\n    setReferenceLine({\n      groupName: 'line',\n      root: this.referencesG,\n      referenceLines: this.referenceLines,\n      referenceStyle: this.referenceStyle,\n      innerPaddedWidth: this.innerPaddedWidth,\n      innerPaddedHeight: this.innerPaddedHeight,\n      duration: this.duration,\n      x: this.x,\n      y: this.y,\n      unitTest: this.unitTest\n    });\n  }\n\n  drawAnnotations() {\n    annotate({\n      source: this.rootG.node(),\n      data: this.annotations,\n      xScale: this.x,\n      xAccessor: this.ordinalAccessor,\n      yScale: this.y,\n      yAccessor: this.valueAccessor,\n      width: this.width,\n      height: this.height,\n      padding: this.padding,\n      margin: this.margin,\n      bitmaps: this.bitmaps\n    });\n  }\n\n  setAnnotationAccessibility() {\n    setAccessAnnotation(this.getLanguageString(), this.lineChartEl, this.annotations, this.referenceLines);\n  }\n\n  drawLegendElements() {\n    // if we have default series access and it is not in the data don't show legend\n    const noSeriesAccessor =\n      this.seriesAccessor === LineChartDefaultValues.seriesAccessor &&\n      this.nest &&\n      this.nest.length === 1 &&\n      this.nest[0].key === 'undefined';\n\n    drawLegend({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      width: this.innerPaddedWidth,\n      height: this.margin.top + 20,\n      colorArr: this.colorArr,\n      dashPatterns: !this.accessibility.hideTextures ? this.dashPatterns : null,\n      margin: this.margin,\n      padding: this.padding,\n      duration: this.duration,\n      type: 'line',\n      secondary: this.secondaryLines.keys,\n      fontSize: 16,\n      data: this.nest,\n      label: this.legend.labels,\n      hide: !((this.legend.visible && !noSeriesAccessor) || !this.legend || !this.seriesAccessor),\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.seriesAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.hoverStyle,\n      clickStyle: this.clickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  bindLegendInteractivity() {\n    select(this.lineChartEl)\n      .selectAll('.legend')\n      .on(\n        'click',\n        !this.suppressEvents && this.legend.interactive && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.legend.interactive && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.hoverEvent.emit({ data: d.values[0], target: n[i] });\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseout',\n        !this.suppressEvents && this.legend.interactive && this.seriesInteraction\n          ? () => this.onMouseOutHandler()\n          : null\n      );\n  }\n\n  setLegendCursor() {\n    select(this.lineChartEl)\n      .selectAll('.legend')\n      .style('cursor', !this.suppressEvents && this.legend.interactive && this.seriesInteraction ? this.cursor : null);\n  }\n\n  bindInteractivity() {\n    this.update\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onHoverHandler(d.values[0], n[i], false);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents && this.seriesInteraction ? () => this.onMouseOutHandler() : null);\n\n    this.updateDots\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i], true) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    // we bind the G for keyboard interactivity\n    // this does not effect mouse, but enables keyboard series selection to\n    // tap into series interactivity, if enabled\n    this.dotG\n      .selectAll('.line-dot-wrapper')\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onHoverHandler(d.values[0], n[i], false);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents && this.seriesInteraction ? () => this.onMouseOutHandler() : null);\n\n    this.seriesLabelUpdate\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onHoverHandler(d.values[0], n[i], false);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents && this.seriesInteraction ? () => this.onMouseOutHandler() : null);\n    this.updatingLabels\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i], true) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  // new accessibility functions added here\n  setTagLevels() {\n    this.topLevel = findTagLevel(this.highestHeadingLevel);\n    this.bottomLevel = findTagLevel(this.highestHeadingLevel, 3);\n  }\n\n  setChartDescriptionWrapper() {\n    // this initializes the accessibility description section of the chart\n    initializeDescriptionRoot({\n      language: this.getLanguageString(),\n      rootEle: this.lineChartEl,\n      title: this.accessibility.title || this.mainTitle,\n      chartTag: 'line-chart',\n      uniqueID: this.chartID,\n      highestHeadingLevel: this.highestHeadingLevel,\n      redraw: this.shouldRedrawWrapper,\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      hideDataTable: this.accessibility.hideDataTableButton\n    });\n    this.shouldRedrawWrapper = false;\n  }\n\n  setParentSVGAccessibility() {\n    // this sets the accessibility features of the root SVG element\n    setAccessibilityController({\n      chartTag: 'line-chart',\n      language: this.getLanguageString(),\n      node: this.svg.node(),\n      title: this.accessibility.title || this.mainTitle,\n      description: this.subTitle,\n      uniqueID: this.chartID,\n      geomType: 'point',\n      includeKeyNames: this.accessibility.includeDataKeyNames,\n      dataKeys: this.innerScopeDataKeys(),\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.seriesAccessor,\n      groupName: 'line',\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled\n    });\n  }\n\n  setGeometryAccessibilityAttributes() {\n    // this makes sure every geom element has correct event handlers + semantics (role, tabindex, etc)\n    this.updateDots.each((_d, i, n) => {\n      initializeElementAccess(n[i]);\n    });\n  }\n\n  setGeometryAriaLabels() {\n    // this adds an ARIA label to each geom (a description read by screen readers)\n    const keys = this.innerScopeDataKeys();\n    this.updateDots.each((_d, i, n) => {\n      setElementFocusHandler({\n        chartTag: 'line-chart',\n        language: this.getLanguageString(),\n        node: n[i],\n        geomType: 'point',\n        includeKeyNames: this.accessibility.includeDataKeyNames,\n        dataKeys: keys,\n        dataKeyNames: this.dataKeyNames,\n        groupName: 'line',\n        uniqueID: this.chartID,\n        disableKeyNav:\n          this.suppressEvents &&\n          this.accessibility.elementsAreInterface === false &&\n          this.accessibility.keyboardNavConfig &&\n          this.accessibility.keyboardNavConfig.disabled\n      });\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setGroupAccessibilityID() {\n    // this sets an ARIA label on all the g elements in the chart\n    this.updateDotWrappers.each((_, i, n) => {\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setChartAccessibilityTitle() {\n    setAccessTitle(this.getLanguageString(), this.lineChartEl, this.accessibility.title || this.mainTitle);\n  }\n\n  setChartAccessibilitySubtitle() {\n    setAccessSubtitle(this.getLanguageString(), this.lineChartEl, this.subTitle);\n  }\n\n  setChartAccessibilityLongDescription() {\n    setAccessLongDescription(this.getLanguageString(), this.lineChartEl, this.accessibility.longDescription);\n  }\n\n  setChartAccessibilityExecutiveSummary() {\n    setAccessExecutiveSummary(this.getLanguageString(), this.lineChartEl, this.accessibility.executiveSummary);\n  }\n\n  setChartAccessibilityPurpose() {\n    setAccessPurpose(this.getLanguageString(), this.lineChartEl, this.accessibility.purpose);\n  }\n\n  setChartAccessibilityContext() {\n    setAccessContext(this.getLanguageString(), this.lineChartEl, this.accessibility.contextExplanation);\n  }\n\n  setChartAccessibilityStatisticalNotes() {\n    setAccessStatistics(this.getLanguageString(), this.lineChartEl, this.accessibility.statisticalNotes);\n  }\n\n  setChartCountAccessibility() {\n    // this is our automated section that describes the chart contents\n    // (like geometry and gorup counts, etc)\n    setAccessChartCounts({\n      rootEle: this.lineChartEl,\n      parentGNode: this.dotG.node(), // pass the wrapper to <g> or geometries here, should be single node selection\n      chartTag: 'line-chart',\n      geomType: 'point',\n      groupName: 'line'\n      // recursive: true\n    });\n  }\n\n  setChartAccessibilityStructureNotes() {\n    setAccessStructure(this.getLanguageString(), this.lineChartEl, this.accessibility.structureNotes);\n  }\n  // new accessibility stuff ends here\n\n  onChangeHandler() {\n    if (this.accessibility && typeof this.accessibility.onChangeFunc === 'function') {\n      const d = {\n        updated: this.updated,\n        added: this.enterSize,\n        removed: this.exitSize\n      };\n      this.accessibility.onChangeFunc(d);\n    }\n    this.interpolating = false;\n    this.updated = false;\n    this.enterSize = 0;\n    this.exitSize = 0;\n  }\n\n  onClickHandler(d, n) {\n    this.clickEvent.emit({ data: d, target: n });\n  }\n\n  onHoverHandler(d, n, hasTooltip) {\n    overrideTitleTooltip(this.chartID, true);\n    this.hoverEvent.emit({ data: d, target: n });\n    if (this.showTooltip && hasTooltip) {\n      this.eventsTooltip({ data: d, evt: event, isToShow: true });\n    }\n  }\n\n  onMouseOutHandler() {\n    overrideTitleTooltip(this.chartID, false);\n    this.mouseOutEvent.emit();\n    if (this.showTooltip) {\n      this.eventsTooltip({ isToShow: false });\n    }\n  }\n\n  // set initial style (instead of copying css class across the lib)\n  setTooltipInitialStyle() {\n    initTooltipStyle(this.tooltipG);\n  }\n\n  // tooltip\n  eventsTooltip({ data, evt, isToShow }: { data?: any; evt?: any; isToShow: boolean }) {\n    drawTooltip({\n      root: this.tooltipG,\n      data,\n      event: evt,\n      isToShow,\n      tooltipLabel: this.tooltipLabel,\n      xAxis: this.xAxis,\n      yAxis: this.yAxis,\n      dataLabel: this.dataLabel,\n      dataKeyNames: this.dataKeyNames,\n      ordinalAccessor: this.ordinalAccessor,\n      valueAccessor: this.valueAccessor,\n      groupAccessor: this.seriesAccessor,\n      chartType: 'line'\n    });\n  }\n\n  render() {\n    this.drawStartEvent.emit({ chartID: this.chartID });\n    // everything between this comment and the third should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n    this.init();\n    if (this.shouldSetLocalizationConfig) {\n      this.setLocalizationConfig();\n      this.shouldSetLocalizationConfig = false;\n    }\n    if (this.shouldSetTagLevels) {\n      this.setTagLevels();\n      this.shouldSetTagLevels = false;\n    }\n    if (this.shouldSetDimensions) {\n      this.setDimensions();\n      this.shouldSetDimensions = false;\n    }\n    if (this.shouldUpdateScales) {\n      this.prepareScales();\n      this.shouldUpdateScales = false;\n    }\n    if (this.shouldUpdateData) {\n      this.prepareData();\n      this.shouldUpdateData = false;\n    }\n    if (this.shouldUpdateLabelData) {\n      this.prepareLabelData();\n      this.shouldUpdateLabelData = false;\n    }\n    if (this.shouldUpdateInterpolationData) {\n      this.updateInterpolationData();\n      this.shouldUpdateInterpolationData = false;\n    }\n    if (this.shouldValidateInteractionKeys) {\n      this.validateInteractionKeys();\n      this.shouldValidateInteractionKeys = false;\n    }\n    if (this.shouldValidateDataLabelAccessor) {\n      this.validateDataLabelAccessor();\n      this.shouldValidateDataLabelAccessor = false;\n    }\n    if (this.shouldUpdateTableData) {\n      this.setTableData();\n      this.shouldUpdateTableData = false;\n    }\n    if (this.shouldValidate) {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.shouldValidate = false;\n    }\n    if (this.shouldSetColors) {\n      this.setColors();\n      this.shouldSetColors = false;\n    }\n    if (this.shouldValidateSeriesLabels) {\n      this.validateSeriesLabels();\n      this.shouldValidateSeriesLabels = false;\n    }\n    // // Everything between this comment and the first should eventually\n    // // be moved into componentWillUpdate (if the Stencil bug is fixed)\n\n    return (\n      <div class=\"o-layout\">\n        <div class=\"o-layout--chart\">\n          <this.topLevel class=\"line-main-title vcl-main-title\">{this.mainTitle}</this.topLevel>\n          <this.bottomLevel class=\"visa-ui-text--instructions line-sub-title vcl-sub-title\" />\n          <div class=\"line-legend vcl-legend\" style={{ display: this.legend.visible ? 'block' : 'none' }} />\n          <keyboard-instructions\n            uniqueID={this.chartID}\n            geomType={'point'}\n            groupName={'line'} // taken from initializeDescriptionRoot, on bar this should be \"bar group\", stacked bar is \"stack\", and clustered is \"cluster\"\n            language={this.getLanguageString()}\n            chartTag={'line-chart'}\n            width={this.width - (this.margin ? this.margin.right || 0 : 0)}\n            isInteractive={this.accessibility.elementsAreInterface}\n            hasCousinNavigation={true} // on bar this requires checking for groupAccessor\n            disabled={\n              this.suppressEvents &&\n              this.accessibility.elementsAreInterface === false &&\n              this.accessibility.keyboardNavConfig &&\n              this.accessibility.keyboardNavConfig.disabled\n            } // the chart is \"simple\"\n          />\n          <div class=\"visa-viz-d3-line-container\" />\n          <div class=\"line-tooltip vcl-tooltip\" style={{ display: this.showTooltip ? 'block' : 'none' }} />\n          <data-table\n            uniqueID={this.chartID}\n            isCompact\n            language={this.getLanguageString()}\n            tableColumns={this.tableColumns}\n            dataKeyNames={this.dataKeyNames}\n            data={this.tableData}\n            padding={this.padding}\n            margin={this.margin}\n            hideDataTable={this.accessibility.hideDataTableButton}\n            unitTest={this.unitTest}\n          />\n        </div>\n        {/* <canvas id=\"bitmap-render\" /> */}\n      </div>\n    );\n  }\n  private init() {\n    // reading properties\n    const keys = Object.keys(LineChartDefaultValues);\n    let i = 0;\n    const exceptions = {\n      wrapLabel: {\n        exception: false\n      },\n      strokeWidth: {\n        exception: 0\n      },\n      showDots: {\n        exception: false\n      },\n      hoverOpacity: {\n        exception: 0\n      },\n      dotRadius: {\n        exception: 0\n      },\n      showTooltip: {\n        exception: false\n      },\n      mainTitle: {\n        exception: ''\n      },\n      subTitle: {\n        exception: ''\n      },\n      showBaselineX: {\n        exception: false\n      }\n    };\n    for (i = 0; i < keys.length; i++) {\n      const exception = !exceptions[keys[i]] ? false : this[keys[i]] === exceptions[keys[i]].exception;\n      this[keys[i]] = this[keys[i]] || exception ? this[keys[i]] : LineChartDefaultValues[keys[i]];\n    }\n  }\n}\n\n// incorporate OSS licenses into build\nwindow['VisaChartsLibOSSLicenses'] = getLicenses(); // tslint:disable-line no-string-literal\n"],"mappings":"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","ignoreList":[]}