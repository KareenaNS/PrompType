{"version":3,"names":["propDefaultValues","Utils","ParallelPlotDefaultValues","mainTitle","subTitle","text","height","width","margin","top","bottom","right","left","padding","localization","ordinalAccessor","valueAccessor","seriesAccessor","accessibility","animationConfig","highestHeadingLevel","xAxis","yAxis","showBaselineX","showBaselineFalse","wrapLabel","colorPalette","colorPaletteCategorical","hoverStyle","clickStyle","strokeWidth","strokeWidth1","showDots","dotRadius","dotRadius4","lineCurve","hoverOpacity","cursor","dataLabel","dataLabelBottomRight","seriesLabel","legend","hiddenLegend","tooltipLabel","secondaryLines","showTooltip","suppressEvents","annotations","clickHighlight","parallelPlotCss","ParallelPlotStyle0","getGlobalInstances","configLocalization","getActiveLanguageString","getAccessibleStrokes","ensureTextContrast","createTextStrokeFilter","findTagLevel","prepareRenderChange","initializeDescriptionRoot","initializeElementAccess","setElementFocusHandler","setElementAccessID","setAccessibilityController","hideNonessentialGroups","setAccessTitle","setAccessSubtitle","setAccessLongDescription","setAccessExecutiveSummary","setAccessPurpose","setAccessContext","setAccessStatistics","setAccessChartCounts","setAccessXAxis","setAccessYAxis","setAccessStructure","setAccessAnnotation","retainAccessFocus","checkAccessFocus","setElementInteractionAccessState","setAccessibilityDescriptionWidth","annotate","chartAccessors","checkInteraction","checkClicked","checkHovered","convertVisaColor","drawAxis","drawGrid","drawLegend","setLegendInteractionState","drawTooltip","formatDataLabel","getColors","getLicenses","getPadding","getScopedData","initTooltipStyle","overrideTitleTooltip","placeDataLabels","resolveLines","scopeDataKeys","transitionEndAll","visaColors","validateAccessibilityProps","validateLocalizationProps","roundTo","getTextWidth","resolveLabelCollision","setSubTitle","ParallelPlot","exports","this","shouldValidateAccessibility","shouldValidateLocalization","updated","enterSize","exitSize","time","timehour","timeHour","timeday","timeDay","timeweek","timeWeek","timemonth","timeMonth","timeyear","timeYear","curveOptions","linear","curveLinear","bumpX","curveBumpX","bumpY","curveBumpY","catmullRom","curveCatmullRom","shouldUpdateXAxis","shouldUpdateYAxis","shouldUpdateXGrid","shouldUpdateYGrid","shouldValidate","shouldUpdateData","shouldSetDimensions","shouldUpdateScales","shouldUpdateTableData","shouldUpdateLabels","shouldUpdateAnnotations","shouldDrawInteractionState","shouldSetSelectionClass","shouldUpdateCursor","shouldSetColors","shouldSetSubTitle","shouldUpdateLines","shouldUpdatePoints","shouldUpdateLegend","shouldBindInteractivity","shouldUpdateLegendInteractivity","shouldResetRoot","shouldUpdateBaseline","shouldValidateInteractionKeys","shouldEnterUpdateExit","shouldSetGlobalSelections","shouldSetTestingAttributes","shouldSetLabelOpacity","shouldSetSeriesLabelOpacity","shouldSetLegendCursor","shouldAddStrokeUnder","shouldValidateSeriesLabels","shouldUpdateSeriesLabels","shouldUpdateColors","shouldUpdateStrokeWidth","shouldUpdateInterpolationData","shouldSetScaleUsed","shouldUpdateDotRadius","shouldUpdateDescriptionWrapper","shouldSetChartAccessibilityTitle","shouldSetChartAccessibilitySubtitle","shouldSetChartAccessibilityLongDescription","shouldSetChartAccessibilityExecutiveSummary","shouldSetChartAccessibilityStatisticalNotes","shouldSetChartAccessibilityStructureNotes","shouldSetParentSVGAccessibility","shouldSetGeometryAccessibilityAttributes","shouldSetGeometryAriaLabels","shouldSetGroupAccessibilityLabel","shouldSetChartAccessibilityPurpose","shouldSetChartAccessibilityContext","shouldRedrawWrapper","shouldSetTagLevels","shouldSetChartAccessibilityCount","shouldSetYAxisAccessibility","shouldSetXAxisAccessibility","shouldSetAnnotationAccessibility","shouldUpdateDashPatterns","shouldValidateDataLabelAccessor","shouldSetLocalizationConfig","topLevel","bottomLevel","strokes","b","short","med","long","dashPatterns","hiddenHash","collisionSettings","all","validPositions","offsets","middle","dynamicY","d","_this","scales","multiYScale","y","interpolateDynamicY","interpolating","handleDotStroke","i","n","hideStrokes","clicked","length","innerInteractionKeys","hovered","hoverHighlight","baseColor","select","parentNode","attr","color","calculateStrokeWidth","toLowerCase","handleLineStroke","data","colorArr","values","seriesInteraction","handleSeriesTextFill","rawColors","textColors","handleTextFill","useChildData","keys","includes","handleStrokeDasharray","key","hideTextures","class_1","prototype","dataWatcher","_newData","_oldData","idWatcher","newID","_oldID","console","error","headingWatcher","_newVal","_oldVal","titleWatcher","subtitleWatcher","dimensionWatcher","seriesAccessorWatcher","interactionKeys","ordinalAccessorWatcher","valueAccessorWatcher","xAxisWatcher","newGridVal","gridVisible","oldGridVal","newTickInterval","tickInterval","oldTickInterval","yAxisWatcher","newScaleVal","oldScaleVal","wrapLabelWatcher","showBaselineXWatcher","paletteWatcher","colorsWatcher","clickStyleWatcher","hoverStyleWatcher","cursorWatcher","strokeWidthWatcher","showDotsWatcher","dotRadiusWatcher","lineCurveWatcher","_newLineCurve","_oldLineCurve","warn","hoverOpacityWatcher","dataLabelWatcher","newVisibleVal","visible","oldVisibleVal","newPlacementVal","placement","oldPlacementVal","newAccessor","labelAccessor","oldAccessor","seriesLabelWatcher","tooltipLabelWatcher","showTooltipWatcher","accessibilityWatcher","newTitle","title","oldTitle","newExecutiveSummary","executiveSummary","oldExecutiveSummary","newPurpose","purpose","oldPurpose","newLongDescription","longDescription","oldLongDescription","newContext","contextExplanation","oldContext","newStatisticalNotes","statisticalNotes","oldStatisticalNotes","newStructureNotes","structureNotes","oldStructureNotes","newincludeDataKeyNames","includeDataKeyNames","oldincludeDataKeyNames","newElementDescriptionAccessor","elementDescriptionAccessor","oldElementDescriptionAccessor","newSmallValue","showSmallLabels","oldSmallValue","newStrokes","oldStrokes","newTextures","oldTextures","newKeyNav","keyboardNavConfig","disabled","oldKeyNav","newInterface","elementsAreInterface","oldInterface","localizationWatcher","newLanguage","language","oldLanguage","newNumeralLocale","numeralLocale","oldNumeralLocale","legendWatcher","newInteractiveVal","interactive","oldInteractiveVal","annotationsWatcher","valueOverrideWatcher","secondaryLinesWatcher","newDataLabelVal","showDataLabel","oldDataLabelVal","newSeriesLabelVal","showSeriesLabel","oldSeriesLabelVal","newKeysVal","oldKeysVal","newOpacityVal","opacity","oldOpacityVal","clickWatcher","hoverWatcher","interactionWatcher","dataKeyNamesWatcher","suppressWatcher","unitTestWatcher","componentWillLoad","chartID","uniqueID","uuid","initialLoadEvent","emit","Promise","resolve","duration","defaults","parallelChartEl","id","setLocalizationConfig","setTagLevels","setDimensions","setScaleUsed","prepareScales","prepareData","updateInterpolationData","validateInteractionKeys","validateSeriesLabels","validateDataLabelAccessor","setTableData","shouldValidateAccessibilityProps","shouldValidateLocalizationProps","setColors","componentWillUpdate","componentDidLoad","renderRootElements","renderChartRootElemets","setChartDescriptionWrapper","setChartAccessibilityTitle","setChartAccessibilitySubtitle","setChartAccessibilityLongDescription","setChartAccessibilityExecutiveSummary","setChartAccessibilityPurpose","setChartAccessibilityContext","setChartAccessibilityStatisticalNotes","setChartAccessibilityStructureNotes","setParentSVGAccessibility","reSetRoot","setSubTitleElements","drawXGrid","drawYGrid","setGlobalSelections","setTestingAttributes","drawXAxis","setXAxisAccessibility","enterYAxis","exitYAxis","drawYAxis","setYAxisAccessibility","enterChartLines","updateChartLines","exitChartLines","enterPoints","updatePoints","exitPoints","drawChartLines","drawPoints","enterSeriesLabels","updateSeriesLabels","exitSeriesLabels","enterDataLabels","updateDataLabels","exitDataLabels","setChartCountAccessibility","setGeometryAccessibilityAttributes","setGeometryAriaLabels","drawLegendElements","drawDataLabels","drawSeriesLabels","addStrokeUnder","setSelectedClass","updateCursor","bindInteractivity","setLegendCursor","bindLegendInteractivity","drawBaseline","drawAnnotations","setAnnotationAccessibility","root","node","dotG","setGroupAccessibilityID","onChangeHandler","then","initialLoadEndEvent","componentDidUpdate","updateColors","updateStrokeWidth","updateDotRadius","updateInteractionState","updateStrokePattern","setLabelOpacity","setSeriesLabelOpacity","drawEndEvent","windowInstances","languageString","i18Next","languageObject","getResourceBundle","numeralObject","numeral","localeData","skipValidation","Object","assign","disableValidation","context","onClickEvent","undefined","clickEvent","innerHeight","innerWidth","innerPaddedHeight","innerPaddedWidth","getLanguageString","subTitleG","colors","nest","adjustedColors","forEach","adjusted","push","innerScopeDataKeys","innerChartSingleAccessors","singleAccessors","accessor","min","innerChartAccessors","tableData","tableColumns","map","hashObject","concat","collisionHideOnly","x","Infinity","max","entries","scale","rangePadding","scaleLinear","domain","minValueOverride","maxValueOverride","range","ticks","invert","change_1","parent","interpolate","get","start","end","resolved","oldXDomain","oldXRange","oldYDomain","oldYRange","scalesUsed","line","curve","extent","minValue","parseFloat","maxValue","paddedMin","paddedMax","scalePoint","innerLabelAccessor","labelDetails","label","isRight","svg","append","rootG","gridG","yGroup","parallelLineG","seriesLabelG","labels","legendG","tooltipG","setTooltipInitialStyle","changeSvg","selection","namespace","easing","easeCircleIn","changeRoot","changeRootG","dataBoundToAxes","selectAll","yEnter","enter","yExit","exit","yUpdate","merge","dataBoundToLines","enterLines","exitLines","updateLines","size","dataBoundToDotWrappers","enterDotWrappers","exitDotWrappers","updateDotWrappers","dataBountToSeriesLabels","seriesLabelEnter","seriesLabelExit","seriesLabelUpdate","dataBoundToLabels","enteringLabelGroups","exitingLabelGroups","updatingLabelGroups","remove","dataBoundToDots","enterDots","exitDots","updateDots","dataBoundToLabelChildren","enteringLabels","updatingLabels","exitingLabels","unitTest","axisLabel","dataKeyNames","bandWidth","axisScale","format","hide","hidePath","transition","ease","each","onlyTickExtents","hideMe","rootEle","hasXAxis","xAxisLabel","axisLabelX","hasYAxis","yAxisLabel","markOffset","interrupt","on","onClickHandler","onHoverHandler","onMouseOutHandler","linelength","getTotalLength","call","lineOpacity","Math","classed","_","onSeriesHoverHandler","_d","order","dotOpacity","index","lineDotOpacity","enterWholeGroup","delay","exitWholeGroup","focusDidExist","parentGNode","updateTransition","transitionEndEvent","seriesLabelOpacity","Number","EPSILON","hideOnly","seriesUpdate","style","textElement","getComputedStyle","fontSize","textHeight","bitmaps","labelSelection","avoidMarks","accessors","childrenEnter","xScale","yScale","chartType","fullEnter","hidden","labelOpacity","targetOpacity","parentOpacity","updateChildren","axisRules","yAxisTexts","filter","textWidth","textContent","fontFamily","collisionPlacement","avoidCollision","runOccupancyBitmap","groupAccessor","addCollisionClass","me","prevOpacity","styleVisibility","labelsAdded","labelsRemoved","removeOnly","suppressMarkDraw","selected","selectable","source","xAccessor","yAccessor","chartTag","redraw","disableKeyNav","hideDataTable","hideDataTableButton","description","geomType","includeKeyNames","dataKeys","groupName","onChangeFunc","added","removed","target","hoverEvent","eventsTooltip","evt","event","isToShow","mouseOutEvent","_a","noSeriesAccessor","type","secondary","render","drawStartEvent","init","h","class","display","isInteractive","hasCousinNavigation","isCompact","exceptions","exception","window"],"sources":["src/components/parallel-plot/parallel-plot-default-values.ts","src/components/parallel-plot/parallel-plot.scss?tag=parallel-plot","src/components/parallel-plot/parallel-plot.tsx"],"sourcesContent":["/**\n * Copyright (c) 2020, 2021, 2022, 2023 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport Utils from '@visa/visa-charts-utils';\n\nconst { propDefaultValues } = Utils;\nexport class ParallelPlotDefaultValues {\n  static readonly mainTitle = 'Parallel Plot Title';\n  static readonly subTitle = propDefaultValues.subTitle.text;\n  static readonly height = 300;\n  static readonly width = 500;\n  static readonly margin = {\n    top: 300 * 0.01,\n    bottom: 300 * 0.01,\n    right: 500 * 0.01,\n    left: 500 * 0.01\n  };\n  static readonly padding = {\n    top: 20,\n    bottom: 50,\n    right: 100,\n    left: 75\n  };\n\n  static readonly localization = propDefaultValues.localization;\n\n  static readonly ordinalAccessor = 'label';\n  static readonly valueAccessor = 'value';\n  static readonly seriesAccessor = 'series';\n\n  static readonly accessibility = propDefaultValues.accessibility;\n  static readonly animationConfig = propDefaultValues.animationConfig;\n  static readonly highestHeadingLevel = propDefaultValues.highestHeadingLevel;\n  static readonly xAxis = propDefaultValues.xAxis;\n  static readonly yAxis = propDefaultValues.yAxis;\n  static readonly showBaselineX = propDefaultValues.showBaselineFalse;\n  static readonly wrapLabel = propDefaultValues.wrapLabel;\n  static readonly colorPalette = propDefaultValues.colorPaletteCategorical;\n\n  static readonly hoverStyle = propDefaultValues.hoverStyle;\n  static readonly clickStyle = propDefaultValues.clickStyle;\n\n  static readonly strokeWidth = propDefaultValues.strokeWidth1;\n  static readonly showDots = propDefaultValues.showDots;\n  static readonly dotRadius = propDefaultValues.dotRadius4;\n  static readonly lineCurve = propDefaultValues.lineCurve;\n  static readonly hoverOpacity = propDefaultValues.hoverOpacity;\n  static readonly cursor = propDefaultValues.cursor;\n\n  static readonly dataLabel = propDefaultValues.dataLabelBottomRight;\n  static readonly dataKeyNames;\n  static readonly seriesLabel = propDefaultValues.seriesLabel;\n  static readonly legend = propDefaultValues.hiddenLegend;\n  static readonly tooltipLabel = propDefaultValues.tooltipLabel;\n  static readonly secondaryLines = propDefaultValues.secondaryLines;\n\n  static readonly showTooltip = propDefaultValues.showTooltip;\n  static readonly suppressEvents = propDefaultValues.suppressEvents;\n  static readonly annotations = propDefaultValues.annotations;\n\n  static readonly hoverHighlight;\n  static readonly clickHighlight = propDefaultValues.clickHighlight;\n}\n","/**\n * Copyright (c) 2020, 2021, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nparallel-plot {\n  .annotations {\n    pointer-events: none;\n    .handle {\n      pointer-events: all;\n    }\n  }\n\n  .screen-reader-info {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n\n  .data-table-link {\n    color: #767676;\n    text-decoration: none;\n    font-size: 12px;\n    margin-left: 5%;\n  }\n\n  .hidden {\n    display: none;\n  }\n\n  cursor: default;\n  .axis {\n    font-size: 12px;\n    text {\n      //font: 0.65rem;\n      fill: #767676;\n    }\n\n    &-label {\n      text-anchor: middle;\n      font: 1rem sans-serif;\n    }\n    path {\n      stroke: #767676;\n    }\n  }\n\n  .grid {\n    line {\n      stroke: #767676;\n      shape-rendering: crispEdges;\n    }\n\n    path {\n      stroke-width: 0;\n      stroke: #767676;\n    }\n    &.left {\n      line {\n        stroke-dasharray: 4, 4;\n        stroke-opacity: 0.6;\n      }\n    }\n  }\n\n  .parallel-group {\n    transition: opacity 0.5s linear;\n\n    &__inactive {\n      opacity: 0;\n    }\n\n    .parallel-plot {\n      fill: none;\n    }\n\n    .dot {\n      stroke: #ffffff;\n    }\n    .parallel-series-label {\n      font-size: 1em;\n    }\n  }\n\n  .parallel-dataLabel-group {\n    text {\n      //font-size: 12px;\n    }\n  }\n\n  .parallel-legend {\n    font-size: 1em;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n\n    .legend {\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n    }\n  }\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport { Component, Element, Prop, Watch, h, Event, EventEmitter } from '@stencil/core';\n\nimport { select, event } from 'd3-selection';\nimport { max, min } from 'd3-array';\nimport { timeHour, timeDay, timeWeek, timeMonth, timeYear } from 'd3-time';\nimport { scalePoint, scaleLinear } from 'd3-scale';\nimport { line, curveLinear, curveBumpX, curveBumpY, curveCatmullRom } from 'd3-shape';\nimport { nest } from 'd3-collection';\nimport {\n  IBoxModelType,\n  ILocalizationType,\n  IHoverStyleType,\n  IClickStyleType,\n  IAxisType,\n  IDataLabelType,\n  ITooltipLabelType,\n  IAccessibilityType,\n  IAnimationConfig,\n  ILegendType,\n  ISeriesLabelType,\n  ISecondaryLinesType,\n  ISubTitleType\n} from '@visa/charts-types';\nimport { ParallelPlotDefaultValues } from './parallel-plot-default-values';\nimport { easeCircleIn } from 'd3-ease';\nimport 'd3-transition';\nimport Utils from '@visa/visa-charts-utils';\nimport { v4 as uuid } from 'uuid';\nconst {\n  getGlobalInstances,\n  configLocalization,\n  getActiveLanguageString,\n  getAccessibleStrokes,\n  ensureTextContrast,\n  createTextStrokeFilter,\n  findTagLevel,\n  prepareRenderChange,\n  initializeDescriptionRoot,\n  initializeElementAccess,\n  setElementFocusHandler,\n  setElementAccessID,\n  setAccessibilityController,\n  hideNonessentialGroups,\n  setAccessTitle,\n  setAccessSubtitle,\n  setAccessLongDescription,\n  setAccessExecutiveSummary,\n  setAccessPurpose,\n  setAccessContext,\n  setAccessStatistics,\n  setAccessChartCounts,\n  setAccessXAxis,\n  setAccessYAxis,\n  setAccessStructure,\n  setAccessAnnotation,\n  retainAccessFocus,\n  checkAccessFocus,\n  setElementInteractionAccessState,\n  setAccessibilityDescriptionWidth,\n  annotate,\n  chartAccessors,\n  checkInteraction,\n  checkClicked,\n  checkHovered,\n  convertVisaColor,\n  drawAxis,\n  drawGrid,\n  drawLegend,\n  setLegendInteractionState,\n  drawTooltip,\n  formatDataLabel,\n  getColors,\n  getLicenses,\n  getPadding,\n  getScopedData,\n  initTooltipStyle,\n  overrideTitleTooltip,\n  placeDataLabels,\n  resolveLines,\n  scopeDataKeys,\n  transitionEndAll,\n  visaColors,\n  validateAccessibilityProps,\n  validateLocalizationProps,\n  roundTo,\n  getTextWidth,\n  resolveLabelCollision,\n  setSubTitle\n} = Utils;\n\n@Component({\n  tag: 'parallel-plot',\n  styleUrl: 'parallel-plot.scss'\n})\nexport class ParallelPlot {\n  @Event() clickEvent: EventEmitter;\n  @Event() hoverEvent: EventEmitter;\n  @Event() mouseOutEvent: EventEmitter;\n  @Event() initialLoadEvent: EventEmitter;\n  @Event() initialLoadEndEvent: EventEmitter;\n  @Event() drawStartEvent: EventEmitter;\n  @Event() drawEndEvent: EventEmitter;\n  @Event() transitionEndEvent: EventEmitter;\n\n  // Chart Attributes (1/7)\n  @Prop({ mutable: true }) mainTitle: string = ParallelPlotDefaultValues.mainTitle;\n  @Prop({ mutable: true }) subTitle: string | ISubTitleType = ParallelPlotDefaultValues.subTitle;\n  @Prop({ mutable: true }) height: number = ParallelPlotDefaultValues.height;\n  @Prop({ mutable: true }) width: number = ParallelPlotDefaultValues.width;\n  @Prop({ mutable: true }) highestHeadingLevel: string | number = ParallelPlotDefaultValues.highestHeadingLevel;\n  @Prop({ mutable: true }) margin: IBoxModelType = ParallelPlotDefaultValues.margin;\n  @Prop({ mutable: true }) padding: IBoxModelType = ParallelPlotDefaultValues.padding;\n\n  // Data (2/7)\n  @Prop() data: object[];\n  @Prop() uniqueID: string;\n  @Prop({ mutable: true }) localization: ILocalizationType = ParallelPlotDefaultValues.localization;\n  @Prop({ mutable: true }) ordinalAccessor: string = ParallelPlotDefaultValues.ordinalAccessor;\n  @Prop({ mutable: true }) valueAccessor: string = ParallelPlotDefaultValues.valueAccessor;\n  @Prop({ mutable: true }) seriesAccessor: string = ParallelPlotDefaultValues.seriesAccessor;\n\n  // Axis (3/7)\n  @Prop({ mutable: true }) xAxis: IAxisType = ParallelPlotDefaultValues.xAxis;\n  @Prop({ mutable: true }) yAxis: IAxisType = ParallelPlotDefaultValues.yAxis;\n  @Prop({ mutable: true }) wrapLabel: boolean = ParallelPlotDefaultValues.wrapLabel;\n  @Prop({ mutable: true }) showBaselineX: boolean = ParallelPlotDefaultValues.showBaselineX;\n\n  // Color & Shape (4/7)\n  @Prop({ mutable: true }) colorPalette: string = ParallelPlotDefaultValues.colorPalette;\n  @Prop({ mutable: true }) colors: string[];\n  @Prop({ mutable: true }) hoverStyle: IHoverStyleType = ParallelPlotDefaultValues.hoverStyle;\n  @Prop({ mutable: true }) clickStyle: IClickStyleType = ParallelPlotDefaultValues.clickStyle;\n  @Prop({ mutable: true }) cursor: string = ParallelPlotDefaultValues.cursor;\n  @Prop({ mutable: true }) hoverOpacity: number = ParallelPlotDefaultValues.hoverOpacity;\n  @Prop({ mutable: true }) animationConfig: IAnimationConfig = ParallelPlotDefaultValues.animationConfig;\n  @Prop({ mutable: true }) strokeWidth: number = ParallelPlotDefaultValues.strokeWidth;\n  @Prop({ mutable: true }) showDots: boolean = ParallelPlotDefaultValues.showDots;\n  @Prop({ mutable: true }) dotRadius: number = ParallelPlotDefaultValues.dotRadius;\n  @Prop({ mutable: true }) lineCurve: string = ParallelPlotDefaultValues.lineCurve;\n\n  // Data label (5/7)\n  @Prop({ mutable: true }) dataLabel: IDataLabelType = ParallelPlotDefaultValues.dataLabel;\n  @Prop({ mutable: true }) dataKeyNames: object;\n  @Prop({ mutable: true }) showTooltip: boolean = ParallelPlotDefaultValues.showTooltip;\n  @Prop({ mutable: true }) tooltipLabel: ITooltipLabelType = ParallelPlotDefaultValues.tooltipLabel;\n  @Prop({ mutable: true }) accessibility: IAccessibilityType = ParallelPlotDefaultValues.accessibility;\n  @Prop({ mutable: true }) legend: ILegendType = ParallelPlotDefaultValues.legend;\n  @Prop({ mutable: true }) annotations: object[] = ParallelPlotDefaultValues.annotations;\n  @Prop({ mutable: true }) seriesLabel: ISeriesLabelType = ParallelPlotDefaultValues.seriesLabel;\n\n  // Calculation (6/7)\n  @Prop() maxValueOverride: number;\n  @Prop() minValueOverride: number;\n  @Prop({ mutable: true }) secondaryLines: ISecondaryLinesType = ParallelPlotDefaultValues.secondaryLines;\n\n  // Interactivity (7/7)\n  @Prop({ mutable: true }) suppressEvents: boolean = ParallelPlotDefaultValues.suppressEvents;\n  @Prop({ mutable: true }) hoverHighlight: object;\n  @Prop({ mutable: true }) clickHighlight: object[] = ParallelPlotDefaultValues.clickHighlight;\n  @Prop({ mutable: true }) interactionKeys: string[];\n\n  // Testing (8/7)\n  @Prop() unitTest: boolean = false;\n  //  @Prop() debugMode: boolean = false;\n\n  @Element()\n  parallelChartEl: HTMLElement;\n  shouldValidateAccessibility: boolean = true;\n  shouldValidateLocalization: boolean = true;\n  svg: any;\n  root: any;\n  rootG: any;\n  gridG: any;\n  parallelLineG: any;\n  dotG: any;\n  yEnter: any;\n  yUpdate: any;\n  yExit: any;\n  line: any;\n  seriesLabelG: any;\n  x: any;\n  y: any;\n  nest: any;\n  map: any;\n  interpolating: any;\n  innerHeight: number;\n  innerWidth: number;\n  innerPaddedHeight: number;\n  innerPaddedWidth: number;\n  innerXAxis: any;\n  innerYAxis: any;\n  innerLabelAccessor: any;\n  defaults: boolean;\n  duration: number;\n  legendG: any;\n  tooltipG: any;\n  subTitleG: any;\n  labels: any;\n  colorArr: any;\n  rawColors: any;\n  textColors: any;\n  multiYScale: any;\n  scalesUsed: any;\n  yGroup: any;\n  extent: any;\n  seriesInteraction: any;\n  updated: boolean = true;\n  enterSize: number = 0;\n  exitSize: number = 0;\n  enterLines: any;\n  exitLines: any;\n  updateLines: any;\n  enterDotWrappers: any;\n  updateDotWrappers: any;\n  exitDotWrappers: any;\n  enterDots: any;\n  updateDots: any;\n  exitDots: any;\n  enteringLabelGroups: any;\n  exitingLabelGroups: any;\n  updatingLabelGroups: any;\n  enteringLabels: any;\n  exitingLabels: any;\n  updatingLabels: any;\n  seriesLabelEnter: any;\n  seriesLabelUpdate: any;\n  seriesLabelExit: any;\n  tableData: any;\n  tableColumns: any;\n  time = {\n    timehour: timeHour,\n    timeday: timeDay,\n    timeweek: timeWeek,\n    timemonth: timeMonth,\n    timeyear: timeYear\n  };\n  curveOptions = {\n    linear: curveLinear,\n    bumpX: curveBumpX,\n    bumpY: curveBumpY,\n    catmullRom: curveCatmullRom\n  };\n  chartID: string;\n  innerInteractionKeys: any;\n  labelDetails: any;\n  seriesLabelCurrent: any;\n  isRight: any;\n  shouldUpdateXAxis: boolean = false;\n  shouldUpdateYAxis: boolean = false;\n  shouldUpdateXGrid: boolean = false;\n  shouldUpdateYGrid: boolean = false;\n  shouldValidate: boolean = false;\n  shouldUpdateData: boolean = false;\n  shouldSetDimensions: boolean = false;\n  shouldUpdateScales: boolean = false;\n  shouldUpdateTableData: boolean = false;\n  shouldUpdateLabels: boolean = false;\n  shouldUpdateAnnotations: boolean = false;\n  shouldDrawInteractionState: boolean = false;\n  shouldSetSelectionClass: boolean = false;\n  shouldUpdateCursor: boolean = false;\n  shouldSetColors: boolean = false;\n  shouldSetSubTitle: boolean = false;\n  shouldUpdateLines: boolean = false;\n  shouldUpdatePoints: boolean = false;\n  shouldUpdateLegend: boolean = false;\n  shouldBindInteractivity: boolean = false;\n  shouldUpdateLegendInteractivity: boolean = false;\n  shouldResetRoot: boolean = false;\n  shouldUpdateBaseline: boolean = false;\n  shouldValidateInteractionKeys: boolean = false;\n  shouldEnterUpdateExit: boolean = false;\n  shouldSetGlobalSelections: boolean = false;\n  shouldSetTestingAttributes: boolean = false;\n  shouldSetLabelOpacity: boolean = false;\n  shouldSetSeriesLabelOpacity: boolean = false;\n  shouldSetLegendCursor: boolean = false;\n  shouldAddStrokeUnder: boolean = false;\n  shouldValidateSeriesLabels: boolean = false;\n  shouldUpdateSeriesLabels: boolean = false;\n  shouldUpdateColors: boolean = false;\n  shouldUpdateStrokeWidth: boolean = false;\n  shouldUpdateInterpolationData: boolean = false;\n  shouldSetScaleUsed: boolean = false;\n  shouldUpdateDotRadius: boolean = false;\n  shouldUpdateDescriptionWrapper: boolean = false;\n  shouldSetChartAccessibilityTitle: boolean = false;\n  shouldSetChartAccessibilitySubtitle: boolean = false;\n  shouldSetChartAccessibilityLongDescription: boolean = false;\n  shouldSetChartAccessibilityExecutiveSummary: boolean = false;\n  shouldSetChartAccessibilityStatisticalNotes: boolean = false;\n  shouldSetChartAccessibilityStructureNotes: boolean = false;\n  shouldSetParentSVGAccessibility: boolean = false;\n  shouldSetGeometryAccessibilityAttributes: boolean = false;\n  shouldSetGeometryAriaLabels: boolean = false;\n  shouldSetGroupAccessibilityLabel: boolean = false;\n  shouldSetChartAccessibilityPurpose: boolean = false;\n  shouldSetChartAccessibilityContext: boolean = false;\n  shouldRedrawWrapper: boolean = false;\n  shouldSetTagLevels: boolean = false;\n  shouldSetChartAccessibilityCount: boolean = false;\n  shouldSetYAxisAccessibility: boolean = false;\n  shouldSetXAxisAccessibility: boolean = false;\n  shouldSetAnnotationAccessibility: boolean = false;\n  shouldUpdateDashPatterns: boolean = false;\n  shouldValidateDataLabelAccessor: boolean = false;\n  shouldSetLocalizationConfig: boolean = false;\n  topLevel: string = 'h2';\n  bottomLevel: string = 'p';\n  strokes: any = {};\n  b: string = ',';\n  short: string = '2,2';\n  med: string = '4,2';\n  long: string = '8,2';\n  dashPatterns: any = [\n    '',\n    this.long,\n    this.long + this.b + this.med,\n    this.short + this.b + this.long + this.b + this.long,\n    this.short + this.b + this.short + this.b + this.long\n  ];\n  bitmaps: any;\n  hiddenHash: object = {};\n  collisionSettings: object = {\n    all: {\n      validPositions: ['top', 'bottom', 'left', 'right', 'bottom-right', 'bottom-left', 'top-left', 'top-right'],\n      offsets: [3, 2, 4, 4, 1, 1, 1, 1]\n    },\n    top: {\n      validPositions: ['top', 'top-left', 'top-right'],\n      offsets: [3, 1, 1]\n    },\n    middle: {\n      validPositions: ['left', 'right'],\n      offsets: [4, 4]\n    },\n    bottom: {\n      validPositions: ['bottom', 'bottom-left', 'bottom-right'],\n      offsets: [2, 1, 1]\n    },\n    right: {\n      validPositions: ['right', 'top-right', 'bottom-right'],\n      offsets: [4, 1, 1]\n    },\n    left: {\n      validPositions: ['left', 'top-left', 'bottom-left'],\n      offsets: [4, 1, 1]\n    }\n  };\n\n  @Watch('data')\n  dataWatcher(_newData, _oldData) {\n    this.updated = true;\n    this.shouldSetScaleUsed = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateData = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldSetColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateTableData = true;\n    this.shouldValidate = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('uniqueID')\n  idWatcher(newID, _oldID) {\n    console.error(\n      'Change detected in prop uniqueID from value ' +\n        _oldID +\n        ' to value ' +\n        newID +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.chartID = newID;\n    // this.parallelChartEl.id = this.chartID;\n    // this.shouldValidate = true;\n    // this.shouldUpdateDescriptionWrapper = true;\n    // this.shouldSetParentSVGAccessibility = true;\n    // this.shouldUpdateLegend = true;\n    // this.shouldUpdateLegend = true;\n    // this.shouldAddStrokeUnder = true;\n  }\n\n  @Watch('highestHeadingLevel')\n  headingWatcher(_newVal, _oldVal) {\n    this.shouldRedrawWrapper = true;\n    this.shouldSetTagLevels = true;\n    this.shouldSetChartAccessibilityCount = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('mainTitle')\n  titleWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('subTitle')\n  subtitleWatcher(_newVal, _oldVal) {\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('height')\n  @Watch('width')\n  @Watch('padding')\n  @Watch('margin')\n  dimensionWatcher(_newVal, _oldVal) {\n    this.shouldSetDimensions = true;\n    this.shouldResetRoot = true;\n    this.shouldSetScaleUsed = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('seriesAccessor')\n  seriesAccessorWatcher(_newVal, _oldVal) {\n    this.shouldSetScaleUsed = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateData = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldSetColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldValidate = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n    this.shouldUpdateLabels = true;\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n  }\n\n  @Watch('ordinalAccessor')\n  ordinalAccessorWatcher(_newVal, _oldVal) {\n    this.shouldSetGlobalSelections = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetScaleUsed = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateAnnotations = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateStrokeWidth = true;\n  }\n\n  @Watch('valueAccessor')\n  valueAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldSetScaleUsed = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldSetColors = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldValidateDataLabelAccessor = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGlobalSelections = true;\n  }\n\n  @Watch('xAxis')\n  xAxisWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateXGrid = true;\n    }\n    this.shouldSetXAxisAccessibility = true;\n  }\n\n  @Watch('yAxis')\n  yAxisWatcher(_newVal, _oldVal) {\n    const newScaleVal = _newVal && _newVal.scales ? _newVal.scales : false;\n    const oldScaleVal = _oldVal && _oldVal.scales ? _oldVal.scales : false;\n    if (newScaleVal !== oldScaleVal) {\n      this.shouldSetScaleUsed = true;\n      this.shouldUpdateScales = true;\n      this.shouldUpdateData = true;\n      this.shouldUpdateInterpolationData = true;\n      this.shouldUpdateLines = true;\n      this.shouldUpdatePoints = true;\n      this.shouldUpdateYGrid = true;\n      this.shouldUpdateSeriesLabels = true;\n      this.shouldUpdateLabels = true;\n    }\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateYGrid = true;\n    }\n  }\n\n  @Watch('wrapLabel')\n  wrapLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n  }\n\n  @Watch('showBaselineX')\n  showBaselineXWatcher(_newVal, _oldVal) {\n    this.shouldUpdateBaseline = true;\n  }\n\n  @Watch('colorPalette')\n  paletteWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldUpdateColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n  }\n\n  @Watch('colors')\n  colorsWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldUpdateColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n  }\n\n  @Watch('clickStyle')\n  clickStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n    this.shouldSetColors = true;\n  }\n\n  @Watch('hoverStyle')\n  hoverStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n    this.shouldSetColors = true;\n  }\n\n  @Watch('cursor')\n  cursorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCursor = true;\n    this.shouldSetLegendCursor = true;\n  }\n\n  @Watch('strokeWidth')\n  strokeWidthWatcher(_newVal, _oldVal) {\n    this.shouldUpdateStrokeWidth = true;\n  }\n\n  @Watch('showDots')\n  showDotsWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('dotRadius')\n  dotRadiusWatcher(_newVal, _oldVal) {\n    this.shouldUpdateDotRadius = true;\n  }\n\n  @Watch('lineCurve')\n  lineCurveWatcher(_newLineCurve, _oldLineCurve) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    console.warn(\n      'Change detected in prop lineCurve from value ' +\n        _newLineCurve +\n        ' to value ' +\n        _oldLineCurve +\n        '. Transition effects for this prop have not been implemented.'\n    );\n  }\n\n  @Watch('hoverOpacity')\n  hoverOpacityWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n  }\n\n  @Watch('dataLabel')\n  dataLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTableData = true;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    const newPlacementVal = _newVal && _newVal.placement ? _newVal.placement : false;\n    const oldPlacementVal = _oldVal && _oldVal.placement ? _oldVal.placement : false;\n    const newAccessor = _newVal && _newVal.labelAccessor ? _newVal.labelAccessor : false;\n    const oldAccessor = _oldVal && _oldVal.labelAccessor ? _oldVal.labelAccessor : false;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetLabelOpacity = true;\n    }\n    if (newPlacementVal !== oldPlacementVal) {\n      this.shouldUpdateSeriesLabels = true;\n    }\n    if (newAccessor !== oldAccessor) {\n      this.shouldValidateDataLabelAccessor = true;\n    }\n  }\n\n  @Watch('seriesLabel')\n  seriesLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateTableData = true;\n    this.shouldValidateSeriesLabels = true;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetSeriesLabelOpacity = true;\n    }\n  }\n\n  @Watch('tooltipLabel')\n  tooltipLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('showTooltip')\n  showTooltipWatcher(_newVal, _oldVal) {\n    // this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('accessibility')\n  accessibilityWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    const newTitle = _newVal && _newVal.title ? _newVal.title : false;\n    const oldTitle = _oldVal && _oldVal.title ? _oldVal.title : false;\n    if (newTitle !== oldTitle) {\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newExecutiveSummary = _newVal && _newVal.executiveSummary ? _newVal.executiveSummary : false;\n    const oldExecutiveSummary = _oldVal && _oldVal.executiveSummary ? _oldVal.executiveSummary : false;\n    if (newExecutiveSummary !== oldExecutiveSummary) {\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n    }\n    const newPurpose = _newVal && _newVal.purpose ? _newVal.purpose : false;\n    const oldPurpose = _oldVal && _oldVal.purpose ? _oldVal.purpose : false;\n    if (newPurpose !== oldPurpose) {\n      this.shouldSetChartAccessibilityPurpose = true;\n    }\n    const newLongDescription = _newVal && _newVal.longDescription ? _newVal.longDescription : false;\n    const oldLongDescription = _oldVal && _oldVal.longDescription ? _oldVal.longDescription : false;\n    if (newLongDescription !== oldLongDescription) {\n      this.shouldSetChartAccessibilityLongDescription = true;\n    }\n    const newContext = _newVal && _newVal.contextExplanation ? _newVal.contextExplanation : false;\n    const oldContext = _oldVal && _oldVal.contextExplanation ? _oldVal.contextExplanation : false;\n    if (newContext !== oldContext) {\n      this.shouldSetChartAccessibilityContext = true;\n    }\n    const newStatisticalNotes = _newVal && _newVal.statisticalNotes ? _newVal.statisticalNotes : false;\n    const oldStatisticalNotes = _oldVal && _oldVal.statisticalNotes ? _oldVal.statisticalNotes : false;\n    if (newStatisticalNotes !== oldStatisticalNotes) {\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n    }\n    const newStructureNotes = _newVal && _newVal.structureNotes ? _newVal.structureNotes : false;\n    const oldStructureNotes = _oldVal && _oldVal.structureNotes ? _oldVal.structureNotes : false;\n    if (newStructureNotes !== oldStructureNotes) {\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    const newincludeDataKeyNames = _newVal && _newVal.includeDataKeyNames;\n    const oldincludeDataKeyNames = _oldVal && _oldVal.includeDataKeyNames;\n    const newElementDescriptionAccessor =\n      _newVal && _newVal.elementDescriptionAccessor ? _newVal.elementDescriptionAccessor : false;\n    const oldElementDescriptionAccessor =\n      _oldVal && _oldVal.elementDescriptionAccessor ? _oldVal.elementDescriptionAccessor : false;\n    if (\n      newincludeDataKeyNames !== oldincludeDataKeyNames ||\n      newElementDescriptionAccessor !== oldElementDescriptionAccessor\n    ) {\n      if (newincludeDataKeyNames !== oldincludeDataKeyNames) {\n        // this one is tricky because it needs to run after the lifecycle\n        // AND it could run in the off-chance this prop is changed\n        this.shouldSetGroupAccessibilityLabel = true;\n      }\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newSmallValue = _newVal && _newVal.showSmallLabels ? _newVal.showSmallLabels : false;\n    const oldSmallValue = _oldVal && _oldVal.showSmallLabels ? _oldVal.showSmallLabels : false;\n    if (newSmallValue !== oldSmallValue) {\n      this.shouldSetLabelOpacity = true;\n    }\n    const newStrokes = _newVal && _newVal.hideStrokes ? _newVal.hideStrokes : false;\n    const oldStrokes = _oldVal && _oldVal.hideStrokes ? _oldVal.hideStrokes : false;\n    if (newStrokes !== oldStrokes) {\n      this.shouldUpdateStrokeWidth = true;\n      this.shouldSetColors = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newTextures = _newVal && _newVal.hideTextures ? _newVal.hideTextures : false;\n    const oldTextures = _oldVal && _oldVal.hideTextures ? _oldVal.hideTextures : false;\n    if (newTextures !== oldTextures) {\n      this.shouldUpdateDashPatterns = true;\n      this.shouldUpdateLegend = true;\n    }\n    const newKeyNav =\n      _newVal && _newVal.keyboardNavConfig && _newVal.keyboardNavConfig.disabled\n        ? _newVal.keyboardNavConfig.disabled\n        : false;\n    const oldKeyNav =\n      _oldVal && _oldVal.keyboardNavConfig && _oldVal.keyboardNavConfig.disabled\n        ? _oldVal.keyboardNavConfig.disabled\n        : false;\n    const newInterface = _newVal && _newVal.elementsAreInterface ? _newVal.elementsAreInterface : false;\n    const oldInterface = _oldVal && _oldVal.elementsAreInterface ? _oldVal.elementsAreInterface : false;\n    if (newKeyNav !== oldKeyNav || newInterface !== oldInterface) {\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetChartAccessibilitySubtitle = true;\n      this.shouldSetChartAccessibilityLongDescription = true;\n      this.shouldSetChartAccessibilityContext = true;\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n      this.shouldSetChartAccessibilityPurpose = true;\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    if (newInterface !== oldInterface) {\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('localization')\n  localizationWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n\n    // language\n    const newLanguage = _newVal && _newVal.language ? _newVal.language : false;\n    const oldLanguage = _oldVal && _oldVal.language ? _oldVal.language : false;\n    if (newLanguage !== oldLanguage) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n\n    // numeralLocale\n    const newNumeralLocale = _newVal && _newVal.numeralLocale ? _newVal.numeralLocale : false;\n    const oldNumeralLocale = _oldVal && _oldVal.numeralLocale ? _oldVal.numeralLocale : false;\n    if (newNumeralLocale !== oldNumeralLocale) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n  }\n\n  @Watch('legend')\n  legendWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLegend = true;\n    const newInteractiveVal = _newVal && _newVal.interactive;\n    const oldInteractiveVal = _oldVal && _oldVal.interactive;\n    if (newInteractiveVal !== oldInteractiveVal) {\n      this.shouldSetLegendCursor = true;\n      this.shouldUpdateLegendInteractivity = true;\n    }\n  }\n\n  @Watch('annotations')\n  annotationsWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetAnnotationAccessibility = true;\n  }\n\n  @Watch('maxValueOverride')\n  @Watch('minValueOverride')\n  valueOverrideWatcher(_newVal, _oldVal) {\n    this.shouldSetScaleUsed = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('secondaryLines')\n  secondaryLinesWatcher(_newVal, _oldVal) {\n    const newDataLabelVal = _newVal && _newVal.showDataLabel;\n    const oldDataLabelVal = _oldVal && _oldVal.showDataLabel;\n    const newSeriesLabelVal = _newVal && _newVal.showSeriesLabel;\n    const oldSeriesLabelVal = _oldVal && _oldVal.showSeriesLabel;\n    const newKeysVal = _newVal && _newVal.keys ? _newVal.keys : false;\n    const oldKeysVal = _oldVal && _oldVal.keys ? _oldVal.keys : false;\n    const newOpacityVal = _newVal && _newVal.opacity ? _newVal.opacity : 0;\n    const oldOpacityVal = _oldVal && _oldVal.opacity ? _oldVal.opacity : 0;\n    if (newKeysVal !== oldKeysVal) {\n      this.shouldUpdateLines = true;\n      this.shouldSetLabelOpacity = true;\n      this.shouldSetSeriesLabelOpacity = true;\n    }\n    if (newDataLabelVal !== oldDataLabelVal) {\n      this.shouldSetLabelOpacity = true;\n    }\n    if (newSeriesLabelVal !== oldSeriesLabelVal) {\n      this.shouldUpdateLabels = true;\n    }\n    if (newOpacityVal !== oldOpacityVal) {\n      this.shouldDrawInteractionState = true;\n      this.shouldSetSeriesLabelOpacity = true;\n    }\n  }\n\n  @Watch('clickHighlight')\n  clickWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n  }\n\n  @Watch('hoverHighlight')\n  hoverWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n  }\n\n  @Watch('interactionKeys')\n  interactionWatcher(_newVal, _oldVal) {\n    this.shouldValidateInteractionKeys = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n  }\n\n  @Watch('dataKeyNames')\n  dataKeyNamesWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('suppressEvents')\n  suppressWatcher(_newVal, _oldVal) {\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldSetLegendCursor = true;\n    this.shouldUpdateLegendInteractivity = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldRedrawWrapper = true;\n    this.shouldValidate = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('unitTest')\n  unitTestWatcher(_newVal, _oldVal) {\n    this.shouldSetTestingAttributes = true;\n  }\n\n  componentWillLoad() {\n    const chartID = this.uniqueID || 'parallel-plot-' + uuid();\n    this.initialLoadEvent.emit({ chartID: chartID });\n    // contrary to componentWillUpdate, this method appears safe to use for\n    // any calculations we need. Keeping them here reduces future refactor,\n    // since componentWillUpdate should eventually mirror this method\n    return new Promise(resolve => {\n      this.duration = 0;\n      this.defaults = true;\n      this.chartID = chartID;\n      this.parallelChartEl.id = this.chartID;\n      this.setLocalizationConfig();\n      this.setTagLevels();\n      this.setDimensions();\n      this.setScaleUsed();\n      this.prepareScales();\n      this.prepareData();\n      this.updateInterpolationData();\n      this.validateInteractionKeys();\n      this.validateSeriesLabels();\n      this.validateDataLabelAccessor();\n      this.setTableData();\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.setColors();\n      resolve('component will load');\n    });\n  }\n\n  componentWillUpdate() {\n    // NEVER put items in this method that rely on props (until stencil bug is resolved)\n    // All items that belong here are currently at the top of render\n    // see: https://github.com/ionic-team/stencil/issues/2061#issuecomment-578282178\n    return new Promise(resolve => {\n      resolve('component will update');\n    });\n  }\n\n  componentDidLoad() {\n    return new Promise(resolve => {\n      this.renderRootElements();\n      this.renderChartRootElemets();\n      this.setChartDescriptionWrapper();\n      this.setChartAccessibilityTitle();\n      this.setChartAccessibilitySubtitle();\n      this.setChartAccessibilityLongDescription();\n      this.setChartAccessibilityExecutiveSummary();\n      this.setChartAccessibilityPurpose();\n      this.setChartAccessibilityContext();\n      this.setChartAccessibilityStatisticalNotes();\n      this.setChartAccessibilityStructureNotes();\n      this.setParentSVGAccessibility();\n      this.reSetRoot();\n      this.setSubTitleElements();\n      this.drawXGrid();\n      this.drawYGrid();\n      this.setGlobalSelections();\n      this.setTestingAttributes();\n      this.drawXAxis();\n      this.setXAxisAccessibility();\n      this.enterYAxis();\n      this.exitYAxis();\n      this.drawYAxis();\n      this.setYAxisAccessibility();\n      this.enterChartLines();\n      this.updateChartLines();\n      this.exitChartLines();\n      this.enterPoints();\n      this.updatePoints();\n      this.exitPoints();\n      this.drawChartLines();\n      this.drawPoints();\n      this.enterSeriesLabels();\n      this.updateSeriesLabels();\n      this.exitSeriesLabels();\n      this.enterDataLabels();\n      this.updateDataLabels();\n      this.exitDataLabels();\n      this.setChartCountAccessibility();\n      this.setGeometryAccessibilityAttributes();\n      this.setGeometryAriaLabels();\n      this.drawLegendElements();\n      this.drawDataLabels();\n      this.drawSeriesLabels();\n      this.addStrokeUnder();\n      this.setSelectedClass();\n      // this.updateInteractionState();\n      // this.setLabelOpacity();\n      // this.setSeriesLabelOpacity();\n      this.updateCursor();\n      this.bindInteractivity();\n      this.setLegendCursor();\n      this.bindLegendInteractivity();\n      this.drawBaseline();\n      this.drawAnnotations();\n      this.setAnnotationAccessibility();\n      hideNonessentialGroups(this.root.node(), this.dotG.node());\n      this.setGroupAccessibilityID();\n      this.onChangeHandler();\n      this.defaults = false;\n      resolve('component did load');\n    }).then(() => this.initialLoadEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  componentDidUpdate() {\n    return new Promise(resolve => {\n      this.duration = !this.animationConfig || !this.animationConfig.disabled ? 750 : 0;\n      if (this.shouldUpdateDescriptionWrapper) {\n        this.setChartDescriptionWrapper();\n        this.shouldUpdateDescriptionWrapper = false;\n      }\n      if (this.shouldSetChartAccessibilityCount) {\n        this.setChartCountAccessibility();\n        this.shouldSetChartAccessibilityCount = false;\n      }\n      if (this.shouldSetChartAccessibilityTitle) {\n        this.setChartAccessibilityTitle();\n        this.shouldSetChartAccessibilityTitle = false;\n      }\n      if (this.shouldSetChartAccessibilitySubtitle) {\n        this.setChartAccessibilitySubtitle();\n        this.shouldSetChartAccessibilitySubtitle = false;\n      }\n      if (this.shouldSetChartAccessibilityLongDescription) {\n        this.setChartAccessibilityLongDescription();\n        this.shouldSetChartAccessibilityLongDescription = false;\n      }\n      if (this.shouldSetChartAccessibilityExecutiveSummary) {\n        this.setChartAccessibilityExecutiveSummary();\n        this.shouldSetChartAccessibilityExecutiveSummary = false;\n      }\n      if (this.shouldSetChartAccessibilityPurpose) {\n        this.setChartAccessibilityPurpose();\n        this.shouldSetChartAccessibilityPurpose = false;\n      }\n      if (this.shouldSetChartAccessibilityContext) {\n        this.setChartAccessibilityContext();\n        this.shouldSetChartAccessibilityContext = false;\n      }\n      if (this.shouldSetChartAccessibilityStatisticalNotes) {\n        this.setChartAccessibilityStatisticalNotes();\n        this.shouldSetChartAccessibilityStatisticalNotes = false;\n      }\n      if (this.shouldSetChartAccessibilityStructureNotes) {\n        this.setChartAccessibilityStructureNotes();\n        this.shouldSetChartAccessibilityStructureNotes = false;\n      }\n      if (this.shouldSetParentSVGAccessibility) {\n        this.setParentSVGAccessibility();\n        this.shouldSetParentSVGAccessibility = false;\n      }\n      if (this.shouldResetRoot) {\n        this.reSetRoot();\n        this.shouldResetRoot = false;\n      }\n      if (this.shouldUpdateXGrid) {\n        this.drawXGrid();\n        this.shouldUpdateXGrid = false;\n      }\n      if (this.shouldUpdateYGrid) {\n        this.drawYGrid();\n        this.shouldUpdateYGrid = false;\n      }\n      if (this.shouldSetGlobalSelections) {\n        this.setGlobalSelections();\n        this.shouldSetGlobalSelections = false;\n      }\n      if (this.shouldSetTestingAttributes) {\n        this.setTestingAttributes();\n        this.shouldSetTestingAttributes = false;\n      }\n      if (this.shouldSetSubTitle) {\n        this.setSubTitleElements();\n        this.shouldSetSubTitle = false;\n      }\n      if (this.shouldEnterUpdateExit) {\n        this.enterYAxis();\n        this.exitYAxis();\n        this.enterChartLines();\n        this.updateChartLines();\n        this.exitChartLines();\n        this.enterPoints();\n        this.updatePoints();\n        this.exitPoints();\n        this.enterSeriesLabels();\n        this.updateSeriesLabels();\n        this.exitSeriesLabels();\n        this.enterDataLabels();\n        this.updateDataLabels();\n        this.exitDataLabels();\n        this.shouldEnterUpdateExit = false;\n      }\n      if (this.shouldUpdateXAxis) {\n        this.drawXAxis();\n        this.shouldUpdateXAxis = false;\n      }\n      if (this.shouldUpdateYAxis) {\n        this.drawYAxis();\n        this.shouldUpdateYAxis = false;\n      }\n      if (this.shouldSetXAxisAccessibility) {\n        this.setXAxisAccessibility();\n        this.shouldSetXAxisAccessibility = false;\n      }\n      if (this.shouldSetYAxisAccessibility) {\n        this.setYAxisAccessibility();\n        this.shouldSetYAxisAccessibility = false;\n      }\n      if (this.shouldUpdateLines) {\n        this.drawChartLines();\n        this.shouldUpdateLines = false;\n      }\n      if (this.shouldUpdatePoints) {\n        this.drawPoints();\n        this.shouldUpdatePoints = false;\n      }\n      if (this.shouldSetGeometryAccessibilityAttributes) {\n        this.setGeometryAccessibilityAttributes();\n        this.shouldSetGeometryAccessibilityAttributes = false;\n      }\n      if (this.shouldSetGeometryAriaLabels) {\n        this.setGeometryAriaLabels();\n        this.shouldSetGeometryAriaLabels = false;\n      }\n      if (this.shouldSetGroupAccessibilityLabel) {\n        this.setGroupAccessibilityID();\n        this.shouldSetGroupAccessibilityLabel = false;\n      }\n      if (this.shouldUpdateColors) {\n        this.updateColors();\n        this.shouldUpdateColors = false;\n      }\n      if (this.shouldUpdateLegend) {\n        this.drawLegendElements();\n        this.shouldUpdateLegend = false;\n      }\n      if (this.shouldUpdateLabels) {\n        this.drawDataLabels();\n        this.shouldUpdateLabels = false;\n      }\n      if (this.shouldUpdateSeriesLabels) {\n        this.drawSeriesLabels();\n        this.shouldUpdateSeriesLabels = false;\n      }\n      if (this.addStrokeUnder) {\n        this.addStrokeUnder();\n        this.shouldAddStrokeUnder = false;\n      }\n      if (this.shouldUpdateStrokeWidth) {\n        this.updateStrokeWidth();\n        this.shouldUpdateStrokeWidth = false;\n      }\n      if (this.shouldUpdateDotRadius) {\n        this.updateDotRadius();\n        this.shouldUpdateDotRadius = false;\n      }\n      if (this.shouldDrawInteractionState) {\n        this.updateInteractionState();\n        this.shouldDrawInteractionState = false;\n      }\n      if (this.shouldUpdateDashPatterns) {\n        this.updateStrokePattern();\n        this.shouldUpdateDashPatterns = false;\n      }\n      if (this.shouldSetLabelOpacity) {\n        this.setLabelOpacity();\n        this.shouldSetLabelOpacity = false;\n      }\n      if (this.shouldSetSeriesLabelOpacity) {\n        this.setSeriesLabelOpacity();\n        this.shouldSetSeriesLabelOpacity = false;\n      }\n      if (this.shouldSetSelectionClass) {\n        this.setSelectedClass();\n        this.shouldSetSelectionClass = false;\n      }\n      if (this.shouldUpdateLegendInteractivity) {\n        this.bindLegendInteractivity();\n        this.shouldUpdateLegendInteractivity = false;\n      }\n      if (this.shouldSetLegendCursor) {\n        this.setLegendCursor();\n        this.shouldSetLegendCursor = false;\n      }\n      if (this.shouldUpdateCursor) {\n        this.updateCursor();\n        this.shouldUpdateCursor = false;\n      }\n      if (this.shouldBindInteractivity) {\n        this.bindInteractivity();\n        this.shouldBindInteractivity = false;\n      }\n      if (this.shouldUpdateAnnotations) {\n        this.drawAnnotations();\n        this.shouldUpdateAnnotations = false;\n      }\n      if (this.shouldSetAnnotationAccessibility) {\n        this.setAnnotationAccessibility();\n        this.shouldSetAnnotationAccessibility = false;\n      }\n      if (this.shouldUpdateBaseline) {\n        this.drawBaseline();\n        this.shouldUpdateBaseline = false;\n      }\n      this.onChangeHandler();\n      resolve('component did update');\n    }).then(() => this.drawEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  shouldValidateLocalizationProps() {\n    const windowInstances = getGlobalInstances();\n    const languageString = windowInstances.i18Next.language;\n    const languageObject = windowInstances.i18Next.getResourceBundle(languageString);\n    const numeralObject = windowInstances.numeral.localeData();\n    if (this.shouldValidateLocalization && !this.localization.skipValidation) {\n      this.shouldValidateLocalization = false;\n      validateLocalizationProps(this.chartID, {\n        ...this.localization,\n        language: languageObject,\n        numeralLocale: numeralObject\n      });\n    }\n  }\n\n  shouldValidateAccessibilityProps() {\n    if (this.shouldValidateAccessibility && !this.accessibility.disableValidation) {\n      this.shouldValidateAccessibility = false;\n      validateAccessibilityProps(\n        this.chartID,\n        { ...this.accessibility },\n        {\n          annotations: this.annotations,\n          data: this.data,\n          uniqueID: this.uniqueID,\n          context: {\n            mainTitle: this.mainTitle,\n            onClickEvent: this.suppressEvents ? undefined : this.clickEvent.emit\n          }\n        }\n      );\n    }\n  }\n\n  setDimensions() {\n    this.padding = typeof this.padding === 'string' ? getPadding(this.padding) : this.padding;\n    this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n    this.innerWidth = this.width - this.margin.left - this.margin.right;\n\n    this.innerPaddedHeight = this.innerHeight - this.padding.top - this.padding.bottom;\n    this.innerPaddedWidth = this.innerWidth - this.padding.left - this.padding.right;\n  }\n\n  validateInteractionKeys() {\n    this.innerInteractionKeys =\n      this.interactionKeys && this.interactionKeys.length ? this.interactionKeys : [this.seriesAccessor];\n\n    this.seriesInteraction =\n      this.innerInteractionKeys.length === 1 && this.innerInteractionKeys[0] === this.seriesAccessor;\n  }\n\n  getLanguageString() {\n    return getActiveLanguageString(this.localization);\n  }\n\n  setLocalizationConfig() {\n    configLocalization(this.localization);\n  }\n\n  setSubTitleElements() {\n    setSubTitle({\n      root: this.subTitleG,\n      subTitle: this.subTitle\n    });\n  }\n\n  setColors() {\n    this.rawColors = this.colors ? convertVisaColor(this.colors) : getColors(this.colorPalette, this.nest.length);\n    this.textColors = {};\n    let adjustedColors = this.rawColors;\n    this.strokes = {};\n    if (!this.accessibility.hideStrokes) {\n      adjustedColors = [];\n    }\n    this.rawColors.forEach(color => {\n      if (!this.accessibility.hideStrokes) {\n        const strokes = getAccessibleStrokes(color);\n        const adjusted = strokes.length === 2 ? strokes[1] : strokes[0];\n        this.strokes[color.toLowerCase()] = adjusted;\n        adjustedColors.push(adjusted);\n      }\n      this.textColors[color.toLowerCase()] = ensureTextContrast(color, '#ffffff', 4.5);\n    });\n    if (this.hoverStyle && this.hoverStyle.color) {\n      if (!this.accessibility.hideStrokes) {\n        const strokes = getAccessibleStrokes(this.hoverStyle.color);\n        const adjusted = strokes.length === 2 ? strokes[1] : strokes[0];\n        this.strokes[this.hoverStyle.color.toLowerCase()] = adjusted;\n      }\n      this.textColors[this.hoverStyle.color.toLowerCase()] = ensureTextContrast(this.hoverStyle.color, '#ffffff', 4.5);\n    }\n    if (this.clickStyle && this.clickStyle.color) {\n      if (!this.accessibility.hideStrokes) {\n        const strokes = getAccessibleStrokes(this.clickStyle.color);\n        const adjusted = strokes.length === 2 ? strokes[1] : strokes[0];\n        this.strokes[this.clickStyle.color.toLowerCase()] = adjusted;\n      }\n      this.textColors[this.clickStyle.color.toLowerCase()] = ensureTextContrast(this.clickStyle.color, '#ffffff', 4.5);\n    }\n    this.colorArr = adjustedColors;\n  }\n\n  innerScopeDataKeys() {\n    // generate scoped and formatted data for data-table component\n    // we also scope singleAccessor array in chartAccessors based on what is actually in the data\n    const innerChartSingleAccessors = [];\n    chartAccessors.singleAccessors.forEach(accessor => {\n      if (this[accessor] && min(this.data, d => d[this[accessor]]) !== undefined) {\n        innerChartSingleAccessors.push(accessor);\n      }\n    });\n    const innerChartAccessors = { ...chartAccessors, singleAccessors: innerChartSingleAccessors };\n    return scopeDataKeys(this, innerChartAccessors, 'parallel-plot');\n  }\n\n  setTableData() {\n    // generate scoped and formatted data for data-table component\n    const keys = this.innerScopeDataKeys();\n    this.tableData = getScopedData(this.data, keys);\n    this.tableColumns = Object.keys(keys);\n  }\n\n  prepareData() {\n    this.multiYScale = {};\n\n    this.data.map(d => {\n      const hashObject = this.hiddenHash[`${d[this.ordinalAccessor]}-${d[this.seriesAccessor] || 'b'}`];\n      if (\n        hashObject &&\n        (this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly) &&\n        !d['enter'] &&\n        !d['exit']\n      ) {\n        d['hidden'] = hashObject['data-label-hidden'];\n        d['auto-x'] = hashObject.x;\n        d['auto-y'] = hashObject.y;\n        d['auto-text-anchor'] = hashObject['text-anchor'];\n      }\n    });\n\n    this.nest = nest()\n      .key(d => {\n        if (!this.multiYScale[d[this.ordinalAccessor]]) {\n          this.multiYScale[d[this.ordinalAccessor]] = {\n            min: Infinity,\n            max: 0\n          };\n        }\n        if (this.multiYScale[d[this.ordinalAccessor]].min > d[this.valueAccessor]) {\n          this.multiYScale[d[this.ordinalAccessor]].min = d[this.valueAccessor];\n        }\n        if (this.multiYScale[d[this.ordinalAccessor]].max < d[this.valueAccessor]) {\n          this.multiYScale[d[this.ordinalAccessor]].max = d[this.valueAccessor];\n        }\n        return d[this.seriesAccessor];\n      })\n      .entries(this.data);\n\n    this.map = nest()\n      .key(d => d[this.seriesAccessor])\n      .map(this.data);\n\n    const keys = Object.keys(this.multiYScale);\n\n    keys.forEach(key => {\n      const scale = this.multiYScale[key];\n      const rangePadding = this.innerPaddedHeight * 0.05;\n      scale.y = scaleLinear()\n        .domain([\n          this.minValueOverride || this.minValueOverride === 0 ? this.minValueOverride : scale.min,\n          this.maxValueOverride || this.maxValueOverride === 0 ? this.maxValueOverride : scale.max\n        ])\n        .range([this.innerPaddedHeight - rangePadding, 0 + rangePadding]);\n      scale.ticks = [scale.y.invert(this.innerPaddedHeight), scale.y.invert(0)];\n    });\n  }\n\n  updateInterpolationData() {\n    if (this.interpolating) {\n      let change = this.nest.length;\n      this.nest.forEach(parent => {\n        parent.interpolate = {};\n\n        const left = this.interpolating.map.get(parent.key);\n        const right = parent.values;\n\n        if (!left) {\n          parent.interpolate.start = right;\n          parent.interpolate.end = right;\n        } else {\n          const resolved = resolveLines(left, right, this.ordinalAccessor);\n          if (!resolved.length) {\n            parent.interpolate.start = left;\n            parent.interpolate.end = right;\n            change--;\n          } else {\n            parent.interpolate.start = resolved[0];\n            parent.interpolate.end = resolved[1];\n          }\n        }\n      });\n      if (!change && this.nest.length === this.interpolating.length) {\n        this.interpolating = false;\n      }\n    }\n  }\n\n  prepareScales() {\n    if (this.nest) {\n      this.interpolating = this.nest;\n      const oldXDomain = this.x.domain();\n      const oldXRange = this.x.range();\n      const oldYDomain = this.y.domain();\n      const oldYRange = this.y.range();\n      this.interpolating.scales = this.scalesUsed;\n      this.interpolating.multiYScale = { ...this.multiYScale };\n      this.interpolating.x = this.x.domain(oldXDomain).range(oldXRange);\n      this.interpolating.y = scaleLinear()\n        .domain(oldYDomain)\n        .range(oldYRange);\n      this.interpolating.line = line()\n        .x(d => this.interpolating.x(d[this.ordinalAccessor]))\n        .y(d => {\n          if (this.interpolating.scales === 'individual') {\n            return this.interpolating.multiYScale[d[this.ordinalAccessor]].y(d[this.valueAccessor]);\n          }\n          return this.interpolating.y(d[this.valueAccessor]);\n        })\n        .curve(this.curveOptions[this.lineCurve] || this.curveOptions['linear']);\n      this.interpolating.map = this.map;\n    }\n\n    this.extent = {};\n    this.extent.minValue = min(this.data, d => parseFloat(d[this.valueAccessor]));\n    this.extent.maxValue = max(this.data, d => parseFloat(d[this.valueAccessor]));\n    // const extentPadding = Math.abs(this.extent.maxValue * 0.1 || this.extent.minValue * 0.1);\n    let paddedMin = 0 + this.innerPaddedHeight * 0.05;\n    let paddedMax = this.innerPaddedHeight - this.innerPaddedHeight * 0.05;\n\n    if (this.yAxis.scales === 'preNormalized') {\n      this.extent.minValue = 0;\n      this.extent.maxValue = 1;\n      paddedMin = 0;\n      paddedMax = this.innerPaddedHeight;\n    }\n\n    this.extent.minValue =\n      this.minValueOverride || this.minValueOverride === 0 ? this.minValueOverride : this.extent.minValue;\n    this.extent.maxValue =\n      this.maxValueOverride || this.maxValueOverride === 0 ? this.maxValueOverride : this.extent.maxValue;\n    paddedMin = this.minValueOverride || this.minValueOverride === 0 ? this.minValueOverride : paddedMin;\n    paddedMax = this.maxValueOverride || this.maxValueOverride === 0 ? this.maxValueOverride : paddedMax;\n    this.y = scaleLinear()\n      .domain([this.extent.minValue, this.extent.maxValue])\n      .range([paddedMax, paddedMin]);\n\n    // set xAxis scale : ordinal value\n    this.x = scalePoint()\n      .domain(this.data.map(d => d[this.ordinalAccessor]))\n      .range([0, this.innerPaddedWidth]);\n\n    this.line = line()\n      .x(d => this.x(d[this.ordinalAccessor]))\n      .y(d => {\n        if (this.yAxis.scales === 'individual') {\n          return this.multiYScale[d[this.ordinalAccessor]].y(d[this.valueAccessor]);\n        }\n        return this.y(d[this.valueAccessor]);\n      })\n      .curve(this.curveOptions[this.lineCurve] || this.curveOptions['linear']);\n  }\n\n  validateDataLabelAccessor() {\n    this.innerLabelAccessor =\n      this.dataLabel && this.dataLabel.labelAccessor ? this.dataLabel.labelAccessor : this.valueAccessor;\n  }\n\n  validateSeriesLabels() {\n    this.labelDetails = { ...this.seriesLabel };\n    if (!this.labelDetails.placement) {\n      this.labelDetails.placement = '';\n    }\n    if (!this.labelDetails.label || !this.labelDetails.label.length) {\n      this.labelDetails.label = '';\n    }\n\n    this.isRight = this.labelDetails.placement !== 'left';\n  }\n\n  setScaleUsed() {\n    this.scalesUsed = this.yAxis.scales;\n  }\n\n  renderRootElements() {\n    this.svg = select(this.parallelChartEl)\n      .select('.visa-viz-d3-parallel-container')\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    this.root = this.svg.append('g').attr('id', 'visa-viz-margin-container-g-' + this.chartID);\n    this.rootG = this.root.append('g').attr('id', 'visa-viz-padding-container-g-' + this.chartID);\n\n    this.gridG = this.rootG.append('g').attr('class', 'grid-group');\n  }\n\n  renderChartRootElemets() {\n    this.yGroup = this.rootG.append('g').attr('class', 'y-scales-group');\n    this.parallelLineG = this.rootG.append('g').attr('class', 'parallel-group parallel-line-group');\n    this.dotG = this.rootG.append('g').attr('class', 'parallel-group');\n    this.seriesLabelG = this.rootG.append('g').attr('class', 'parallel-series-wrapper');\n    this.labels = this.rootG.append('g').attr('class', 'parallel-dataLabel-group');\n    this.legendG = select(this.parallelChartEl)\n      .select('.parallel-legend')\n      .append('svg');\n\n    this.subTitleG = select(this.parallelChartEl).select('.parallel-sub-title');\n    this.tooltipG = select(this.parallelChartEl).select('.parallel-tooltip');\n\n    this.setTooltipInitialStyle();\n  }\n\n  // reset graph size based on window size\n  reSetRoot() {\n    const changeSvg = prepareRenderChange({\n      selection: this.svg,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeSvg\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    const changeRoot = prepareRenderChange({\n      selection: this.root,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRoot.attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n\n    const changeRootG = prepareRenderChange({\n      selection: this.rootG,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRootG.attr('transform', `translate(${this.padding.left}, ${this.padding.top})`);\n\n    setAccessibilityDescriptionWidth(this.chartID, this.width);\n  }\n\n  setGlobalSelections() {\n    const keys = Object.keys(this.multiYScale);\n    const dataBoundToAxes = this.yGroup.selectAll('.y-wrapper').data(keys, d => d);\n    this.yEnter = dataBoundToAxes.enter().append('g');\n    this.yExit = dataBoundToAxes.exit();\n    this.yUpdate = dataBoundToAxes.merge(this.yEnter);\n\n    const dataBoundToLines = this.parallelLineG.selectAll('.parallel-plot').data(this.nest, d => d.key);\n    this.enterLines = dataBoundToLines.enter().append('path');\n    this.exitLines = dataBoundToLines.exit();\n    this.updateLines = dataBoundToLines.merge(this.enterLines);\n    this.enterSize = this.enterLines.size();\n\n    const dataBoundToDotWrappers = this.dotG.selectAll('.parallel-dot-wrapper').data(this.nest, d => d.key);\n    this.enterDotWrappers = dataBoundToDotWrappers.enter().append('g');\n    this.exitDotWrappers = dataBoundToDotWrappers.exit();\n    this.updateDotWrappers = dataBoundToDotWrappers.merge(this.enterDotWrappers);\n\n    const dataBountToSeriesLabels = this.seriesLabelG.selectAll('.parallel-series-label').data(this.nest, d => d.key);\n    this.seriesLabelEnter = dataBountToSeriesLabels.enter().append('text');\n    this.seriesLabelExit = dataBountToSeriesLabels.exit();\n    this.seriesLabelUpdate = dataBountToSeriesLabels.merge(this.seriesLabelEnter);\n\n    const dataBoundToLabels = this.labels.selectAll('g').data(this.nest, d => d.key);\n    this.enteringLabelGroups = dataBoundToLabels.enter().append('g');\n    this.exitingLabelGroups = dataBoundToLabels.exit();\n    this.updatingLabelGroups = dataBoundToLabels.merge(this.enteringLabelGroups);\n\n    if (this.interpolating) {\n      this.updateDotWrappers.selectAll('circle').remove();\n\n      const dataBoundToDots = this.updateDotWrappers.selectAll('circle').data(d => d.interpolate.start);\n      this.enterDots = dataBoundToDots.enter().append('circle');\n      this.exitDots = dataBoundToDots.exit();\n      this.updateDots = dataBoundToDots.merge(this.enterDots);\n\n      this.updatingLabelGroups.selectAll('.parallel-dataLabel').remove();\n      const dataBoundToLabelChildren = this.updatingLabelGroups\n        .selectAll('.parallel-dataLabel')\n        .data(d => d.interpolate.start);\n      this.enteringLabels = dataBoundToLabelChildren.enter().append('text');\n      this.updatingLabels = dataBoundToLabelChildren.merge(this.enteringLabels);\n      //   // this.updatingLabels = this.updatingLabelGroups.selectAll('.line-dataLabel').data(d => d.interpolate.end);\n    } else {\n      const dataBoundToDots = this.updateDotWrappers\n        .selectAll('circle')\n        .data(d => d.values, d => d[this.ordinalAccessor]);\n\n      this.enterDots = dataBoundToDots.enter().append('circle');\n      this.exitDots = dataBoundToDots.exit();\n      this.updateDots = dataBoundToDots.merge(this.enterDots);\n\n      this.enterSize = this.enterDots.size();\n      this.exitSize = this.exitDots.size();\n\n      const dataBoundToLabelChildren = this.updatingLabelGroups\n        .selectAll('.parallel-dataLabel')\n        .data(d => d.values, d => d[this.ordinalAccessor]);\n\n      this.enteringLabels = dataBoundToLabelChildren.enter().append('text');\n      this.exitingLabels = dataBoundToLabelChildren.exit();\n      this.updatingLabels = dataBoundToLabelChildren.merge(this.enteringLabels);\n    }\n  }\n\n  setTestingAttributes() {\n    if (this.unitTest) {\n      select(this.parallelChartEl)\n        .select('.visa-viz-d3-parallel-container')\n        .attr('data-testid', 'chart-container');\n      select(this.parallelChartEl)\n        .select('.parallel-main-title')\n        .attr('data-testid', 'main-title');\n      select(this.parallelChartEl)\n        .select('.parallel-sub-title')\n        .attr('data-testid', 'sub-title');\n      this.svg.attr('data-testid', 'root-svg');\n      this.root.attr('data-testid', 'margin-container');\n      this.rootG.attr('data-testid', 'padding-container');\n      this.legendG.attr('data-testid', 'legend-container');\n      this.tooltipG.attr('data-testid', 'tooltip-container');\n      this.gridG.attr('data-testid', 'grid-group');\n\n      // y axes for parallel (different from any other chart)\n      this.yGroup.attr('data-testid', 'y-scales-group');\n      this.yUpdate.attr('data-testid', 'y-scale-wrapper'); // may need to add data-id to this?\n\n      // add test attributes to lines and series labels\n      this.parallelLineG.attr('data-testid', 'parallel-line-group');\n      this.updateLines.attr('data-testid', 'parallel-line').attr('data-id', d => `parallel-line-${d.key}`);\n      this.seriesLabelG.attr('data-testid', 'parallel-series-label-container');\n      this.seriesLabelUpdate\n        .attr('data-testid', 'parallel-series-label')\n        .attr('data-id', d => `parallel-series-label-${d.key}`);\n\n      // add test atttributes to line colors\n      this.dotG.attr('data-testid', 'marker-group');\n      this.updateDotWrappers.attr('data-testid', 'marker-series-group').attr('data-id', d => `marker-series-${d.key}`);\n      this.updateDots\n        .attr('data-testid', 'marker')\n        .attr('data-id', d => `marker-${d[this.seriesAccessor]}-${d[this.ordinalAccessor]}`);\n\n      // add test attributes to labels\n      this.labels.attr('data-testid', 'dataLabel-group-container');\n      this.updatingLabelGroups.attr('data-testid', 'dataLabel-group').attr('data-id', d => `dataLabel-group-${d.key}`);\n      this.updatingLabels\n        .attr('data-testid', 'dataLabel')\n        .attr('data-id', d => `dataLabel-${d[this.seriesAccessor]}-${d[this.ordinalAccessor]}`);\n\n      this.svg.select('defs').attr('data-testid', 'pattern-defs');\n    } else {\n      select(this.parallelChartEl)\n        .select('.visa-viz-d3-parallel-container')\n        .attr('data-testid', null);\n      select(this.parallelChartEl)\n        .select('.parallel-main-title')\n        .attr('data-testid', null);\n      select(this.parallelChartEl)\n        .select('.parallel-sub-title')\n        .attr('data-testid', null);\n      this.svg.attr('data-testid', null);\n      this.root.attr('data-testid', null);\n      this.rootG.attr('data-testid', null);\n      this.legendG.attr('data-testid', null);\n      this.tooltipG.attr('data-testid', null);\n      this.gridG.attr('data-testid', null);\n\n      this.yGroup.attr('data-testid', null);\n      this.yUpdate.attr('data-testid', null); // may need to add data-id to this?\n\n      // add test attributes to lines and series labels\n      this.parallelLineG.attr('data-testid', null);\n      this.updateLines.attr('data-testid', null).attr('data-id', null);\n      this.seriesLabelG.attr('data-testid', null);\n      this.seriesLabelUpdate.attr('data-testid', null).attr('data-id', null);\n\n      // add test atttributes to line colors\n      this.dotG.attr('data-testid', null);\n      this.updateDotWrappers.attr('data-testid', null).attr('data-id', null);\n      this.updateDots.attr('data-testid', null).attr('data-id', null);\n\n      // add test attributes to labels\n      this.labels.attr('data-testid', null);\n      this.updatingLabelGroups.attr('data-testid', null).attr('data-id', null);\n      this.updatingLabels.attr('data-testid', null).attr('data-id', null);\n\n      this.svg.select('defs').attr('data-testid', null);\n    }\n  }\n\n  // draw axis line\n  drawXAxis() {\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.ordinalAccessor]\n        ? this.dataKeyNames[this.ordinalAccessor]\n        : this.xAxis.label;\n\n    const bandWidth = (this.innerPaddedWidth / this.nest[0].values.length) * 0.7;\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.x,\n      left: false,\n      wrapLabel: this.wrapLabel ? bandWidth : '',\n      format: this.xAxis.format,\n      tickInterval: this.xAxis.tickInterval,\n      label: axisLabel, // this.xAxis.label,\n      padding: this.padding,\n      hide: !this.xAxis.visible,\n      duration: this.duration,\n      hidePath: true\n    });\n  }\n\n  enterYAxis() {\n    this.yEnter\n      .attr('class', 'y-wrapper')\n      .attr('transform', d => 'translate(' + this.x(d) + ',0)')\n      .attr('opacity', 0);\n  }\n\n  exitYAxis() {\n    this.yExit\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  drawYAxis() {\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.valueAccessor]\n        ? this.dataKeyNames[this.valueAccessor]\n        : this.yAxis.label;\n\n    this.yUpdate\n      .each((d, i, n) => {\n        const ticks =\n          this.yAxis.scales === 'individual'\n            ? this.multiYScale[d].ticks\n            : !this.yAxis.onlyTickExtents\n            ? this.yAxis.onlyTickExtents\n            : [this.extent.minValue, this.extent.maxValue];\n        const domain = this.multiYScale[d].y.domain();\n        const hideMe =\n          domain[0] === domain[1] ? true : i === 0 || this.yAxis.scales === 'individual' ? !this.yAxis.visible : true;\n        drawAxis({\n          root: select(n[i]),\n          height: this.innerPaddedHeight,\n          width: this.innerPaddedWidth,\n          axisScale: this.yAxis.scales === 'individual' ? this.multiYScale[d].y : this.y,\n          left: true,\n          wrapLabel: this.wrapLabel ? this.padding.left : '',\n          format: this.yAxis.format,\n          tickInterval: ticks ? 1 : this.yAxis.tickInterval,\n          label: this.yAxis.scales === 'individual' || hideMe ? '' : axisLabel, // this.yAxis.label,\n          padding: this.padding,\n          hide: hideMe,\n          hidePath: true,\n          duration: this.duration,\n          ticks\n        });\n      })\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('transform', d => 'translate(' + this.x(d) + ',0)')\n      .attr('opacity', 1);\n  }\n\n  setXAxisAccessibility() {\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.ordinalAccessor]\n        ? this.dataKeyNames[this.ordinalAccessor]\n        : this.xAxis.label;\n\n    setAccessXAxis({\n      rootEle: this.parallelChartEl,\n      hasXAxis: this.xAxis ? this.xAxis.visible : false,\n      xAxis: this.x ? this.x : false, // this is optional for some charts, if hasXAxis is always false\n      xAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasXAxis is always false\n    });\n  }\n\n  setYAxisAccessibility() {\n    const axisLabelX =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.ordinalAccessor]\n        ? this.dataKeyNames[this.ordinalAccessor]\n        : this.xAxis.label;\n\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.valueAccessor]\n        ? this.dataKeyNames[this.valueAccessor]\n        : this.yAxis.label;\n\n    setAccessYAxis({\n      rootEle: this.parallelChartEl,\n      hasYAxis: this.yAxis ? this.yAxis.visible : false,\n      yAxis: this.y ? this.y : false, // this is optional for some charts, if hasXAxis is always false\n      yAxisLabel: axisLabel ? axisLabel : '', // this is optional for some charts, if hasXAxis is always false\n      xAxisLabel: axisLabelX ? axisLabelX : '' // parallel uses this to label all the y axes\n    });\n  }\n\n  drawBaseline() {\n    drawAxis({\n      root: this.gridG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.x,\n      left: false,\n      padding: this.padding,\n      markOffset: this.y(0),\n      hide: !this.showBaselineX,\n      duration: this.duration\n    });\n  }\n  // dashed line grid for chart\n  drawXGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.x,\n      false,\n      false,\n      this.xAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  drawYGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.y,\n      true,\n      !this.yAxis.gridVisible,\n      this.yAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  // lines based on data\n  enterChartLines() {\n    this.enterLines.interrupt();\n\n    this.enterLines\n      .attr('class', 'parallel-plot entering')\n      .attr('d', d => this.line(d.values))\n      .attr('data-d', d => this.line(d.values))\n      .attr('data-translate-x', this.margin.left + this.padding.left)\n      .attr('data-translate-y', this.margin.top + this.padding.top);\n\n    this.enterLines\n      .attr('cursor', !this.suppressEvents && this.seriesInteraction ? this.cursor : null)\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onHoverHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .attr('stroke-dasharray', (d, i, n) => {\n        d.linelength = n[i].getTotalLength();\n        return d.linelength + ' ' + d.linelength;\n      })\n      .attr('stroke', this.handleLineStroke)\n      .attr('fill', 'none')\n      .attr('stroke-width', 0.1);\n  }\n\n  updateChartLines() {\n    this.updateLines.interrupt();\n\n    this.updateLines\n      .transition()\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('stroke-dashoffset', 0)\n      .attr('stroke-width', d => this.calculateStrokeWidth(d, true))\n      .call(transitionEndAll, () => {\n        this.updateLines.attr('stroke-dasharray', this.handleStrokeDasharray);\n      });\n\n    this.updateLines\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', d => {\n        const lineOpacity = this.secondaryLines.keys.includes(d.key) ? this.secondaryLines.opacity : 1;\n        if (!this.seriesInteraction) {\n          return lineOpacity;\n        } else if (this.secondaryLines.keys.includes(d.key)) {\n          return checkInteraction(\n            d.values[0],\n            this.secondaryLines.opacity,\n            Math.min(this.secondaryLines.opacity, this.hoverOpacity),\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        } else {\n          return checkInteraction(\n            d.values[0], // use first data point of each line to decide interaction highlight\n            lineOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        }\n      });\n  }\n\n  exitChartLines() {\n    this.exitLines.interrupt();\n\n    this.exitLines\n      .attr('stroke-dasharray', (d, i, n) => {\n        d.linelength = n[i].getTotalLength();\n        return d.linelength + ' ' + d.linelength;\n      })\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', 0)\n      .attr('stroke-dashoffset', d => d.linelength)\n      .attr('stroke-width', 0.1)\n      .remove();\n  }\n\n  drawChartLines() {\n    if (this.interpolating) {\n      this.updateLines.attr('d', (d, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          return this.line(d.values);\n        }\n        return this.interpolating.line(d.interpolate.start);\n      });\n    }\n\n    this.updateLines\n      .attr('stroke-width', d => this.calculateStrokeWidth(d, true))\n      .attr('stroke-dashoffset', d => d.linelength)\n      .attr('data-d', d => (this.interpolating ? this.line(d.interpolate.end) : this.line(d.values)))\n      .attr('data-translate-x', this.margin.left + this.padding.left)\n      .attr('data-translate-y', this.margin.top + this.padding.top)\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('d', d => (this.interpolating ? this.line(d.interpolate.end) : this.line(d.values)))\n      .call(transitionEndAll, () => {\n        this.updateLines\n          .classed('entering', false)\n          .attr('data-d', d => this.line(d.values))\n          .attr('d', d => this.line(d.values))\n          .attr('stroke-dasharray', this.handleStrokeDasharray);\n      });\n  }\n\n  dynamicY = d => {\n    if (this.yAxis.scales === 'individual') {\n      return this.multiYScale[d[this.ordinalAccessor]].y(d[this.valueAccessor]);\n    }\n    return this.y(d[this.valueAccessor]);\n  };\n\n  interpolateDynamicY = d => {\n    if (this.yAxis.scales === 'individual') {\n      return this.interpolating.multiYScale[d[this.ordinalAccessor]].y(d[this.valueAccessor]);\n    }\n    return this.interpolating.y(d[this.valueAccessor]);\n  };\n\n  enterPoints() {\n    this.enterDots.interrupt();\n\n    this.enterDotWrappers\n      .attr('class', 'parallel-dot-wrapper')\n      .attr('opacity', 0)\n      .attr('fill', (_, i) => this.rawColors[i] || this.rawColors[0])\n      // bind interactivity for keyboard nav if series interactivity is enabled\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onSeriesHoverHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .each((_, i, n) => {\n        // we bind accessible interactivity and semantics here (role, tabindex, etc)\n        initializeElementAccess(n[i]);\n      });\n\n    this.enterDots\n      .each((_d, i, n) => {\n        initializeElementAccess(n[i]);\n      })\n      .attr('stroke', this.handleDotStroke)\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .attr('data-fill', true)\n      .attr('data-translate-x', this.margin.left + this.padding.left)\n      .attr('data-translate-y', this.margin.top + this.padding.top)\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    if (this.interpolating) {\n      this.enterDots\n        .attr('cx', d => this.interpolating.x(d[this.ordinalAccessor]))\n        .attr('cy', this.interpolateDynamicY)\n        .attr('r', d =>\n          d.enter\n            ? 0\n            : checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        )\n        .attr('stroke-width', d => this.calculateStrokeWidth(d));\n\n      this.enterDotWrappers\n        .selectAll('circle')\n        .attr('r', 0)\n        .attr('cx', d => this.x(d[this.ordinalAccessor]))\n        .attr('cy', this.dynamicY)\n        .attr('opacity', 0);\n    }\n    this.updateDotWrappers.order();\n    this.updateDots.order();\n  }\n\n  updatePoints() {\n    // this.updateDotWrappers.interrupt();\n    this.updateDots.interrupt();\n    const dotOpacity = this.showDots ? 1 : 0;\n\n    this.updateDots.attr('tabindex', (_, index) => (index === 0 ? '0' : '-1'));\n\n    this.updateDotWrappers.attr('opacity', d => {\n      const lineDotOpacity = this.secondaryLines.keys.includes(d.key) ? this.secondaryLines.opacity : dotOpacity;\n      return lineDotOpacity;\n    });\n\n    if (this.interpolating) {\n      this.updateDots.attr('opacity', d => {\n        this.exitSize += d.exit ? 1 : 0;\n        this.enterSize += d.enter ? 1 : 0;\n        return d.enter ? 0 : 1;\n      });\n      this.updateDots = this.updateDotWrappers\n        .selectAll('circle')\n        .data(d => d.interpolate.end)\n        .classed('exiting', d => d.exit);\n\n      this.enterDotWrappers.selectAll('circle').each(d => {\n        d.enterWholeGroup = true;\n      });\n\n      this.updateDots\n        .transition('opacity')\n        .ease(easeCircleIn)\n        .duration(d => {\n          if (d.enterWholeGroup) {\n            return this.duration / 2;\n          }\n          return this.duration;\n        })\n        .delay((d, i, n) => {\n          if (d.enterWholeGroup) {\n            return this.duration * 0.75 * (i / (n.length - 1));\n          }\n          return 0;\n        })\n        .attr('opacity', d => {\n          return checkInteraction(\n            d,\n            dotOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        });\n    } else {\n      this.updateDots\n        .transition('opacity')\n        .ease(easeCircleIn)\n        .duration(this.duration)\n        .attr('opacity', d => {\n          return checkInteraction(\n            d,\n            dotOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        });\n    }\n  }\n\n  exitPoints() {\n    this.exitDots.interrupt();\n\n    this.exitDots\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', 0)\n      .attr('r', 0);\n\n    this.exitDotWrappers\n      .selectAll('circle')\n      .each(d => {\n        d.exitWholeGroup = true;\n      })\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .delay((_, i, n) => {\n        return this.duration - this.duration * (i / (n.length - 1));\n      })\n      .attr('opacity', 0)\n      .attr('r', 0);\n\n    // this new transtition ensures that the chart counts and all labels\n    // correctly reflect the newest information\n    this.updateDots\n      .transition('accessibilityAfterExit')\n      .duration(this.duration / 2)\n      .delay((_, i, n) => {\n        return this.duration - this.duration * (i / (n.length - 1));\n      })\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        // before we exit geometries, we need to check if a focus exists or not\n        const focusDidExist = checkAccessFocus(this.rootG.node());\n        // then we must remove the exiting elements\n        this.exitDots.remove();\n        this.exitDotWrappers.remove();\n        this.svg.selectAll('.exiting').remove();\n        // updateDots/labels will keep references to the removed elements unless we reassign\n        this.updateDots = this.updateDotWrappers.selectAll('circle');\n        this.updatingLabels = this.updatingLabelGroups.selectAll('.parallel-dataLabel');\n        // then our util can count geometries\n        this.setChartCountAccessibility();\n        // our group's label should update with new counts too\n        this.setGroupAccessibilityID();\n        // since items exited, labels must receive updated values\n        this.setGeometryAriaLabels();\n        // and also make sure the user's focus isn't lost\n        retainAccessFocus({\n          parentGNode: this.rootG.node(),\n          focusDidExist\n          // recursive: true\n        });\n      });\n  }\n\n  // draw dots\n  drawPoints() {\n    let updateTransition;\n\n    if (this.interpolating) {\n      updateTransition = this.updateDots\n        .attr('data-cx', d => this.x(d[this.ordinalAccessor]))\n        .attr('data-cy', this.dynamicY)\n        .attr('data-translate-x', this.margin.left + this.padding.left)\n        .attr('data-translate-y', this.margin.top + this.padding.top)\n        .attr('data-r', d =>\n          d.exit\n            ? 0\n            : checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        )\n        .transition('update')\n        .ease(easeCircleIn)\n        .duration(d => {\n          if (d.enterWholeGroup) {\n            return this.duration / 2;\n          }\n          return this.duration;\n        })\n        .delay((d, i, n) => {\n          if (d.enterWholeGroup) {\n            return this.duration * 0.75 * (i / (n.length - 1));\n          }\n          return 0;\n        })\n        .attr('r', d =>\n          d.exit\n            ? 0\n            : checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        )\n        .attr('stroke-width', d => this.calculateStrokeWidth(d));\n    } else {\n      updateTransition = this.updateDots\n        .attr('data-cx', d => this.x(d[this.ordinalAccessor]))\n        .attr('data-cy', this.dynamicY)\n        .attr('data-translate-x', this.margin.left + this.padding.left)\n        .attr('data-translate-y', this.margin.top + this.padding.top)\n        .attr('data-r', d =>\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        )\n        .attr('r', d =>\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        )\n        .attr('stroke-width', d => this.calculateStrokeWidth(d))\n        .transition('update')\n        .ease(easeCircleIn)\n        .duration(this.duration);\n    }\n    this.updateDots.attr('stroke', this.handleDotStroke);\n    updateTransition\n      .attr('cx', d => this.x(d[this.ordinalAccessor]))\n      .attr('cy', this.dynamicY)\n      .call(transitionEndAll, () => {\n        this.updateDots.each(d => {\n          d.enterWholeGroup = false;\n          d.enter = false;\n        });\n        // we must make sure if geometries move, that our focus indicator does too\n        retainAccessFocus({\n          parentGNode: this.rootG.node()\n        });\n\n        // now we can emit the event that transitions are complete\n        this.transitionEndEvent.emit({ chartID: this.chartID });\n      });\n  }\n\n  enterSeriesLabels() {\n    this.seriesLabelEnter.interrupt();\n\n    this.seriesLabelEnter\n      .attr('class', 'parallel-series-label')\n      .attr('cursor', !this.suppressEvents && this.seriesInteraction ? this.cursor : null)\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onSeriesHoverHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .attr('fill', this.handleSeriesTextFill)\n      .attr('x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n      .attr('y', d => {\n        if (this.yAxis.scales === 'individual') {\n          return this.isRight\n            ? this.multiYScale[d.values[d.values.length - 1][this.ordinalAccessor]].y(\n                d.values[d.values.length - 1][this.valueAccessor]\n              )\n            : this.multiYScale[d.values[0][this.ordinalAccessor]].y(d.values[0][this.valueAccessor]);\n        }\n        return this.isRight\n          ? this.y(d.values[d.values.length - 1][this.valueAccessor])\n          : this.y(d.values[0][this.valueAccessor]);\n      })\n      // .attr('dx', (_, i, n) => {\n      //   const textElement = n[i];\n      //   const style = getComputedStyle(textElement);\n      //   const fontSize = parseFloat(style.fontSize);\n      //   const textWidth = getTextWidth(textElement.textContent, fontSize, true, style.fontFamily);\n      //   return this.isRight ? 0 : -(textWidth + 5);\n      // })\n      .attr('dx', this.isRight ? '0.3em' : '-0.3em')\n      .attr('dy', this.dataLabel && this.dataLabel.placement === 'top-right' ? '0.9em' : '-0.5em')\n      .attr('text-anchor', this.isRight ? 'start' : 'end')\n      .attr('opacity', d => {\n        const seriesLabelOpacity = !this.seriesLabel.visible\n          ? 0\n          : this.secondaryLines.keys.includes(d.key)\n          ? this.secondaryLines.opacity\n          : 1;\n\n        return checkInteraction(\n          d.values[0],\n          seriesLabelOpacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        ) < 1\n          ? 0\n          : Number.EPSILON;\n      });\n  }\n\n  updateSeriesLabels() {\n    this.seriesLabelUpdate.interrupt();\n\n    this.seriesLabelUpdate\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', d => {\n        const seriesLabelOpacity = !this.seriesLabel.visible\n          ? 0\n          : this.secondaryLines.keys.includes(d.key)\n          ? this.secondaryLines.opacity\n          : 1;\n        // check if innerInteractionKeys includes seriesAccessor, if not then don't check seriesLabel for interaction\n        if (!this.seriesInteraction) {\n          return seriesLabelOpacity;\n        } else if (this.secondaryLines.keys.includes(d.key)) {\n          return checkInteraction(\n            d.values[0],\n            seriesLabelOpacity,\n            Math.min(this.secondaryLines.opacity, this.hoverOpacity),\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        } else {\n          return checkInteraction(\n            d.values[0],\n            seriesLabelOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        }\n      });\n  }\n\n  exitSeriesLabels() {\n    this.seriesLabelExit.interrupt();\n\n    this.seriesLabelExit\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  drawSeriesLabels() {\n    const hideOnly = this.labelDetails.placement !== 'auto' && this.labelDetails.collisionHideOnly;\n    const seriesUpdate = this.seriesLabelUpdate\n      .attr('fill', this.handleSeriesTextFill)\n      .text((d, i) =>\n        this.secondaryLines.keys.includes(d.key) && !this.secondaryLines.showSeriesLabel\n          ? ''\n          : this.labelDetails.label\n          ? this.labelDetails.label[i]\n          : !d.key || d.key === 'undefined'\n          ? ''\n          : d.key\n      )\n      .style('visibility', (_, i, n) =>\n        this.labelDetails.placement === 'auto' || this.labelDetails.collisionHideOnly\n          ? select(n[i]).style('visibility')\n          : null\n      )\n      .attr('data-x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n      .attr('data-y', (d, i, n) => {\n        const textElement = n[i];\n        const style = getComputedStyle(textElement);\n        const fontSize = parseFloat(style.fontSize);\n        const textHeight = Math.max(fontSize - 1, 1); // clone.getBBox().height;\n\n        if (this.yAxis.scales === 'individual') {\n          return this.isRight\n            ? this.multiYScale[d.values[d.values.length - 1][this.ordinalAccessor]].y(\n                d.values[d.values.length - 1][this.valueAccessor]\n              )\n            : this.multiYScale[d.values[0][this.ordinalAccessor]].y(d.values[0][this.valueAccessor]);\n        }\n        return this.isRight\n          ? this.y(d.values[d.values.length - 1][this.valueAccessor]) + 0.4 * textHeight\n          : this.y(d.values[0][this.valueAccessor]) + 0.4 * textHeight;\n      })\n      .attr('dx', this.isRight ? '0.3em' : '-0.3em')\n      .attr('dy', this.dataLabel && this.dataLabel.placement === 'top-right' ? '0.9em' : '-0.5em')\n      .attr('data-use-dx', hideOnly)\n      .attr('data-use-dy', hideOnly)\n      .attr('data-translate-x', this.margin.left + this.padding.left)\n      .attr('data-translate-y', this.margin.top + this.padding.top)\n      .attr('data-text-anchor', this.isRight ? 'start' : 'end')\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration);\n\n    if (this.labelDetails.visible && (this.labelDetails.placement === 'auto' || this.labelDetails.collisionHideOnly)) {\n      this.bitmaps = resolveLabelCollision({\n        bitmaps: this.bitmaps,\n        labelSelection: seriesUpdate,\n        avoidMarks: [this.updateDots], // this will link the series label to the last point in the line\n        validPositions: hideOnly ? ['middle'] : ['middle', 'top', 'bottom'],\n        offsets: hideOnly ? [1] : [1, 4, 4],\n        accessors: ['key'],\n        size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n        hideOnly: this.labelDetails.visible && hideOnly\n      });\n\n      // if we are in hide only we still need to place the labels\n      if (hideOnly) {\n        seriesUpdate\n          .attr('text-anchor', this.isRight ? 'start' : 'end')\n          .attr('x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n          .attr('y', d => {\n            if (this.yAxis.scales === 'individual') {\n              return this.isRight\n                ? this.multiYScale[d.values[d.values.length - 1][this.ordinalAccessor]].y(\n                    d.values[d.values.length - 1][this.valueAccessor]\n                  )\n                : this.multiYScale[d.values[0][this.ordinalAccessor]].y(d.values[0][this.valueAccessor]);\n            }\n            return this.isRight\n              ? this.y(d.values[d.values.length - 1][this.valueAccessor])\n              : this.y(d.values[0][this.valueAccessor]);\n          })\n          .attr('dx', this.isRight ? '0.3em' : '-0.3em')\n          .attr('dy', this.dataLabel && this.dataLabel.placement === 'top-right' ? '0.9em' : '-0.5em');\n      }\n    } else {\n      seriesUpdate\n        .attr('text-anchor', this.isRight ? 'start' : 'end')\n        .attr('x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n        .attr('y', d => {\n          if (this.yAxis.scales === 'individual') {\n            return this.isRight\n              ? this.multiYScale[d.values[d.values.length - 1][this.ordinalAccessor]].y(\n                  d.values[d.values.length - 1][this.valueAccessor]\n                )\n              : this.multiYScale[d.values[0][this.ordinalAccessor]].y(d.values[0][this.valueAccessor]);\n          }\n          return this.isRight\n            ? this.y(d.values[d.values.length - 1][this.valueAccessor])\n            : this.y(d.values[0][this.valueAccessor]);\n        })\n        .attr('dx', this.isRight ? '0.3em' : '-0.3em')\n        .attr('dy', this.dataLabel && this.dataLabel.placement === 'top-right' ? '0.9em' : '-0.5em');\n    }\n  }\n\n  enterDataLabels() {\n    this.enteringLabels.interrupt();\n\n    this.enteringLabelGroups\n      .attr('class', 'parallel-label-wrapper')\n      .attr('opacity', 0)\n      .attr('fill', (_, i) => this.rawColors[i] || this.rawColors[0]);\n\n    this.enteringLabels\n      .attr('opacity', 0)\n      .attr('fill', this.handleTextFill)\n      .attr('class', 'parallel-dataLabel')\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    if (this.interpolating) {\n      const childrenEnter = this.enteringLabels.attr('class', 'parallel-dataLabel').attr('opacity', Number.EPSILON);\n\n      placeDataLabels({\n        root: childrenEnter,\n        xScale: this.interpolating.x,\n        yScale: this.interpolateDynamicY,\n        ordinalAccessor: this.ordinalAccessor,\n        valueAccessor: this.valueAccessor,\n        placement: this.dataLabel.placement,\n        chartType: 'parallel'\n      });\n\n      this.updatingLabels.attr('opacity', d => (d.enter ? Number.EPSILON : 1));\n\n      const fullEnter = this.enteringLabelGroups.selectAll('.parallel-dataLabel').attr('opacity', Number.EPSILON);\n\n      placeDataLabels({\n        root: fullEnter,\n        xScale: this.x,\n        yScale: this.dynamicY,\n        ordinalAccessor: this.ordinalAccessor,\n        valueAccessor: this.valueAccessor,\n        placement: this.dataLabel.placement,\n        chartType: 'parallel'\n      });\n    } else {\n      const childrenEnter = this.enteringLabels.attr('opacity', Number.EPSILON).attr('class', 'parallel-dataLabel');\n\n      placeDataLabels({\n        root: childrenEnter,\n        xScale: this.x,\n        yScale: this.dynamicY,\n        ordinalAccessor: this.ordinalAccessor,\n        valueAccessor: this.valueAccessor,\n        placement: this.dataLabel.placement,\n        chartType: 'parallel'\n      });\n    }\n    // now we check whether we have auto collision to consider\n    if (this.dataLabel.placement === 'auto') {\n      this.updatingLabels.each((d, i, n) => {\n        // we check hash for each updated label, don't touch enter/exit/hidden stuff at all\n        if (\n          !d.enter &&\n          !d.exit &&\n          !d.hidden &&\n          (d['auto-x'] || d['auto-x'] === 0) &&\n          (d['auto-y'] || d['auto-y'] === 0)\n        ) {\n          select(n[i])\n            .attr('x', +select(n[i]).attr('x') + (+d['auto-x'] || 0))\n            .attr('y', +select(n[i]).attr('y') + (+d['auto-y'] || 0))\n            .attr('text-anchor', d['auto-text-anchor']);\n        }\n      });\n    }\n  }\n\n  updateDataLabels() {\n    this.updatingLabelGroups.interrupt();\n\n    this.updatingLabelGroups.attr('opacity', d => {\n      const labelOpacity = !this.dataLabel.visible\n        ? 0\n        : this.secondaryLines.keys.includes(d.key) && this.secondaryLines.showDataLabel\n        ? this.secondaryLines.opacity\n        : this.secondaryLines.keys.includes(d.key) && !this.secondaryLines.showDataLabel\n        ? 0\n        : 1;\n      return labelOpacity;\n    });\n\n    if (this.interpolating) {\n      this.updatingLabels = this.updatingLabelGroups\n        .selectAll('.parallel-dataLabel')\n        .data(d => d.interpolate.end)\n        .classed('exiting', d => d.exit);\n\n      this.enteringLabelGroups.each(d => (d.enterWholeGroup = true));\n\n      this.updatingLabels\n        .transition('opacity')\n        .ease(easeCircleIn)\n        .duration(d => {\n          if (d.enterWholeGroup) {\n            return this.duration / 2;\n          }\n          return this.duration;\n        })\n        .delay((d, i, n) => {\n          if (d.enterWholeGroup) {\n            return this.duration * 0.75 * (i / (n.length - 1));\n          }\n          return 0;\n        })\n        .attr('opacity', (d, i, n) => {\n          const targetOpacity = d.exit\n            ? 0\n            : checkInteraction(\n                d,\n                1,\n                this.hoverOpacity,\n                this.hoverHighlight,\n                this.clickHighlight,\n                this.innerInteractionKeys\n              ) < 1\n            ? 0\n            : 1;\n          const parentOpacity = +select(n[i].parentNode).attr('opacity');\n          select(n[i]).attr('data-hidden', parentOpacity === 0 || targetOpacity === 0 ? 'true' : null);\n          return targetOpacity;\n        });\n    } else {\n      this.updatingLabels.attr('opacity', (d, i, n) => {\n        const targetOpacity = d.exit\n          ? 0\n          : checkInteraction(\n              d,\n              1,\n              this.hoverOpacity,\n              this.hoverHighlight,\n              this.clickHighlight,\n              this.innerInteractionKeys\n            ) < 1\n          ? 0\n          : 1;\n        const parentOpacity = +select(n[i].parentNode).attr('opacity');\n        select(n[i]).attr('data-hidden', parentOpacity === 0 || targetOpacity === 0 ? 'true' : null);\n        return targetOpacity;\n      });\n    }\n  }\n\n  exitDataLabels() {\n    this.exitingLabels.interrupt();\n\n    this.exitingLabels\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', 0)\n      .remove();\n\n    this.exitingLabelGroups\n      .selectAll('.parallel-dataLabel')\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .delay((_, i, n) => {\n        return this.duration - this.duration * (i / (n.length - 1));\n      })\n      .attr('opacity', 0)\n      .call(transitionEndAll, () => {\n        this.exitingLabelGroups.remove();\n      });\n  }\n\n  drawDataLabels() {\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n\n    let updateChildren = this.updatingLabels.text(d => {\n      return formatDataLabel(d, this.innerLabelAccessor, this.dataLabel.format);\n    });\n    if (this.interpolating) {\n      updateChildren = this.updatingLabels\n        .style('visibility', (d, i, n) =>\n          this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly\n            ? d.hidden\n              ? 'hidden'\n              : select(n[i]).style('visibility')\n            : null\n        )\n        .attr('data-x', d => this.interpolating.x(d[this.ordinalAccessor]))\n        .attr('data-y', this.interpolateDynamicY)\n        .attr('data-translate-x', this.margin.left + this.padding.left)\n        .attr('data-translate-y', this.margin.top + this.padding.top)\n        .transition('update')\n        .ease(easeCircleIn)\n        .duration(d => {\n          if (d.enterWholeGroup) {\n            return this.duration / 2;\n          }\n          return this.duration;\n        })\n        .delay((d, i, n) => {\n          if (d.enterWholeGroup) {\n            return this.duration * 0.75 * (i / (n.length - 1));\n          }\n          return 0;\n        });\n    } else {\n      updateChildren = this.updatingLabels\n        .style('visibility', (d, i, n) =>\n          this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly\n            ? d.hidden\n              ? 'hidden'\n              : select(n[i]).style('visibility')\n            : null\n        )\n        .attr('data-x', d => this.x(d[this.ordinalAccessor]))\n        .attr('data-y', this.dynamicY)\n        .attr('data-translate-x', this.margin.left + this.padding.left)\n        .attr('data-translate-y', this.margin.top + this.padding.top)\n        .transition('update')\n        .ease(easeCircleIn)\n        .duration(this.duration);\n    }\n\n    const axisRules = this.gridG\n      .selectAll('line')\n      .attr('data-y2', this.innerPaddedHeight)\n      .attr('data-y1', 0)\n      .attr('data-translate-x', this.margin.left + this.padding.left)\n      .attr('data-translate-y', this.margin.top + this.padding.top)\n      .attr('data-x1', d => this.x(d))\n      .attr('data-x2', d => this.x(d));\n\n    const yAxisTexts = this.yUpdate\n      .selectAll('.y.axis')\n      .filter((_, i, n) => +select(n[i]).attr('opacity') >= 0.0001) // this filter has an issue with transitions\n      .selectAll('text')\n      .attr('data-fill', true)\n      .attr('data-y', d => this.y(d))\n      .attr('data-width', (_, i, n) => {\n        const textElement = n[i];\n        const style = getComputedStyle(textElement);\n        const fontSize = parseFloat(style.fontSize);\n        const textHeight = Math.max(fontSize - 1, 1); // clone.getBBox().height;\n        const textWidth = getTextWidth(textElement.textContent, fontSize, true, style.fontFamily);\n        select(textElement)\n          .attr('data-x', +select(textElement).attr('x'))\n          .attr('data-translate-x', this.margin.left + this.padding.left - textWidth)\n          .attr('data-translate-y', this.margin.top + this.padding.top - textHeight / 2)\n          .attr('data-height', textHeight);\n        return textWidth;\n      });\n\n    const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n    const validPositions = hideOnly\n      ? ['middle']\n      : collisionPlacement && this.collisionSettings[collisionPlacement] // check whether placement provided maps correctly\n      ? this.collisionSettings[collisionPlacement].validPositions\n      : this.collisionSettings['all'].validPositions;\n    const offsets = hideOnly\n      ? [1]\n      : collisionPlacement && this.collisionSettings[collisionPlacement] // check whether placement provided maps correctly\n      ? this.collisionSettings[collisionPlacement].offsets\n      : this.collisionSettings['all'].offsets;\n\n    this.bitmaps = placeDataLabels({\n      root: updateChildren,\n      xScale: this.x,\n      yScale: this.dynamicY,\n      ordinalAccessor: this.ordinalAccessor,\n      valueAccessor: this.valueAccessor,\n      placement: this.dataLabel.placement,\n      chartType: 'parallel',\n      avoidCollision: {\n        runOccupancyBitmap: this.dataLabel.visible && this.dataLabel.placement === 'auto',\n        labelSelection: updateChildren,\n        avoidMarks: [yAxisTexts, axisRules, this.updateLines, this.updateDots],\n        validPositions,\n        offsets,\n        accessors: [this.ordinalAccessor, this.seriesAccessor, 'key'], // key is created for lines by nesting done in line,\n        size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n        hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly\n      }\n    });\n\n    // we need to maintain some values since parallel has customized lifecycle setup\n    updateChildren.call(transitionEndAll, () => {\n      this.hiddenHash = {}; // empty out hash each time to be safe\n      this.updatingLabels.each((d, i, n) => {\n        // store results to hash so we can use them in lifecycle (specific to line/parallel lifecycle only)\n        this.hiddenHash[`${d[this.ordinalAccessor]}-${d[this.seriesAccessor] || 'b'}`] = {\n          'data-label-hidden': select(n[i]).attr('data-label-hidden') === 'true',\n          x: +select(n[i]).attr('x') - +select(n[i]).attr('data-x'),\n          y: +select(n[i]).attr('y') - +select(n[i]).attr('data-y'),\n          'text-anchor': select(n[i]).attr('text-anchor')\n        };\n      });\n    });\n  }\n\n  updateInteractionState() {\n    // we created an \"opacity\" transition namespace in update's transition\n    // we override it here to instantly display opacity state (below)\n    this.updateLines.interrupt('opacity');\n\n    // the lifecycle state does not matter (enter/update/exit)\n    // since interaction state can happen at any time\n    this.updateLines.attr('opacity', d => {\n      const lineOpacity = this.secondaryLines.keys.includes(d.key) ? this.secondaryLines.opacity : 1;\n      if (!this.seriesInteraction) {\n        return lineOpacity;\n      } else if (this.secondaryLines.keys.includes(d.key)) {\n        return checkInteraction(\n          d.values[0],\n          this.secondaryLines.opacity,\n          Math.min(this.secondaryLines.opacity, this.hoverOpacity),\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        );\n      } else {\n        return checkInteraction(\n          d.values[0], // use first data point of each line to decide interaction highlight\n          lineOpacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        );\n      }\n    });\n\n    const dotOpacity = this.showDots ? 1 : 0;\n    this.updateDotWrappers.attr('opacity', d => {\n      const lineDotOpacity = this.secondaryLines.keys.includes(d.key) ? this.secondaryLines.opacity : dotOpacity;\n      return lineDotOpacity;\n    });\n\n    this.updateDots.each((d, i, n) => {\n      if (!d.enter && !d.enterWholeGroup && !d.exit && !d.exitWholeGroup) {\n        select(n[i]).attr('opacity', () => {\n          return checkInteraction(\n            d,\n            dotOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        });\n      }\n    });\n\n    retainAccessFocus({\n      parentGNode: this.rootG.node()\n    });\n\n    setLegendInteractionState({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.seriesAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.hoverStyle,\n      clickStyle: this.clickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  setSeriesLabelOpacity() {\n    const hideOnly = this.labelDetails.placement !== 'auto' && this.labelDetails.collisionHideOnly;\n    const addCollisionClass = this.labelDetails.placement === 'auto' || hideOnly;\n\n    this.seriesLabelUpdate.each((d, i, n) => {\n      const me = select(n[i]);\n      const prevOpacity = +me.attr('opacity');\n      const styleVisibility = me.style('visibility');\n      if (!me.classed('entering')) {\n        me.attr('opacity', () => {\n          const seriesLabelOpacity =\n            (!this.seriesLabel.visible\n              ? 0\n              : this.secondaryLines.keys.includes(d.key)\n              ? this.secondaryLines.opacity\n              : 1) < 1\n              ? 0\n              : 1;\n          const parentOpacity = +select(n[i].parentNode).attr('opacity');\n          me.attr('data-hidden', parentOpacity === 0 || seriesLabelOpacity === 0 ? 'true' : null);\n          // check if innerInteractionKeys includes seriesAccessor, if not then don't check seriesLabel for interaction\n          if (!this.seriesInteraction) {\n            select(n[i]).attr('data-hidden', seriesLabelOpacity === 0 ? 'true' : null);\n            if (prevOpacity !== seriesLabelOpacity && (this.labelDetails.placement === 'auto' || hideOnly)) {\n              if (seriesLabelOpacity === 1) {\n                select(n[i])\n                  .classed('collision-added', true)\n                  .style('visibility', null);\n              } else {\n                select(n[i]).classed('collision-removed', true);\n              }\n            }\n            return seriesLabelOpacity;\n          } else if (this.secondaryLines.keys.includes(d.key)) {\n            const targetOpacity =\n              checkInteraction(\n                d.values[0],\n                seriesLabelOpacity,\n                Math.min(this.secondaryLines.opacity, this.hoverOpacity),\n                this.hoverHighlight,\n                this.clickHighlight,\n                this.innerInteractionKeys\n              ) < 1\n                ? 0\n                : 1;\n            select(n[i]).attr('data-hidden', targetOpacity === 0 ? 'true' : null);\n            if (\n              ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n              (this.labelDetails.placement === 'auto' || hideOnly)\n            ) {\n              if (targetOpacity === 1) {\n                select(n[i])\n                  .classed('collision-added', true)\n                  .style('visibility', null);\n              } else {\n                select(n[i]).classed('collision-removed', true);\n              }\n            }\n            return targetOpacity;\n          } else {\n            const targetOpacity =\n              checkInteraction(\n                d.values[0],\n                seriesLabelOpacity,\n                this.hoverOpacity,\n                this.hoverHighlight,\n                this.clickHighlight,\n                this.innerInteractionKeys\n              ) < 1\n                ? 0\n                : 1;\n            select(n[i]).attr('data-hidden', targetOpacity === 0 ? 'true' : null);\n            if (\n              ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n              (this.labelDetails.placement === 'auto' || hideOnly)\n            ) {\n              if (targetOpacity === 1) {\n                select(n[i])\n                  .classed('collision-added', true)\n                  .style('visibility', null);\n              } else {\n                select(n[i]).classed('collision-removed', true);\n              }\n            }\n            return targetOpacity;\n          }\n        });\n      }\n    });\n\n    if (addCollisionClass) {\n      const labelsAdded = this.seriesLabelUpdate\n        .filter((_, i, n) => select(n[i]).classed('collision-added'))\n        .attr(\n          'data-text-anchor',\n          (_, i, n) => select(n[i]).attr('collision-text-anchor') || select(n[i]).attr('data-text-anchor')\n        )\n        .attr('collision-text-anchor', null);\n      const labelsRemoved = this.seriesLabelUpdate\n        .filter((_, i, n) => select(n[i]).classed('collision-removed'))\n        .attr('data-use-dx', hideOnly)\n        .attr('data-use-dy', hideOnly)\n        .attr('keep-data-y', hideOnly)\n        .attr('collision-text-anchor', (_, i, n) => select(n[i]).attr('data-text-anchor'))\n        .attr('data-text-anchor', null); // need this for remove only\n\n      // we can now remove labels as well if we need to...\n      if (labelsRemoved.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsRemoved,\n          avoidMarks: [], // [this.updateDots], // this will link the series label to the last point in the line\n          validPositions: ['middle'],\n          offsets: [1],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n          hideOnly: false,\n          removeOnly: true\n        });\n\n        // remove temporary class now\n        labelsRemoved.classed('collision-removed', false).attr('keep-data-y', null);\n      }\n\n      // we can now add labels as well if we need to...\n      if (labelsAdded.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsAdded,\n          avoidMarks: [this.updateDots], // this will link the series label to the last point in the line\n          validPositions: hideOnly ? ['middle'] : ['middle', 'top', 'bottom'],\n          offsets: hideOnly ? [1] : [1, 4, 4],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n          hideOnly: this.labelDetails.visible && hideOnly\n        });\n\n        // if we are in hide only we still need to place the labels\n        if (hideOnly) {\n          labelsAdded\n            .attr('text-anchor', this.isRight ? 'start' : 'end')\n            .attr('x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n            .attr('y', d => {\n              if (this.yAxis.scales === 'individual') {\n                return this.isRight\n                  ? this.multiYScale[d.values[d.values.length - 1][this.ordinalAccessor]].y(\n                      d.values[d.values.length - 1][this.valueAccessor]\n                    )\n                  : this.multiYScale[d.values[0][this.ordinalAccessor]].y(d.values[0][this.valueAccessor]);\n              }\n              return this.isRight\n                ? this.y(d.values[d.values.length - 1][this.valueAccessor])\n                : this.y(d.values[0][this.valueAccessor]);\n            })\n            .attr('dx', this.isRight ? '0.3em' : '-0.3em')\n            .attr('dy', this.dataLabel && this.dataLabel.placement === 'top-right' ? '0.9em' : '-0.5em');\n        }\n        // remove temporary class now\n        labelsAdded.classed('collision-added', false);\n      }\n    }\n  }\n\n  setLabelOpacity() {\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n    const addCollisionClass = this.dataLabel.placement === 'auto' || hideOnly;\n    const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n\n    this.updatingLabelGroups.attr('opacity', d => {\n      return (!this.dataLabel.visible\n        ? 0\n        : this.secondaryLines.keys.includes(d.key) && this.secondaryLines.showDataLabel\n        ? this.secondaryLines.opacity\n        : this.secondaryLines.keys.includes(d.key) && !this.secondaryLines.showDataLabel\n        ? 0\n        : 1) < 1\n        ? 0\n        : 1;\n    });\n    this.updatingLabels.each((d, i, n) => {\n      const prevOpacity = +select(n[i]).attr('opacity');\n      const styleVisibility = select(n[i]).style('visibility');\n      if (!d.enter && !d.enterWholeGroup && !d.exit && !d.exitWholeGroup) {\n        select(n[i]).attr('opacity', () => {\n          const targetOpacity =\n            checkInteraction(\n              d,\n              1,\n              this.hoverOpacity,\n              this.hoverHighlight,\n              this.clickHighlight,\n              this.innerInteractionKeys\n            ) < 1\n              ? 0\n              : 1;\n          const parentOpacity = +select(n[i].parentNode).attr('opacity');\n          select(n[i]).attr('data-hidden', parentOpacity === 0 || targetOpacity === 0 ? 'true' : null);\n          if (\n            ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n            (this.dataLabel.placement === 'auto' || hideOnly)\n          ) {\n            if (targetOpacity === 1) {\n              select(n[i])\n                .classed('collision-added', true)\n                .style('visibility', null);\n            } else {\n              select(n[i]).classed('collision-removed', true);\n            }\n          }\n          return targetOpacity;\n        });\n      }\n    });\n\n    if (addCollisionClass) {\n      const labelsAdded = this.updatingLabels\n        .filter((_, i, n) => select(n[i]).classed('collision-added'))\n        .transition()\n        .duration(0);\n      const labelsRemoved = this.updatingLabels\n        .filter((_, i, n) => select(n[i]).classed('collision-removed'))\n        .attr('data-use-dx', hideOnly)\n        .attr('data-use-dy', hideOnly);\n\n      const validPositions = hideOnly\n        ? ['middle']\n        : collisionPlacement && this.collisionSettings[collisionPlacement] // check whether placement provided maps correctly\n        ? this.collisionSettings[collisionPlacement].validPositions\n        : this.collisionSettings['all'].validPositions;\n      const offsets = hideOnly\n        ? [1]\n        : collisionPlacement && this.collisionSettings[collisionPlacement] // check whether placement provided maps correctly\n        ? this.collisionSettings[collisionPlacement].offsets\n        : this.collisionSettings['all'].offsets;\n\n      // we can now remove labels as well if we need to...\n      if (labelsRemoved.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsRemoved,\n          avoidMarks: [], // [this.updateDots], // this will link the series label to the last point in the line\n          validPositions: ['middle'],\n          offsets: [1],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n          hideOnly: false,\n          removeOnly: true\n        });\n\n        // remove temporary class now\n        labelsRemoved.classed('collision-removed', false);\n      }\n\n      // we can now add labels as well if we need to...\n      if (labelsAdded.size() > 0) {\n        this.bitmaps = placeDataLabels({\n          root: labelsAdded,\n          xScale: this.x,\n          yScale: this.dynamicY,\n          ordinalAccessor: this.ordinalAccessor,\n          valueAccessor: this.valueAccessor,\n          placement: this.dataLabel.placement,\n          chartType: 'parallel',\n          avoidCollision: {\n            runOccupancyBitmap: this.dataLabel.visible && this.dataLabel.placement === 'auto',\n            bitmaps: this.bitmaps,\n            labelSelection: labelsAdded,\n            avoidMarks: [this.updateLines, this.updateDots],\n            validPositions,\n            offsets,\n            accessors: [this.ordinalAccessor, this.seriesAccessor, 'key'], // key is created for lines by nesting done in line,\n            size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n            hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly,\n            suppressMarkDraw: true\n          }\n        });\n\n        // we need to maintain some values since line has customized lifecycle setup\n        labelsAdded.call(transitionEndAll, () => {\n          this.updatingLabels.each((d, i, n) => {\n            select(n[i]).classed('collision-added', false);\n            // store results to hash so we can use them in lifecycle (specific to line/parallel lifecycle only)\n            this.hiddenHash[`${d[this.ordinalAccessor]}-${d[this.seriesAccessor] || 'b'}`] = {\n              'data-label-hidden': select(n[i]).attr('data-label-hidden') === 'true',\n              x: +select(n[i]).attr('x') - +select(n[i]).attr('data-x'),\n              y: +select(n[i]).attr('y') - +select(n[i]).attr('data-y'),\n              'text-anchor': select(n[i]).attr('text-anchor')\n            };\n          });\n        });\n      }\n    }\n  }\n\n  bindInteractivity() {\n    this.updateLines\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onHoverHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    this.updateDots\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    // we bind the G for keyboard interactivity\n    // this does not effect mouse, but enables keyboard series selection to\n    // tap into series interactivity, if enabled\n    this.dotG\n      .selectAll('.parallel-dot-wrapper')\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onSeriesHoverHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    this.seriesLabelUpdate\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onSeriesHoverHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    this.updatingLabels\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  addStrokeUnder() {\n    const filter = createTextStrokeFilter({\n      root: this.svg.node(),\n      id: this.chartID,\n      color: '#ffffff'\n    });\n    this.labels.attr('filter', filter);\n    this.seriesLabelG.attr('filter', filter);\n  }\n\n  handleDotStroke = (d, i, n) => {\n    if (!this.accessibility.hideStrokes) {\n      const clicked =\n        this.clickHighlight &&\n        this.clickHighlight.length > 0 &&\n        checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n      const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n      const baseColor = select(n[i].parentNode).attr('fill');\n      const color =\n        clicked && this.clickStyle.color\n          ? visaColors[this.clickStyle.color] || this.clickStyle.color\n          : clicked\n          ? baseColor\n          : hovered && this.hoverStyle.color\n          ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n          : baseColor;\n      select(n[i]).attr('stroke-width', this.calculateStrokeWidth(d));\n      select(n[i]).attr('fill', color);\n      return this.strokes[color.toLowerCase()];\n    }\n    return null;\n  };\n\n  handleLineStroke = (data, i) => {\n    const baseColor = this.colorArr[i] || this.colorArr[0];\n    const d = data.values[0];\n    const clicked = checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n    const hovered = checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n    return this.seriesInteraction\n      ? clicked && this.clickStyle.color\n        ? this.strokes[(visaColors[this.clickStyle.color] || this.clickStyle.color).toLowerCase()]\n        : clicked\n        ? baseColor\n        : hovered && this.hoverStyle.color\n        ? this.strokes[(visaColors[this.hoverStyle.color] || this.hoverStyle.color).toLowerCase()]\n        : baseColor\n      : baseColor;\n  };\n\n  handleSeriesTextFill = (data, i) => {\n    const baseColor = this.rawColors[i] || this.rawColors[0];\n    const d = data.values[0];\n    const clicked = checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n    const hovered = checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n    const color = this.seriesInteraction\n      ? clicked && this.clickStyle.color\n        ? visaColors[this.clickStyle.color] || this.clickStyle.color\n        : clicked\n        ? baseColor\n        : hovered && this.hoverStyle.color\n        ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n        : baseColor\n      : baseColor;\n    return this.textColors[color.toLowerCase()];\n  };\n\n  handleTextFill = (d, i, n) => {\n    const clicked =\n      this.clickHighlight &&\n      this.clickHighlight.length > 0 &&\n      checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n    const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n    const baseColor = select(n[i].parentNode).attr('fill');\n    const color =\n      clicked && this.clickStyle.color\n        ? visaColors[this.clickStyle.color] || this.clickStyle.color\n        : clicked\n        ? baseColor\n        : hovered && this.hoverStyle.color\n        ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n        : baseColor;\n    return this.textColors[color.toLowerCase()];\n  };\n\n  updateColors() {\n    this.updateDotWrappers.attr('fill', (_, i) => this.rawColors[i] || this.rawColors[0]);\n    this.updateDots.attr('stroke', this.handleDotStroke);\n    this.updateLines.attr('stroke', this.handleLineStroke);\n    this.seriesLabelUpdate.attr('fill', this.handleSeriesTextFill);\n    this.updatingLabelGroups.attr('fill', (_, i) => this.rawColors[i] || this.rawColors[0]);\n    this.updatingLabels.attr('fill', this.handleTextFill);\n  }\n\n  updateCursor() {\n    this.updateLines.attr('cursor', !this.suppressEvents && this.seriesInteraction ? this.cursor : null);\n    this.updateDots.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    this.seriesLabelUpdate.attr('cursor', !this.suppressEvents && this.seriesInteraction ? this.cursor : null);\n    this.updatingLabels.attr('cursor', !this.suppressEvents ? this.cursor : null);\n  }\n\n  updateStrokeWidth() {\n    this.updateLines.attr('stroke-width', d => this.calculateStrokeWidth(d, true));\n    this.updateDots.attr('stroke', this.handleDotStroke);\n  }\n\n  calculateStrokeWidth = (data, useChildData?) => {\n    const d = !useChildData ? data : data.values[0];\n    return !useChildData || this.seriesInteraction\n      ? checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n        ? this.clickStyle.strokeWidth || this.strokeWidth\n        : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n        ? this.hoverStyle.strokeWidth || this.strokeWidth\n        : !this.secondaryLines.keys.includes(d[this.seriesAccessor])\n        ? this.strokeWidth\n        : 1\n      : !this.secondaryLines.keys.includes(d[this.seriesAccessor])\n      ? this.strokeWidth\n      : 1;\n  };\n\n  updateStrokePattern() {\n    this.updateLines.attr('stroke-dasharray', this.handleStrokeDasharray);\n  }\n\n  handleStrokeDasharray = (d, i) => {\n    return this.secondaryLines.keys.includes(d.key)\n      ? this.short\n      : !this.accessibility.hideTextures\n      ? this.dashPatterns[i]\n      : '';\n  };\n\n  updateDotRadius() {\n    this.updateDots\n      .each((d, i, n) => {\n        const me = select(n[i]);\n        if (!d.enter && !d.enterWholeGroup && !me.classed('entering') && !d.exit) {\n          me.attr('r', () =>\n            checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n              ? this.dotRadius +\n                (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n              : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n              ? this.dotRadius +\n                (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n              : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n              ? this.dotRadius + 0.5\n              : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n          );\n        }\n      })\n      .attr('stroke', this.handleDotStroke);\n  }\n\n  setSelectedClass() {\n    this.updateDots.classed('highlight', (d, i, n) => {\n      let selected = checkInteraction(d, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n      selected = this.clickHighlight && this.clickHighlight.length ? selected : false;\n      const selectable = this.accessibility.elementsAreInterface;\n      setElementInteractionAccessState(n[i], selected, selectable);\n      return selected;\n    });\n  }\n\n  drawAnnotations() {\n    annotate({\n      source: this.rootG.node(),\n      data: this.annotations,\n      xScale: this.x,\n      xAccessor: this.ordinalAccessor,\n      yScale: this.y,\n      yAccessor: this.valueAccessor,\n      width: this.width,\n      height: this.height,\n      padding: this.padding,\n      margin: this.margin,\n      bitmaps: this.bitmaps\n    });\n  }\n\n  setAnnotationAccessibility() {\n    setAccessAnnotation(this.getLanguageString(), this.parallelChartEl, this.annotations, undefined);\n  }\n\n  // new accessibility functions added here\n  setTagLevels() {\n    this.topLevel = findTagLevel(this.highestHeadingLevel);\n    this.bottomLevel = findTagLevel(this.highestHeadingLevel, 3);\n  }\n\n  setChartDescriptionWrapper() {\n    // this initializes the accessibility description section of the chart\n    initializeDescriptionRoot({\n      language: this.getLanguageString(),\n      rootEle: this.parallelChartEl,\n      title: this.accessibility.title || this.mainTitle,\n      chartTag: 'parallel-plot',\n      uniqueID: this.chartID,\n      highestHeadingLevel: this.highestHeadingLevel,\n      redraw: this.shouldRedrawWrapper,\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      hideDataTable: this.accessibility.hideDataTableButton\n    });\n    this.shouldRedrawWrapper = false;\n  }\n\n  setParentSVGAccessibility() {\n    // this sets the accessibility features of the root SVG element\n    setAccessibilityController({\n      chartTag: 'parallel-plot',\n      language: this.getLanguageString(),\n      node: this.svg.node(),\n      title: this.accessibility.title || this.mainTitle,\n      description: this.subTitle,\n      uniqueID: this.chartID,\n      geomType: 'point',\n      includeKeyNames: this.accessibility.includeDataKeyNames,\n      dataKeys: this.innerScopeDataKeys(),\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.seriesAccessor,\n      groupName: 'line',\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled\n    });\n  }\n\n  setGeometryAccessibilityAttributes() {\n    // this makes sure every geom element has correct event handlers + semantics (role, tabindex, etc)\n    this.updateDots.each((_d, i, n) => {\n      initializeElementAccess(n[i]);\n    });\n  }\n\n  setGeometryAriaLabels() {\n    // this adds an ARIA label to each geom (a description read by screen readers)\n    const keys = this.innerScopeDataKeys();\n    this.updateDots.each((_d, i, n) => {\n      setElementFocusHandler({\n        chartTag: 'parallel-plot',\n        language: this.getLanguageString(),\n        node: n[i],\n        geomType: 'point',\n        includeKeyNames: this.accessibility.includeDataKeyNames,\n        dataKeys: keys,\n        dataKeyNames: this.dataKeyNames,\n        groupName: 'line',\n        uniqueID: this.chartID,\n        disableKeyNav:\n          this.suppressEvents &&\n          this.accessibility.elementsAreInterface === false &&\n          this.accessibility.keyboardNavConfig &&\n          this.accessibility.keyboardNavConfig.disabled\n      });\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setGroupAccessibilityID() {\n    // this sets an ARIA label on all the g elements in the chart\n    this.updateDotWrappers.each((_, i, n) => {\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setChartAccessibilityTitle() {\n    setAccessTitle(this.getLanguageString(), this.parallelChartEl, this.accessibility.title || this.mainTitle);\n  }\n\n  setChartAccessibilitySubtitle() {\n    setAccessSubtitle(this.getLanguageString(), this.parallelChartEl, this.subTitle);\n  }\n\n  setChartAccessibilityLongDescription() {\n    setAccessLongDescription(this.getLanguageString(), this.parallelChartEl, this.accessibility.longDescription);\n  }\n\n  setChartAccessibilityExecutiveSummary() {\n    setAccessExecutiveSummary(this.getLanguageString(), this.parallelChartEl, this.accessibility.executiveSummary);\n  }\n\n  setChartAccessibilityPurpose() {\n    setAccessPurpose(this.getLanguageString(), this.parallelChartEl, this.accessibility.purpose);\n  }\n\n  setChartAccessibilityContext() {\n    setAccessContext(this.getLanguageString(), this.parallelChartEl, this.accessibility.contextExplanation);\n  }\n\n  setChartAccessibilityStatisticalNotes() {\n    setAccessStatistics(this.getLanguageString(), this.parallelChartEl, this.accessibility.statisticalNotes);\n  }\n\n  setChartCountAccessibility() {\n    // this is our automated section that describes the chart contents\n    // (like geometry and gorup counts, etc)\n    setAccessChartCounts({\n      rootEle: this.parallelChartEl,\n      parentGNode: this.dotG.node(), // pass the wrapper to <g> or geometries here, should be single node selection\n      chartTag: 'parallel-plot',\n      geomType: 'point',\n      groupName: 'line'\n      // recursive: true\n    });\n  }\n\n  setChartAccessibilityStructureNotes() {\n    setAccessStructure(this.getLanguageString(), this.parallelChartEl, this.accessibility.structureNotes);\n  }\n  // new accessibility stuff ends here\n\n  onChangeHandler() {\n    if (this.accessibility && typeof this.accessibility.onChangeFunc === 'function') {\n      const d = {\n        updated: this.updated,\n        added: this.enterSize,\n        removed: this.exitSize\n      };\n      this.accessibility.onChangeFunc(d);\n    }\n    this.interpolating = false;\n    this.updated = false;\n    this.enterSize = 0;\n    this.exitSize = 0;\n  }\n\n  onClickHandler(d, n) {\n    this.clickEvent.emit({ data: d, target: n });\n  }\n\n  onHoverHandler(d, n) {\n    overrideTitleTooltip(this.chartID, true);\n    this.hoverEvent.emit({ data: d, target: n });\n    if (this.showTooltip && d[this.ordinalAccessor]) {\n      this.eventsTooltip({ data: d, evt: event, isToShow: true });\n    }\n  }\n\n  onSeriesHoverHandler(d, n) {\n    this.hoverEvent.emit({ data: d, target: n });\n  }\n\n  onMouseOutHandler() {\n    overrideTitleTooltip(this.chartID, false);\n    this.mouseOutEvent.emit();\n    if (this.showTooltip) {\n      this.eventsTooltip({ isToShow: false });\n    }\n  }\n\n  // set initial style (instead of copying css class across the lib)\n  setTooltipInitialStyle() {\n    initTooltipStyle(this.tooltipG);\n  }\n\n  // tooltip\n  eventsTooltip({ data, evt, isToShow }: { data?: any; evt?: any; isToShow: boolean }) {\n    drawTooltip({\n      root: this.tooltipG,\n      data,\n      event: evt,\n      isToShow,\n      tooltipLabel: this.tooltipLabel,\n      xAxis: this.xAxis,\n      yAxis: this.yAxis,\n      dataLabel: this.dataLabel,\n      dataKeyNames: this.dataKeyNames,\n      ordinalAccessor: this.ordinalAccessor,\n      valueAccessor: this.valueAccessor,\n      groupAccessor: this.seriesAccessor,\n      chartType: 'parallel'\n    });\n  }\n\n  bindLegendInteractivity() {\n    select(this.parallelChartEl)\n      .selectAll('.legend')\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction && this.legend.interactive\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction && this.legend.interactive\n          ? (d, i, n) => {\n              if (d.values) {\n                this.hoverEvent.emit({ data: d.values[0], target: n[i] });\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents && this.legend.interactive ? () => this.onMouseOutHandler() : null);\n  }\n\n  setLegendCursor() {\n    select(this.parallelChartEl)\n      .selectAll('.legend')\n      .style('cursor', !this.suppressEvents && this.legend.interactive && this.seriesInteraction ? this.cursor : null);\n  }\n\n  drawLegendElements() {\n    // if we have default series access and it is not in the data don't show legend\n    const noSeriesAccessor =\n      this.seriesAccessor === ParallelPlotDefaultValues.seriesAccessor &&\n      this.nest &&\n      this.nest.length === 1 &&\n      this.nest[0].key === 'undefined';\n\n    drawLegend({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      width: this.innerPaddedWidth,\n      height: this.margin.top + 20,\n      colorArr: this.colorArr,\n      dashPatterns: !this.accessibility.hideTextures ? this.dashPatterns : null,\n      margin: this.margin,\n      padding: this.padding,\n      duration: this.duration,\n      type: 'parallel',\n      secondary: this.secondaryLines.keys,\n      fontSize: 16,\n      data: this.nest,\n      label: this.legend.labels,\n      hide: !((this.legend.visible && !noSeriesAccessor) || !this.legend || !this.seriesAccessor),\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.seriesAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.hoverStyle,\n      clickStyle: this.clickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  render() {\n    this.drawStartEvent.emit({ chartID: this.chartID });\n    // everything between this comment and the third should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n    this.init();\n    if (this.shouldSetLocalizationConfig) {\n      this.setLocalizationConfig();\n      this.shouldSetLocalizationConfig = false;\n    }\n    if (this.shouldSetTagLevels) {\n      this.setTagLevels();\n      this.shouldSetTagLevels = false;\n    }\n    if (this.shouldSetDimensions) {\n      this.setDimensions();\n      this.shouldSetDimensions = false;\n    }\n    if (this.shouldSetScaleUsed) {\n      this.setScaleUsed();\n      this.shouldSetScaleUsed = false;\n    }\n    if (this.shouldUpdateScales) {\n      this.prepareScales();\n      this.shouldUpdateScales = false;\n    }\n    if (this.shouldUpdateData) {\n      this.prepareData();\n      this.shouldUpdateData = false;\n    }\n    if (this.shouldUpdateInterpolationData) {\n      this.updateInterpolationData();\n      this.shouldUpdateInterpolationData = false;\n    }\n    if (this.shouldValidateInteractionKeys) {\n      this.validateInteractionKeys();\n      this.shouldValidateInteractionKeys = false;\n    }\n    if (this.shouldUpdateTableData) {\n      this.setTableData();\n      this.shouldUpdateTableData = false;\n    }\n    if (this.shouldValidate) {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.shouldValidate = false;\n    }\n    if (this.shouldValidateDataLabelAccessor) {\n      this.validateDataLabelAccessor();\n      this.shouldValidateDataLabelAccessor = false;\n    }\n    if (this.shouldSetColors) {\n      this.setColors();\n      this.shouldSetColors = false;\n    }\n    if (this.shouldValidateSeriesLabels) {\n      this.validateSeriesLabels();\n      this.shouldValidateSeriesLabels = false;\n    }\n    // // Everything between this comment and the first should eventually\n    // // be moved into componentWillUpdate (if the Stencil bug is fixed)\n\n    return (\n      <div class=\"o-layout\">\n        <div class=\"o-layout--chart\">\n          <this.topLevel class=\"parallel-main-title vcl-main-title\">{this.mainTitle}</this.topLevel>\n          <this.bottomLevel class=\"visa-ui-text--instructions parallel-sub-title vcl-sub-title\" />\n          <div class=\"parallel-legend vcl-legend\" style={{ display: this.legend.visible ? 'block' : 'none' }} />\n          <keyboard-instructions\n            uniqueID={this.chartID}\n            geomType={'point'}\n            groupName={'line'} // taken from initializeDescriptionRoot, on bar this should be \"bar group\", stacked bar is \"stack\", and clustered is \"cluster\"\n            language={this.getLanguageString()}\n            chartTag={'parallel-plot'}\n            width={this.width - (this.margin ? this.margin.right || 0 : 0)}\n            isInteractive={this.accessibility.elementsAreInterface}\n            hasCousinNavigation\n            disabled={\n              this.suppressEvents &&\n              this.accessibility.elementsAreInterface === false &&\n              this.accessibility.keyboardNavConfig &&\n              this.accessibility.keyboardNavConfig.disabled\n            } // the chart is \"simple\"\n          />\n          <div class=\"visa-viz-d3-parallel-container\" />\n          <div class=\"parallel-tooltip vcl-tooltip\" style={{ display: this.showTooltip ? 'block' : 'none' }} />\n          <data-table\n            uniqueID={this.chartID}\n            isCompact\n            language={this.getLanguageString()}\n            tableColumns={this.tableColumns}\n            dataKeyNames={this.dataKeyNames}\n            data={this.tableData}\n            padding={this.padding}\n            margin={this.margin}\n            hideDataTable={this.accessibility.hideDataTableButton}\n            unitTest={this.unitTest}\n          />\n        </div>\n        {/* <canvas id=\"bitmap-render\" /> */}\n      </div>\n    );\n  }\n  private init() {\n    // reading properties\n    const keys = Object.keys(ParallelPlotDefaultValues);\n    let i = 0;\n    const exceptions = {\n      wrapLabel: {\n        exception: false\n      },\n      strokeWidth: {\n        exception: 0\n      },\n      showDots: {\n        exception: false\n      },\n      hoverOpacity: {\n        exception: 0\n      },\n      dotRadius: {\n        exception: 0\n      },\n      showTooltip: {\n        exception: false\n      },\n      mainTitle: {\n        exception: ''\n      },\n      subTitle: {\n        exception: ''\n      },\n      showBaselineX: {\n        exception: false\n      }\n    };\n    for (i = 0; i < keys.length; i++) {\n      const exception = !exceptions[keys[i]] ? false : this[keys[i]] === exceptions[keys[i]].exception;\n      this[keys[i]] = this[keys[i]] || exception ? this[keys[i]] : ParallelPlotDefaultValues[keys[i]];\n    }\n  }\n}\n\n// incorporate OSS licenses into build\nwindow['VisaChartsLibOSSLicenses'] = getLicenses(); // tslint:disable-line no-string-literal\n"],"mappings":"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","ignoreList":[]}