{"version":3,"names":["sum","values","valueof","undefined","value","index","propDefaultValues","Utils","StackedBarChartDefaultValues","mainTitle","subTitle","text","height","width","margin","top","bottom","right","left","padding","localization","normalized","showTotalValue","showZeroLabels","ordinalAccessor","valueAccessor","groupAccessor","layout","accessibility","animationConfig","highestHeadingLevel","sortOrder","xAxis","yAxis","wrapLabel","colorPalette","colorPaletteCategorical","hoverStyle","clickStyle","referenceStyle","cursor","roundedCorner","barIntervalRatio","hoverOpacity","dataLabel","dataLabelMiddle","legend","categoryLegend","tooltipLabel","showTooltip","suppressEvents","referenceLines","annotations","clickHighlight","stackedBarChartCss","StackedBarChartStyle0","getGlobalInstances","configLocalization","getActiveLanguageString","getBrowser","verifyTextHasSpace","checkAttributeTransitions","createTextStrokeFilter","drawHoverStrokes","removeHoverStrokes","buildStrokes","convertColorsToTextures","findTagLevel","prepareRenderChange","initializeDescriptionRoot","initializeElementAccess","setElementFocusHandler","setElementAccessID","setAccessibilityController","hideNonessentialGroups","setAccessTitle","setAccessSubtitle","setAccessLongDescription","setAccessExecutiveSummary","setAccessPurpose","setAccessContext","setAccessStatistics","setAccessChartCounts","setAccessXAxis","setAccessYAxis","setAccessStructure","setAccessAnnotation","retainAccessFocus","checkAccessFocus","setElementInteractionAccessState","setAccessibilityDescriptionWidth","autoTextColor","annotate","chartAccessors","checkInteraction","checkClicked","checkHovered","convertVisaColor","drawAxis","drawGrid","drawLegend","setLegendInteractionState","drawTooltip","formatStats","formatDate","formatDataLabel","getPadding","getColors","getLicenses","getScopedData","initTooltipStyle","overrideTitleTooltip","placeDataLabels","transitionEndAll","scopeDataKeys","visaColors","validateAccessibilityProps","validateLocalizationProps","roundTo","resolveLabelCollision","setSubTitle","setReferenceLine","StackedBarChart","this","shouldValidateAccessibility","shouldValidateLocalization","series","extent","datakeys","updated","shouldValidateInteractionKeys","shouldValidate","shouldUpdateData","shouldSetDimensions","shouldUpdateTableData","shouldSetColors","shouldSetSubTitle","shouldValidateAxes","shouldValidateClickHighlight","shouldUpdateScales","shouldUpdateAnnotations","shouldResetRoot","shouldEnterUpdateExit","shouldSetGlobalSelections","shouldSetTestingAttributes","shouldUpdateGeometries","shouldCheckValueAxis","shouldCheckLabelAxis","shouldUpdateXAxis","shouldUpdateYAxis","shouldUpdateXGrid","shouldUpdateYGrid","shouldUpdateBaseline","shouldSetSelectionClass","shouldUpdateCursor","shouldUpdateCorners","shouldUpdateLegendData","shouldValidateLabelPlacement","shouldValidateDataLabelAccessor","shouldUpdateLegend","shouldUpdateLegendInteractivity","shouldUpdateReferenceLines","shouldDrawInteractionState","shouldBindInteractivity","shouldSetLabelOpacity","shouldUpdateLabels","shouldUpdateTotalLabels","shouldCheckLabelColor","shouldUpdateDescriptionWrapper","shouldSetChartAccessibilityTitle","shouldSetChartAccessibilitySubtitle","shouldSetChartAccessibilityLongDescription","shouldSetChartAccessibilityExecutiveSummary","shouldSetChartAccessibilityStatisticalNotes","shouldSetChartAccessibilityStructureNotes","shouldSetParentSVGAccessibility","shouldSetGeometryAccessibilityAttributes","shouldSetGeometryAriaLabels","shouldSetGroupAccessibilityLabel","shouldSetChartAccessibilityPurpose","shouldSetChartAccessibilityContext","shouldRedrawWrapper","shouldSetTagLevels","shouldSetChartAccessibilityCount","shouldSetYAxisAccessibility","shouldSetXAxisAccessibility","shouldSetAnnotationAccessibility","shouldSetTextures","shouldSetStrokes","shouldSetLocalizationConfig","isSafari","strokes","textStrokes","topLevel","bottomLevel","textTreatmentHandler","d","i","n","me","select","bgColor","length","innerInteractionKeys","color","hoverHighlight","preparedColors","classed","filter","attr","setTimeout","dataWatcher","_newData","_oldData","idWatcher","newID","_oldID","console","error","headingWatcher","_newVal","_oldVal","titleWatcher","subtitleWatcher","dimensionWatcher","layoutWatcher","interpolating","ordinalAccessorWatcher","interactionKeys","valueAccessorWatcher","groupAccessorWatcher","sortWatcher","xAxisWatcher","newGridVal","gridVisible","oldGridVal","newTickInterval","tickInterval","oldTickInterval","yAxisWatcher","wrapLabelWatcher","normalizedWatcher","paletteWatcher","colorsWatcher","hoverStyleWatcher","clickStyleWatcher","referenceWatcher","cursorWatcher","cornerWatcher","intervalRatioWatcher","hoverOpacityWatcher","labelWatcher","newPlacementVal","placement","oldPlacementVal","newVisibleVal","visible","oldVisibleVal","newAccessor","labelAccessor","oldAccessor","showTotalValueWatcher","showTooltipWatcher","tooltipLabelWatcher","localizationWatcher","newLanguage","language","oldLanguage","newNumeralLocale","numeralLocale","oldNumeralLocale","accessibilityWatcher","newTitle","title","oldTitle","newExecutiveSummary","executiveSummary","oldExecutiveSummary","newPurpose","purpose","oldPurpose","newLongDescription","longDescription","oldLongDescription","newContext","contextExplanation","oldContext","newStatisticalNotes","statisticalNotes","oldStatisticalNotes","newStructureNotes","structureNotes","oldStructureNotes","newincludeDataKeyNames","includeDataKeyNames","oldincludeDataKeyNames","newElementDescriptionAccessor","elementDescriptionAccessor","oldElementDescriptionAccessor","newTextures","hideTextures","oldTextures","newSmallValue","showSmallLabels","oldSmallValue","newStrokes","hideStrokes","oldStrokes","newKeyNav","keyboardNavConfig","disabled","oldKeyNav","newInterface","elementsAreInterface","oldInterface","showZeroLabelsWatcher","legendWatcher","newInteractiveVal","interactive","oldInteractiveVal","annotationsWatcher","valueOverrideWatcher","interactionWatcher","dataKeyNamesWatcher","hoverWatcher","clickWatcher","suppressWatcher","unitTestWatcher","componentWillLoad","chartID","uniqueID","uuid","initialLoadEvent","emit","Promise","resolve","duration","defaults","stackedBarChartEl","id","setLocalizationConfig","setTagLevels","prepareData","prepareLegendData","setDimensions","prepareScales","validateClickHighlight","validateInteractionKeys","validateDataLabelAccessor","validateAxes","setTableData","shouldValidateAccessibilityProps","shouldValidateLocalizationProps","setColors","componentWillUpdate","componentDidLoad","renderRootElements","setTooltipInitialStyle","setChartDescriptionWrapper","setChartAccessibilityTitle","setChartAccessibilitySubtitle","setChartAccessibilityLongDescription","setChartAccessibilityExecutiveSummary","setChartAccessibilityPurpose","setChartAccessibilityContext","setChartAccessibilityStatisticalNotes","setChartAccessibilityStructureNotes","setParentSVGAccessibility","reSetRoot","setTextures","setStrokes","setSubTitleElements","drawXGrid","drawYGrid","setGlobalSelections","setTestingAttributes","enterGeometries","updateGeometries","exitGeometries","setRoundedCorners","drawGeometries","enterDataLabels","updateDataLabels","exitDataLabels","enterTotalDataLabels","updateTotalDataLabels","exitTotalDataLabels","setChartCountAccessibility","setGeometryAccessibilityAttributes","setGeometryAriaLabels","drawLegendElements","bindLegendInteractivity","validateLabelPlacement","drawDataLabels","drawTotalDataLabels","drawReferenceLines","setSelectedClass","checkLabelColorAgainstBackground","updateCursor","bindInteractivity","drawAnnotations","setAnnotationAccessibility","drawXAxis","setXAxisAccessibility","drawYAxis","setYAxisAccessibility","drawBaseline","root","node","barG","setGroupAccessibilityID","onChangeHandler","then","initialLoadEndEvent","componentDidUpdate","updateInteractionState","setLabelOpacity","drawEndEvent","windowInstances","languageString","i18Next","languageObject","getResourceBundle","numeralObject","numeral","localeData","skipValidation","Object","assign","disableValidation","data","context","onClickEvent","clickEvent","misc","innerLabelAccessor","innerXAxis","innerYAxis","getLanguageString","modifier","getSum","innerHeight","innerWidth","innerPaddedHeight","innerPaddedWidth","dataCopy","forEach","keys","item","key","Date","getTime","push","nestData","nest","parseFloat","date","format","offsetTimezone","entries","stackOrder","ordinalValues","stackDiverging","nestedArray","j","output","row","k","runSum","sumAboveZero","base","positive","negative","v","l","s","previous","stackEnd","stackStart","group","enteringStackStart","interpolateGroup","findInterpolation","preceedingElement","nextPrevious","sumMessage","sort","a","b","legendData","map","flattenedNest","val","label","dataKeyNames","tableData","tableColumns","subTitleG","colors","colorsArray","range","colorArr","colorsToConvert","textures","rootSVG","svg","scheme","disableTransitions","copy","stacked","minBarValue","minValueOverride","maxBarValue","maxValueOverride","domain","oldXDomain","x","oldXRange","oldYDomain","y","oldYRange","scaleBand","scaleLinear","append","rootG","gridG","labelG","totalLabels","legendG","tooltipG","referencesG","unitTest","updateBarWrappers","update","updateLabelWrappers","updateLabels","updateTotalLabels","selectAll","changeSvg","selection","namespace","easing","easeCircleIn","changeRoot","changeRootG","axisAccessor","axisLabel","axisScale","bandwidth","dateFormat","hide","rootEle","hasXAxis","xAxisLabel","hasYAxis","yAxisLabel","markOffset","dataBoundToBarGroups","enterBarWrappers","enter","exitBarWrappers","exit","merge","dataBoundToGeometries","exitSize","size","enterSize","dataBoundToLabelWrappers","enterLabelWrappers","exitLabelWrappers","dataBoundToLabels","enterLabels","exitLabels","dataBoundToTotalLabels","enterTotalLabels","exitTotalLabels","interrupt","ordinalAxis","ordinalDimension","valueAxis","valueDimension","each","_d","on","onClickHandler","onHoverHandler","onMouseOutHandler","clicked","hovered","baseColor","scale","direction","_","shift","order","transition","ease","call","self","focusDidExist","remove","parentGNode","geometryIsUpdating","numeric","newValue","transitionEndEvent","state","inputElement","strokeWidth","fill","addCollisionClass","collisionHideOnly","hideOnly","textHeight","textElement","style","getComputedStyle","fontSize","Math","max","processLabelOpacity","labelsAdded","labelsRemoved","collisionSettings","vertical","validPositions","offsets","middle","horizontal","collisionPlacement","boundsScope","bitmaps","labelSelection","avoidMarks","accessors","removeOnly","xScale","yScale","chartType","avoidCollision","runOccupancyBitmap","suppressMarkDraw","opacity","prevOpacity","styleVisibility","dimensions","hasRoom","targetOpacity","Number","EPSILON","selected","selectable","updatingLabels","stack","labelUpdate","textIsMoving","groupDimension","sumDimension","dark_text","totalValueOpacity","totalLabelSelection","groupName","ordinalScale","valueScale","maxDate","minDate","min","scaleTime","source","xAccessor","yAccessor","baseColorArr","type","labelKey","labels","hoverEvent","target","chartTag","redraw","disableKeyNav","hideDataTable","hideDataTableButton","description","geomType","includeKeyNames","dataKeys","groupKeys","onChangeFunc","added","removed","eventsTooltip","evt","event","isToShow","mouseOutEvent","render","drawStartEvent","theme","init","h","class","display","isInteractive","hasCousinNavigation","isCompact","exceptions","exception","window"],"sources":["node_modules/d3-array/src/sum.js","src/components/stacked-bar-chart/stacked-bar-chart-default-values.ts","src/components/stacked-bar-chart/stacked-bar-chart.scss?tag=stacked-bar-chart","src/components/stacked-bar-chart/stacked-bar-chart.tsx"],"sourcesContent":["export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport Utils from '@visa/visa-charts-utils';\n\nconst { propDefaultValues } = Utils;\nexport class StackedBarChartDefaultValues {\n  static readonly mainTitle = 'Stacked Bar Chart Title';\n  static readonly subTitle = propDefaultValues.subTitle.text;\n  static readonly height = 280;\n  static readonly width = 700;\n  static readonly margin = {\n    top: 400 * 0.01,\n    bottom: 400 * 0.01,\n    right: 400 * 0.01,\n    left: 400 * 0.01\n  };\n  static readonly padding = {\n    top: 20,\n    bottom: 50,\n    right: 50,\n    left: 50\n  };\n\n  static readonly localization = propDefaultValues.localization;\n\n  static readonly normalized = false;\n  static readonly showTotalValue = true;\n  static readonly showZeroLabels = false;\n\n  static readonly ordinalAccessor = 'label';\n  static readonly valueAccessor = 'value';\n  static readonly groupAccessor = 'item';\n\n  static readonly layout = propDefaultValues.layout;\n  static readonly accessibility = propDefaultValues.accessibility;\n  static readonly animationConfig = propDefaultValues.animationConfig;\n  static readonly highestHeadingLevel = propDefaultValues.highestHeadingLevel;\n  static readonly sortOrder = propDefaultValues.sortOrder;\n  static readonly xAxis = propDefaultValues.xAxis;\n\n  static readonly yAxis = propDefaultValues.yAxis;\n  static readonly wrapLabel = propDefaultValues.wrapLabel;\n  static readonly colorPalette = propDefaultValues.colorPaletteCategorical;\n\n  static readonly hoverStyle = propDefaultValues.hoverStyle;\n  static readonly clickStyle = propDefaultValues.clickStyle;\n\n  static readonly referenceStyle = propDefaultValues.referenceStyle;\n  static readonly cursor = propDefaultValues.cursor;\n  static readonly roundedCorner = propDefaultValues.roundedCorner;\n  static readonly barIntervalRatio = propDefaultValues.barIntervalRatio;\n  static readonly hoverOpacity = propDefaultValues.hoverOpacity;\n\n  static readonly dataLabel = propDefaultValues.dataLabelMiddle;\n  static readonly dataKeyNames;\n  static readonly legend = propDefaultValues.categoryLegend;\n  static readonly tooltipLabel = propDefaultValues.tooltipLabel;\n\n  static readonly showTooltip = propDefaultValues.showTooltip;\n  static readonly suppressEvents = propDefaultValues.suppressEvents;\n  static readonly referenceLines = propDefaultValues.referenceLines;\n  static readonly annotations = propDefaultValues.annotations;\n\n  static readonly hoverHighlight;\n  static readonly clickHighlight = propDefaultValues.clickHighlight;\n}\n","/**\n * Copyright (c) 2020, 2021, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nstacked-bar-chart {\n  .annotations {\n    pointer-events: none;\n    .handle {\n      pointer-events: all;\n    }\n  }\n\n  .screen-reader-info {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n\n  .data-table-link {\n    color: #767676;\n    text-decoration: none;\n    font-size: 12px;\n    margin-left: 5%;\n  }\n\n  .hidden {\n    display: none;\n  }\n  cursor: default;\n  #visa-viz-d3-stacked-bar-container {\n    clear: both;\n  }\n\n  .stacked-bar-legend {\n    font-size: 1em;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n    .legend {\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n      margin-right: 10px;\n    }\n\n    .key-dot {\n      margin: 3px 8px;\n    }\n  }\n\n  .light {\n    .grid {\n      line {\n        stroke: #c9c9c9;\n        stroke-opacity: 1;\n        stroke-width: 0.8;\n        // shape-rendering: crispEdges;\n        // stroke-dasharray: 4, 4;\n      }\n      path {\n        stroke-width: 0;\n      }\n    }\n\n    .axis {\n      font-size: 12px;\n      .tick {\n        text {\n          fill: #767676;\n        }\n        line {\n          stroke: #767676;\n        }\n      }\n\n      &-label {\n        // axis label\n        text-anchor: middle;\n        font: 1rem sans-serif;\n      }\n\n      &-mark {\n        // axis mark\n        color: #949494;\n        stroke-width: 2px;\n      }\n    }\n\n    .y.axis {\n      path {\n        stroke: #767676;\n        opacity: 0;\n      }\n    }\n    .x.axis {\n      path {\n        stroke: transparent;\n      }\n    }\n\n    .o-layout--chart {\n      .bar-dataLabel-vertical {\n        font-size: 1rem;\n        fill: #767676;\n        font-weight: 550;\n      }\n      .bar-dataLabel-horizontal {\n        font-size: 1rem;\n        fill: #767676;\n        font-weight: 550;\n      }\n    }\n  }\n  .dark {\n    .grid {\n      line {\n        stroke: lightgrey;\n        stroke-opacity: 0.7;\n        shape-rendering: crispEdges;\n      }\n      path {\n        stroke-width: 0;\n      }\n    }\n    .axis {\n      font-size: 12px;\n      .tick {\n        line {\n          stroke: lightgrey;\n        }\n        text {\n          fill: grey;\n        }\n      }\n      path {\n        stroke: black;\n      }\n\n      &-label {\n        text-anchor: middle;\n        font: 1rem sans-serif;\n      }\n    }\n    .o-layout--chart svg {\n      background: black;\n      .bar-dataLabel-vertical {\n        fill: #767676;\n        text-anchor: middle;\n      }\n      .bar-dataLabel-horizontal {\n        fill: #767676;\n        text-anchor: start;\n      }\n    }\n  }\n\n  //TBD: add color based on scheme\n  // .r.axis circle {\n  //   stroke: #cccccc;\n  //   stroke-width: 1px;\n  //   fill: none;\n  // }\n\n  //Text alignment, not impacted by color theme\n  // .a.axis text {\n  //   text-anchor: middle;\n  //   font-size: 10pt;\n  // }\n  //\n  // .r.axis text {\n  //   text-anchor: end;\n  //   font-size: 8pt;\n  // }\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport { Component, Element, Prop, Watch, h, Event, EventEmitter } from '@stencil/core';\nimport { select, event } from 'd3-selection';\nimport { scaleBand, scaleLinear, scaleTime } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport { max, min, sum } from 'd3-array';\nimport { easeCircleIn } from 'd3-ease';\nimport 'd3-transition';\nimport { v4 as uuid } from 'uuid';\nimport Utils from '@visa/visa-charts-utils';\nimport {\n  IBoxModelType,\n  ILocalizationType,\n  IHoverStyleType,\n  IClickStyleType,\n  IAxisType,\n  IReferenceStyleType,\n  IDataLabelType,\n  ITooltipLabelType,\n  IAccessibilityType,\n  IAnimationConfig,\n  ILegendType,\n  ISubTitleType\n} from '@visa/charts-types';\nimport { StackedBarChartDefaultValues } from './stacked-bar-chart-default-values';\nconst {\n  getGlobalInstances,\n  configLocalization,\n  getActiveLanguageString,\n  getBrowser,\n  verifyTextHasSpace,\n  checkAttributeTransitions,\n  createTextStrokeFilter,\n  drawHoverStrokes,\n  removeHoverStrokes,\n  buildStrokes,\n  convertColorsToTextures,\n  findTagLevel,\n  prepareRenderChange,\n  initializeDescriptionRoot,\n  initializeElementAccess,\n  setElementFocusHandler,\n  setElementAccessID,\n  setAccessibilityController,\n  hideNonessentialGroups,\n  setAccessTitle,\n  setAccessSubtitle,\n  setAccessLongDescription,\n  setAccessExecutiveSummary,\n  setAccessPurpose,\n  setAccessContext,\n  setAccessStatistics,\n  setAccessChartCounts,\n  setAccessXAxis,\n  setAccessYAxis,\n  setAccessStructure,\n  setAccessAnnotation,\n  retainAccessFocus,\n  checkAccessFocus,\n  setElementInteractionAccessState,\n  setAccessibilityDescriptionWidth,\n  autoTextColor,\n  annotate,\n  chartAccessors,\n  checkInteraction,\n  checkClicked,\n  checkHovered,\n  convertVisaColor,\n  drawAxis,\n  drawGrid,\n  drawLegend,\n  setLegendInteractionState,\n  drawTooltip,\n  formatStats,\n  formatDate,\n  formatDataLabel,\n  getPadding,\n  getColors,\n  getLicenses,\n  getScopedData,\n  initTooltipStyle,\n  overrideTitleTooltip,\n  placeDataLabels,\n  transitionEndAll,\n  scopeDataKeys,\n  visaColors,\n  validateAccessibilityProps,\n  validateLocalizationProps,\n  roundTo,\n  resolveLabelCollision,\n  setSubTitle,\n  setReferenceLine\n} = Utils;\n@Component({\n  tag: 'stacked-bar-chart',\n  styleUrl: 'stacked-bar-chart.scss'\n})\nexport class StackedBarChart {\n  @Event() clickEvent: EventEmitter;\n  @Event() hoverEvent: EventEmitter;\n  @Event() mouseOutEvent: EventEmitter;\n  @Event() initialLoadEvent: EventEmitter;\n  @Event() initialLoadEndEvent: EventEmitter;\n  @Event() drawStartEvent: EventEmitter;\n  @Event() drawEndEvent: EventEmitter;\n  @Event() transitionEndEvent: EventEmitter;\n  // Chart Attributes (1/7)\n  @Prop({ mutable: true }) mainTitle: string = StackedBarChartDefaultValues.mainTitle;\n  @Prop({ mutable: true }) subTitle: string | ISubTitleType = StackedBarChartDefaultValues.subTitle;\n  @Prop({ mutable: true }) height: number = StackedBarChartDefaultValues.height;\n  @Prop({ mutable: true }) width: number = StackedBarChartDefaultValues.width;\n  @Prop({ mutable: true }) layout: string = StackedBarChartDefaultValues.layout;\n  @Prop({ mutable: true }) highestHeadingLevel: string | number = StackedBarChartDefaultValues.highestHeadingLevel;\n  @Prop({ mutable: true }) margin: IBoxModelType = StackedBarChartDefaultValues.margin;\n  @Prop({ mutable: true }) padding: IBoxModelType = StackedBarChartDefaultValues.padding;\n\n  // Data (2/7)\n  @Prop() data: object[];\n  @Prop() uniqueID: string;\n  @Prop({ mutable: true }) localization: ILocalizationType = StackedBarChartDefaultValues.localization;\n  @Prop({ mutable: true }) ordinalAccessor: string = StackedBarChartDefaultValues.ordinalAccessor;\n  @Prop({ mutable: true }) valueAccessor: string = StackedBarChartDefaultValues.valueAccessor;\n  @Prop({ mutable: true }) groupAccessor: string = StackedBarChartDefaultValues.groupAccessor;\n  @Prop({ mutable: true }) sortOrder: string = StackedBarChartDefaultValues.sortOrder;\n\n  // Axis (3/7)\n  @Prop({ mutable: true }) xAxis: IAxisType = StackedBarChartDefaultValues.xAxis;\n  @Prop({ mutable: true }) yAxis: IAxisType = StackedBarChartDefaultValues.yAxis;\n  @Prop({ mutable: true }) wrapLabel: boolean = StackedBarChartDefaultValues.wrapLabel;\n  @Prop({ mutable: true }) normalized: boolean = StackedBarChartDefaultValues.normalized;\n\n  // Color & Shape (4/7)\n  @Prop({ mutable: true }) colorPalette: string = StackedBarChartDefaultValues.colorPalette;\n  @Prop({ mutable: true }) colors: string[];\n  @Prop({ mutable: true }) hoverStyle: IHoverStyleType = StackedBarChartDefaultValues.hoverStyle;\n  @Prop({ mutable: true }) clickStyle: IClickStyleType = StackedBarChartDefaultValues.clickStyle;\n  @Prop({ mutable: true }) referenceStyle: IReferenceStyleType = StackedBarChartDefaultValues.referenceStyle;\n  @Prop({ mutable: true }) cursor: string = StackedBarChartDefaultValues.cursor;\n  @Prop({ mutable: true }) roundedCorner: number = StackedBarChartDefaultValues.roundedCorner;\n  @Prop({ mutable: true }) barIntervalRatio: number = StackedBarChartDefaultValues.barIntervalRatio;\n  @Prop({ mutable: true }) hoverOpacity: number = StackedBarChartDefaultValues.hoverOpacity;\n  @Prop({ mutable: true }) animationConfig: IAnimationConfig = StackedBarChartDefaultValues.animationConfig;\n\n  // Data label (5/7)\n  @Prop({ mutable: true }) dataLabel: IDataLabelType = StackedBarChartDefaultValues.dataLabel;\n  @Prop({ mutable: true }) dataKeyNames: object;\n  @Prop({ mutable: true }) showTotalValue: boolean = StackedBarChartDefaultValues.showTotalValue;\n  @Prop({ mutable: true }) showTooltip: boolean = StackedBarChartDefaultValues.showTooltip;\n  @Prop({ mutable: true }) tooltipLabel: ITooltipLabelType = StackedBarChartDefaultValues.tooltipLabel;\n  @Prop({ mutable: true }) accessibility: IAccessibilityType = StackedBarChartDefaultValues.accessibility;\n  @Prop({ mutable: true }) legend: ILegendType = StackedBarChartDefaultValues.legend;\n  @Prop({ mutable: true }) annotations: object[] = StackedBarChartDefaultValues.annotations;\n  @Prop({ mutable: true }) showZeroLabels: boolean = StackedBarChartDefaultValues.showZeroLabels;\n\n  // Calculation (6/7)\n  @Prop({ mutable: true }) minValueOverride: number;\n  @Prop({ mutable: true }) maxValueOverride: number;\n  @Prop({ mutable: true }) referenceLines: object[] = StackedBarChartDefaultValues.referenceLines;\n\n  // Interactivity (7/7)\n  @Prop({ mutable: true }) suppressEvents: boolean = StackedBarChartDefaultValues.suppressEvents;\n  @Prop({ mutable: true }) hoverHighlight: object;\n  @Prop({ mutable: true }) clickHighlight: object[] = StackedBarChartDefaultValues.clickHighlight;\n  @Prop({ mutable: true }) interactionKeys: string[];\n\n  // Testing (8/7)\n  @Prop() unitTest: boolean = false;\n  //  @Prop() debugMode: boolean = false;\n\n  // Element\n  @Element()\n  stackedBarChartEl: HTMLElement;\n  shouldValidateAccessibility: boolean = true;\n  shouldValidateLocalization: boolean = true;\n  svg: any;\n  root: any;\n  rootG: any;\n  gridG: any;\n  barG: any;\n  bars: any;\n  labelG: any;\n  labels: any;\n  totalLabels: any;\n  defaults: boolean;\n  current: any;\n  enter: any;\n  exit: any;\n  update: any;\n  enterBarWrappers: any;\n  exitBarWrappers: any;\n  updateBarWrappers: any;\n  x: any;\n  y: any;\n  innerHeight: number;\n  innerWidth: number;\n  innerPaddedHeight: number;\n  innerPaddedWidth: number;\n  innerXAxis: any;\n  innerYAxis: any;\n  series: any = [];\n  extent: any = [];\n  datakeys: any = [];\n  colorArr: any;\n  preparedColors: any;\n  duration: any;\n  referencesG: any;\n  legendG: any;\n  subTitleG: any;\n  tooltipG: any;\n  interpolating: any;\n  stackOrder: any;\n  updated: boolean = true;\n  enterSize: number;\n  exitSize: number;\n  enterLabels: any;\n  exitLabels: any;\n  updateLabels: any;\n  enterLabelWrappers: any;\n  updateLabelWrappers: any;\n  exitLabelWrappers: any;\n  enterTotalLabels: any;\n  updateTotalLabels: any;\n  exitTotalLabels: any;\n  tableData: any;\n  tableColumns: any;\n  chartID: string;\n  innerInteractionKeys: any;\n  innerLabelAccessor: string;\n  legendData: any;\n  shouldValidateInteractionKeys: boolean = false;\n  shouldValidate: boolean = false;\n  shouldUpdateData: boolean = false;\n  shouldSetDimensions: boolean = false;\n  shouldUpdateTableData: boolean = false;\n  shouldSetColors: boolean = false;\n  shouldSetSubTitle: boolean = false;\n  shouldValidateAxes: boolean = false;\n  shouldValidateClickHighlight: boolean = false;\n  shouldUpdateScales: boolean = false;\n  shouldUpdateAnnotations: boolean = false;\n  shouldResetRoot: boolean = false;\n  shouldEnterUpdateExit: boolean = false;\n  shouldSetGlobalSelections: boolean = false;\n  shouldSetTestingAttributes: boolean = false;\n  shouldUpdateGeometries: boolean = false;\n  shouldCheckValueAxis: boolean = false;\n  shouldCheckLabelAxis: boolean = false;\n  shouldUpdateXAxis: boolean = false;\n  shouldUpdateYAxis: boolean = false;\n  shouldUpdateXGrid: boolean = false;\n  shouldUpdateYGrid: boolean = false;\n  shouldUpdateBaseline: boolean = false;\n  shouldSetSelectionClass: boolean = false;\n  shouldUpdateCursor: boolean = false;\n  shouldUpdateCorners: boolean = false;\n  shouldUpdateLegendData: boolean = false;\n  shouldValidateLabelPlacement: boolean = false;\n  shouldValidateDataLabelAccessor: boolean = false;\n  shouldUpdateLegend: boolean = false;\n  shouldUpdateLegendInteractivity: boolean = false;\n  shouldUpdateReferenceLines: boolean = false;\n  shouldDrawInteractionState: boolean = false;\n  shouldBindInteractivity: boolean = false;\n  shouldSetLabelOpacity: boolean = false;\n  shouldUpdateLabels: boolean = false;\n  shouldUpdateTotalLabels: boolean = false;\n  shouldCheckLabelColor: boolean = false;\n  shouldUpdateDescriptionWrapper: boolean = false;\n  shouldSetChartAccessibilityTitle: boolean = false;\n  shouldSetChartAccessibilitySubtitle: boolean = false;\n  shouldSetChartAccessibilityLongDescription: boolean = false;\n  shouldSetChartAccessibilityExecutiveSummary: boolean = false;\n  shouldSetChartAccessibilityStatisticalNotes: boolean = false;\n  shouldSetChartAccessibilityStructureNotes: boolean = false;\n  shouldSetParentSVGAccessibility: boolean = false;\n  shouldSetGeometryAccessibilityAttributes: boolean = false;\n  shouldSetGeometryAriaLabels: boolean = false;\n  shouldSetGroupAccessibilityLabel: boolean = false;\n  shouldSetChartAccessibilityPurpose: boolean = false;\n  shouldSetChartAccessibilityContext: boolean = false;\n  shouldRedrawWrapper: boolean = false;\n  shouldSetTagLevels: boolean = false;\n  shouldSetChartAccessibilityCount: boolean = false;\n  shouldSetYAxisAccessibility: boolean = false;\n  shouldSetXAxisAccessibility: boolean = false;\n  shouldSetAnnotationAccessibility: boolean = false;\n  shouldSetTextures: boolean = false;\n  shouldSetStrokes: boolean = false;\n  shouldSetLocalizationConfig: boolean = false;\n  isSafari: boolean = getBrowser() === 'Safari'; // this is necessary for handling redraw when filter attributes change\n  strokes: any = {};\n  textStrokes: any = {};\n  topLevel: string = 'h2';\n  bottomLevel: string = 'p';\n  bitmaps: any;\n\n  @Watch('data')\n  dataWatcher(_newData, _oldData) {\n    this.updated = true;\n    this.shouldUpdateData = true;\n    this.shouldValidateClickHighlight = true;\n    this.shouldSetColors = true;\n    this.shouldSetTextures = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateLegendData = true;\n    this.shouldValidate = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateLabels = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('uniqueID')\n  idWatcher(newID, _oldID) {\n    console.error(\n      'Change detected in prop uniqueID from value ' +\n        _oldID +\n        ' to value ' +\n        newID +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.chartID = newID;\n    // this.stackedBarChartEl.id = this.chartID;\n    // this.shouldValidate = true;\n    // this.shouldUpdateDescriptionWrapper = true;\n    // this.shouldSetParentSVGAccessibility = true;\n    // this.shouldUpdateLegend = true;\n    // this.shouldSetTextures = true;\n    // this.shouldCheckLabelColor = true;\n    // this.shouldDrawInteractionState = true;\n    // this.shouldSetStrokes = true;\n  }\n\n  @Watch('highestHeadingLevel')\n  headingWatcher(_newVal, _oldVal) {\n    this.shouldRedrawWrapper = true;\n    this.shouldSetTagLevels = true;\n    this.shouldSetChartAccessibilityCount = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('mainTitle')\n  titleWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('subTitle')\n  subtitleWatcher(_newVal, _oldVal) {\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('height')\n  @Watch('width')\n  @Watch('padding')\n  @Watch('margin')\n  dimensionWatcher(_newVal, _oldVal) {\n    this.shouldSetDimensions = true;\n    this.shouldUpdateScales = true;\n    this.shouldResetRoot = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('layout')\n  layoutWatcher(_newVal, _oldVal) {\n    this.interpolating = false;\n    this.shouldValidateLabelPlacement = true;\n    this.shouldUpdateScales = true;\n    this.shouldValidateAxes = true;\n    this.shouldResetRoot = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('ordinalAccessor')\n  ordinalAccessorWatcher(_newVal, _oldVal) {\n    this.shouldSetGlobalSelections = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateData = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateLegendData = true;\n    this.shouldSetColors = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateLegend = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n    this.shouldCheckValueAxis = true;\n  }\n\n  @Watch('valueAccessor')\n  valueAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldValidateClickHighlight = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetColors = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldValidateDataLabelAccessor = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldCheckValueAxis = true;\n  }\n\n  @Watch('groupAccessor')\n  groupAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldValidateClickHighlight = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldCheckLabelAxis = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateReferenceLines = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n  }\n\n  @Watch('sortOrder')\n  sortWatcher(_newVal, _oldVal) {\n    this.updated = true;\n    this.shouldUpdateData = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldCheckLabelAxis = true;\n  }\n\n  @Watch('xAxis')\n  xAxisWatcher(_newVal, _oldVal) {\n    this.shouldValidateAxes = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateXAxis = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateXGrid = true;\n    }\n  }\n\n  @Watch('yAxis')\n  yAxisWatcher(_newVal, _oldVal) {\n    this.shouldValidateAxes = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateYGrid = true;\n    }\n  }\n\n  @Watch('wrapLabel')\n  wrapLabelWatcher(_newVal, _oldVal) {\n    this.shouldCheckLabelAxis = true;\n  }\n\n  @Watch('normalized')\n  normalizedWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldValidateClickHighlight = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetColors = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldCheckValueAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n  }\n\n  @Watch('colorPalette')\n  paletteWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n  }\n\n  @Watch('colors')\n  colorsWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n  }\n\n  @Watch('hoverStyle')\n  hoverStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('clickStyle')\n  clickStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('referenceLines')\n  @Watch('referenceStyle')\n  referenceWatcher(_newVal, _oldVal) {\n    this.shouldUpdateReferenceLines = true;\n  }\n\n  @Watch('cursor')\n  cursorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCursor = true;\n  }\n\n  @Watch('roundedCorner')\n  cornerWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCorners = true;\n  }\n\n  @Watch('barIntervalRatio')\n  intervalRatioWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldCheckLabelAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('hoverOpacity')\n  hoverOpacityWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('dataLabel')\n  labelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateGeometries = true; // draw geometries has the transition end all callback in it which we need for labels\n    this.shouldUpdateTableData = true;\n    const newPlacementVal = _newVal && _newVal.placement ? _newVal.placement : false;\n    const oldPlacementVal = _oldVal && _oldVal.placement ? _oldVal.placement : false;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    const newAccessor = _newVal && _newVal.labelAccessor ? _newVal.labelAccessor : false;\n    const oldAccessor = _oldVal && _oldVal.labelAccessor ? _oldVal.labelAccessor : false;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetLabelOpacity = true;\n    }\n    if (newPlacementVal !== oldPlacementVal) {\n      this.shouldSetLabelOpacity = true;\n      this.shouldValidateLabelPlacement = true;\n      this.shouldCheckLabelColor = true;\n    }\n    if (newAccessor !== oldAccessor) {\n      this.shouldValidateDataLabelAccessor = true;\n    }\n  }\n\n  @Watch('showTotalValue')\n  showTotalValueWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('showTooltip')\n  showTooltipWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('tooltipLabel')\n  tooltipLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('localization')\n  localizationWatcher(_newVal, _oldVal) {\n    // language\n    const newLanguage = _newVal && _newVal.language ? _newVal.language : false;\n    const oldLanguage = _oldVal && _oldVal.language ? _oldVal.language : false;\n    if (newLanguage !== oldLanguage) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldCheckLabelColor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n\n    // numeralLocale\n    const newNumeralLocale = _newVal && _newVal.numeralLocale ? _newVal.numeralLocale : false;\n    const oldNumeralLocale = _oldVal && _oldVal.numeralLocale ? _oldVal.numeralLocale : false;\n    if (newNumeralLocale !== oldNumeralLocale) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldCheckLabelColor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n  }\n\n  @Watch('accessibility')\n  accessibilityWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    const newTitle = _newVal && _newVal.title ? _newVal.title : false;\n    const oldTitle = _oldVal && _oldVal.title ? _oldVal.title : false;\n    if (newTitle !== oldTitle) {\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newExecutiveSummary = _newVal && _newVal.executiveSummary ? _newVal.executiveSummary : false;\n    const oldExecutiveSummary = _oldVal && _oldVal.executiveSummary ? _oldVal.executiveSummary : false;\n    if (newExecutiveSummary !== oldExecutiveSummary) {\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n    }\n    const newPurpose = _newVal && _newVal.purpose ? _newVal.purpose : false;\n    const oldPurpose = _oldVal && _oldVal.purpose ? _oldVal.purpose : false;\n    if (newPurpose !== oldPurpose) {\n      this.shouldSetChartAccessibilityPurpose = true;\n    }\n    const newLongDescription = _newVal && _newVal.longDescription ? _newVal.longDescription : false;\n    const oldLongDescription = _oldVal && _oldVal.longDescription ? _oldVal.longDescription : false;\n    if (newLongDescription !== oldLongDescription) {\n      this.shouldSetChartAccessibilityLongDescription = true;\n    }\n    const newContext = _newVal && _newVal.contextExplanation ? _newVal.contextExplanation : false;\n    const oldContext = _oldVal && _oldVal.contextExplanation ? _oldVal.contextExplanation : false;\n    if (newContext !== oldContext) {\n      this.shouldSetChartAccessibilityContext = true;\n    }\n    const newStatisticalNotes = _newVal && _newVal.statisticalNotes ? _newVal.statisticalNotes : false;\n    const oldStatisticalNotes = _oldVal && _oldVal.statisticalNotes ? _oldVal.statisticalNotes : false;\n    if (newStatisticalNotes !== oldStatisticalNotes) {\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n    }\n    const newStructureNotes = _newVal && _newVal.structureNotes ? _newVal.structureNotes : false;\n    const oldStructureNotes = _oldVal && _oldVal.structureNotes ? _oldVal.structureNotes : false;\n    if (newStructureNotes !== oldStructureNotes) {\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    const newincludeDataKeyNames = _newVal && _newVal.includeDataKeyNames;\n    const oldincludeDataKeyNames = _oldVal && _oldVal.includeDataKeyNames;\n    const newElementDescriptionAccessor =\n      _newVal && _newVal.elementDescriptionAccessor ? _newVal.elementDescriptionAccessor : false;\n    const oldElementDescriptionAccessor =\n      _oldVal && _oldVal.elementDescriptionAccessor ? _oldVal.elementDescriptionAccessor : false;\n    if (\n      newincludeDataKeyNames !== oldincludeDataKeyNames ||\n      newElementDescriptionAccessor !== oldElementDescriptionAccessor\n    ) {\n      if (newincludeDataKeyNames !== oldincludeDataKeyNames) {\n        // this one is tricky because it needs to run after the lifecycle\n        // AND it could run in the off-chance this prop is changed\n        this.shouldSetGroupAccessibilityLabel = true;\n      }\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newTextures = _newVal && _newVal.hideTextures ? _newVal.hideTextures : false;\n    const oldTextures = _oldVal && _oldVal.hideTextures ? _oldVal.hideTextures : false;\n    if (newTextures !== oldTextures) {\n      this.shouldSetTextures = true;\n      this.shouldUpdateLegend = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newSmallValue = _newVal && _newVal.showSmallLabels ? _newVal.showSmallLabels : false;\n    const oldSmallValue = _oldVal && _oldVal.showSmallLabels ? _oldVal.showSmallLabels : false;\n    if (newSmallValue !== oldSmallValue) {\n      this.shouldSetLabelOpacity = true;\n    }\n    const newStrokes = _newVal && _newVal.hideStrokes ? _newVal.hideStrokes : false;\n    const oldStrokes = _oldVal && _oldVal.hideStrokes ? _oldVal.hideStrokes : false;\n    if (newStrokes !== oldStrokes) {\n      this.shouldSetStrokes = true;\n      this.shouldUpdateLegend = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newKeyNav =\n      _newVal && _newVal.keyboardNavConfig && _newVal.keyboardNavConfig.disabled\n        ? _newVal.keyboardNavConfig.disabled\n        : false;\n    const oldKeyNav =\n      _oldVal && _oldVal.keyboardNavConfig && _oldVal.keyboardNavConfig.disabled\n        ? _oldVal.keyboardNavConfig.disabled\n        : false;\n    const newInterface = _newVal && _newVal.elementsAreInterface ? _newVal.elementsAreInterface : false;\n    const oldInterface = _oldVal && _oldVal.elementsAreInterface ? _oldVal.elementsAreInterface : false;\n    if (newKeyNav !== oldKeyNav || newInterface !== oldInterface) {\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetChartAccessibilitySubtitle = true;\n      this.shouldSetChartAccessibilityLongDescription = true;\n      this.shouldSetChartAccessibilityContext = true;\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n      this.shouldSetChartAccessibilityPurpose = true;\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    if (newInterface !== oldInterface) {\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('showZeroLabels')\n  showZeroLabelsWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLabels = true;\n  }\n\n  @Watch('legend')\n  legendWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLegend = true;\n    const newInteractiveVal = _newVal && _newVal.interactive;\n    const oldInteractiveVal = _oldVal && _oldVal.interactive;\n    if (newInteractiveVal !== oldInteractiveVal) {\n      this.shouldUpdateLegendInteractivity = true;\n    }\n  }\n\n  @Watch('annotations')\n  annotationsWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetAnnotationAccessibility = true;\n  }\n\n  @Watch('maxValueOverride')\n  @Watch('minValueOverride')\n  valueOverrideWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldCheckValueAxis = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('interactionKeys')\n  interactionWatcher(_newVal, _oldVal) {\n    this.shouldValidateInteractionKeys = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('dataKeyNames')\n  dataKeyNamesWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateTableData = true;\n  }\n\n  @Watch('hoverHighlight')\n  hoverWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('clickHighlight')\n  clickWatcher(_newVal, _oldVal) {\n    this.shouldValidateClickHighlight = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('suppressEvents')\n  suppressWatcher(_newVal, _oldVal) {\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldUpdateLegendInteractivity = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldRedrawWrapper = true;\n    this.shouldValidate = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('unitTest')\n  unitTestWatcher(_newVal, _oldVal) {\n    this.shouldSetTestingAttributes = true;\n  }\n\n  componentWillLoad() {\n    const chartID = this.uniqueID || 'stacked-bar-chart-' + uuid();\n    this.initialLoadEvent.emit({ chartID: chartID });\n    // contrary to componentWillUpdate, this method appears safe to use for\n    // any calculations we need. Keeping them here reduces future refactor,\n    // since componentWillUpdate should eventually mirror this method\n    return new Promise(resolve => {\n      this.duration = 0;\n      this.defaults = true;\n      this.chartID = chartID;\n      this.stackedBarChartEl.id = this.chartID;\n      this.setLocalizationConfig();\n      this.setTagLevels();\n      this.prepareData();\n      this.prepareLegendData();\n      this.setDimensions();\n      this.prepareScales();\n      this.validateClickHighlight();\n      this.validateInteractionKeys();\n      this.validateDataLabelAccessor();\n      this.validateAxes();\n      this.setTableData();\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.setColors();\n      resolve('component will load');\n    });\n  }\n\n  componentWillUpdate() {\n    // NEVER put items in this method that rely on props (until stencil bug is resolved)\n    // All items that belong here are currently at the top of render\n    // see: https://github.com/ionic-team/stencil/issues/2061#issuecomment-578282178\n    return new Promise(resolve => {\n      resolve('component will update');\n    });\n  }\n\n  componentDidLoad() {\n    return new Promise(resolve => {\n      this.renderRootElements();\n      this.setTooltipInitialStyle();\n      this.setChartDescriptionWrapper();\n      this.setChartAccessibilityTitle();\n      this.setChartAccessibilitySubtitle();\n      this.setChartAccessibilityLongDescription();\n      this.setChartAccessibilityExecutiveSummary();\n      this.setChartAccessibilityPurpose();\n      this.setChartAccessibilityContext();\n      this.setChartAccessibilityStatisticalNotes();\n      this.setChartAccessibilityStructureNotes();\n      this.setParentSVGAccessibility();\n      this.reSetRoot();\n      this.setTextures();\n      this.setStrokes();\n      this.setSubTitleElements();\n      this.drawXGrid();\n      this.drawYGrid();\n      this.setGlobalSelections();\n      this.setTestingAttributes();\n      this.enterGeometries();\n      this.updateGeometries();\n      this.exitGeometries();\n      this.setRoundedCorners();\n      this.drawGeometries();\n      this.enterDataLabels();\n      this.updateDataLabels();\n      this.exitDataLabels();\n      this.enterTotalDataLabels();\n      this.updateTotalDataLabels();\n      this.exitTotalDataLabels();\n      this.setChartCountAccessibility();\n      this.setGeometryAccessibilityAttributes();\n      this.setGeometryAriaLabels();\n      this.drawLegendElements();\n      this.bindLegendInteractivity();\n      this.validateLabelPlacement();\n      this.drawDataLabels();\n      this.drawTotalDataLabels();\n      this.drawReferenceLines();\n      this.setSelectedClass();\n      // this.updateInteractionState();\n      // this.setLabelOpacity();\n      this.checkLabelColorAgainstBackground();\n      this.updateCursor();\n      this.bindInteractivity();\n      this.drawAnnotations();\n      this.setAnnotationAccessibility();\n      this.drawXAxis();\n      this.setXAxisAccessibility();\n      this.drawYAxis();\n      this.setYAxisAccessibility();\n      this.drawBaseline();\n      // we want to hide all child <g> of this.root BUT we want to make sure not to hide the\n      // parent<g> that contains our geometries! In a subGroup chart (like stacked bars),\n      // we want to pass the PARENT of all the <g>s that contain bars\n      hideNonessentialGroups(this.root.node(), this.barG.node());\n      this.setGroupAccessibilityID();\n      this.onChangeHandler();\n      this.defaults = false;\n      resolve('component did load');\n    }).then(() => this.initialLoadEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  componentDidUpdate() {\n    return new Promise(resolve => {\n      this.duration = !this.animationConfig || !this.animationConfig.disabled ? 750 : 0;\n      if (this.shouldUpdateDescriptionWrapper) {\n        this.setChartDescriptionWrapper();\n        this.shouldUpdateDescriptionWrapper = false;\n      }\n      if (this.shouldSetChartAccessibilityCount) {\n        this.setChartCountAccessibility();\n        this.shouldSetChartAccessibilityCount = false;\n      }\n      if (this.shouldSetChartAccessibilityTitle) {\n        this.setChartAccessibilityTitle();\n        this.shouldSetChartAccessibilityTitle = false;\n      }\n      if (this.shouldSetChartAccessibilitySubtitle) {\n        this.setChartAccessibilitySubtitle();\n        this.shouldSetChartAccessibilitySubtitle = false;\n      }\n      if (this.shouldSetChartAccessibilityLongDescription) {\n        this.setChartAccessibilityLongDescription();\n        this.shouldSetChartAccessibilityLongDescription = false;\n      }\n      if (this.shouldSetChartAccessibilityExecutiveSummary) {\n        this.setChartAccessibilityExecutiveSummary();\n        this.shouldSetChartAccessibilityExecutiveSummary = false;\n      }\n      if (this.shouldSetChartAccessibilityPurpose) {\n        this.setChartAccessibilityPurpose();\n        this.shouldSetChartAccessibilityPurpose = false;\n      }\n      if (this.shouldSetChartAccessibilityContext) {\n        this.setChartAccessibilityContext();\n        this.shouldSetChartAccessibilityContext = false;\n      }\n      if (this.shouldSetChartAccessibilityStatisticalNotes) {\n        this.setChartAccessibilityStatisticalNotes();\n        this.shouldSetChartAccessibilityStatisticalNotes = false;\n      }\n      if (this.shouldSetChartAccessibilityStructureNotes) {\n        this.setChartAccessibilityStructureNotes();\n        this.shouldSetChartAccessibilityStructureNotes = false;\n      }\n      if (this.shouldSetParentSVGAccessibility) {\n        this.setParentSVGAccessibility();\n        this.shouldSetParentSVGAccessibility = false;\n      }\n      if (this.shouldResetRoot) {\n        this.reSetRoot();\n        this.shouldResetRoot = false;\n      }\n      if (this.shouldSetTextures) {\n        this.setTextures();\n        this.shouldSetTextures = false;\n      }\n      if (this.shouldSetStrokes) {\n        this.setStrokes();\n        this.shouldSetStrokes = false;\n      }\n      if (this.shouldSetGlobalSelections) {\n        this.setGlobalSelections();\n        this.shouldSetGlobalSelections = false;\n      }\n      if (this.shouldSetTestingAttributes) {\n        this.setTestingAttributes();\n        this.shouldSetTestingAttributes = false;\n      }\n      if (this.shouldSetSubTitle) {\n        this.setSubTitleElements();\n        this.shouldSetSubTitle = false;\n      }\n      if (this.shouldUpdateXGrid) {\n        this.drawXGrid();\n        this.shouldUpdateXGrid = false;\n      }\n      if (this.shouldUpdateYGrid) {\n        this.drawYGrid();\n        this.shouldUpdateYGrid = false;\n      }\n      if (this.shouldEnterUpdateExit) {\n        this.enterGeometries();\n        this.updateGeometries();\n        this.exitGeometries();\n        this.enterDataLabels();\n        this.updateDataLabels();\n        this.exitDataLabels();\n        this.enterTotalDataLabels();\n        this.updateTotalDataLabels();\n        this.exitTotalDataLabels();\n        this.shouldEnterUpdateExit = false;\n      }\n      if (this.shouldUpdateCorners) {\n        this.setRoundedCorners();\n        this.shouldUpdateCorners = false;\n      }\n      if (this.shouldUpdateGeometries) {\n        this.drawGeometries();\n        this.shouldUpdateGeometries = false;\n      }\n      if (this.shouldSetGeometryAccessibilityAttributes) {\n        this.setGeometryAccessibilityAttributes();\n        this.shouldSetGeometryAccessibilityAttributes = false;\n      }\n      if (this.shouldSetGeometryAriaLabels) {\n        this.setGeometryAriaLabels();\n        this.shouldSetGeometryAriaLabels = false;\n      }\n      if (this.shouldSetGroupAccessibilityLabel) {\n        this.setGroupAccessibilityID();\n        this.shouldSetGroupAccessibilityLabel = false;\n      }\n      if (this.shouldUpdateLegend) {\n        this.drawLegendElements();\n        this.shouldUpdateLegend = false;\n      }\n      if (this.shouldUpdateLabels) {\n        this.drawDataLabels();\n        this.shouldUpdateLabels = false;\n      }\n      if (this.shouldUpdateTotalLabels) {\n        this.drawTotalDataLabels();\n        this.shouldUpdateTotalLabels = false;\n      }\n      if (this.shouldUpdateReferenceLines) {\n        this.drawReferenceLines();\n        this.shouldUpdateReferenceLines = false;\n      }\n      if (this.shouldDrawInteractionState) {\n        this.updateInteractionState();\n        this.shouldDrawInteractionState = false;\n      }\n      if (this.shouldSetLabelOpacity) {\n        this.setLabelOpacity();\n        this.shouldSetLabelOpacity = false;\n      }\n      if (this.shouldCheckLabelColor) {\n        this.checkLabelColorAgainstBackground();\n        this.shouldCheckLabelColor = false;\n      }\n      if (this.shouldSetSelectionClass) {\n        this.setSelectedClass();\n        this.shouldSetSelectionClass = false;\n      }\n      if (this.shouldUpdateLegendInteractivity) {\n        this.bindLegendInteractivity();\n        this.shouldUpdateLegendInteractivity = false;\n      }\n      if (this.shouldUpdateCursor) {\n        this.updateCursor();\n        this.shouldUpdateCursor = false;\n      }\n      if (this.shouldBindInteractivity) {\n        this.bindInteractivity();\n        this.shouldBindInteractivity = false;\n      }\n      if (this.shouldUpdateAnnotations) {\n        this.drawAnnotations();\n        this.shouldUpdateAnnotations = false;\n      }\n      if (this.shouldSetAnnotationAccessibility) {\n        this.setAnnotationAccessibility();\n        this.shouldSetAnnotationAccessibility = false;\n      }\n      if (this.shouldUpdateXAxis) {\n        this.drawXAxis();\n        this.shouldUpdateXAxis = false;\n      }\n      if (this.shouldSetXAxisAccessibility) {\n        this.setXAxisAccessibility();\n        this.shouldSetXAxisAccessibility = false;\n      }\n      if (this.shouldUpdateYAxis) {\n        this.drawYAxis();\n        this.shouldUpdateYAxis = false;\n      }\n      if (this.shouldSetYAxisAccessibility) {\n        this.setYAxisAccessibility();\n        this.shouldSetYAxisAccessibility = false;\n      }\n      if (this.shouldUpdateBaseline) {\n        this.drawBaseline();\n        this.shouldUpdateBaseline = false;\n      }\n      this.onChangeHandler();\n      resolve('component did update');\n    }).then(() => this.drawEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  shouldValidateLocalizationProps() {\n    const windowInstances = getGlobalInstances();\n    const languageString = windowInstances.i18Next.language;\n    const languageObject = windowInstances.i18Next.getResourceBundle(languageString);\n    const numeralObject = windowInstances.numeral.localeData();\n    if (this.shouldValidateLocalization && !this.localization.skipValidation) {\n      this.shouldValidateLocalization = false;\n      validateLocalizationProps(this.chartID, {\n        ...this.localization,\n        language: languageObject,\n        numeralLocale: numeralObject\n      });\n    }\n  }\n\n  shouldValidateAccessibilityProps() {\n    if (this.shouldValidateAccessibility && !this.accessibility.disableValidation) {\n      this.shouldValidateAccessibility = false;\n      validateAccessibilityProps(this.chartID, this.accessibility, {\n        annotations: this.annotations,\n        data: this.data,\n        uniqueID: this.uniqueID,\n        context: {\n          mainTitle: this.mainTitle,\n          onClickEvent: this.suppressEvents ? undefined : this.clickEvent.emit,\n          tooltipLabel: this.tooltipLabel,\n          dataLabel: this.dataLabel,\n          valueAccessor: this.valueAccessor\n        },\n        misc: {\n          normalized: this.normalized\n        }\n      });\n    }\n  }\n\n  validateLabelPlacement() {\n    // check data label placement assignment based on layout\n    if (this.layout === 'vertical') {\n      if (\n        !(\n          this.dataLabel.placement === 'top' ||\n          this.dataLabel.placement === 'middle' ||\n          this.dataLabel.placement === 'bottom' ||\n          this.dataLabel.placement === 'auto'\n        )\n      ) {\n        this.dataLabel.placement = 'middle';\n      }\n    } else {\n      if (\n        !(\n          this.dataLabel.placement === 'end' ||\n          this.dataLabel.placement === 'middle' ||\n          this.dataLabel.placement === 'base' ||\n          this.dataLabel.placement === 'auto'\n        )\n      ) {\n        this.dataLabel.placement = 'middle';\n      }\n    }\n  }\n\n  validateInteractionKeys() {\n    this.innerInteractionKeys =\n      this.interactionKeys && this.interactionKeys.length ? this.interactionKeys : [this.ordinalAccessor];\n  }\n\n  validateDataLabelAccessor() {\n    this.innerLabelAccessor = this.dataLabel.labelAccessor ? this.dataLabel.labelAccessor : this.valueAccessor;\n  }\n\n  validateAxes() {\n    // check whether we are going to display axis and then update props\n    this.innerXAxis = { ...this.xAxis, gridVisible: !(this.layout === 'vertical') && this.xAxis.gridVisible };\n    this.innerYAxis = { ...this.yAxis, gridVisible: this.layout === 'vertical' && this.yAxis.gridVisible };\n  }\n\n  getLanguageString() {\n    return getActiveLanguageString(this.localization);\n  }\n\n  setLocalizationConfig() {\n    configLocalization(this.localization);\n  }\n\n  // if normalized and not 0 use getSum(), otherwise use 1\n  modifier(d) {\n    return !this.normalized || d.getSum() === 0 ? 1 : d.getSum();\n  }\n\n  setDimensions() {\n    this.padding = typeof this.padding === 'string' ? getPadding(this.padding) : this.padding;\n\n    // before we render/load we need to set our height and width based on props\n    this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n    this.innerWidth = this.width - this.margin.left - this.margin.right;\n\n    this.innerPaddedHeight = this.innerHeight - this.padding.top - this.padding.bottom;\n    this.innerPaddedWidth = this.innerWidth - this.padding.left - this.padding.right;\n  }\n\n  prepareData() {\n    this.extent = [0, 0];\n    const dataCopy = [];\n\n    this.data.forEach(d => {\n      const keys = Object.keys(d);\n      const item = {};\n      keys.forEach(key => {\n        item[key] = !(d[key] instanceof Date) ? d[key] : new Date(d[key].getTime());\n      });\n      dataCopy.push(item);\n    });\n\n    // prepare flat data for stacked layout\n    const nestData = nest()\n      .key(d => {\n        d[this.valueAccessor] = parseFloat(d[this.valueAccessor]);\n        d[this.groupAccessor] =\n          d[this.groupAccessor] instanceof Date\n            ? formatDate({\n                date: d[this.groupAccessor],\n                format: this.layout === 'vertical' ? this.xAxis.format : this.yAxis.format,\n                offsetTimezone: true\n              })\n            : d[this.groupAccessor];\n        return d[this.groupAccessor];\n      })\n      .entries(dataCopy);\n\n    this.interpolating = this.series.length ? this.series : '';\n    if (this.interpolating) {\n      this.interpolating.stackOrder = this.stackOrder;\n    }\n    const ordinalValues = {};\n    const stackDiverging = nestedArray => {\n      let i = 0;\n      const j = nestedArray.length;\n      const output = [];\n      this.stackOrder = {};\n      for (i = 0; i < j; i++) {\n        const row = { ...nestedArray[i] };\n        let k = 0;\n        let runSum = 0;\n        let sumAboveZero = 0;\n        const base = {\n          positive: 0.0,\n          negative: 0.0\n        };\n        const v = nestedArray[i].values;\n        const l = v.length;\n        const s = sum(v, d => d[this.valueAccessor]);\n        row.values = [];\n        let previous = 0;\n        for (k = 0; k < l; k++) {\n          const item = { ...v[k] };\n          const value = item[this.valueAccessor];\n          if (value >= 0 && s !== 0) {\n            item.stackEnd = base.positive;\n            base.positive += value;\n            item.stackStart = base.positive;\n          } else if (value < 0) {\n            item.stackStart = base.negative;\n            base.negative += value;\n            item.stackEnd = base.negative;\n          } else {\n            // value === 0 and sum === 0\n            item.stackEnd = base.positive;\n            base.positive += 0.000001; // denominator needs to be bigger than data points we can handle\n            item.stackStart = base.positive;\n          }\n          let group = this.stackOrder[item[this.groupAccessor]];\n          if (!group) {\n            this.stackOrder[item[this.groupAccessor]] = {};\n            group = this.stackOrder[item[this.groupAccessor]];\n          }\n          if (!group[item[this.ordinalAccessor]]) {\n            group[item[this.ordinalAccessor]] = {\n              previous,\n              value,\n              stackStart: item.stackStart,\n              stackEnd: item.stackEnd\n            };\n          }\n          item.enteringStackStart = false;\n          if (this.interpolating && this.interpolating.stackOrder[item[this.groupAccessor]]) {\n            const interpolateGroup = this.interpolating.stackOrder[item[this.groupAccessor]];\n            const findInterpolation = preceedingElement => {\n              if (preceedingElement === 0) {\n                return 0;\n              } else if (interpolateGroup[preceedingElement]) {\n                if (value >= 0 && interpolateGroup[preceedingElement].value >= 0) {\n                  return interpolateGroup[preceedingElement].stackStart;\n                } else if (value < 0 && interpolateGroup[preceedingElement].value < 0) {\n                  return interpolateGroup[preceedingElement].stackEnd;\n                }\n              }\n              const nextPrevious = group[preceedingElement].previous;\n              return findInterpolation(nextPrevious);\n            };\n            if (!interpolateGroup[item[this.ordinalAccessor]]) {\n              item.enteringStackStart = findInterpolation(previous);\n            }\n          }\n          previous = item[this.ordinalAccessor];\n          item.getSum = () => row.sum;\n          runSum += value;\n          if (value > 0) {\n            sumAboveZero += value;\n          }\n          if (!ordinalValues[item[this.ordinalAccessor]]) {\n            ordinalValues[item[this.ordinalAccessor]] = 1;\n          }\n          row.values.push(item);\n        }\n        if (base.positive > this.extent[1]) {\n          this.extent[1] = base.positive;\n        }\n        if (base.negative < this.extent[0]) {\n          this.extent[0] = base.negative;\n        }\n        row.sum = runSum;\n        row.sumMessage = 'Sum ' + runSum;\n        row.sumAboveZero = sumAboveZero;\n        output.push(row);\n      }\n      return output;\n    };\n    stackDiverging(nestData);\n\n    // Get all item categories (ordinal accessor)\n    this.datakeys = Object.keys(ordinalValues);\n    this.series = stackDiverging(nestData);\n    if (this.sortOrder === 'asc') {\n      this.series = [...this.series].sort((a, b) => a.sum - b.sum);\n    } else if (this.sortOrder === 'desc') {\n      this.series = [...this.series].sort((a, b) => b.sum - a.sum);\n    }\n  }\n\n  prepareLegendData() {\n    this.legendData = this.series[0].values;\n  }\n\n  validateClickHighlight() {\n    // format clickHighlight data row if there is date and data in clickHighlight\n    if (this.clickHighlight && this.clickHighlight.length > 0) {\n      this.clickHighlight.map(d => {\n        d[this.groupAccessor] =\n          d[this.groupAccessor] instanceof Date\n            ? formatDate({\n                date: d[this.groupAccessor],\n                format: this.layout === 'vertical' ? this.xAxis.format : this.yAxis.format,\n                offsetTimezone: true\n              })\n            : d[this.groupAccessor];\n      });\n    }\n  }\n\n  setTableData() {\n    const flattenedNest = [];\n    this.series.forEach(s => {\n      s.values.forEach(val => {\n        // val['rowSum'] = val.getSum();\n        flattenedNest.push(val);\n      });\n    });\n    // generate scoped and formatted data for data-table component\n    const keys = scopeDataKeys(this, chartAccessors, 'stacked-bar-chart');\n    if (this.normalized) {\n      const label =\n        this.dataKeyNames && (this.dataKeyNames[`${this.valueAccessor}`] || this.dataKeyNames[`${this.valueAccessor}%`])\n          ? this.dataKeyNames[`${this.valueAccessor}%`] || this.dataKeyNames[`${this.valueAccessor}`] + ' (%)'\n          : `${this.valueAccessor}%`;\n      keys[label] = '0[.][0][0]%';\n      flattenedNest.forEach(i => {\n        i[label] = i[`${this.valueAccessor}`] / i.getSum();\n      });\n    }\n    this.tableData = getScopedData(flattenedNest, keys);\n    this.tableColumns = Object.keys(keys);\n  }\n\n  setSubTitleElements() {\n    setSubTitle({\n      root: this.subTitleG,\n      subTitle: this.subTitle\n    });\n  }\n\n  setColors() {\n    this.preparedColors = this.colors\n      ? convertVisaColor(this.colors)\n      : getColors(this.colorPalette, this.datakeys.length);\n  }\n\n  setTextures() {\n    const colorsArray = this.preparedColors.range ? this.preparedColors.range() : this.preparedColors;\n    if (this.accessibility.hideTextures || colorsArray.length > 6) {\n      this.colorArr = this.preparedColors;\n    } else {\n      const colorsToConvert = colorsArray;\n      const textures = convertColorsToTextures({\n        colors: colorsToConvert,\n        rootSVG: this.svg.node(),\n        id: this.chartID,\n        scheme: 'categorical',\n        disableTransitions: !this.duration\n      });\n      this.colorArr = this.preparedColors.range ? this.preparedColors.copy().range(textures) : textures;\n    }\n  }\n\n  setStrokes() {\n    const colors = this.preparedColors.range ? this.preparedColors.range() : this.preparedColors;\n    this.strokes = buildStrokes({\n      root: this.svg.node(),\n      id: this.chartID,\n      colors,\n      clickStyle: this.clickStyle,\n      hoverStyle: this.hoverStyle,\n      stacked: true\n    });\n    this.textStrokes = {};\n    colors.forEach(color => {\n      this.textStrokes[color] = createTextStrokeFilter({\n        root: this.svg.node(),\n        id: this.chartID,\n        color\n      });\n    });\n    if (this.clickStyle && this.clickStyle.color) {\n      this.textStrokes[this.clickStyle.color] = createTextStrokeFilter({\n        root: this.svg.node(),\n        id: this.chartID,\n        color: this.clickStyle.color\n      });\n    }\n    if (this.hoverStyle && this.hoverStyle.color) {\n      this.textStrokes[this.hoverStyle.color] = createTextStrokeFilter({\n        root: this.svg.node(),\n        id: this.chartID,\n        color: this.hoverStyle.color\n      });\n    }\n  }\n\n  prepareScales() {\n    const minBarValue =\n      this.minValueOverride && this.minValueOverride < this.extent[0] ? this.minValueOverride : this.extent[0];\n    const maxBarValue = this.maxValueOverride || this.extent[1];\n    const domain = this.normalized ? [0, 1] : [minBarValue, maxBarValue];\n\n    if (this.interpolating) {\n      this.interpolating.oldXDomain = this.x.domain();\n      this.interpolating.oldXRange = this.x.range();\n      this.interpolating.oldYDomain = this.y.domain();\n      this.interpolating.oldYRange = this.y.range();\n    }\n    // scale band based on layout of chart\n    if (this.layout === 'vertical') {\n      if (this.interpolating) {\n        this.interpolating.padding = this.x.padding();\n        this.interpolating.x = scaleBand()\n          .domain(this.interpolating.oldXDomain)\n          .range(this.interpolating.oldXRange)\n          .padding(this.interpolating.padding);\n        this.interpolating.y = scaleLinear()\n          .domain(this.interpolating.oldYDomain)\n          .range(this.interpolating.oldYRange);\n      }\n      this.y = scaleLinear()\n        .domain(domain)\n        .range([this.innerPaddedHeight, 0]);\n\n      this.x = scaleBand()\n        .domain(this.series.map(d => d.key))\n        .range([0, this.innerPaddedWidth])\n        .padding(this.barIntervalRatio);\n    } else if (this.layout === 'horizontal') {\n      if (this.interpolating) {\n        this.interpolating.padding = this.y.padding();\n        this.interpolating.x = scaleLinear()\n          .domain(this.interpolating.oldXDomain)\n          .range(this.interpolating.oldXRange);\n        this.interpolating.y = scaleBand()\n          .domain(this.interpolating.oldYDomain)\n          .range(this.interpolating.oldYRange)\n          .padding(this.interpolating.padding);\n      }\n      this.x = scaleLinear()\n        .domain(domain)\n        .range([0, this.innerPaddedWidth]);\n\n      this.y = scaleBand()\n        .domain(this.series.map(d => d.key))\n        .range([0, this.innerPaddedHeight])\n        .padding(this.barIntervalRatio);\n    }\n  }\n\n  renderRootElements() {\n    this.svg = select(this.stackedBarChartEl)\n      .select('.visa-viz-d3-stacked-bar-container')\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    this.root = this.svg.append('g').attr('id', 'visa-viz-margin-container-g-' + this.chartID);\n    this.rootG = this.root.append('g').attr('id', 'visa-viz-padding-container-g-' + this.chartID);\n\n    this.gridG = this.rootG.append('g').attr('class', 'grid-group');\n    this.barG = this.rootG.append('g').attr('class', 'stacked-bar-group');\n\n    this.labelG = this.rootG.append('g').attr('class', 'stacked-bar-dataLabel-group');\n    this.totalLabels = this.rootG.append('g').attr('class', 'bar-dataLabel-group');\n    this.legendG = select(this.stackedBarChartEl)\n      .select('.stacked-bar-legend')\n      .append('svg');\n\n    this.subTitleG = select(this.stackedBarChartEl).select('.stacked-bar-sub-title');\n    this.tooltipG = select(this.stackedBarChartEl).select('.stacked-bar-tooltip');\n    this.referencesG = this.rootG.append('g').attr('class', 'stacked-bar-reference-line-group');\n  }\n\n  setTestingAttributes() {\n    if (this.unitTest) {\n      select(this.stackedBarChartEl)\n        .select('.visa-viz-d3-stacked-bar-container')\n        .attr('data-testid', 'chart-container');\n      select(this.stackedBarChartEl)\n        .select('.stacked-bar-main-title')\n        .attr('data-testid', 'main-title');\n      select(this.stackedBarChartEl)\n        .select('.stacked-bar-sub-title')\n        .attr('data-testid', 'sub-title');\n\n      this.svg.attr('data-testid', 'root-svg');\n      this.root.attr('data-testid', 'margin-container');\n      this.rootG.attr('data-testid', 'padding-container');\n      this.legendG.attr('data-testid', 'legend-container');\n      this.tooltipG.attr('data-testid', 'tooltip-container');\n\n      this.barG.attr('data-testid', 'stacked-bar-group');\n      this.updateBarWrappers\n        .attr('data-testid', 'stacked-bar-wrapper')\n        .attr('data-id', d => `stacked-bar-wrapper-${d.key}`);\n      this.update\n        .attr('data-testid', 'bar')\n        .attr('data-id', d => `bar-${d[this.groupAccessor]}-${d[this.ordinalAccessor]}`);\n\n      this.labelG.attr('data-testid', 'stacked-bar-dataLabel-group');\n      this.updateLabelWrappers\n        .attr('data-testid', 'stacked-bar-dataLabel-wrapper')\n        .attr('data-id', d => `stacked-bar-dataLabel-wrapper-${d.key}`);\n      this.updateLabels\n        .attr('data-testid', 'dataLabel')\n        .attr('data-id', d => `dataLabel-${d[this.groupAccessor]}-${d[this.ordinalAccessor]}`);\n\n      this.totalLabels.attr('data-testid', 'stacked-bar-totalLabel-group');\n      this.updateTotalLabels.attr('data-testid', 'totalLabel').attr('data-id', d => `totalLabel-${d.key}`);\n\n      this.referencesG.attr('data-testid', 'reference-line-group');\n      this.svg.select('defs').attr('data-testid', 'pattern-defs');\n\n      // reference lines do not have global selections\n      this.referencesG.selectAll('.stacked-bar-reference-line').attr('data-testid', 'reference-line');\n\n      this.referencesG.selectAll('.stacked-bar-reference-line-label').attr('data-testid', 'reference-line-label');\n    } else {\n      select(this.stackedBarChartEl)\n        .select('.visa-viz-d3-stacked-bar-container')\n        .attr('data-testid', null);\n      select(this.stackedBarChartEl)\n        .select('.stacked-bar-main-title')\n        .attr('data-testid', null);\n      select(this.stackedBarChartEl)\n        .select('.stacked-bar-sub-title')\n        .attr('data-testid', null);\n      this.svg.attr('data-testid', null);\n      this.root.attr('data-testid', null);\n      this.rootG.attr('data-testid', null);\n      this.legendG.attr('data-testid', null);\n      this.tooltipG.attr('data-testid', null);\n\n      this.barG.attr('data-testid', null);\n      this.updateBarWrappers.attr('data-testid', null).attr('data-id', null);\n      this.update.attr('data-testid', null).attr('data-id', null);\n\n      this.labelG.attr('data-testid', null);\n      this.updateLabelWrappers.attr('data-testid', null).attr('data-id', null);\n      this.updateLabels.attr('data-testid', null).attr('data-id', null);\n\n      this.totalLabels.attr('data-testid', null);\n      this.updateTotalLabels.attr('data-testid', null).attr('data-id', null);\n\n      this.referencesG.attr('data-testid', null);\n      this.svg.select('defs').attr('data-testid', null);\n\n      // reference lines do not have global selections\n      this.referencesG.selectAll('.stacked-bar-reference-line').attr('data-testid', null);\n\n      this.referencesG.selectAll('.stacked-bar-reference-line-label').attr('data-testid', null);\n    }\n  }\n\n  // reset graph size based on window size\n  reSetRoot() {\n    const changeSvg = prepareRenderChange({\n      selection: this.svg,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeSvg\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    const changeRoot = prepareRenderChange({\n      selection: this.root,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRoot.attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n\n    const changeRootG = prepareRenderChange({\n      selection: this.rootG,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRootG.attr('transform', `translate(${this.padding.left}, ${this.padding.top})`);\n\n    setAccessibilityDescriptionWidth(this.chartID, this.width);\n  }\n\n  drawXAxis() {\n    const axisAccessor = this.layout === 'vertical' ? this.groupAccessor : this.valueAccessor;\n    const axisLabel =\n      this.xAxis.label && this.xAxis.label !== ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.xAxis.label;\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.x,\n      left: false,\n      wrapLabel: this.wrapLabel && this.layout === 'vertical' ? this.x.bandwidth() : '',\n      format: this.xAxis.format,\n      dateFormat: this.xAxis.format,\n      tickInterval: this.xAxis.tickInterval,\n      label: axisLabel, // this.xAxis.label,\n      padding: this.padding,\n      hide: !this.innerXAxis.visible,\n      duration: this.duration\n    });\n  }\n\n  drawYAxis() {\n    const axisAccessor = this.layout === 'vertical' ? this.valueAccessor : this.groupAccessor;\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.yAxis.label;\n\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.y,\n      left: true,\n      wrapLabel: this.wrapLabel ? this.padding.left || 100 : '',\n      format: this.yAxis.format,\n      dateFormat: this.yAxis.format,\n      tickInterval: this.yAxis.tickInterval,\n      label: axisLabel, // this.yAxis.label,\n      padding: this.padding,\n      hide: !this.innerYAxis.visible,\n      duration: this.duration\n    });\n  }\n\n  setXAxisAccessibility() {\n    const axisAccessor = this.layout === 'vertical' ? this.groupAccessor : this.valueAccessor;\n    const axisLabel =\n      this.xAxis.label && this.xAxis.label !== ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.xAxis.label;\n\n    setAccessXAxis({\n      rootEle: this.stackedBarChartEl,\n      hasXAxis: this.innerXAxis ? this.innerXAxis.visible : false,\n      xAxis: this.layout === 'vertical' ? this.x || false : this.y || false, // this is optional for some charts, if hasXAxis is always false\n      xAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasXAxis is always false\n    });\n  }\n\n  setYAxisAccessibility() {\n    const axisAccessor = this.layout === 'vertical' ? this.valueAccessor : this.groupAccessor;\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.yAxis.label;\n\n    setAccessYAxis({\n      rootEle: this.stackedBarChartEl,\n      hasYAxis: this.innerYAxis ? this.innerYAxis.visible : false,\n      yAxis: this.layout === 'vertical' ? this.y || false : this.x || false, // this is optional for some charts, if hasXAxis is always false\n      yAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasXAxis is always false\n    });\n  }\n\n  drawBaseline() {\n    if (this.layout === 'vertical') {\n      drawAxis({\n        root: this.rootG,\n        height: this.innerPaddedHeight,\n        width: this.innerPaddedWidth,\n        axisScale: this.x,\n        left: false,\n        padding: this.padding,\n        markOffset: this.y(0) || -1,\n        duration: this.duration\n      });\n    }\n    if (this.layout === 'horizontal') {\n      drawAxis({\n        root: this.rootG,\n        height: this.innerPaddedHeight,\n        width: this.innerPaddedWidth,\n        axisScale: this.y,\n        left: true,\n        padding: this.padding,\n        markOffset: this.x(0) || -1,\n        duration: this.duration\n      });\n    }\n  }\n\n  // dashed line grid for chart\n  drawXGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.x,\n      false,\n      !this.innerXAxis.gridVisible,\n      this.xAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  drawYGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.y,\n      true,\n      !this.innerYAxis.gridVisible,\n      this.yAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  setGlobalSelections() {\n    const dataBoundToBarGroups = this.barG.selectAll('.stacked-bar-series').data(this.series, d => d.key);\n\n    this.enterBarWrappers = dataBoundToBarGroups.enter().append('g');\n    this.exitBarWrappers = dataBoundToBarGroups.exit();\n    this.updateBarWrappers = dataBoundToBarGroups.merge(this.enterBarWrappers);\n\n    const dataBoundToGeometries = this.updateBarWrappers\n      .selectAll('.stacked-bar')\n      .data(d => d.values, d => d[this.ordinalAccessor]);\n\n    this.enter = dataBoundToGeometries.enter().append('rect');\n    this.exit = dataBoundToGeometries.exit();\n    this.update = dataBoundToGeometries.merge(this.enter);\n\n    this.exitSize = this.exit.size();\n    this.enterSize = this.enter.size();\n\n    const dataBoundToLabelWrappers = this.labelG\n      .selectAll('.stacked-bar-dataLabel-series')\n      .data(this.series, d => d.key);\n    this.enterLabelWrappers = dataBoundToLabelWrappers.enter().append('g');\n    this.exitLabelWrappers = dataBoundToLabelWrappers.exit();\n    this.updateLabelWrappers = dataBoundToLabelWrappers.merge(this.enterLabelWrappers);\n\n    const dataBoundToLabels = this.updateLabelWrappers\n      .selectAll('.stacked-bar-dataLabel')\n      .data(d => d.values, d => d[this.ordinalAccessor]);\n    this.enterLabels = dataBoundToLabels.enter().append('text');\n    this.exitLabels = dataBoundToLabels.exit();\n    this.updateLabels = dataBoundToLabels.merge(this.enterLabels);\n\n    const dataBoundToTotalLabels = this.totalLabels\n      .selectAll('.bar-dataLabel-group text')\n      .data(this.series, d => d.key);\n    this.enterTotalLabels = dataBoundToTotalLabels.enter().append('text');\n    this.exitTotalLabels = dataBoundToTotalLabels.exit();\n    this.updateTotalLabels = dataBoundToTotalLabels.merge(this.enterTotalLabels);\n  }\n\n  enterGeometries() {\n    this.enter.interrupt();\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    const padding = this.layout === 'vertical' ? 'innerPaddedWidth' : 'innerPaddedHeight';\n\n    this.enter\n      .attr('class', 'stacked-bar')\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .each((_d, i, n) => {\n        initializeElementAccess(n[i]);\n      })\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .attr('fill', (d, i) => {\n        const clicked =\n          this.clickHighlight &&\n          this.clickHighlight.length > 0 &&\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n        const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n        const baseColor = this.colorArr[i];\n        return clicked && this.clickStyle.color\n          ? visaColors[this.clickStyle.color] || this.clickStyle.color\n          : clicked\n          ? baseColor\n          : hovered && this.hoverStyle.color\n          ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n          : baseColor;\n      })\n      .attr('opacity', 0)\n      .attr(valueAxis, d => {\n        let scale = this[valueAxis];\n        if (this.interpolating) {\n          scale = this.interpolating[valueAxis];\n        }\n        let direction = d.stackEnd;\n        if (d.stackEnd < 0) {\n          direction = d.stackStart;\n        }\n        if (typeof d.enteringStackStart === 'number') {\n          direction = d.enteringStackStart;\n        }\n        return scale(direction / this.modifier(d));\n      })\n      .attr(valueDimension, 0)\n      .attr(ordinalAxis, d => {\n        let scale = this[ordinalAxis];\n        if (this.interpolating) {\n          scale = this.interpolating[ordinalAxis];\n        }\n        return scale(d[this.groupAccessor]);\n      })\n      .attr(ordinalDimension, () => {\n        let scale = this[ordinalAxis];\n        if (this.interpolating) {\n          scale = this.interpolating[ordinalAxis];\n        }\n        return scale.bandwidth();\n      });\n\n    this.enterBarWrappers\n      .attr('class', 'stacked-bar-series entering')\n      .each((_, i, n) => {\n        // we bind accessible interactivity and semantics here (role, tabindex, etc)\n        initializeElementAccess(n[i]);\n      })\n      .selectAll('.stacked-bar')\n      .attr(valueDimension, d => {\n        return this.layout === 'vertical'\n          ? this.y(d.stackEnd / this.modifier(d)) - this.y(d.stackStart / this.modifier(d))\n          : this.x(d.stackStart / this.modifier(d)) - this.x(d.stackEnd / this.modifier(d));\n      });\n\n    this.enterBarWrappers\n      .selectAll('.stacked-bar')\n      .attr(valueAxis, d => {\n        return this.layout === 'vertical'\n          ? this.y(d.stackStart / this.modifier(d))\n          : this.x(d.stackEnd / this.modifier(d));\n      })\n      .attr(ordinalAxis, d => {\n        let shift = this[ordinalAxis](d[this.groupAccessor]) + this[ordinalAxis].bandwidth() / 2;\n        shift =\n          this[ordinalAxis](d[this.groupAccessor]) +\n          (this[ordinalAxis].bandwidth() / 2) * (shift / (this[padding] / 2));\n        return shift;\n      })\n      .attr(ordinalDimension, 0);\n\n    this.enterBarWrappers.order();\n    this.enter.order();\n  }\n\n  updateGeometries() {\n    this.update.interrupt();\n\n    this.update\n      .transition('opacity')\n      .duration((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          select(n[i]).classed('entering', false);\n          return this.duration;\n        }\n        return 0;\n      })\n      .ease(easeCircleIn)\n      .attr('opacity', d =>\n        checkInteraction(d, 1, this.hoverOpacity, this.hoverHighlight, this.clickHighlight, this.innerInteractionKeys)\n      )\n      .call(transitionEndAll, () => {\n        this.update.classed('entering', false);\n      });\n  }\n\n  exitGeometries() {\n    this.exit.interrupt();\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    const padding = this.layout === 'vertical' ? 'innerPaddedWidth' : 'innerPaddedHeight';\n\n    this.exit\n      .attr('filter', null)\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr(valueDimension, 0)\n      .attr(valueAxis, d => {\n        let direction = d.stackEnd;\n        if (d.stackEnd < 0) {\n          direction = d.stackStart;\n        }\n        return this[valueAxis](direction / this.modifier(d));\n      })\n      .attr(ordinalAxis, d => this[ordinalAxis](d[this.groupAccessor]));\n\n    this.exitBarWrappers\n      .selectAll('.stacked-bar')\n      .attr('filter', null)\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .attr(valueAxis, (_, i, n) => select(n[i]).attr(valueAxis))\n      .attr(ordinalAxis, (_d, i, n) => {\n        const self = select(n[i]);\n        let shift = +self.attr(ordinalAxis) + +self.attr(ordinalDimension) / 2;\n        shift = +self.attr(ordinalAxis) + (+self.attr(ordinalDimension) / 2) * (shift / (this[padding] / 2));\n        return shift;\n      })\n      .attr(valueDimension, (_, i, n) => select(n[i]).attr(valueDimension))\n      .attr(ordinalDimension, 0);\n\n    // this new transtition ensures that the chart counts and all labels\n    // correctly reflect the newest information\n    this.update\n      .transition('accessibilityAfterExit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        // before we exit geometries, we need to check if a focus exists or not\n        const focusDidExist = checkAccessFocus(this.rootG.node());\n        // then we must remove the exiting elements\n        this.exit.remove();\n        this.exitBarWrappers.remove();\n        // then our util can count geometries\n        this.setChartCountAccessibility();\n        // our group's label should update with new counts too\n        this.setGroupAccessibilityID();\n        // since items exited, labels must receive updated values\n        this.setGeometryAriaLabels();\n        // and also make sure the user's focus isn't lost\n        retainAccessFocus({\n          parentGNode: this.rootG.node(),\n          focusDidExist\n          // recursive: true\n        });\n      });\n  }\n\n  drawGeometries() {\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    // const padding = this.layout === 'vertical' ? 'innerPaddedWidth' : 'innerPaddedHeight';\n\n    this.updateBarWrappers\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        this.updateBarWrappers.classed('entering', false);\n      });\n\n    this.update\n      .classed('geometryIsMoving', (d, i, n) => {\n        const geometryIsUpdating = checkAttributeTransitions(select(n[i]), [\n          {\n            attr: ordinalAxis,\n            numeric: true,\n            newValue: this[ordinalAxis](d[this.groupAccessor])\n          },\n          {\n            attr: ordinalDimension,\n            numeric: true,\n            newValue: this[ordinalAxis].bandwidth()\n          },\n          {\n            attr: valueAxis,\n            numeric: true,\n            newValue:\n              this.layout === 'vertical'\n                ? this.y(d.stackStart / this.modifier(d))\n                : this.x(d.stackEnd / this.modifier(d))\n          },\n          {\n            attr: valueDimension,\n            numeric: true,\n            newValue:\n              this.layout === 'vertical'\n                ? this.y(d.stackEnd / this.modifier(d)) - this.y(d.stackStart / this.modifier(d))\n                : this.x(d.stackStart / this.modifier(d)) - this.x(d.stackEnd / this.modifier(d))\n          }\n        ]);\n        return geometryIsUpdating;\n      })\n      .attr(`data-${ordinalAxis}`, d => this[ordinalAxis](d[this.groupAccessor]))\n      .attr(`data-${ordinalDimension}`, this[ordinalAxis].bandwidth())\n      .attr(`data-${valueAxis}`, d => {\n        return this.layout === 'vertical'\n          ? this.y(d.stackStart / this.modifier(d))\n          : this.x(d.stackEnd / this.modifier(d));\n      })\n      .attr(`data-${valueDimension}`, d => {\n        return this.layout === 'vertical'\n          ? this.y(d.stackEnd / this.modifier(d)) - this.y(d.stackStart / this.modifier(d))\n          : this.x(d.stackStart / this.modifier(d)) - this.x(d.stackEnd / this.modifier(d));\n      })\n      .attr('data-translate-x', this.padding.left + this.margin.left)\n      .attr('data-translate-y', this.padding.top + this.margin.top)\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr(valueAxis, d => {\n        return this.layout === 'vertical'\n          ? this.y(d.stackStart / this.modifier(d))\n          : this.x(d.stackEnd / this.modifier(d));\n      })\n      .attr(valueDimension, d => {\n        return this.layout === 'vertical'\n          ? this.y(d.stackEnd / this.modifier(d)) - this.y(d.stackStart / this.modifier(d))\n          : this.x(d.stackStart / this.modifier(d)) - this.x(d.stackEnd / this.modifier(d));\n      })\n      .attr(ordinalAxis, d => this[ordinalAxis](d[this.groupAccessor]))\n      .attr(ordinalDimension, this[ordinalAxis].bandwidth())\n      .call(transitionEndAll, () => {\n        setTimeout(() => {\n          this.update.classed('geometryIsMoving', false);\n          this.updateInteractionState();\n\n          this.updateLabels.classed('textIsMoving', false);\n          this.checkLabelColorAgainstBackground();\n        }, 0); // 33 is the magic number: it is approx 1 frame at 30fps, so the largest, least-noticable timeout\n        // we must make sure if geometries move, that our focus indicator does too\n        retainAccessFocus({\n          parentGNode: this.rootG.node()\n        });\n\n        // now we can emit the event that transitions are complete\n        this.transitionEndEvent.emit({ chartID: this.chartID });\n      });\n  }\n\n  updateInteractionState() {\n    removeHoverStrokes(this.svg.node());\n    // we created an \"opacity\" transition namespace in update's transition\n    // we override it here to instantly display opacity state (below)\n    this.update.interrupt('opacity');\n    this.updateLabels.interrupt('opacity');\n\n    // we use this.update and this.labelCurrent from setGlobalSelection here\n    // the lifecycle state does not matter (enter/update/exit)\n    // since interaction state can happen at any time\n\n    this.update\n      .attr('opacity', d =>\n        checkInteraction(d, 1, this.hoverOpacity, this.hoverHighlight, this.clickHighlight, this.innerInteractionKeys)\n      )\n      .attr('fill', (d, i) => {\n        const clicked =\n          this.clickHighlight &&\n          this.clickHighlight.length > 0 &&\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n        const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n        const baseColor = this.colorArr[i];\n        return clicked && this.clickStyle.color\n          ? visaColors[this.clickStyle.color] || this.clickStyle.color\n          : clicked\n          ? baseColor\n          : hovered && this.hoverStyle.color\n          ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n          : baseColor;\n      })\n      .each((d, i, n) => {\n        const me = select(n[i]);\n        if (!this.accessibility.hideStrokes && !me.classed('geometryIsMoving')) {\n          const clicked =\n            this.clickHighlight &&\n            this.clickHighlight.length > 0 &&\n            checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n          const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n          const baseColor = this.preparedColors[i];\n          const state = clicked ? 'click' : hovered ? 'hover' : 'rest';\n          const color =\n            clicked && this.clickStyle.color\n              ? visaColors[this.clickStyle.color] || this.clickStyle.color\n              : clicked\n              ? baseColor\n              : hovered && this.hoverStyle.color\n              ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n              : baseColor;\n          if (state === 'hover') {\n            drawHoverStrokes({\n              inputElement: n[i],\n              id: this.chartID,\n              key: d[this.ordinalAccessor] + d[this.groupAccessor],\n              strokeWidth: this.hoverStyle.strokeWidth,\n              fill: color\n            });\n          }\n          const filter = this.strokes[state + color];\n          if (filter !== me.attr('filter')) {\n            // this setTimeout is actually related to a browser bug in safari (it won't draw\n            // updates if the filter changes from one type to another). we must remove the\n            // filter and then add the right one in a different scope of execution\n            if (this.isSafari) {\n              me.attr('filter', null);\n              setTimeout(() => {\n                me.attr('filter', filter);\n              }, 0);\n            } else {\n              me.attr('filter', filter);\n            }\n          }\n        } else {\n          me.attr('filter', null);\n        }\n      });\n    // in case the fill/stroke contents change, we want to update our focus indicator to match\n    // (the focus indicator copies the whole element being focused to place it on top)\n    retainAccessFocus({\n      parentGNode: this.rootG.node()\n    });\n\n    setLegendInteractionState({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.ordinalAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.hoverStyle,\n      clickStyle: this.clickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  setLabelOpacity() {\n    const addCollisionClass = this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly;\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n    let textHeight = 15; // default label is usually 15\n\n    this.updateLabels\n      // .interrupt('opacity')\n      .each((_, i, n) => {\n        if (i === 0) {\n          // we just need to check this on one element\n          const textElement = n[i];\n          const style = getComputedStyle(textElement);\n          const fontSize = parseFloat(style.fontSize);\n          textHeight = Math.max(fontSize - 1, 1); // clone.getBBox().height;\n        }\n      });\n    this.processLabelOpacity(this.updateLabels, addCollisionClass);\n    this.updateTotalLabels.attr('opacity', this.showTotalValue && !this.normalized ? 1 : 0);\n\n    if (addCollisionClass) {\n      const labelsAdded = this.updateLabels.filter((_, i, n) => select(n[i]).classed('collision-added'));\n      const labelsRemoved = this.updateLabels\n        .filter((_, i, n) => select(n[i]).classed('collision-removed'))\n        .attr('data-use-dx', hideOnly) // need to add this for remove piece of collision below\n        .attr('data-use-dy', hideOnly); // .transition().duration(0);\n\n      const collisionSettings = {\n        vertical: {\n          top: {\n            validPositions: ['bottom'],\n            offsets: [5]\n          },\n          middle: {\n            validPositions: ['middle'],\n            offsets: [1]\n          },\n          bottom: {\n            validPositions: ['top'],\n            offsets: [textHeight / 2]\n          }\n        },\n        horizontal: {\n          right: {\n            validPositions: ['left'],\n            offsets: [8]\n          },\n          middle: {\n            validPositions: ['middle'],\n            offsets: [1]\n          },\n          left: {\n            validPositions: ['right'],\n            offsets: [20]\n          }\n        }\n      };\n\n      const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n      const boundsScope =\n        collisionPlacement && collisionSettings[this.layout][collisionPlacement] // check whether placement provided maps correctly\n          ? this.dataLabel.collisionPlacement\n          : this.layout === 'vertical'\n          ? 'top' // if we don't have collisionPlacement\n          : 'right';\n\n      // we can now remove labels as well if we need to...\n      if (labelsRemoved.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsRemoved,\n          avoidMarks: [],\n          validPositions: ['middle'],\n          offsets: [1],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n          hideOnly: false,\n          removeOnly: true\n        });\n\n        // remove temporary class now\n        labelsRemoved.classed('collision-removed', false);\n      }\n\n      // we can now add labels as well if we need to...\n      if (labelsAdded.size() > 0) {\n        this.bitmaps = placeDataLabels({\n          root: labelsAdded,\n          xScale: this.x,\n          yScale: this.y,\n          ordinalAccessor: this.groupAccessor,\n          valueAccessor: this.valueAccessor,\n          placement: this.dataLabel.placement,\n          layout: this.layout,\n          chartType: 'stacked',\n          normalized: this.normalized,\n          avoidCollision: {\n            runOccupancyBitmap: this.dataLabel.visible && this.dataLabel.placement === 'auto',\n            bitmaps: this.bitmaps,\n            labelSelection: labelsAdded,\n            avoidMarks: [this.update],\n            validPositions: hideOnly ? ['middle'] : collisionSettings[this.layout][boundsScope].validPositions,\n            offsets: hideOnly ? [1] : collisionSettings[this.layout][boundsScope].offsets,\n            accessors: [this.groupAccessor, this.ordinalAccessor, 'key'], // key is created for lines by nesting done in line,\n            size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n            boundsScope: hideOnly ? undefined : boundsScope,\n            hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly,\n            suppressMarkDraw: true\n          }\n        });\n\n        // remove temporary class now\n        labelsAdded.classed('collision-added', false);\n      }\n    }\n  }\n\n  processLabelOpacity(selection, addCollisionClass?) {\n    const opacity = this.dataLabel.visible ? 1 : 0;\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n\n    selection.attr('opacity', (d, i, n) => {\n      const prevOpacity = +select(n[i]).attr('opacity');\n      const styleVisibility = select(n[i]).style('visibility');\n      const dimensions = {};\n      dimensions[ordinalDimension] = this[ordinalAxis].bandwidth();\n      dimensions[valueDimension] =\n        this.layout === 'vertical'\n          ? this.y(d.stackEnd / this.modifier(d)) - this.y(d.stackStart / this.modifier(d))\n          : this.x(d.stackStart / this.modifier(d)) - this.x(d.stackEnd / this.modifier(d));\n      const hasRoom =\n        this.dataLabel.placement === 'auto' || // we ignore show small labels when running collision algorithm\n        this.dataLabel.collisionHideOnly ||\n        this.accessibility.showSmallLabels ||\n        verifyTextHasSpace({\n          text: formatDataLabel(d, this.innerLabelAccessor, this.dataLabel.format, this.normalized),\n          dimensions,\n          fontSize: 14\n        });\n      const targetOpacity = hasRoom\n        ? checkInteraction(\n            d,\n            opacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n          ? addCollisionClass\n            ? Number.EPSILON\n            : 0\n          : 1\n        : 0;\n      if (\n        ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n        addCollisionClass\n      ) {\n        if (targetOpacity === 1) {\n          select(n[i])\n            .classed('collision-added', true)\n            .style('visibility', null);\n        } else {\n          select(n[i]).classed('collision-removed', true);\n        }\n      }\n      return targetOpacity;\n    });\n  }\n\n  checkLabelColorAgainstBackground() {\n    this.updateLabels.attr('fill', (d, i, n) => {\n      return this.textTreatmentHandler(d, i, n);\n    });\n  }\n\n  textTreatmentHandler = (d, i, n) => {\n    const me = select(n[i]);\n    const bgColor =\n      this.clickHighlight &&\n      this.clickHighlight.length > 0 &&\n      checkClicked(d, this.clickHighlight, this.innerInteractionKeys) &&\n      this.clickStyle.color\n        ? visaColors[this.clickStyle.color] || this.clickStyle.color\n        : this.hoverHighlight &&\n          checkHovered(d, this.hoverHighlight, this.innerInteractionKeys) &&\n          this.hoverStyle.color\n        ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n        : this.preparedColors[i];\n\n    const color = autoTextColor(bgColor);\n    if (!me.classed('textIsMoving')) {\n      const filter = this.textStrokes[bgColor];\n      if (filter !== me.attr('filter')) {\n        if (this.isSafari) {\n          me.attr('filter', null);\n          setTimeout(() => {\n            me.attr('filter', filter);\n          }, 0);\n        } else {\n          me.attr('filter', filter);\n        }\n      }\n    } else {\n      me.attr('filter', null);\n    }\n\n    return color;\n  };\n\n  bindInteractivity() {\n    this.update\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  setRoundedCorners() {\n    this.update\n      .transition('shared_update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('rx', this.roundedCorner)\n      .attr('ry', this.roundedCorner);\n  }\n\n  setSelectedClass() {\n    this.update.classed('highlight', (d, i, n) => {\n      let selected = checkInteraction(d, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n      selected = this.clickHighlight && this.clickHighlight.length ? selected : false;\n      const selectable = this.accessibility.elementsAreInterface;\n      setElementInteractionAccessState(n[i], selected, selectable);\n      return selected;\n    });\n  }\n\n  updateCursor() {\n    this.update.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    select(this.stackedBarChartEl)\n      .selectAll('.legend')\n      .style('cursor', !this.suppressEvents && this.legend.interactive && this.legend.visible ? this.cursor : null);\n  }\n\n  enterDataLabels() {\n    const opacity = this.dataLabel.visible ? 1 : 0;\n    this.enterLabelWrappers.attr('class', 'stacked-bar-dataLabel-series entering');\n\n    this.enterLabels\n      .attr('class', 'stacked-bar-dataLabel entering')\n      .style('pointer-events', 'none')\n      .classed('stacked-bar-dataLabel-' + this.layout, true)\n      .attr(\n        'opacity',\n        d =>\n          checkInteraction(\n            d,\n            opacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n            ? 0\n            : Number.EPSILON // we need this to be epsilon initially to enable auto placement algorithm to run on load\n      )\n      .attr('fill', this.textTreatmentHandler);\n\n    placeDataLabels({\n      root: this.enterLabels,\n      xScale: this.x,\n      yScale: this.y,\n      ordinalAccessor: this.groupAccessor,\n      valueAccessor: this.valueAccessor,\n      placement: this.dataLabel.placement,\n      layout: this.layout,\n      chartType: 'stacked',\n      normalized: this.normalized\n    });\n  }\n\n  updateDataLabels() {\n    this.updateLabels.interrupt();\n\n    this.updateLabelWrappers\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        this.updateLabelWrappers.classed('entering', false);\n      });\n\n    const updatingLabels = this.updateLabels\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          select(n[i]).classed('entering', false);\n          return this.duration;\n        }\n        return 0;\n      });\n    this.processLabelOpacity(updatingLabels);\n    updatingLabels.call(transitionEndAll, () => {\n      this.updateLabels.classed('entering', false);\n    });\n  }\n\n  exitDataLabels() {\n    this.exitLabelWrappers\n      .selectAll('text')\n      .attr('filter', null)\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .attr('opacity', 0)\n      .call(transitionEndAll, () => {\n        this.exitLabelWrappers.remove();\n      });\n\n    this.exitLabels\n      .attr('filter', null)\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  drawDataLabels() {\n    let textHeight = 15; // default label is usually 15\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n\n    this.updateLabels\n      .classed('stacked-bar-dataLabel-horizontal', false)\n      .classed('stacked-bar-dataLabel-vertical', false)\n      .classed('stacked-bar-dataLabel-' + this.layout, true)\n      .text((d, i, n) => {\n        if (d[this.valueAccessor] === 0 && !this.showZeroLabels) {\n          return '';\n        }\n        if (i === 0) {\n          // we just need to check this on one element\n          const textElement = n[i];\n          const style = getComputedStyle(textElement);\n          const fontSize = parseFloat(style.fontSize);\n          textHeight = Math.max(fontSize - 1, 1); // clone.getBBox().height;\n        }\n        return formatDataLabel(d, this.innerLabelAccessor, this.dataLabel.format, this.normalized);\n      })\n      .style('visibility', (_, i, n) =>\n        this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly\n          ? select(n[i]).style('visibility')\n          : null\n      );\n\n    this.updateLabelWrappers\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        this.updateLabelWrappers.classed('entering', false);\n      });\n\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const stack = this.layout === 'vertical' ? 'stackStart' : 'stackEnd';\n\n    const labelUpdate = this.updateLabels\n      .classed('textIsMoving', d => {\n        if (!this.interpolating) {\n          return false;\n        }\n        const textIsMoving =\n          this.interpolating[ordinalAxis](d[this.groupAccessor]) !== this[ordinalAxis](d[this.groupAccessor]) ||\n          this.interpolating[valueAxis](d[stack] / this.modifier(d)) !== this[valueAxis](d[stack] / this.modifier(d));\n        return textIsMoving;\n      })\n      .attr('data-translate-x', this.padding.left + this.margin.left)\n      .attr('data-translate-y', this.padding.top + this.margin.top)\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration);\n\n    const collisionSettings = {\n      vertical: {\n        top: {\n          validPositions: ['bottom'],\n          offsets: [5]\n        },\n        middle: {\n          validPositions: ['middle'],\n          offsets: [1]\n        },\n        bottom: {\n          validPositions: ['top'],\n          offsets: [textHeight / 2]\n        }\n      },\n      horizontal: {\n        right: {\n          validPositions: ['left'],\n          offsets: [8]\n        },\n        middle: {\n          validPositions: ['middle'],\n          offsets: [1]\n        },\n        left: {\n          validPositions: ['right'],\n          offsets: [20]\n        }\n      }\n    };\n\n    const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n    const boundsScope =\n      collisionPlacement && collisionSettings[this.layout][collisionPlacement] // check whether placement provided maps correctly\n        ? this.dataLabel.collisionPlacement\n        : this.layout === 'vertical'\n        ? 'top' // if we don't have collisionPlacement\n        : 'right';\n\n    this.bitmaps = placeDataLabels({\n      root: labelUpdate,\n      xScale: this.x,\n      yScale: this.y,\n      ordinalAccessor: this.groupAccessor,\n      valueAccessor: this.valueAccessor,\n      placement: this.dataLabel.placement,\n      layout: this.layout,\n      chartType: 'stacked',\n      normalized: this.normalized,\n      avoidCollision: {\n        runOccupancyBitmap: this.dataLabel.visible && this.dataLabel.placement === 'auto',\n        labelSelection: labelUpdate,\n        avoidMarks: [this.update],\n        validPositions: hideOnly ? ['middle'] : collisionSettings[this.layout][boundsScope].validPositions,\n        offsets: hideOnly ? [1] : collisionSettings[this.layout][boundsScope].offsets,\n        accessors: [this.groupAccessor, this.ordinalAccessor, 'key'], // key is created for lines by nesting done in line,\n        size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n        boundsScope: hideOnly ? undefined : boundsScope,\n        hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly\n      }\n    });\n  }\n  // draw total value dataLabel\n\n  enterTotalDataLabels() {\n    const groupDimension = this.layout === 'vertical' ? 'x' : 'y';\n    const sumDimension = this.layout === 'vertical' ? 'y' : 'x';\n\n    this.enterTotalLabels\n      .attr('class', 'bar-dataLabel-' + this.layout)\n      .attr('opacity', Number.EPSILON)\n      .attr('fill', visaColors.dark_text)\n      .attr(groupDimension, d => {\n        return this[groupDimension](d.key) + this[groupDimension].bandwidth() / 2;\n      })\n      .attr(sumDimension, d => {\n        return this[sumDimension](d.sumAboveZero) + 4;\n      });\n    // .attr('text-anchor', this.layout === 'vertical' ? 'middle' : 'start');\n  }\n\n  updateTotalDataLabels() {\n    const totalValueOpacity = this.showTotalValue && !this.normalized ? 1 : 0;\n\n    this.updateTotalLabels\n      .transition('total_opacity')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', totalValueOpacity);\n  }\n\n  exitTotalDataLabels() {\n    this.exitTotalLabels\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  drawTotalDataLabels() {\n    const groupDimension = this.layout === 'vertical' ? 'x' : 'y';\n    const sumDimension = this.layout === 'vertical' ? 'y' : 'x';\n    const totalValueOpacity = this.showTotalValue && !this.normalized ? 1 : 0;\n\n    this.updateTotalLabels\n      .text(d => formatStats(d.sum, this.dataLabel.format))\n      .attr('text-anchor', this.layout === 'vertical' ? 'middle' : 'start');\n\n    const totalLabelSelection = this.updateTotalLabels\n      .classed('bar-dataLabel-horizontal', false)\n      .classed('bar-dataLabel-vertical', false)\n      .classed('bar-dataLabel-' + this.layout, true)\n      .attr(`data-${groupDimension}`, d => {\n        return this[groupDimension](d.key) + this[groupDimension].bandwidth() / 2;\n      })\n      .attr(`data-${sumDimension}`, d => {\n        return this[sumDimension](d.sumAboveZero); // 5 is a spacer for the collision placement using middle\n      })\n      .attr('data-use-dx', true)\n      .attr('data-use-dy', true)\n      .attr('data-translate-x', this.padding.left + this.margin.left)\n      .attr('data-translate-y', this.padding.top + this.margin.top)\n      .attr('dx', this.layout === 'vertical' ? '0' : '0.3em')\n      .attr('dy', this.layout === 'vertical' ? '-0.3em' : '.3em')\n      .style('visibility', (_, i, n) =>\n        this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly\n          ? select(n[i]).style('visibility')\n          : null\n      )\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', totalValueOpacity);\n\n    // for stacked we will only run this if data label props are true and show totals is visible\n    if (this.showTotalValue && (this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly)) {\n      // const validPositions = this.layout === 'vertical' ? ['middle', 'top'] : ['middle', 'right'];\n      this.bitmaps = resolveLabelCollision({\n        bitmaps: this.bitmaps,\n        labelSelection: totalLabelSelection,\n        avoidMarks: [this.update],\n        validPositions: ['middle'], // only do middle since we are forcing to collisionHideOnly\n        offsets: [1], // [1,1]\n        accessors: [this.ordinalAccessor],\n        // boundsScope: this.layout === 'vertical' ? 'top' : 'center',\n        size: [roundTo(this.width, 0), roundTo(this.height, 0)], // we need the whole width and height for pie\n        hideOnly: true\n      });\n\n      // since we are hardcoding hide only for these, we must apply x/y locations after collision\n      totalLabelSelection\n        .attr(groupDimension, d => {\n          return this[groupDimension](d.key) + this[groupDimension].bandwidth() / 2;\n        })\n        .attr(sumDimension, d => {\n          return this[sumDimension](d.sumAboveZero);\n        });\n    } else {\n      totalLabelSelection\n        .attr(groupDimension, d => {\n          return this[groupDimension](d.key) + this[groupDimension].bandwidth() / 2;\n        })\n        .attr(sumDimension, d => {\n          return this[sumDimension](d.sumAboveZero);\n        });\n    }\n  }\n\n  drawReferenceLines() {\n    setReferenceLine({\n      groupName: 'stack',\n      root: this.referencesG,\n      referenceLines: this.referenceLines,\n      referenceStyle: this.referenceStyle,\n      innerPaddedWidth: this.innerPaddedWidth,\n      innerPaddedHeight: this.innerPaddedHeight,\n      duration: this.duration,\n      layout: this.layout,\n      x: this.x,\n      y: this.y,\n      unitTest: this.unitTest\n    });\n  }\n\n  drawAnnotations() {\n    let ordinalScale = this.layout !== 'horizontal' ? this.x : this.y;\n    const valueScale = this.layout !== 'horizontal' ? this.y : this.x;\n    if (this.data[0][this.groupAccessor] instanceof Date) {\n      const maxDate = max(this.data, d => d[this.groupAccessor]);\n      const minDate = min(this.data, d => d[this.groupAccessor]);\n      const range = this.layout !== 'horizontal' ? [0, this.innerPaddedWidth] : [this.innerPaddedHeight, 0];\n\n      ordinalScale = scaleTime()\n        .domain([minDate, maxDate])\n        .range(range);\n    }\n    annotate({\n      source: this.rootG.node(),\n      data: this.annotations,\n      xScale: this.layout !== 'horizontal' ? ordinalScale : valueScale,\n      xAccessor: this.layout !== 'horizontal' ? this.groupAccessor : this.valueAccessor,\n      yScale: this.layout !== 'horizontal' ? valueScale : ordinalScale,\n      yAccessor: this.layout !== 'horizontal' ? this.valueAccessor : this.groupAccessor,\n      width: this.width,\n      height: this.height,\n      padding: this.padding,\n      margin: this.margin,\n      bitmaps: this.bitmaps\n    });\n  }\n\n  setAnnotationAccessibility() {\n    setAccessAnnotation(this.getLanguageString(), this.stackedBarChartEl, this.annotations, this.referenceLines);\n  }\n\n  drawLegendElements() {\n    drawLegend({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      width: this.innerPaddedWidth,\n      height: this.margin.top + 20,\n      colorArr: this.colorArr,\n      baseColorArr: this.preparedColors,\n      hideStrokes: this.accessibility.hideStrokes,\n      margin: this.margin,\n      padding: this.padding,\n      duration: this.duration,\n      type: 'bar',\n      fontSize: 16,\n      data: this.legendData,\n      labelKey: this.ordinalAccessor,\n      label: this.legend.labels,\n      hide: !this.legend.visible,\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.ordinalAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.hoverStyle,\n      clickStyle: this.clickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  bindLegendInteractivity() {\n    select(this.stackedBarChartEl)\n      .selectAll('.legend')\n      .style('cursor', !this.suppressEvents && this.legend.interactive && this.legend.visible ? this.cursor : null)\n      .on(\n        'click',\n        !this.suppressEvents && this.legend.interactive && this.legend.visible\n          ? (d, i, n) => this.onClickHandler(d, n[i])\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.legend.interactive && this.legend.visible\n          ? (d, i, n) => {\n              this.hoverEvent.emit({ data: d, target: n[i] });\n            }\n          : null\n      )\n      .on(\n        'mouseout',\n        !this.suppressEvents && this.legend.interactive && this.legend.visible ? () => this.onMouseOutHandler() : null\n      );\n  }\n\n  // new accessibility functions added here\n  setTagLevels() {\n    this.topLevel = findTagLevel(this.highestHeadingLevel);\n    this.bottomLevel = findTagLevel(this.highestHeadingLevel, 3);\n  }\n\n  setChartDescriptionWrapper() {\n    // this initializes the accessibility description section of the chart\n    initializeDescriptionRoot({\n      language: this.getLanguageString(),\n      rootEle: this.stackedBarChartEl,\n      title: this.accessibility.title || this.mainTitle,\n      chartTag: 'stacked-bar-chart',\n      uniqueID: this.chartID,\n      highestHeadingLevel: this.highestHeadingLevel,\n      redraw: this.shouldRedrawWrapper,\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      hideDataTable: this.accessibility.hideDataTableButton\n    });\n    this.shouldRedrawWrapper = false;\n  }\n\n  setParentSVGAccessibility() {\n    setAccessibilityController({\n      chartTag: 'stacked-bar-chart',\n      language: this.getLanguageString(),\n      node: this.svg.node(),\n      title: this.accessibility.title || this.mainTitle,\n      description: this.subTitle,\n      uniqueID: this.chartID,\n      geomType: 'bar',\n      includeKeyNames: this.accessibility.includeDataKeyNames,\n      dataKeys: scopeDataKeys(this, chartAccessors, 'stacked-bar-chart'),\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.groupAccessor,\n      groupName: 'stack',\n      groupKeys: this.showTotalValue ? ['sumMessage'] : false, // for special group-level keys (typically not needed)\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      // nested: '', // dumbbell only right now\n      // recursive: true // circle-pack only right now\n      normalized: this.normalized,\n      valueAccessor: this.valueAccessor\n    });\n  }\n\n  setGeometryAccessibilityAttributes() {\n    // this makes sure every geom element has correct event handlers + semantics (role, tabindex, etc)\n    this.update.each((_d, i, n) => {\n      initializeElementAccess(n[i]);\n    });\n  }\n\n  setGeometryAriaLabels() {\n    // this adds an ARIA label to each geom (a description read by screen readers)\n    const keys = scopeDataKeys(this, chartAccessors, 'stacked-bar-chart');\n    this.update.each((_d, i, n) => {\n      setElementFocusHandler({\n        chartTag: 'stacked-bar-chart',\n        language: this.getLanguageString(),\n        node: n[i],\n        geomType: 'bar',\n        includeKeyNames: this.accessibility.includeDataKeyNames,\n        dataKeys: keys,\n        dataKeyNames: this.dataKeyNames,\n        groupKeys: this.showTotalValue ? ['sumMessage'] : false,\n        groupName: 'stack',\n        uniqueID: this.chartID,\n        disableKeyNav:\n          this.suppressEvents &&\n          this.accessibility.elementsAreInterface === false &&\n          this.accessibility.keyboardNavConfig &&\n          this.accessibility.keyboardNavConfig.disabled,\n        normalized: this.normalized,\n        valueAccessor: this.valueAccessor\n      });\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setGroupAccessibilityID() {\n    // this sets an ARIA label on all the g elements in the chart\n    this.updateBarWrappers.each((_, i, n) => {\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setChartAccessibilityTitle() {\n    setAccessTitle(this.getLanguageString(), this.stackedBarChartEl, this.accessibility.title || this.mainTitle);\n  }\n\n  setChartAccessibilitySubtitle() {\n    setAccessSubtitle(this.getLanguageString(), this.stackedBarChartEl, this.subTitle);\n  }\n\n  setChartAccessibilityLongDescription() {\n    setAccessLongDescription(this.getLanguageString(), this.stackedBarChartEl, this.accessibility.longDescription);\n  }\n\n  setChartAccessibilityExecutiveSummary() {\n    setAccessExecutiveSummary(this.getLanguageString(), this.stackedBarChartEl, this.accessibility.executiveSummary);\n  }\n\n  setChartAccessibilityPurpose() {\n    setAccessPurpose(this.getLanguageString(), this.stackedBarChartEl, this.accessibility.purpose);\n  }\n\n  setChartAccessibilityContext() {\n    setAccessContext(this.getLanguageString(), this.stackedBarChartEl, this.accessibility.contextExplanation);\n  }\n\n  setChartAccessibilityStatisticalNotes() {\n    setAccessStatistics(this.getLanguageString(), this.stackedBarChartEl, this.accessibility.statisticalNotes);\n  }\n\n  setChartCountAccessibility() {\n    // this is our automated section that describes the chart contents\n    // (like geometry and gorup counts, etc)\n    setAccessChartCounts({\n      rootEle: this.stackedBarChartEl,\n      parentGNode: this.barG.node(), // pass the wrapper to <g> or geometries here, should be single node selection\n      chartTag: 'stacked-bar-chart',\n      geomType: 'bars',\n      groupName: 'stacks'\n      // recursive: true\n    });\n  }\n\n  setChartAccessibilityStructureNotes() {\n    setAccessStructure(this.getLanguageString(), this.stackedBarChartEl, this.accessibility.structureNotes);\n  }\n  // new accessibility stuff ends here\n\n  onChangeHandler() {\n    if (this.accessibility && typeof this.accessibility.onChangeFunc === 'function') {\n      const d = {\n        updated: this.updated,\n        added: this.enterSize,\n        removed: this.exitSize\n      };\n      this.accessibility.onChangeFunc(d);\n    }\n    this.updated = false;\n    this.enterSize = 0;\n    this.exitSize = 0;\n  }\n\n  onClickHandler(d, n) {\n    this.clickEvent.emit({ data: d, target: n });\n  }\n\n  onHoverHandler(d, n) {\n    overrideTitleTooltip(this.chartID, true);\n    this.hoverEvent.emit({ data: d, target: n });\n    if (this.showTooltip && d) {\n      this.eventsTooltip({ data: d, evt: event, isToShow: true });\n    }\n  }\n\n  onMouseOutHandler() {\n    overrideTitleTooltip(this.chartID, false);\n    this.mouseOutEvent.emit();\n    if (this.showTooltip) {\n      this.eventsTooltip({ isToShow: false });\n    }\n  }\n\n  // set initial style (instead of copying css class across the lib)\n  setTooltipInitialStyle() {\n    initTooltipStyle(this.tooltipG);\n  }\n\n  // tooltip\n  eventsTooltip({ data, evt, isToShow }: { data?: any; evt?: any; isToShow: boolean }) {\n    drawTooltip({\n      root: this.tooltipG,\n      data,\n      event: evt,\n      isToShow,\n      tooltipLabel: this.tooltipLabel,\n      dataKeyNames: this.dataKeyNames,\n      xAxis: this.xAxis,\n      yAxis: this.yAxis,\n      dataLabel: this.dataLabel,\n      layout: this.layout,\n      ordinalAccessor: this.groupAccessor, // on purpose - to match tooltip util format\n      groupAccessor: this.ordinalAccessor, // on purpose - to match tooltip util format\n      valueAccessor: this.valueAccessor,\n      normalized: this.normalized,\n      chartType: 'stacked'\n    });\n  }\n\n  render() {\n    this.drawStartEvent.emit({ chartID: this.chartID });\n    // theme hardcoded until functionality is added\n    const theme = 'light';\n\n    // everything between this comment and the third should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n    this.init();\n    if (this.shouldSetLocalizationConfig) {\n      this.setLocalizationConfig();\n      this.shouldSetLocalizationConfig = false;\n    }\n    if (this.shouldSetTagLevels) {\n      this.setTagLevels();\n      this.shouldSetTagLevels = false;\n    }\n    if (this.shouldCheckValueAxis) {\n      if (this.layout === 'horizontal') {\n        this.shouldUpdateXAxis = true;\n        this.shouldSetXAxisAccessibility = true;\n        this.shouldUpdateXGrid = true;\n      } else if (this.layout === 'vertical') {\n        this.shouldUpdateYAxis = true;\n        this.shouldSetYAxisAccessibility = true;\n        this.shouldUpdateYGrid = true;\n      }\n      this.shouldCheckValueAxis = false;\n    }\n    if (this.shouldCheckLabelAxis) {\n      if (this.layout === 'vertical') {\n        this.shouldUpdateXAxis = true;\n        this.shouldSetXAxisAccessibility = true;\n      } else if (this.layout === 'horizontal') {\n        this.shouldUpdateYAxis = true;\n        this.shouldSetYAxisAccessibility = true;\n      }\n      this.shouldCheckLabelAxis = false;\n    }\n    if (this.shouldUpdateData) {\n      this.prepareData();\n      this.shouldUpdateData = false;\n    }\n    if (this.shouldUpdateLegendData) {\n      this.prepareLegendData();\n      this.shouldUpdateLegendData = false;\n    }\n    if (this.shouldSetDimensions) {\n      this.setDimensions();\n      this.shouldSetDimensions = false;\n    }\n    if (this.shouldUpdateScales) {\n      this.prepareScales();\n      this.shouldUpdateScales = false;\n    }\n    if (this.shouldValidateClickHighlight) {\n      this.validateClickHighlight();\n      this.shouldValidateClickHighlight = false;\n    }\n    if (this.shouldValidateInteractionKeys) {\n      this.validateInteractionKeys();\n      this.shouldValidateInteractionKeys = false;\n    }\n    if (this.shouldValidateDataLabelAccessor) {\n      this.validateDataLabelAccessor();\n      this.shouldValidateDataLabelAccessor = false;\n    }\n    if (this.shouldValidateAxes) {\n      this.validateAxes();\n      this.shouldValidateAxes = false;\n    }\n    if (this.shouldUpdateTableData) {\n      this.setTableData();\n      this.shouldUpdateTableData = false;\n    }\n    if (this.shouldValidate) {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.shouldValidate = false;\n    }\n    if (this.shouldSetColors) {\n      this.setColors();\n      this.shouldSetColors = false;\n    }\n    if (this.shouldValidateLabelPlacement) {\n      this.validateLabelPlacement();\n      this.shouldValidateLabelPlacement = false;\n    }\n    // Everything between this comment and the first should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n\n    return (\n      <div class={`o-layout is--${this.layout} ${theme}`}>\n        <div class=\"o-layout--chart\">\n          <this.topLevel class=\"stacked-bar-main-title vcl-main-title\">{this.mainTitle}</this.topLevel>\n          <this.bottomLevel class=\"visa-ui-text--instructions stacked-bar-sub-title vcl-sub-title\" />\n          <div class=\"stacked-bar-legend vcl-legend\" style={{ display: this.legend.visible ? 'block' : 'none' }} />\n          <keyboard-instructions\n            uniqueID={this.chartID}\n            geomType={'bar'}\n            groupName={'stack'} // taken from initializeDescriptionRoot, on bar this should be \"bar group\", stacked bar is \"stack\", and clustered is \"cluster\"\n            language={this.getLanguageString()}\n            chartTag={'stacked-bar-chart'}\n            width={this.width - (this.margin ? this.margin.right || 0 : 0)}\n            isInteractive={this.accessibility.elementsAreInterface}\n            hasCousinNavigation\n            disabled={\n              this.suppressEvents &&\n              this.accessibility.elementsAreInterface === false &&\n              this.accessibility.keyboardNavConfig &&\n              this.accessibility.keyboardNavConfig.disabled\n            } // the chart is \"simple\"\n          />\n          <div class=\"visa-viz-d3-stacked-bar-container\" />\n          <div class=\"stacked-bar-tooltip vcl-tooltip\" style={{ display: this.showTooltip ? 'block' : 'none' }} />\n          <data-table\n            uniqueID={this.chartID}\n            isCompact\n            language={this.getLanguageString()}\n            tableColumns={this.tableColumns}\n            dataKeyNames={this.dataKeyNames}\n            data={this.tableData}\n            padding={this.padding}\n            margin={this.margin}\n            hideDataTable={this.accessibility.hideDataTableButton}\n            unitTest={this.unitTest}\n          />\n        </div>\n        {/* <canvas id=\"bitmap-render\" /> */}\n      </div>\n    );\n  }\n  private init() {\n    // reading properties\n    const keys = Object.keys(StackedBarChartDefaultValues);\n    let i = 0;\n    // accept 0 or false as default value\n    const exceptions = {\n      mainTitle: {\n        exception: ''\n      },\n      subTitle: {\n        exception: ''\n      },\n      showTooltip: {\n        exception: false\n      },\n      wrapLabel: {\n        exception: false\n      },\n      showTotalValue: {\n        exception: false\n      },\n      barIntervalRatio: {\n        exception: 0\n      },\n      hoverOpacity: {\n        exception: 0\n      }\n    };\n    for (i = 0; i < keys.length; i++) {\n      const exception = !exceptions[keys[i]] ? false : this[keys[i]] === exceptions[keys[i]].exception;\n      this[keys[i]] = this[keys[i]] || exception ? this[keys[i]] : StackedBarChartDefaultValues[keys[i]];\n    }\n  }\n}\n\n// incorporate OSS licenses into build\nwindow['VisaChartsLibOSSLicenses'] = getLicenses(); // tslint:disable-line no-string-literal\n"],"mappings":"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","ignoreList":[]}