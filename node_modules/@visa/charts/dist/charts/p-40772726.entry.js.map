{"version":3,"names":["propDefaultValues","Utils","ClusteredBarChartDefaultValues","mainTitle","subTitle","text","height","width","margin","top","bottom","right","left","padding","localization","ordinalAccessor","valueAccessor","groupAccessor","reverseOrder","layout","xAxis","yAxis","wrapLabel","colorPalette","colorPaletteCategorical","hoverStyle","clickStyle","referenceStyle","cursor","roundedCorner","barIntervalRatio","groupIntervalRatio","hoverOpacity","dataLabel","legend","categoryLegend","tooltipLabel","showTooltip","accessibility","animationConfig","highestHeadingLevel","referenceLines","annotations","clickHighlight","suppressEvents","clusteredBarChartCss","ClusteredBarChartStyle0","configLocalization","getGlobalInstances","getActiveLanguageString","verifyTextHasSpace","checkAttributeTransitions","createTextStrokeFilter","drawHoverStrokes","removeHoverStrokes","buildStrokes","convertColorsToTextures","initializeDescriptionRoot","initializeElementAccess","setElementFocusHandler","setElementAccessID","setAccessibilityController","hideNonessentialGroups","setAccessTitle","setAccessSubtitle","setAccessLongDescription","setAccessExecutiveSummary","setAccessPurpose","setAccessContext","setAccessStatistics","setAccessChartCounts","setAccessXAxis","setAccessYAxis","setAccessStructure","setAccessAnnotation","retainAccessFocus","checkAccessFocus","setElementInteractionAccessState","setAccessibilityDescriptionWidth","autoTextColor","annotate","chartAccessors","convertVisaColor","checkInteraction","checkClicked","checkHovered","drawAxis","drawGrid","drawLegend","setLegendInteractionState","drawTooltip","formatDataLabel","formatDate","getColors","getLicenses","getPadding","getScopedData","initTooltipStyle","overrideTitleTooltip","placeDataLabels","scopeDataKeys","transitionEndAll","visaColors","validateAccessibilityProps","validateLocalizationProps","findTagLevel","prepareRenderChange","roundTo","resolveLabelCollision","setSubTitle","setReferenceLine","ClusteredBarChart","this","shouldValidateAccessibility","shouldValidateLocalization","nest","datakeys","legendData","updated","shouldValidate","shouldUpdateData","shouldSetDimensions","shouldUpdateScales","shouldValidateAxes","shouldUpdateAnnotations","shouldResetRoot","shouldUpdateTableData","shouldSetColors","shouldSetSubTitle","shouldValidateLabelPlacement","shouldValidateDataLabelAccessor","shouldValidateInteractionKeys","shouldSetSelectionClass","shouldUpdateXAxis","shouldUpdateYAxis","shouldUpdateXGrid","shouldUpdateYGrid","shouldUpdateBaseline","shouldCheckValueAxis","shouldCheckLabelAxis","shouldSetGlobalSelections","shouldEnterUpdateExit","shouldUpdateGeometries","shouldUpdateCorners","shouldUpdateLegendData","shouldUpdateLegend","shouldUpdateLegendInteractivity","shouldSetLegendCursor","shouldUpdateReferenceLines","shouldUpdateCursor","shouldDrawInteractionState","shouldSetLabelOpacity","shouldSetLabelPosition","shouldSetLabelContent","shouldCheckLabelColor","shouldBindInteractivity","shouldUpdateDescriptionWrapper","shouldSetChartAccessibilityTitle","shouldSetChartAccessibilitySubtitle","shouldSetChartAccessibilityLongDescription","shouldSetChartAccessibilityExecutiveSummary","shouldSetChartAccessibilityStatisticalNotes","shouldSetChartAccessibilityStructureNotes","shouldSetParentSVGAccessibility","shouldSetGeometryAccessibilityAttributes","shouldSetGeometryAriaLabels","shouldSetGroupAccessibilityLabel","shouldSetChartAccessibilityPurpose","shouldSetChartAccessibilityContext","shouldSetTestingAttributes","shouldRedrawWrapper","shouldSetTagLevels","shouldSetChartAccessibilityCount","shouldSetYAxisAccessibility","shouldSetXAxisAccessibility","shouldSetAnnotationAccessibility","shouldSetTextures","shouldSetStrokes","shouldSetLocalizationConfig","strokes","topLevel","bottomLevel","textTreatmentHandler","d","i","n","me","select","bgColor","length","innerInteractionKeys","color","hoverHighlight","preparedColors","autoPlacementBackgroundColor","placement","collisionPlacement","attr","y","dark_text","classed","root","svg","node","id","chartID","dataWatcher","_newData","_oldData","idWatcher","newID","_oldID","console","error","headingWatcher","_newVal","_oldVal","titleWatcher","subtitleWatcher","dimensionWatcher","layoutWatcher","ordinalAccessorWatcher","interactionKeys","valueAccessorWatcher","groupAccessorWatcher","reverseOrderWatcher","xAxisWatcher","newGridVal","gridVisible","oldGridVal","newTickInterval","tickInterval","oldTickInterval","yAxisWatcher","wrapLabelWatcher","colorsWatcher","hoverStyleWatcher","clickStyleWatcher","referenceWatcher","cursorWatcher","cornerWatcher","intervalRatioWatcher","groupIntervalRatioWatcher","hoverOpacityWatcher","labelWatcher","newPlacementVal","oldPlacementVal","newCollisionPlacementVal","oldCollisionPlacementVal","newVisibleVal","visible","oldVisibleVal","newAccessor","labelAccessor","oldAccessor","newFormatVal","format","oldFormatVal","newCollisionHideOnlyVal","collisionHideOnly","oldCollisionHideOnlyVal","tooltipLabelWatcher","accessibilityWatcher","newTitle","title","oldTitle","newExecutiveSummary","executiveSummary","oldExecutiveSummary","newPurpose","purpose","oldPurpose","newLongDescription","longDescription","oldLongDescription","newContext","contextExplanation","oldContext","newStatisticalNotes","statisticalNotes","oldStatisticalNotes","newStructureNotes","structureNotes","oldStructureNotes","newincludeDataKeyNames","includeDataKeyNames","oldincludeDataKeyNames","newElementDescriptionAccessor","elementDescriptionAccessor","oldElementDescriptionAccessor","newTextures","hideTextures","oldTextures","newSmallValue","showSmallLabels","oldSmallValue","newStrokes","hideStrokes","oldStrokes","newKeyNav","keyboardNavConfig","disabled","oldKeyNav","newInterface","elementsAreInterface","oldInterface","legendWatcher","newInteractiveVal","interactive","oldInteractiveVal","localizationWatcher","newLanguage","language","oldLanguage","newNumeralLocale","numeralLocale","oldNumeralLocale","annotationsWatcher","valueOverrideWatcher","clickWatcher","hoverWatcher","interactionWatcher","dataKeyNamesWatcher","suppressWatcher","unitTestWatcher","componentWillLoad","uniqueID","uuid","initialLoadEvent","emit","Promise","resolve","duration","defaults","clusteredBarChartEl","setLocalizationConfig","setTagLevels","prepareData","prepareLegendData","setDimensions","prepareScales","validateInteractionKeys","validateDataLabelAccessor","validateAxes","validateLabelPlacement","setTableData","shouldValidateAccessibilityProps","shouldValidateLocalizationProps","setColors","componentWillUpdate","componentDidLoad","renderRootElements","setTooltipInitialStyle","setChartDescriptionWrapper","setChartAccessibilityTitle","setChartAccessibilitySubtitle","setChartAccessibilityLongDescription","setChartAccessibilityExecutiveSummary","setChartAccessibilityPurpose","setChartAccessibilityContext","setChartAccessibilityStatisticalNotes","setChartAccessibilityStructureNotes","setParentSVGAccessibility","reSetRoot","setTextures","setStrokes","setSubTitleElements","drawXGrid","drawYGrid","setGlobalSelections","setTestingAttributes","enterGeometries","updateGeometries","exitGeometries","enterDataLabels","updateDataLabels","exitDataLabels","drawGeometries","setChartCountAccessibility","setGeometryAccessibilityAttributes","setGeometryAriaLabels","drawLegendElements","bindLegendInteractivity","setLabelContent","processLabelPosition","updateLabels","drawReferenceLines","setSelectedClass","checkLabelColorAgainstBackground","updateCursor","bindInteractivity","drawAnnotations","setAnnotationAccessibility","drawXAxis","setXAxisAccessibility","drawYAxis","setYAxisAccessibility","drawBaseline","onChangeHandler","barG","setGroupAccessibilityID","then","initialLoadEndEvent","componentDidUpdate","setRoundedCorners","setLabelPosition","updateInteractionState","setLabelOpacity","setLegendCursor","drawEndEvent","windowInstances","languageString","i18Next","languageObject","getResourceBundle","numeralObject","numeral","localeData","skipValidation","Object","assign","disableValidation","data","context","onClickEvent","clickEvent","undefined","innerLabelAccessor","getLanguageString","innerHeight","innerWidth","innerPaddedHeight","innerPaddedWidth","map","parseFloat","Date","date","offsetTimezone","key","entries","keys","tableData","tableColumns","minBarValue","minValueOverride","min","maxBarValue","maxValueOverride","max","scaleLinear","domain","Math","range","x0","scaleBand","x1","values","rangeRound","bandwidth","x","y0","y1","innerXAxis","innerYAxis","subTitleG","colors","colorsArray","colorArr","colorsToConvert","textures","rootSVG","scheme","disableTransitions","copy","append","rootG","gridG","labelG","legendG","tooltipG","referencesG","unitTest","updateBarWrappers","update","updateLabelWrappers","selectAll","changeSvg","selection","namespace","easing","easeCircleIn","changeRoot","changeRootG","axisAccessor","axisLabel","label","dataKeyNames","axisScale","hide","rootEle","hasXAxis","xAxisLabel","hasYAxis","yAxisLabel","markOffset","dataBoundToWrappers","enterBarWrappers","enter","exitBarWrappers","exit","merge","dataBoundToGeometries","enterSize","size","exitSize","dataBoundToLabelWrappers","enterLabelWrappers","exitLabelWrappers","dataBoundToLabels","enterLabels","exitLabels","interrupt","ordinalAxis","ordinalDimension","valueAxis","valueDimension","choice","each","_","_d","on","onClickHandler","onHoverHandler","onMouseOutHandler","clicked","hovered","baseColor","abs","p","parentNode","groupEntering","xStart","datum","xCenter","xPercent","shift","order","transition","ease","axisOfShift","dimensionOfShift","innerPaddedDimension","toUpperCase","substring","self","transform","baseVal","consolidate","matrix","e","call","focusDidExist","remove","parentGNode","geometryIsUpdating","numeric","newValue","delay","transitionEndEvent","state","inputElement","strokeWidth","fill","addCollisionClass","hideOnly","processLabelOpacity","labelsAdded","filter","labelsRemoved","bitmaps","labelSelection","avoidMarks","validPositions","offsets","accessors","removeOnly","opacity","fullBandwidth","prevOpacity","styleVisibility","style","dimensions","hasRoom","fontSize","targetOpacity","selected","selectable","Number","EPSILON","zeroScale","oneScale","breadth","changeLabelWrappers","enteringOnly","updatingOnly","runTransition","redrawBitmap","suppressMarkDraw","textHeight","collisionSettings","vertical","middle","horizontal","boundsScope","textElement","getComputedStyle","changeLabels","xScale","yScale","chartType","avoidCollision","runOccupancyBitmap","groupName","baseColorArr","type","labelKey","labels","hoverEvent","target","source","xAccessor","yAccessor","chartTag","redraw","disableKeyNav","hideDataTable","hideDataTableButton","description","geomType","includeKeyNames","dataKeys","onChangeFunc","added","removed","eventsTooltip","evt","event","isToShow","mouseOutEvent","render","drawStartEvent","theme","init","h","class","display","isInteractive","hasCousinNavigation","isCompact","exceptions","exception","window"],"sources":["src/components/clustered-bar-chart/clustered-bar-chart-default-values.ts","src/components/clustered-bar-chart/clustered-bar-chart.scss?tag=clustered-bar-chart","src/components/clustered-bar-chart/clustered-bar-chart.tsx"],"sourcesContent":["/**\n * Copyright (c) 2020, 2021, 2022, 2023 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport Utils from '@visa/visa-charts-utils';\n\nconst { propDefaultValues } = Utils;\n\nexport class ClusteredBarChartDefaultValues {\n  static readonly mainTitle = 'Clustered Bar Chart Title';\n  static readonly subTitle = propDefaultValues.subTitle.text;\n  static readonly height = 250;\n  static readonly width = 675;\n  static readonly margin = {\n    top: 400 * 0.01,\n    bottom: 400 * 0.01,\n    right: 400 * 0.01,\n    left: 400 * 0.01\n  };\n  static readonly padding = {\n    top: 20,\n    bottom: 50,\n    right: 50,\n    left: 50\n  };\n\n  static readonly localization = propDefaultValues.localization;\n\n  static readonly ordinalAccessor = 'label';\n  static readonly valueAccessor = 'value';\n  static readonly groupAccessor = 'category';\n  static readonly reverseOrder = false;\n\n  static readonly layout = propDefaultValues.layout;\n  static readonly xAxis = propDefaultValues.xAxis;\n  static readonly yAxis = propDefaultValues.yAxis;\n  static readonly wrapLabel = propDefaultValues.wrapLabel;\n\n  static readonly colorPalette = propDefaultValues.colorPaletteCategorical;\n  static readonly hoverStyle = propDefaultValues.hoverStyle;\n  static readonly clickStyle = propDefaultValues.clickStyle;\n  static readonly referenceStyle = propDefaultValues.referenceStyle;\n  static readonly cursor = propDefaultValues.cursor;\n  static readonly roundedCorner = propDefaultValues.roundedCorner;\n  static readonly barIntervalRatio = propDefaultValues.barIntervalRatio;\n  static readonly groupIntervalRatio = propDefaultValues.barIntervalRatio;\n  static readonly hoverOpacity = propDefaultValues.hoverOpacity;\n\n  static readonly dataLabel = propDefaultValues.dataLabel;\n  static readonly dataKeyNames;\n\n  static readonly legend = propDefaultValues.categoryLegend;\n  static readonly tooltipLabel = propDefaultValues.tooltipLabel;\n  static readonly showTooltip = propDefaultValues.showTooltip;\n  static readonly accessibility = propDefaultValues.accessibility;\n  static readonly animationConfig = propDefaultValues.animationConfig;\n  static readonly highestHeadingLevel = propDefaultValues.highestHeadingLevel;\n\n  static readonly referenceLines = propDefaultValues.referenceLines;\n  static readonly annotations = propDefaultValues.annotations;\n\n  static readonly clickHighlight = propDefaultValues.clickHighlight;\n  static readonly hoverHighlight;\n  static readonly suppressEvents = propDefaultValues.suppressEvents;\n}\n","/**\n * Copyright (c) 2020, 2021, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nclustered-bar-chart {\n  .annotations {\n    pointer-events: none;\n    .handle {\n      pointer-events: all;\n    }\n  }\n\n  .screen-reader-info {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n\n  .data-table-link {\n    color: #767676;\n    text-decoration: none;\n    font-size: 12px;\n    margin-left: 5%;\n  }\n\n  .hidden {\n    display: none;\n  }\n  cursor: default;\n  #visa-viz-d3-clustered-bar-container {\n    clear: both;\n  }\n\n  .clustered-bar-legend {\n    font-size: 1em;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n    .legend {\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n      margin-right: 10px;\n    }\n\n    .key-dot {\n      margin: 3px 8px;\n    }\n  }\n\n  .light {\n    .grid {\n      line {\n        stroke: #c9c9c9;\n        stroke-opacity: 1;\n        stroke-width: 0.8;\n        // shape-rendering: crispEdges;\n        // stroke-dasharray: 4, 4;\n      }\n      path {\n        stroke-width: 0;\n      }\n    }\n    .axis {\n      font-size: 12px;\n      .tick {\n        text {\n          fill: #767676;\n        }\n        line {\n          stroke: #767676;\n        }\n      }\n\n      &-label {\n        // axis label\n        text-anchor: middle;\n        font: 1rem sans-serif;\n      }\n\n      &-mark {\n        // axis mark\n        color: #949494;\n        stroke-width: 2px;\n      }\n    }\n\n    .y.axis {\n      path {\n        stroke: #767676;\n        opacity: 0;\n      }\n    }\n    .x.axis {\n      path {\n        stroke: transparent;\n      }\n    }\n  }\n  .dark {\n    .grid {\n      line {\n        stroke: lightgrey;\n        stroke-opacity: 0.7;\n        shape-rendering: crispEdges;\n      }\n      path {\n        stroke-width: 0;\n      }\n    }\n    .axis {\n      font-size: 12px;\n      .tick {\n        line {\n          stroke: lightgrey;\n        }\n        text {\n          fill: grey;\n        }\n      }\n      path {\n        stroke: black;\n      }\n\n      &-label {\n        text-anchor: middle;\n        font: 1rem sans-serif;\n      }\n    }\n    .o-layout--chart svg {\n      background: black;\n      .clustered-bar-dataLabel-vertical {\n        text-anchor: middle;\n      }\n      .clustered-bar-dataLabel-horizontal {\n        text-anchor: start;\n      }\n    }\n  }\n\n  //TBD: add color based on scheme\n  // .r.axis circle {\n  //   stroke: #cccccc;\n  //   stroke-width: 1px;\n  //   fill: none;\n  // }\n\n  //Text alignment, not impacted by color theme\n  // .a.axis text {\n  //   text-anchor: middle;\n  //   font-size: 10pt;\n  // }\n  //\n  // .r.axis text {\n  //   text-anchor: end;\n  //   font-size: 8pt;\n  // }\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport { Component, Element, Prop, Watch, h, Event, EventEmitter } from '@stencil/core';\nimport { select, event } from 'd3-selection';\nimport { max, min } from 'd3-array';\nimport { scaleBand, scaleLinear } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport { easeCircleIn } from 'd3-ease';\nimport {\n  ILocalizationType,\n  IBoxModelType,\n  IHoverStyleType,\n  IClickStyleType,\n  IAxisType,\n  IReferenceStyleType,\n  IDataLabelType,\n  ITooltipLabelType,\n  IAccessibilityType,\n  IAnimationConfig,\n  ILegendType,\n  ISubTitleType\n} from '@visa/charts-types';\nimport { ClusteredBarChartDefaultValues } from './clustered-bar-chart-default-values';\nimport 'd3-transition';\nimport Utils from '@visa/visa-charts-utils';\nimport { v4 as uuid } from 'uuid';\nconst {\n  configLocalization,\n  getGlobalInstances,\n  getActiveLanguageString,\n  verifyTextHasSpace,\n  checkAttributeTransitions,\n  createTextStrokeFilter,\n  drawHoverStrokes,\n  removeHoverStrokes,\n  buildStrokes,\n  convertColorsToTextures,\n  initializeDescriptionRoot,\n  initializeElementAccess,\n  setElementFocusHandler,\n  setElementAccessID,\n  setAccessibilityController,\n  hideNonessentialGroups,\n  setAccessTitle,\n  setAccessSubtitle,\n  setAccessLongDescription,\n  setAccessExecutiveSummary,\n  setAccessPurpose,\n  setAccessContext,\n  setAccessStatistics,\n  setAccessChartCounts,\n  setAccessXAxis,\n  setAccessYAxis,\n  setAccessStructure,\n  setAccessAnnotation,\n  retainAccessFocus,\n  checkAccessFocus,\n  setElementInteractionAccessState,\n  setAccessibilityDescriptionWidth,\n  autoTextColor,\n  annotate,\n  chartAccessors,\n  convertVisaColor,\n  checkInteraction,\n  checkClicked,\n  checkHovered,\n  drawAxis,\n  drawGrid,\n  drawLegend,\n  setLegendInteractionState,\n  drawTooltip,\n  formatDataLabel,\n  formatDate,\n  getColors,\n  getLicenses,\n  getPadding,\n  getScopedData,\n  initTooltipStyle,\n  overrideTitleTooltip,\n  placeDataLabels,\n  scopeDataKeys,\n  transitionEndAll,\n  visaColors,\n  validateAccessibilityProps,\n  validateLocalizationProps,\n  findTagLevel,\n  prepareRenderChange,\n  roundTo,\n  resolveLabelCollision,\n  setSubTitle,\n  setReferenceLine\n} = Utils;\n\n@Component({\n  tag: 'clustered-bar-chart',\n  styleUrl: 'clustered-bar-chart.scss'\n})\nexport class ClusteredBarChart {\n  @Event() clickEvent: EventEmitter;\n  @Event() hoverEvent: EventEmitter;\n  @Event() mouseOutEvent: EventEmitter;\n  @Event() initialLoadEvent: EventEmitter;\n  @Event() initialLoadEndEvent: EventEmitter;\n  @Event() drawStartEvent: EventEmitter;\n  @Event() drawEndEvent: EventEmitter;\n  @Event() transitionEndEvent: EventEmitter;\n\n  // Chart Attributes (1/7)\n  @Prop({ mutable: true }) mainTitle: string = ClusteredBarChartDefaultValues.mainTitle;\n  @Prop({ mutable: true }) subTitle: string | ISubTitleType = ClusteredBarChartDefaultValues.subTitle;\n  @Prop({ mutable: true }) height: number = ClusteredBarChartDefaultValues.height;\n  @Prop({ mutable: true }) width: number = ClusteredBarChartDefaultValues.width;\n  @Prop({ mutable: true }) layout: string = ClusteredBarChartDefaultValues.layout;\n  @Prop({ mutable: true }) margin: IBoxModelType = ClusteredBarChartDefaultValues.margin;\n  @Prop({ mutable: true }) padding: IBoxModelType = ClusteredBarChartDefaultValues.padding;\n  @Prop({ mutable: true }) highestHeadingLevel: string | number = ClusteredBarChartDefaultValues.highestHeadingLevel;\n\n  // Data (2/7)\n  @Prop() data;\n  @Prop() uniqueID;\n  @Prop({ mutable: true }) localization: ILocalizationType = ClusteredBarChartDefaultValues.localization;\n  @Prop({ mutable: true }) ordinalAccessor: string = ClusteredBarChartDefaultValues.ordinalAccessor;\n  @Prop({ mutable: true }) valueAccessor: string = ClusteredBarChartDefaultValues.valueAccessor;\n  @Prop({ mutable: true }) groupAccessor: string = ClusteredBarChartDefaultValues.groupAccessor;\n  @Prop({ mutable: true }) reverseOrder: boolean = ClusteredBarChartDefaultValues.reverseOrder;\n\n  // Axis (3/7)\n  @Prop({ mutable: true }) xAxis: IAxisType = ClusteredBarChartDefaultValues.xAxis;\n  @Prop({ mutable: true }) yAxis: IAxisType = ClusteredBarChartDefaultValues.yAxis;\n  @Prop({ mutable: true }) wrapLabel: boolean = ClusteredBarChartDefaultValues.wrapLabel;\n\n  // Color & Shape (4/7)\n  @Prop({ mutable: true }) colorPalette: string = ClusteredBarChartDefaultValues.colorPalette;\n  @Prop({ mutable: true }) colors: string[];\n  @Prop({ mutable: true }) hoverStyle: IHoverStyleType = ClusteredBarChartDefaultValues.hoverStyle;\n  @Prop({ mutable: true }) clickStyle: IClickStyleType = ClusteredBarChartDefaultValues.clickStyle;\n  @Prop({ mutable: true }) referenceStyle: IReferenceStyleType = ClusteredBarChartDefaultValues.referenceStyle;\n  @Prop({ mutable: true }) cursor: string = ClusteredBarChartDefaultValues.cursor;\n  @Prop({ mutable: true }) roundedCorner: number = ClusteredBarChartDefaultValues.roundedCorner;\n  @Prop({ mutable: true }) barIntervalRatio: number = ClusteredBarChartDefaultValues.barIntervalRatio;\n  @Prop({ mutable: true }) groupIntervalRatio: number = ClusteredBarChartDefaultValues.groupIntervalRatio;\n  @Prop({ mutable: true }) hoverOpacity: number = ClusteredBarChartDefaultValues.hoverOpacity;\n  @Prop({ mutable: true }) animationConfig: IAnimationConfig = ClusteredBarChartDefaultValues.animationConfig;\n\n  // Data label (5/7)\n  @Prop({ mutable: true }) dataLabel: IDataLabelType = ClusteredBarChartDefaultValues.dataLabel;\n  @Prop({ mutable: true }) dataKeyNames: object;\n  @Prop({ mutable: true }) showTooltip: boolean = ClusteredBarChartDefaultValues.showTooltip;\n  @Prop({ mutable: true }) tooltipLabel: ITooltipLabelType = ClusteredBarChartDefaultValues.tooltipLabel;\n  @Prop({ mutable: true }) accessibility: IAccessibilityType = ClusteredBarChartDefaultValues.accessibility;\n  @Prop({ mutable: true }) legend: ILegendType = ClusteredBarChartDefaultValues.legend;\n  @Prop({ mutable: true }) annotations: object[] = ClusteredBarChartDefaultValues.annotations;\n\n  // Calculation (6/7)\n  @Prop({ mutable: true }) minValueOverride: number;\n  @Prop({ mutable: true }) maxValueOverride: number;\n  @Prop({ mutable: true }) referenceLines: object[] = ClusteredBarChartDefaultValues.referenceLines;\n\n  // Interactivity (7/7)\n  @Prop({ mutable: true }) suppressEvents: boolean = ClusteredBarChartDefaultValues.suppressEvents;\n  @Prop({ mutable: true }) hoverHighlight: object;\n  @Prop({ mutable: true }) clickHighlight: object[] = ClusteredBarChartDefaultValues.clickHighlight;\n  @Prop({ mutable: true }) interactionKeys: string[];\n\n  // Testing & Debug (8/8)\n  @Prop() unitTest: boolean = false;\n  // @Prop() debugMode: boolean = false;\n\n  // Element\n  @Element()\n  clusteredBarChartEl: HTMLElement;\n  shouldValidateAccessibility: boolean = true;\n  shouldValidateLocalization: boolean = true;\n  svg: any;\n  root: any;\n  rootG: any;\n  barG: any;\n  gridG: any;\n  bars: any;\n  labelG: any;\n  labels: any;\n  referencesG: any;\n  defaults: boolean;\n  current: any;\n  enter: any;\n  exit: any;\n  update: any;\n  enterBarWrappers: any;\n  updateBarWrappers: any;\n  exitBarWrappers: any;\n  // vertical layout\n  x0: any;\n  x1: any;\n  y: any;\n  // horizontal layout\n  y0: any;\n  y1: any;\n  x: any;\n  innerHeight: number;\n  innerWidth: number;\n  innerPaddedHeight: number;\n  innerPaddedWidth: number;\n  innerXAxis: any;\n  innerYAxis: any;\n  nest: any = [];\n  datakeys: any = [];\n  legendData: any = [];\n  colorArr: any;\n  preparedColors: any;\n  duration: number;\n  legendG: any;\n  subTitleG: any;\n  tooltipG: any;\n  updated: boolean = true;\n  enterSize: number;\n  exitSize: number;\n  enterLabels: any;\n  exitLabels: any;\n  updateLabels: any;\n  enterLabelWrappers: any;\n  updateLabelWrappers: any;\n  exitLabelWrappers: any;\n  tableData: any;\n  tableColumns: any;\n  chartID: string;\n  innerInteractionKeys: any;\n  innerLabelAccessor: string;\n  shouldValidate: boolean = false;\n  shouldUpdateData: boolean = false;\n  shouldSetDimensions: boolean = false;\n  shouldUpdateScales: boolean = false;\n  shouldValidateAxes: boolean = false;\n  shouldUpdateAnnotations: boolean = false;\n  shouldResetRoot: boolean = false;\n  shouldUpdateTableData: boolean = false;\n  shouldSetColors: boolean = false;\n  shouldSetSubTitle: boolean = false;\n  shouldValidateLabelPlacement: boolean = false;\n  shouldValidateDataLabelAccessor: boolean = false;\n  shouldValidateInteractionKeys: boolean = false;\n  shouldSetSelectionClass: boolean = false;\n  shouldUpdateXAxis: boolean = false;\n  shouldUpdateYAxis: boolean = false;\n  shouldUpdateXGrid: boolean = false;\n  shouldUpdateYGrid: boolean = false;\n  shouldUpdateBaseline: boolean = false;\n  shouldCheckValueAxis: boolean = false;\n  shouldCheckLabelAxis: boolean = false;\n  shouldSetGlobalSelections: boolean = false;\n  shouldEnterUpdateExit: boolean = false;\n  shouldUpdateGeometries: boolean = false;\n  shouldUpdateCorners: boolean = false;\n  shouldUpdateLegendData: boolean = false;\n  shouldUpdateLegend: boolean = false;\n  shouldUpdateLegendInteractivity: boolean = false;\n  shouldSetLegendCursor: boolean = false;\n  shouldUpdateReferenceLines: boolean = false;\n  shouldUpdateCursor: boolean = false;\n  shouldDrawInteractionState: boolean = false;\n  shouldSetLabelOpacity: boolean = false;\n  shouldSetLabelPosition: boolean = false;\n  shouldSetLabelContent: boolean = false;\n  shouldCheckLabelColor: boolean = false;\n  shouldBindInteractivity: boolean = false;\n  shouldUpdateDescriptionWrapper: boolean = false;\n  shouldSetChartAccessibilityTitle: boolean = false;\n  shouldSetChartAccessibilitySubtitle: boolean = false;\n  shouldSetChartAccessibilityLongDescription: boolean = false;\n  shouldSetChartAccessibilityExecutiveSummary: boolean = false;\n  shouldSetChartAccessibilityStatisticalNotes: boolean = false;\n  shouldSetChartAccessibilityStructureNotes: boolean = false;\n  shouldSetParentSVGAccessibility: boolean = false;\n  shouldSetGeometryAccessibilityAttributes: boolean = false;\n  shouldSetGeometryAriaLabels: boolean = false;\n  shouldSetGroupAccessibilityLabel: boolean = false;\n  shouldSetChartAccessibilityPurpose: boolean = false;\n  shouldSetChartAccessibilityContext: boolean = false;\n  shouldSetTestingAttributes: boolean = false;\n  shouldRedrawWrapper: boolean = false;\n  shouldSetTagLevels: boolean = false;\n  shouldSetChartAccessibilityCount: boolean = false;\n  shouldSetYAxisAccessibility: boolean = false;\n  shouldSetXAxisAccessibility: boolean = false;\n  shouldSetAnnotationAccessibility: boolean = false;\n  shouldSetTextures: boolean = false;\n  shouldSetStrokes: boolean = false;\n  shouldSetLocalizationConfig: boolean = false;\n  strokes: any = {};\n  topLevel: string = 'h2';\n  bottomLevel: string = 'p';\n  bitmaps: any;\n\n  @Watch('data')\n  dataWatcher(_newData, _oldData) {\n    this.updated = true;\n    this.shouldUpdateData = true;\n    this.shouldSetColors = true;\n    this.shouldSetTextures = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldSetLabelContent = true;\n    this.shouldSetLabelPosition = true;\n    // this.shouldDrawInteractionState = true; // called from updateGeometries\n    // this.shouldCheckLabelColor = true; // called from updateGeometries\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateLegendData = true;\n    this.shouldUpdateScales = true;\n    this.shouldValidate = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('uniqueID')\n  idWatcher(newID, _oldID) {\n    console.error(\n      'Change detected in prop uniqueID from value ' +\n        _oldID +\n        ' to value ' +\n        newID +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.chartID = newID || 'clustered-bar-chart-' + uuid();\n    // this.clusteredBarChartEl.id = this.chartID;\n    // this.shouldValidate = true;\n    // this.shouldUpdateDescriptionWrapper = true;\n    // this.shouldSetParentSVGAccessibility = true;\n    // this.shouldDrawInteractionState = true;\n    // this.shouldUpdateLegend = true;\n    // this.shouldSetStrokes = true;\n  }\n\n  @Watch('highestHeadingLevel')\n  headingWatcher(_newVal, _oldVal) {\n    this.shouldRedrawWrapper = true;\n    this.shouldSetTagLevels = true;\n    this.shouldSetChartAccessibilityCount = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('mainTitle')\n  titleWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('subTitle')\n  subtitleWatcher(_newVal, _oldVal) {\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('height')\n  @Watch('width')\n  @Watch('padding')\n  @Watch('margin')\n  dimensionWatcher(_newVal, _oldVal) {\n    this.shouldSetDimensions = true;\n    this.shouldUpdateScales = true;\n    this.shouldResetRoot = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('layout')\n  layoutWatcher(_newVal, _oldVal) {\n    this.shouldValidateLabelPlacement = true;\n    this.shouldUpdateScales = true;\n    this.shouldValidateAxes = true;\n    this.shouldResetRoot = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetTestingAttributes = true;\n  }\n\n  @Watch('ordinalAccessor')\n  ordinalAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateLegendData = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetColors = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('valueAccessor')\n  valueAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetColors = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckValueAxis = true;\n    this.shouldValidateDataLabelAccessor = true;\n    this.shouldSetLabelContent = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n  }\n\n  @Watch('groupAccessor')\n  groupAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldCheckLabelAxis = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('reverseOrder')\n  reverseOrderWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    if (this.layout === 'vertical') {\n      this.shouldValidateAxes = true;\n      this.shouldUpdateXAxis = true;\n      this.shouldSetXAxisAccessibility = true;\n    } else if (this.layout === 'horizontal') {\n      this.shouldValidateAxes = true;\n      this.shouldUpdateYAxis = true;\n      this.shouldSetYAxisAccessibility = true;\n    }\n  }\n\n  @Watch('xAxis')\n  xAxisWatcher(_newVal, _oldVal) {\n    this.shouldValidateAxes = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateXGrid = true;\n    }\n  }\n\n  @Watch('yAxis')\n  yAxisWatcher(_newVal, _oldVal) {\n    this.shouldValidateAxes = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateYGrid = true;\n    }\n  }\n\n  @Watch('wrapLabel')\n  wrapLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n  }\n\n  @Watch('colors')\n  @Watch('colorPalette')\n  colorsWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n  }\n\n  @Watch('hoverStyle')\n  hoverStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('clickStyle')\n  clickStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('referenceLines')\n  @Watch('referenceStyle')\n  referenceWatcher(_newVal, _oldVal) {\n    this.shouldUpdateReferenceLines = true;\n  }\n\n  @Watch('cursor')\n  cursorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCursor = true;\n    this.shouldSetLegendCursor = true;\n  }\n\n  @Watch('roundedCorner')\n  cornerWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCorners = true;\n  }\n\n  @Watch('barIntervalRatio')\n  intervalRatioWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldCheckLabelAxis = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('groupIntervalRatio')\n  groupIntervalRatioWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('hoverOpacity')\n  hoverOpacityWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n  }\n\n  @Watch('dataLabel')\n  labelWatcher(_newVal, _oldVal) {\n    const newPlacementVal = _newVal && _newVal.placement ? _newVal.placement : false;\n    const oldPlacementVal = _oldVal && _oldVal.placement ? _oldVal.placement : false;\n    const newCollisionPlacementVal = _newVal && _newVal.collisionPlacement ? _newVal.collisionPlacement : false;\n    const oldCollisionPlacementVal = _oldVal && _oldVal.collisionPlacement ? _oldVal.collisionPlacement : false;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    const newAccessor = _newVal && _newVal.labelAccessor ? _newVal.labelAccessor : false;\n    const oldAccessor = _oldVal && _oldVal.labelAccessor ? _oldVal.labelAccessor : false;\n    const newFormatVal = _newVal && _newVal.format ? _newVal.format : false;\n    const oldFormatVal = _oldVal && _oldVal.format ? _oldVal.format : false;\n    const newCollisionHideOnlyVal = _newVal && _newVal.collisionHideOnly ? _newVal.collisionHideOnly : false;\n    const oldCollisionHideOnlyVal = _oldVal && _oldVal.collisionHideOnly ? _oldVal.collisionHideOnly : false;\n    // if only visible changes we just flip opacity, but don't redraw\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetLabelOpacity = true;\n    }\n    // any placement related stuff and we do a full redraw, no opacity\n    if (\n      newPlacementVal !== oldPlacementVal ||\n      newCollisionPlacementVal !== oldCollisionPlacementVal ||\n      newCollisionHideOnlyVal !== oldCollisionHideOnlyVal\n    ) {\n      this.shouldValidateLabelPlacement = true;\n      this.shouldSetLabelPosition = true;\n      this.shouldCheckLabelColor = true;\n    }\n    // text/format required redraw/table but no opacity\n    if (newAccessor !== oldAccessor || newFormatVal !== oldFormatVal) {\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldUpdateTableData = true;\n      this.shouldSetLabelContent = true;\n      this.shouldCheckLabelColor = true;\n    }\n  }\n\n  @Watch('tooltipLabel')\n  tooltipLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('accessibility')\n  accessibilityWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    const newTitle = _newVal && _newVal.title ? _newVal.title : false;\n    const oldTitle = _oldVal && _oldVal.title ? _oldVal.title : false;\n    if (newTitle !== oldTitle) {\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newExecutiveSummary = _newVal && _newVal.executiveSummary ? _newVal.executiveSummary : false;\n    const oldExecutiveSummary = _oldVal && _oldVal.executiveSummary ? _oldVal.executiveSummary : false;\n    if (newExecutiveSummary !== oldExecutiveSummary) {\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n    }\n    const newPurpose = _newVal && _newVal.purpose ? _newVal.purpose : false;\n    const oldPurpose = _oldVal && _oldVal.purpose ? _oldVal.purpose : false;\n    if (newPurpose !== oldPurpose) {\n      this.shouldSetChartAccessibilityPurpose = true;\n    }\n    const newLongDescription = _newVal && _newVal.longDescription ? _newVal.longDescription : false;\n    const oldLongDescription = _oldVal && _oldVal.longDescription ? _oldVal.longDescription : false;\n    if (newLongDescription !== oldLongDescription) {\n      this.shouldSetChartAccessibilityLongDescription = true;\n    }\n    const newContext = _newVal && _newVal.contextExplanation ? _newVal.contextExplanation : false;\n    const oldContext = _oldVal && _oldVal.contextExplanation ? _oldVal.contextExplanation : false;\n    if (newContext !== oldContext) {\n      this.shouldSetChartAccessibilityContext = true;\n    }\n    const newStatisticalNotes = _newVal && _newVal.statisticalNotes ? _newVal.statisticalNotes : false;\n    const oldStatisticalNotes = _oldVal && _oldVal.statisticalNotes ? _oldVal.statisticalNotes : false;\n    if (newStatisticalNotes !== oldStatisticalNotes) {\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n    }\n    const newStructureNotes = _newVal && _newVal.structureNotes ? _newVal.structureNotes : false;\n    const oldStructureNotes = _oldVal && _oldVal.structureNotes ? _oldVal.structureNotes : false;\n    if (newStructureNotes !== oldStructureNotes) {\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    const newincludeDataKeyNames = _newVal && _newVal.includeDataKeyNames;\n    const oldincludeDataKeyNames = _oldVal && _oldVal.includeDataKeyNames;\n    const newElementDescriptionAccessor =\n      _newVal && _newVal.elementDescriptionAccessor ? _newVal.elementDescriptionAccessor : false;\n    const oldElementDescriptionAccessor =\n      _oldVal && _oldVal.elementDescriptionAccessor ? _oldVal.elementDescriptionAccessor : false;\n    if (\n      newincludeDataKeyNames !== oldincludeDataKeyNames ||\n      newElementDescriptionAccessor !== oldElementDescriptionAccessor\n    ) {\n      if (newincludeDataKeyNames !== oldincludeDataKeyNames) {\n        // this one is tricky because it needs to run after the lifecycle\n        // AND it could run in the off-chance this prop is changed\n        this.shouldSetGroupAccessibilityLabel = true;\n      }\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newTextures = _newVal && _newVal.hideTextures ? _newVal.hideTextures : false;\n    const oldTextures = _oldVal && _oldVal.hideTextures ? _oldVal.hideTextures : false;\n    if (newTextures !== oldTextures) {\n      this.shouldSetTextures = true;\n      this.shouldUpdateLegend = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newSmallValue = _newVal && _newVal.showSmallLabels ? _newVal.showSmallLabels : false;\n    const oldSmallValue = _oldVal && _oldVal.showSmallLabels ? _oldVal.showSmallLabels : false;\n    if (newSmallValue !== oldSmallValue) {\n      this.shouldSetLabelOpacity = true;\n    }\n    const newStrokes = _newVal && _newVal.hideStrokes ? _newVal.hideStrokes : false;\n    const oldStrokes = _oldVal && _oldVal.hideStrokes ? _oldVal.hideStrokes : false;\n    if (newStrokes !== oldStrokes) {\n      this.shouldUpdateLegend = true;\n      this.shouldSetStrokes = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newKeyNav =\n      _newVal && _newVal.keyboardNavConfig && _newVal.keyboardNavConfig.disabled\n        ? _newVal.keyboardNavConfig.disabled\n        : false;\n    const oldKeyNav =\n      _oldVal && _oldVal.keyboardNavConfig && _oldVal.keyboardNavConfig.disabled\n        ? _oldVal.keyboardNavConfig.disabled\n        : false;\n    const newInterface = _newVal && _newVal.elementsAreInterface ? _newVal.elementsAreInterface : false;\n    const oldInterface = _oldVal && _oldVal.elementsAreInterface ? _oldVal.elementsAreInterface : false;\n    if (newKeyNav !== oldKeyNav || newInterface !== oldInterface) {\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetChartAccessibilitySubtitle = true;\n      this.shouldSetChartAccessibilityLongDescription = true;\n      this.shouldSetChartAccessibilityContext = true;\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n      this.shouldSetChartAccessibilityPurpose = true;\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    if (newInterface !== oldInterface) {\n      this.shouldDrawInteractionState = true;\n    }\n  }\n\n  @Watch('legend')\n  legendWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLegend = true;\n    const newInteractiveVal = _newVal && _newVal.interactive;\n    const oldInteractiveVal = _oldVal && _oldVal.interactive;\n    if (newInteractiveVal !== oldInteractiveVal) {\n      this.shouldSetLegendCursor = true;\n      this.shouldUpdateLegendInteractivity = true;\n    }\n  }\n\n  @Watch('localization')\n  localizationWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n\n    // language\n    const newLanguage = _newVal && _newVal.language ? _newVal.language : false;\n    const oldLanguage = _oldVal && _oldVal.language ? _oldVal.language : false;\n    if (newLanguage !== oldLanguage) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldSetLabelContent = true;\n      this.shouldCheckLabelColor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n\n    // numeralLocale\n    const newNumeralLocale = _newVal && _newVal.numeralLocale ? _newVal.numeralLocale : false;\n    const oldNumeralLocale = _oldVal && _oldVal.numeralLocale ? _oldVal.numeralLocale : false;\n    if (newNumeralLocale !== oldNumeralLocale) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldSetLabelContent = true;\n      this.shouldCheckLabelColor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n  }\n\n  @Watch('annotations')\n  annotationsWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetAnnotationAccessibility = true;\n  }\n\n  @Watch('maxValueOverride')\n  @Watch('minValueOverride')\n  valueOverrideWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldCheckValueAxis = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('clickHighlight')\n  clickWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetSelectionClass = true;\n  }\n\n  @Watch('hoverHighlight')\n  hoverWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n  }\n\n  @Watch('interactionKeys')\n  interactionWatcher(_newVal, _oldVal) {\n    this.shouldValidateInteractionKeys = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('dataKeyNames')\n  dataKeyNamesWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('suppressEvents')\n  suppressWatcher(_newVal, _oldVal) {\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldSetLegendCursor = true;\n    this.shouldUpdateLegendInteractivity = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldRedrawWrapper = true;\n    this.shouldValidate = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('unitTest')\n  unitTestWatcher(_newVal, _oldVal) {\n    this.shouldSetTestingAttributes = true;\n  }\n\n  componentWillLoad() {\n    const chartID = this.uniqueID || 'clustered-bar-chart-' + uuid();\n    this.initialLoadEvent.emit({ chartID: chartID });\n    // contrary to componentWillUpdate, this method appears safe to use for\n    // any calculations we need. Keeping them here reduces future refactor,\n    // since componentWillUpdate should eventually mirror this method\n    return new Promise(resolve => {\n      this.duration = 0;\n      this.defaults = true;\n      this.chartID = chartID;\n      this.clusteredBarChartEl.id = this.chartID;\n      this.setLocalizationConfig();\n      this.setTagLevels();\n      this.prepareData();\n      this.prepareLegendData();\n      this.setDimensions();\n      this.prepareScales();\n      this.validateInteractionKeys();\n      this.validateDataLabelAccessor();\n      this.validateAxes();\n      this.validateLabelPlacement();\n      this.setTableData();\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.setColors();\n      resolve('component will load');\n    });\n  }\n\n  componentWillUpdate() {\n    // NEVER put items in this method that rely on props (until stencil bug is resolved)\n    // All items that belong here are currently at the top of render\n    // see: https://github.com/ionic-team/stencil/issues/2061#issuecomment-578282178\n    return new Promise(resolve => {\n      resolve('component will update');\n    });\n  }\n\n  componentDidLoad() {\n    return new Promise(resolve => {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.renderRootElements();\n      this.setTooltipInitialStyle();\n      this.setChartDescriptionWrapper();\n      this.setChartAccessibilityTitle();\n      this.setChartAccessibilitySubtitle();\n      this.setChartAccessibilityLongDescription();\n      this.setChartAccessibilityExecutiveSummary();\n      this.setChartAccessibilityPurpose();\n      this.setChartAccessibilityContext();\n      this.setChartAccessibilityStatisticalNotes();\n      this.setChartAccessibilityStructureNotes();\n      this.setParentSVGAccessibility();\n      this.reSetRoot();\n      this.setTextures();\n      this.setStrokes();\n      this.setSubTitleElements();\n      this.drawXGrid();\n      this.drawYGrid();\n      this.setGlobalSelections();\n      this.setTestingAttributes();\n      this.enterGeometries();\n      this.updateGeometries();\n      this.exitGeometries();\n      this.enterDataLabels();\n      this.updateDataLabels();\n      this.exitDataLabels();\n      this.drawGeometries();\n      this.setChartCountAccessibility();\n      this.setGeometryAccessibilityAttributes();\n      this.setGeometryAriaLabels();\n      this.drawLegendElements();\n      this.bindLegendInteractivity();\n      this.setLabelContent();\n      this.processLabelPosition(this.updateLabels, false, true, false);\n      this.drawReferenceLines();\n      this.setSelectedClass();\n      this.checkLabelColorAgainstBackground();\n      this.updateCursor();\n      this.bindInteractivity();\n      this.drawAnnotations();\n      this.setAnnotationAccessibility();\n      this.drawXAxis();\n      this.setXAxisAccessibility();\n      this.drawYAxis();\n      this.setYAxisAccessibility();\n      this.drawBaseline();\n      this.onChangeHandler();\n\n      // we want to hide all child <g> of this.root BUT we want to make sure not to hide the\n      // parent<g> that contains our geometries! In a subGroup chart (like stacked bars),\n      // we want to pass the PARENT of all the <g>s that contain bars\n      hideNonessentialGroups(this.root.node(), this.barG.node());\n      this.setGroupAccessibilityID();\n      this.defaults = false;\n\n      // catch all to remove entering class from labels once we have loaded component\n      this.updateLabels.classed('entering', false);\n      resolve('component did load');\n    }).then(() => this.initialLoadEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  componentDidUpdate() {\n    return new Promise(resolve => {\n      this.duration = !this.animationConfig || !this.animationConfig.disabled ? 750 : 0;\n      if (this.shouldUpdateDescriptionWrapper) {\n        this.setChartDescriptionWrapper();\n        this.shouldUpdateDescriptionWrapper = false;\n      }\n      if (this.shouldSetChartAccessibilityCount) {\n        this.setChartCountAccessibility();\n        this.shouldSetChartAccessibilityCount = false;\n      }\n      if (this.shouldSetChartAccessibilityTitle) {\n        this.setChartAccessibilityTitle();\n        this.shouldSetChartAccessibilityTitle = false;\n      }\n      if (this.shouldSetChartAccessibilitySubtitle) {\n        this.setChartAccessibilitySubtitle();\n        this.shouldSetChartAccessibilitySubtitle = false;\n      }\n      if (this.shouldSetChartAccessibilityLongDescription) {\n        this.setChartAccessibilityLongDescription();\n        this.shouldSetChartAccessibilityLongDescription = false;\n      }\n      if (this.shouldSetChartAccessibilityExecutiveSummary) {\n        this.setChartAccessibilityExecutiveSummary();\n        this.shouldSetChartAccessibilityExecutiveSummary = false;\n      }\n      if (this.shouldSetChartAccessibilityPurpose) {\n        this.setChartAccessibilityPurpose();\n        this.shouldSetChartAccessibilityPurpose = false;\n      }\n      if (this.shouldSetChartAccessibilityContext) {\n        this.setChartAccessibilityContext();\n        this.shouldSetChartAccessibilityContext = false;\n      }\n      if (this.shouldSetChartAccessibilityStatisticalNotes) {\n        this.setChartAccessibilityStatisticalNotes();\n        this.shouldSetChartAccessibilityStatisticalNotes = false;\n      }\n      if (this.shouldSetChartAccessibilityStructureNotes) {\n        this.setChartAccessibilityStructureNotes();\n        this.shouldSetChartAccessibilityStructureNotes = false;\n      }\n      if (this.shouldSetParentSVGAccessibility) {\n        this.setParentSVGAccessibility();\n        this.shouldSetParentSVGAccessibility = false;\n      }\n      if (this.shouldResetRoot) {\n        this.reSetRoot();\n        this.shouldResetRoot = false;\n      }\n      if (this.shouldSetTextures) {\n        this.setTextures();\n        this.shouldSetTextures = false;\n      }\n      if (this.shouldSetStrokes) {\n        this.setStrokes();\n        this.shouldSetStrokes = false;\n      }\n      if (this.shouldSetGlobalSelections) {\n        this.setGlobalSelections();\n        this.shouldSetGlobalSelections = false;\n      }\n      if (this.shouldSetTestingAttributes) {\n        this.setTestingAttributes();\n        this.shouldSetTestingAttributes = false;\n      }\n      if (this.shouldSetSubTitle) {\n        this.setSubTitleElements();\n        this.shouldSetSubTitle = false;\n      }\n      if (this.shouldUpdateXGrid) {\n        this.drawXGrid();\n        this.shouldUpdateXGrid = false;\n      }\n      if (this.shouldUpdateYGrid) {\n        this.drawYGrid();\n        this.shouldUpdateYGrid = false;\n      }\n      if (this.shouldEnterUpdateExit) {\n        this.enterGeometries();\n        this.updateGeometries();\n        this.exitGeometries();\n        this.enterDataLabels();\n        this.updateDataLabels();\n        this.exitDataLabels();\n        this.shouldEnterUpdateExit = false;\n      }\n      if (this.shouldUpdateGeometries) {\n        this.drawGeometries();\n        this.shouldUpdateGeometries = false;\n      }\n      if (this.shouldSetGeometryAccessibilityAttributes) {\n        this.setGeometryAccessibilityAttributes();\n        this.shouldSetGeometryAccessibilityAttributes = false;\n      }\n      if (this.shouldSetGeometryAriaLabels) {\n        this.setGeometryAriaLabels();\n        this.shouldSetGeometryAriaLabels = false;\n      }\n      if (this.shouldSetGroupAccessibilityLabel) {\n        this.setGroupAccessibilityID();\n        this.shouldSetGroupAccessibilityLabel = false;\n      }\n      if (this.shouldUpdateCorners) {\n        this.setRoundedCorners();\n        this.shouldUpdateCorners = false;\n      }\n      if (this.shouldUpdateLegend) {\n        this.drawLegendElements();\n        this.shouldUpdateLegend = false;\n      }\n      if (this.shouldSetLabelContent) {\n        this.setLabelContent();\n        this.shouldSetLabelContent = false;\n      }\n      if (this.shouldSetLabelPosition) {\n        this.setLabelPosition();\n        this.shouldSetLabelPosition = false;\n      }\n      if (this.shouldUpdateReferenceLines) {\n        this.drawReferenceLines();\n        this.shouldUpdateReferenceLines = false;\n      }\n      if (this.shouldDrawInteractionState) {\n        this.updateInteractionState();\n        this.shouldDrawInteractionState = false;\n      }\n      if (this.shouldSetLabelOpacity) {\n        this.setLabelOpacity();\n        this.shouldSetLabelOpacity = false;\n      }\n      if (this.shouldCheckLabelColor) {\n        this.checkLabelColorAgainstBackground();\n        this.shouldCheckLabelColor = false;\n      }\n      if (this.shouldSetSelectionClass) {\n        this.setSelectedClass();\n        this.shouldSetSelectionClass = false;\n      }\n      if (this.shouldUpdateLegendInteractivity) {\n        this.bindLegendInteractivity();\n        this.shouldUpdateLegendInteractivity = false;\n      }\n      if (this.shouldSetLegendCursor) {\n        this.setLegendCursor();\n        this.shouldSetLegendCursor = false;\n      }\n      if (this.shouldUpdateCursor) {\n        this.updateCursor();\n        this.shouldUpdateCursor = false;\n      }\n      if (this.shouldBindInteractivity) {\n        this.bindInteractivity();\n        this.shouldBindInteractivity = false;\n      }\n      if (this.shouldUpdateAnnotations) {\n        this.drawAnnotations();\n        this.shouldUpdateAnnotations = false;\n      }\n      if (this.shouldSetAnnotationAccessibility) {\n        this.setAnnotationAccessibility();\n        this.shouldSetAnnotationAccessibility = false;\n      }\n      if (this.shouldUpdateXAxis) {\n        this.drawXAxis();\n        this.shouldUpdateXAxis = false;\n      }\n      if (this.shouldSetXAxisAccessibility) {\n        this.setXAxisAccessibility();\n        this.shouldSetXAxisAccessibility = false;\n      }\n      if (this.shouldUpdateYAxis) {\n        this.drawYAxis();\n        this.shouldUpdateYAxis = false;\n      }\n      if (this.shouldSetYAxisAccessibility) {\n        this.setYAxisAccessibility();\n        this.shouldSetYAxisAccessibility = false;\n      }\n      if (this.shouldUpdateBaseline) {\n        this.drawBaseline();\n        this.shouldUpdateBaseline = false;\n      }\n      this.onChangeHandler();\n      this.updateLabels.classed('entering', false);\n      resolve('component did update');\n    }).then(() => this.drawEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  shouldValidateLocalizationProps() {\n    const windowInstances = getGlobalInstances();\n    const languageString = windowInstances.i18Next.language;\n    const languageObject = windowInstances.i18Next.getResourceBundle(languageString);\n    const numeralObject = windowInstances.numeral.localeData();\n    if (this.shouldValidateLocalization && !this.localization.skipValidation) {\n      this.shouldValidateLocalization = false;\n      validateLocalizationProps(this.chartID, {\n        ...this.localization,\n        language: languageObject,\n        numeralLocale: numeralObject\n      });\n    }\n  }\n\n  shouldValidateAccessibilityProps() {\n    if (this.shouldValidateAccessibility && !this.accessibility.disableValidation) {\n      this.shouldValidateAccessibility = false;\n      validateAccessibilityProps(\n        this.chartID,\n        { ...this.accessibility },\n        {\n          annotations: this.annotations,\n          data: this.data,\n          uniqueID: this.uniqueID,\n          context: {\n            mainTitle: this.mainTitle,\n            onClickEvent: !this.suppressEvents ? this.clickEvent.emit : undefined\n          }\n        }\n      );\n    }\n  }\n\n  validateInteractionKeys() {\n    this.innerInteractionKeys =\n      this.interactionKeys && this.interactionKeys.length ? this.interactionKeys : [this.ordinalAccessor];\n  }\n\n  validateDataLabelAccessor() {\n    this.innerLabelAccessor = this.dataLabel.labelAccessor ? this.dataLabel.labelAccessor : this.valueAccessor;\n  }\n\n  validateLabelPlacement() {\n    // check data label placement assignment based on layout\n    if (this.layout === 'vertical') {\n      if (\n        this.dataLabel.placement !== 'top' &&\n        this.dataLabel.placement !== 'bottom' &&\n        this.dataLabel.placement !== 'auto'\n      ) {\n        this.dataLabel.placement = 'top';\n      }\n    } else {\n      if (\n        this.dataLabel.placement !== 'right' &&\n        this.dataLabel.placement !== 'left' &&\n        this.dataLabel.placement !== 'auto'\n      ) {\n        this.dataLabel.placement = 'right';\n      }\n    }\n  }\n\n  getLanguageString() {\n    return getActiveLanguageString(this.localization);\n  }\n\n  setLocalizationConfig() {\n    configLocalization(this.localization);\n  }\n\n  setDimensions() {\n    this.padding = typeof this.padding === 'string' ? getPadding(this.padding) : this.padding;\n\n    // before we render/load we need to set our height and width based on props\n    this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n    this.innerWidth = this.width - this.margin.left - this.margin.right;\n\n    this.innerPaddedHeight = this.innerHeight - this.padding.top - this.padding.bottom;\n    this.innerPaddedWidth = this.innerWidth - this.padding.left - this.padding.right;\n  }\n\n  prepareData() {\n    // check data format & offset time object\n    this.data.map(d => {\n      d[this.valueAccessor] = parseFloat(d[this.valueAccessor]);\n      d[this.groupAccessor] =\n        d[this.groupAccessor] instanceof Date\n          ? formatDate({\n              date: d[this.groupAccessor],\n              format: this.layout === 'vertical' ? this.xAxis.format : this.yAxis.format,\n              offsetTimezone: true\n            })\n          : d[this.groupAccessor];\n    });\n\n    this.nest = nest()\n      .key(d => d[this.groupAccessor])\n      .entries(this.data);\n\n    // Get all item categories\n    this.datakeys = this.nest.map(d => d.key);\n  }\n\n  setTableData() {\n    // generate scoped and formatted data for data-table component\n    const keys = scopeDataKeys(this, chartAccessors, 'clustered-bar-chart');\n    this.tableData = getScopedData(this.data, keys);\n    this.tableColumns = Object.keys(keys);\n  }\n\n  prepareScales() {\n    const minBarValue =\n      this.minValueOverride && this.minValueOverride < min(this.data, d => d[this.valueAccessor])\n        ? this.minValueOverride\n        : min(this.data, d => d[this.valueAccessor]);\n\n    const maxBarValue =\n      this.maxValueOverride && this.maxValueOverride > max(this.data, d => d[this.valueAccessor])\n        ? this.maxValueOverride\n        : max(this.data, d => d[this.valueAccessor]);\n\n    // scale band based on layout of chart\n    if (this.layout === 'vertical') {\n      this.y = scaleLinear()\n        .domain([Math.min(0, minBarValue), Math.max(0, maxBarValue)])\n        .range([this.innerPaddedHeight, 0]);\n\n      this.x0 = scaleBand()\n        .domain(this.datakeys)\n        .range(this.reverseOrder ? [this.innerPaddedWidth, 0] : [0, this.innerPaddedWidth])\n        .padding(this.groupIntervalRatio);\n\n      this.x1 = scaleBand()\n        .domain(this.nest[0].values.map(d => d[this.ordinalAccessor]))\n        .rangeRound([0, this.x0.bandwidth()])\n        .padding(this.barIntervalRatio);\n    } else if (this.layout === 'horizontal') {\n      this.x = scaleLinear()\n        .domain([Math.min(0, minBarValue), Math.max(0, maxBarValue)])\n        .range([0, this.innerPaddedWidth]);\n\n      this.y0 = scaleBand()\n        .domain(this.datakeys)\n        .range(this.reverseOrder ? [this.innerPaddedHeight, 0] : [0, this.innerPaddedHeight])\n        .padding(this.groupIntervalRatio);\n\n      this.y1 = scaleBand()\n        .domain(this.nest[0].values.map(d => d[this.ordinalAccessor]))\n        .rangeRound([0, this.y0.bandwidth()])\n        .padding(this.barIntervalRatio);\n    }\n  }\n\n  validateAxes() {\n    // check whether we are going to display axis and then update props\n    this.innerXAxis = { ...this.xAxis, gridVisible: !(this.layout === 'vertical') && this.xAxis.gridVisible };\n    this.innerYAxis = { ...this.yAxis, gridVisible: this.layout === 'vertical' && this.yAxis.gridVisible };\n  }\n\n  setSubTitleElements() {\n    setSubTitle({\n      root: this.subTitleG,\n      subTitle: this.subTitle\n    });\n  }\n\n  setColors() {\n    this.preparedColors = this.colors\n      ? convertVisaColor(this.colors)\n      : getColors(this.colorPalette, this.nest[0].values.length);\n  }\n\n  setTextures() {\n    const colorsArray = this.preparedColors.range ? this.preparedColors.range() : this.preparedColors;\n    if (this.accessibility.hideTextures || colorsArray.length > 6) {\n      this.colorArr = this.preparedColors;\n    } else {\n      const colorsToConvert = colorsArray;\n      const textures = convertColorsToTextures({\n        colors: colorsToConvert,\n        rootSVG: this.svg.node(),\n        id: this.chartID,\n        scheme: 'categorical',\n        disableTransitions: !this.duration\n      });\n      this.colorArr = this.preparedColors.range ? this.preparedColors.copy().range(textures) : textures;\n    }\n  }\n\n  setStrokes() {\n    this.strokes = buildStrokes({\n      root: this.svg.node(),\n      id: this.chartID,\n      colors: this.preparedColors.range ? this.preparedColors.range() : this.preparedColors,\n      clickStyle: this.clickStyle,\n      hoverStyle: this.hoverStyle\n    });\n  }\n\n  renderRootElements() {\n    this.svg = select(this.clusteredBarChartEl)\n      .select('.visa-viz-d3-clustered-bar-container')\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    this.root = this.svg.append('g').attr('id', 'visa-viz-margin-container-g-' + this.chartID);\n    this.rootG = this.root.append('g').attr('id', 'visa-viz-padding-container-g-' + this.chartID);\n\n    this.gridG = this.rootG.append('g').attr('class', 'grid-group');\n    this.barG = this.rootG.append('g').attr('class', 'clustered-bar-group');\n\n    this.labelG = this.rootG.append('g').attr('class', 'clustered-bar-dataLabel-group');\n\n    this.legendG = select(this.clusteredBarChartEl)\n      .select('.clustered-bar-legend')\n      .append('svg');\n\n    this.subTitleG = select(this.clusteredBarChartEl).select('.clustered-bar-sub-title');\n    this.tooltipG = select(this.clusteredBarChartEl).select('.clustered-bar-tooltip');\n\n    this.referencesG = this.rootG.append('g').attr('class', 'clustered-bar-reference-line-group');\n  }\n\n  setTestingAttributes() {\n    if (this.unitTest) {\n      select(this.clusteredBarChartEl)\n        .select('.visa-viz-d3-clustered-bar-container')\n        .attr('data-testid', 'chart-container');\n      select(this.clusteredBarChartEl)\n        .select('.clustered-bar-main-title')\n        .attr('data-testid', 'main-title');\n      select(this.clusteredBarChartEl)\n        .select('.clustered-bar-sub-title')\n        .attr('data-testid', 'sub-title');\n\n      this.svg.attr('data-testid', 'root-svg');\n      this.root.attr('data-testid', 'margin-container');\n      this.rootG.attr('data-testid', 'padding-container');\n      this.legendG.attr('data-testid', 'legend-container');\n      this.tooltipG.attr('data-testid', 'tooltip-container');\n\n      this.barG.attr('data-testid', 'clustered-bar-group');\n      this.updateBarWrappers\n        .attr('data-testid', 'clustered-bar-wrapper')\n        .attr('data-id', d => `clustered-bar-wrapper-${d.key}`);\n      this.update\n        .attr('data-testid', 'bar')\n        .attr('data-id', d => `bar-${d[this.groupAccessor]}-${d[this.ordinalAccessor]}`);\n\n      this.labelG.attr('data-testid', 'clustered-bar-dataLabel-group');\n      this.updateLabelWrappers\n        .attr('data-testid', 'clustered-bar-dataLabel-wrapper')\n        .attr('data-id', d => `clustered-bar-dataLabel-wrapper-${d.key}`);\n      this.updateLabels\n        .attr('data-testid', 'dataLabel')\n        .attr('data-id', d => `dataLabel-${d[this.groupAccessor]}-${d[this.ordinalAccessor]}`);\n\n      this.referencesG.attr('data-testid', 'reference-line-group');\n      this.svg.select('defs').attr('data-testid', 'pattern-defs');\n\n      // reference lines do not have global selections\n      this.referencesG.selectAll('.clustered-bar-reference-line').attr('data-testid', 'reference-line');\n\n      this.referencesG.selectAll('.clustered-bar-reference-line-label').attr('data-testid', 'reference-line-label');\n    } else {\n      select(this.clusteredBarChartEl)\n        .select('.visa-viz-d3-clustered-bar-container')\n        .attr('data-testid', null);\n      select(this.clusteredBarChartEl)\n        .select('.clustered-bar-main-title')\n        .attr('data-testid', null);\n      select(this.clusteredBarChartEl)\n        .select('.clustered-bar-sub-title')\n        .attr('data-testid', null);\n      this.svg.attr('data-testid', null);\n      this.root.attr('data-testid', null);\n      this.rootG.attr('data-testid', null);\n      this.legendG.attr('data-testid', null);\n      this.tooltipG.attr('data-testid', null);\n\n      this.barG.attr('data-testid', null);\n      this.updateBarWrappers.attr('data-testid', null).attr('data-id', null);\n      this.update.attr('data-testid', null).attr('data-id', null);\n\n      this.labelG.attr('data-testid', null);\n      this.updateLabelWrappers.attr('data-testid', null).attr('data-id', null);\n      this.updateLabels.attr('data-testid', null).attr('data-id', null);\n\n      this.referencesG.attr('data-testid', null);\n      this.svg.select('defs').attr('data-testid', null);\n\n      // reference lines do not have global selections\n      this.referencesG.selectAll('.clustered-bar-reference-line').attr('data-testid', null);\n\n      this.referencesG.selectAll('.clustered-bar-reference-line-label').attr('data-testid', null);\n    }\n  }\n\n  // reset graph size based on window size\n  reSetRoot() {\n    const changeSvg = prepareRenderChange({\n      selection: this.svg,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeSvg\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    const changeRoot = prepareRenderChange({\n      selection: this.root,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRoot.attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n\n    const changeRootG = prepareRenderChange({\n      selection: this.rootG,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRootG.attr('transform', `translate(${this.padding.left}, ${this.padding.top})`);\n\n    setAccessibilityDescriptionWidth(this.chartID, this.width);\n  }\n\n  // draw axis line\n  drawXAxis() {\n    const axisAccessor = this.layout === 'vertical' ? this.groupAccessor : this.valueAccessor;\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.xAxis.label;\n\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.layout === 'vertical' ? this.x0 : this.x,\n      left: false,\n      wrapLabel: this.wrapLabel && this.layout === 'vertical' ? this.x0.bandwidth() : '',\n      format: this.xAxis.format,\n      tickInterval: this.xAxis.tickInterval,\n      label: axisLabel, // this.xAxis.label,\n      padding: this.padding,\n      hide: !this.innerXAxis.visible,\n      duration: this.duration\n    });\n  }\n\n  drawYAxis() {\n    const axisAccessor = this.layout === 'vertical' ? this.valueAccessor : this.groupAccessor;\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.yAxis.label;\n\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.layout === 'vertical' ? this.y : this.y0,\n      left: true,\n      wrapLabel: this.wrapLabel ? this.padding.left || 100 : '',\n      format: this.yAxis.format,\n      tickInterval: this.yAxis.tickInterval,\n      label: axisLabel, // this.yAxis.label,\n      padding: this.padding,\n      hide: !this.innerYAxis.visible,\n      duration: this.duration\n    });\n  }\n\n  setXAxisAccessibility() {\n    const axisAccessor = this.layout === 'vertical' ? this.groupAccessor : this.valueAccessor;\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.xAxis.label;\n\n    setAccessXAxis({\n      rootEle: this.clusteredBarChartEl,\n      hasXAxis: this.innerXAxis ? this.innerXAxis.visible : false,\n      xAxis: this.layout === 'vertical' ? this.x0 || false : this.x || false, // this is optional for some charts, if hasXAxis is always false\n      xAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasXAxis is always false\n    });\n  }\n\n  setYAxisAccessibility() {\n    const axisAccessor = this.layout === 'vertical' ? this.valueAccessor : this.groupAccessor;\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.yAxis.label;\n\n    setAccessYAxis({\n      rootEle: this.clusteredBarChartEl,\n      hasYAxis: this.innerYAxis ? this.innerYAxis.visible : false,\n      yAxis: this.layout === 'vertical' ? this.y || false : this.y0 || false, // this is optional for some charts, if hasXAxis is always false\n      yAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasXAxis is always false\n    });\n  }\n\n  drawBaseline() {\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.layout === 'vertical' ? this.x0 : this.x,\n      left: false,\n      padding: this.padding,\n      markOffset: this.layout === 'vertical' ? this.y(0) || -1 : this.y0(0) || -1,\n      hide: !(this.layout === 'vertical'),\n      duration: this.duration\n    });\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.layout === 'vertical' ? this.y : this.y0,\n      left: true,\n      padding: this.padding,\n      markOffset: this.layout === 'vertical' ? this.x0(0) || -1 : this.x(0) || -1,\n      hide: this.layout === 'vertical',\n      duration: this.duration\n    });\n  }\n\n  // dashed line grid for chart\n  drawXGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.layout === 'vertical' ? this.x0 : this.x,\n      false,\n      !this.innerXAxis.gridVisible,\n      this.xAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  drawYGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.layout === 'vertical' ? this.y : this.y0,\n      true,\n      !this.innerYAxis.gridVisible,\n      this.yAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  setGlobalSelections() {\n    const dataBoundToWrappers = this.barG.selectAll('.clustered-bar-wrapper').data(this.nest, d => d.key);\n\n    this.enterBarWrappers = dataBoundToWrappers.enter().append('g');\n    this.exitBarWrappers = dataBoundToWrappers.exit();\n    this.updateBarWrappers = dataBoundToWrappers.merge(this.enterBarWrappers);\n\n    const dataBoundToGeometries = this.updateBarWrappers\n      .selectAll('.clustered-bar')\n      .data(d => d.values, d => d[this.ordinalAccessor]);\n\n    this.enter = dataBoundToGeometries.enter().append('rect');\n    this.exit = dataBoundToGeometries.exit();\n    this.update = dataBoundToGeometries.merge(this.enter);\n\n    this.enterSize = this.enter.size();\n    this.exitSize = this.exit.size();\n\n    const dataBoundToLabelWrappers = this.labelG.selectAll('g').data(this.nest, d => d.key);\n\n    this.enterLabelWrappers = dataBoundToLabelWrappers.enter().append('g');\n    this.exitLabelWrappers = dataBoundToLabelWrappers.exit();\n    this.updateLabelWrappers = dataBoundToLabelWrappers.merge(this.enterLabelWrappers);\n\n    const dataBoundToLabels = this.updateLabelWrappers\n      .selectAll('text')\n      .data(d => d.values, d => d[this.ordinalAccessor]);\n    this.enterLabels = dataBoundToLabels.enter().append('text');\n    this.exitLabels = dataBoundToLabels.exit();\n    this.updateLabels = dataBoundToLabels.merge(this.enterLabels);\n    // this.labels\n  }\n\n  enterGeometries() {\n    this.enter.interrupt();\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    const choice = this.layout === 'vertical' ? 'max' : 'min';\n\n    this.enterBarWrappers\n      .attr('class', 'clustered-bar-wrapper')\n      .classed('entering', true)\n      .attr('transform', d =>\n        this.layout === 'vertical' ? 'translate(' + this.x0(d.key) + ',0)' : 'translate(0,' + this.y0(d.key) + ')'\n      )\n      .each((_, i, n) => {\n        initializeElementAccess(n[i]);\n      });\n\n    this.enter\n      .attr('class', 'clustered-bar')\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .attr('rx', this.roundedCorner)\n      .attr('ry', this.roundedCorner)\n      .each((_d, i, n) => {\n        initializeElementAccess(n[i]);\n      })\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .attr('fill', (d, i) => {\n        const clicked =\n          this.clickHighlight &&\n          this.clickHighlight.length > 0 &&\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n        const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n        const baseColor = this.colorArr[i];\n        return clicked && this.clickStyle.color\n          ? visaColors[this.clickStyle.color] || this.clickStyle.color\n          : clicked\n          ? baseColor\n          : hovered && this.hoverStyle.color\n          ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n          : baseColor;\n      })\n      .attr('opacity', 0)\n      .attr(valueAxis, d => this[valueAxis](Math[choice](0, d[this.valueAccessor])))\n      .attr(\n        valueDimension,\n        d =>\n          Math.abs(\n            this.layout === 'vertical'\n              ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n              : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n          ) || 0.000001 // avoiding getBBox dimension and coordinates issues\n      )\n      .attr(ordinalAxis, d => this[ordinalAxis + '1'](d[this.ordinalAccessor]))\n      .attr(ordinalDimension, this[ordinalAxis + '1'].bandwidth());\n\n    if (!this.defaults) {\n      this.enter\n        .classed('entering', true)\n        .attr(ordinalAxis, (d, i, n) => {\n          const p = select(n[i].parentNode);\n          const groupEntering = p.classed('entering');\n          let xStart = groupEntering\n            ? this[ordinalAxis + '0'](p.datum().key)\n            : this[ordinalAxis + '1'](d[this.ordinalAccessor]);\n          const xCenter = groupEntering\n            ? this[ordinalAxis + '0'].bandwidth() / 2\n            : this[ordinalAxis + '1'].bandwidth() / 2;\n          const xPercent = (xStart + xCenter) / (this.innerPaddedWidth / 2);\n          xStart = groupEntering ? 0 : xStart;\n          const shift = xStart + xCenter * xPercent;\n          return shift;\n        })\n        .attr(ordinalDimension, 0);\n    }\n    this.enterBarWrappers.order();\n    this.enter.order();\n  }\n\n  updateGeometries() {\n    this.update.interrupt();\n\n    this.update\n      .transition('opacity')\n      .duration((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          select(n[i]).classed('entering', false);\n          return this.duration;\n        }\n        return 0;\n      })\n      .ease(easeCircleIn)\n      .attr('opacity', d =>\n        checkInteraction(d, 1, this.hoverOpacity, this.hoverHighlight, this.clickHighlight, this.innerInteractionKeys)\n      );\n  }\n\n  exitGeometries() {\n    this.exitBarWrappers.interrupt();\n    this.exit.interrupt();\n\n    const axisOfShift = this.layout === 'vertical' ? 'x' : 'y';\n    const dimensionOfShift = this.layout === 'vertical' ? 'width' : 'height';\n    const innerPaddedDimension = 'innerPadded' + dimensionOfShift[0].toUpperCase() + dimensionOfShift.substring(1);\n\n    this.exit\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .attr(axisOfShift, (_d, i, n) => {\n        const self = select(n[i]);\n        let shift = +self.attr(axisOfShift) + +self.attr(dimensionOfShift) / 2;\n        shift =\n          +self.attr(axisOfShift) + (+self.attr(dimensionOfShift) / 2) * (shift / (this[innerPaddedDimension] / 2));\n        return shift;\n      })\n      .attr(dimensionOfShift, 0);\n\n    this.exitSize += this.exitBarWrappers.selectAll('.clustered-bar').size();\n\n    this.exitBarWrappers\n      .selectAll('.clustered-bar')\n      .transition('exit_wrappers')\n      .duration(this.duration * 0.75)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .attr(axisOfShift, (_, i, n) => {\n        const p = n[i].parentNode;\n        const xStart = p.transform.baseVal.consolidate().matrix.e;\n        const xCenter = this[axisOfShift + '0'].bandwidth() / 2;\n        const xPercent = (xStart + xCenter) / (this[innerPaddedDimension] / 2);\n        const shift = xCenter * xPercent;\n        return shift;\n      })\n      .attr(dimensionOfShift, 0);\n\n    this.update\n      .transition('accessibilityAfterExit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        // before we exit geometries, we need to check if a focus exists or not\n        const focusDidExist = checkAccessFocus(this.rootG.node());\n        // then we must remove the exiting elements\n        this.exit.remove();\n        this.exitBarWrappers.remove();\n        // then our util can count geometries\n        this.setChartCountAccessibility();\n        // our group's label should update with new counts too\n        this.setGroupAccessibilityID();\n        // since items exited, labels must receive updated values\n        this.setGeometryAriaLabels();\n        // and also make sure the user's focus isn't lost\n        retainAccessFocus({\n          parentGNode: this.rootG.node(),\n          focusDidExist\n          // recursive: true\n        });\n      });\n  }\n\n  drawGeometries() {\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    const choice = this.layout === 'vertical' ? 'max' : 'min';\n\n    this.updateBarWrappers\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('transform', d =>\n        this.layout === 'vertical' ? 'translate(' + this.x0(d.key) + ',0)' : 'translate(0,' + this.y0(d.key) + ')'\n      )\n      .call(transitionEndAll, () => {\n        this.updateBarWrappers.classed('entering', false);\n      });\n\n    this.update\n      .classed('geometryIsMoving', (d, i, n) => {\n        const geometryIsUpdating = checkAttributeTransitions(select(n[i]), [\n          {\n            attr: ordinalAxis,\n            numeric: true,\n            newValue: this[ordinalAxis + '1'](d[this.ordinalAccessor])\n          },\n          {\n            attr: ordinalDimension,\n            numeric: true,\n            newValue: this[ordinalAxis + '1'].bandwidth()\n          },\n          {\n            attr: valueAxis,\n            numeric: true,\n            newValue: this[valueAxis](Math[choice](0, d[this.valueAccessor])) // this.y(d[this.valueAccessor]))\n          },\n          {\n            attr: valueDimension,\n            numeric: true,\n            newValue:\n              Math.abs(\n                this.layout === 'vertical'\n                  ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n                  : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n              ) || 0.000001\n          }\n        ]);\n        return geometryIsUpdating;\n      })\n      .attr(\n        `data-${ordinalAxis}`,\n        d =>\n          this.layout === 'vertical'\n            ? this[ordinalAxis + '1'](d[this.ordinalAccessor]) //+ this.x0(d[this.groupAccessor])\n            : this[ordinalAxis + '1'](d[this.ordinalAccessor]) //+ this.y0(d[this.groupAccessor])\n      )\n      .attr(\n        `data-translate-x`,\n        d => (this.layout === 'vertical' ? this.x0(d[this.groupAccessor]) : 0) + this.padding.left + this.margin.left\n      )\n      .attr(\n        `data-translate-y`,\n        d => (this.layout === 'vertical' ? 0 : this.y0(d[this.groupAccessor])) + this.padding.top + this.margin.top\n      )\n      .attr(`data-${ordinalDimension}`, this[ordinalAxis + '1'].bandwidth())\n      .attr(`data-${valueAxis}`, d => this[valueAxis](Math[choice](0, d[this.valueAccessor])))\n      .attr(\n        `data-${valueDimension}`,\n        d =>\n          Math.abs(\n            this.layout === 'vertical'\n              ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n              : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n          ) || 0.000001\n      )\n      .transition('update')\n      .duration((_, i, n) => {\n        return select(n[i]).classed('entering') ? this.duration / 2 : this.duration;\n      })\n      .delay((_, i, n) => {\n        return select(n[i]).classed('entering') ? this.duration / 2 : 0;\n      })\n      .ease(easeCircleIn)\n      .attr(valueAxis, d => this[valueAxis](Math[choice](0, d[this.valueAccessor])))\n      .attr(\n        valueDimension,\n        d =>\n          Math.abs(\n            this.layout === 'vertical'\n              ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n              : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n          ) || 0.000001\n      )\n      .attr(ordinalAxis, d => this[ordinalAxis + '1'](d[this.ordinalAccessor]))\n      .attr(ordinalDimension, this[ordinalAxis + '1'].bandwidth())\n      .call(transitionEndAll, () => {\n        this.update.classed('geometryIsMoving', false);\n\n        this.updateInteractionState();\n        this.checkLabelColorAgainstBackground();\n        // we must make sure if geometries move, that our focus indicator does too\n        retainAccessFocus({\n          parentGNode: this.rootG.node()\n        });\n        // now we can emit the event that transitions are complete\n        this.transitionEndEvent.emit({ chartID: this.chartID });\n      });\n  }\n\n  updateInteractionState() {\n    removeHoverStrokes(this.svg.node());\n    // we created an \"opacity\" transition namespace in update's transition\n    // we override it here to instantly display opacity state (below)\n    this.update.interrupt('opacity');\n\n    // we use this.update and this.updateLabels from setGlobalSelection here\n    // the lifecycle state does not matter (enter/update/exit)\n    // since interaction state can happen at any time\n    // first we address interaction state on marks/bars\n    this.update\n      .attr('opacity', d =>\n        checkInteraction(d, 1, this.hoverOpacity, this.hoverHighlight, this.clickHighlight, this.innerInteractionKeys)\n      )\n      .attr('fill', (d, i) => {\n        const clicked =\n          this.clickHighlight &&\n          this.clickHighlight.length > 0 &&\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n        const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n        const baseColor = this.colorArr[i];\n        return clicked && this.clickStyle.color\n          ? visaColors[this.clickStyle.color] || this.clickStyle.color\n          : clicked\n          ? baseColor\n          : hovered && this.hoverStyle.color\n          ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n          : baseColor;\n      })\n      .attr('filter', (d, i, n) => {\n        if (!this.accessibility.hideStrokes && !select(n[i]).classed('geometryIsMoving')) {\n          const clicked =\n            this.clickHighlight &&\n            this.clickHighlight.length > 0 &&\n            checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n          const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n          const baseColor = this.preparedColors[i];\n          const state = clicked ? 'click' : hovered && !select(n[i]).classed('geometryIsMoving') ? 'hover' : 'rest';\n          const color =\n            clicked && this.clickStyle.color\n              ? visaColors[this.clickStyle.color] || this.clickStyle.color\n              : clicked\n              ? baseColor\n              : hovered && this.hoverStyle.color\n              ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n              : baseColor;\n          if (state === 'hover') {\n            drawHoverStrokes({\n              inputElement: n[i],\n              id: this.chartID,\n              key: d[this.ordinalAccessor] + d[this.groupAccessor],\n              strokeWidth: this.hoverStyle.strokeWidth,\n              fill: color\n            });\n          }\n          return this.strokes[state + color];\n        }\n        return null;\n      });\n    retainAccessFocus({\n      parentGNode: this.rootG.node()\n    });\n\n    // then we set the legend interactive state\n    setLegendInteractionState({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.ordinalAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.hoverStyle,\n      clickStyle: this.clickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n\n    // and lastly we have to check for labels, especially when auto placement is in place\n    this.updateLabels.interrupt('opacity');\n    const addCollisionClass = this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly;\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n\n    this.processLabelOpacity(this.updateLabels, addCollisionClass);\n\n    // if we have collision on, we need to update the bitmap on interaction\n    if (addCollisionClass) {\n      const labelsAdded = this.updateLabels.filter((_, i, n) => select(n[i]).classed('collision-added'));\n      const labelsRemoved = this.updateLabels\n        .filter((_, i, n) => select(n[i]).classed('collision-removed'))\n        .attr('data-use-dx', hideOnly) // need to add this for remove piece of collision below\n        .attr('data-use-dy', hideOnly); // .transition().duration(0);\n\n      // we can now remove labels as well if we need to...\n      if (labelsRemoved.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsRemoved,\n          avoidMarks: [],\n          validPositions: ['middle'],\n          offsets: [1],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n          hideOnly: false,\n          removeOnly: true\n        });\n\n        // remove temporary class now\n        labelsRemoved.classed('collision-removed', false);\n      }\n\n      // we can now add labels as well if we need to...\n      if (labelsAdded.size() > 0) {\n        this.processLabelPosition(labelsAdded, false, false, true);\n        // remove temporary class now\n        labelsAdded.classed('collision-added', false);\n      }\n    }\n  }\n\n  setLabelOpacity() {\n    this.processLabelOpacity(this.updateLabels);\n  }\n\n  processLabelOpacity(selection, addCollisionClass?) {\n    const opacity = this.dataLabel.visible ? 1 : 0;\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    const fullBandwidth = this[ordinalAxis + '0'].bandwidth() / this.nest[0].values.length;\n\n    selection.attr('opacity', (d, i, n) => {\n      const prevOpacity = +select(n[i]).attr('opacity');\n      const styleVisibility = select(n[i]).style('visibility');\n      const dimensions = {};\n      dimensions[ordinalDimension] =\n        this.dataLabel.placement === 'left' || this.dataLabel.placement === 'bottom'\n          ? this[ordinalAxis + '1'].bandwidth()\n          : fullBandwidth;\n      if (this.dataLabel.placement === 'left' || this.dataLabel.placement === 'bottom') {\n        dimensions[valueDimension] = Math.abs(\n          this.layout === 'vertical'\n            ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n            : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n        );\n      }\n      const hasRoom =\n        this.dataLabel.placement === 'auto' ||\n        this.dataLabel.collisionHideOnly ||\n        this.accessibility.showSmallLabels ||\n        verifyTextHasSpace({\n          text: formatDataLabel(d, this.innerLabelAccessor, this.dataLabel.format),\n          dimensions,\n          fontSize: 14\n        });\n      const targetOpacity = hasRoom\n        ? checkInteraction(\n            d,\n            opacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n          ? 0\n          : 1\n        : 0;\n      if (\n        ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n        addCollisionClass\n      ) {\n        if (targetOpacity === 1) {\n          select(n[i])\n            .classed('collision-added', true)\n            .style('visibility', null);\n        } else {\n          select(n[i]).classed('collision-removed', true);\n        }\n      }\n      return targetOpacity;\n    });\n  }\n\n  checkLabelColorAgainstBackground() {\n    this.updateLabels.attr('fill', (d, i, n) => {\n      return this.textTreatmentHandler(d, i, n);\n    });\n  }\n\n  setRoundedCorners() {\n    this.update\n      .transition('corners')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('rx', this.roundedCorner)\n      .attr('ry', this.roundedCorner);\n  }\n\n  textTreatmentHandler = (d, i, n) => {\n    const me = select(n[i]);\n    const bgColor =\n      this.clickHighlight &&\n      this.clickHighlight.length > 0 &&\n      checkClicked(d, this.clickHighlight, this.innerInteractionKeys) &&\n      this.clickStyle.color\n        ? visaColors[this.clickStyle.color] || this.clickStyle.color\n        : this.hoverHighlight &&\n          checkHovered(d, this.hoverHighlight, this.innerInteractionKeys) &&\n          this.hoverStyle.color\n        ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n        : this.preparedColors[i];\n\n    const autoPlacementBackgroundColor =\n      this.dataLabel.placement === 'auto' // can ignore this for collisionHideOnly\n        ? this.layout === 'vertical'\n          ? (this.dataLabel.collisionPlacement === 'top' && me.attr('data-baseline') !== 'bottom') ||\n            (this.dataLabel.collisionPlacement === 'middle' && me.attr('data-baseline') !== 'bottom') ||\n            (this.dataLabel.collisionPlacement === 'bottom' &&\n              me.attr('data-baseline') === 'bottom' &&\n              ((d[this.valueAccessor] >= 0 && this.y(0) - this.y(d[this.valueAccessor]) > 20) ||\n                (d[this.valueAccessor] < 0 && this.y(0) - this.y(d[this.valueAccessor]) < -20))) // if bottom we can check against baseline value of 0, helps to handle charts with negative values\n          : (this.dataLabel.collisionPlacement === 'right' && me.attr('data-align') !== 'left') ||\n            (this.dataLabel.collisionPlacement === 'middle' && me.attr('data-align') !== 'left') ||\n            (this.dataLabel.collisionPlacement === 'left' && me.attr('data-align') !== 'right')\n        : false;\n    const color =\n      autoPlacementBackgroundColor || this.dataLabel.placement === 'bottom' || this.dataLabel.placement === 'left'\n        ? autoTextColor(bgColor)\n        : visaColors.dark_text;\n    me.attr(\n      'filter',\n      !me.classed('textIsMoving')\n        ? createTextStrokeFilter({\n            root: this.svg.node(),\n            id: this.chartID,\n            color:\n              autoPlacementBackgroundColor ||\n              this.dataLabel.placement === 'bottom' ||\n              this.dataLabel.placement === 'left'\n                ? bgColor\n                : '#ffffff'\n          })\n        : null\n    );\n    return color;\n  };\n\n  setSelectedClass() {\n    this.update.classed('highlight', (d, i, n) => {\n      let selected = checkInteraction(d, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n      selected = this.clickHighlight && this.clickHighlight.length ? selected : false;\n      const selectable = this.accessibility.elementsAreInterface;\n      setElementInteractionAccessState(n[i], selected, selectable);\n      return selected;\n    });\n  }\n\n  updateCursor() {\n    this.update.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    this.updateLabels.attr('cursor', !this.suppressEvents ? this.cursor : null);\n  }\n\n  enterDataLabels() {\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const opacity = this.dataLabel.visible ? 1 : 0;\n\n    this.enterLabelWrappers\n      .attr('class', 'clustered-bar-label-wrapper')\n      .classed('entering', true)\n      .attr('transform', d =>\n        this.layout === 'vertical' ? 'translate(' + this.x0(d.key) + ',0)' : 'translate(0,' + this.y0(d.key) + ')'\n      );\n\n    this.enterLabels\n      .attr('class', 'clustered-bar-dataLabel')\n      .classed('entering', true)\n      .classed('clustered-bar-dataLabel-horizontal', false)\n      .classed('clustered-bar-dataLabel-vertical', false)\n      .classed('clustered-bar-dataLabel-' + this.layout, true)\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .attr('opacity', d =>\n        checkInteraction(\n          d,\n          opacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        ) < 1\n          ? 0\n          : Number.EPSILON\n      )\n      .attr('fill', this.textTreatmentHandler)\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    this.enterLabels.attr(ordinalAxis, (d, i, n) => {\n      const zeroScale = ordinalAxis + '0';\n      const oneScale = ordinalAxis + '1';\n      const breadth = ordinalAxis === 'x' ? 'innerPaddedWidth' : 'innerPaddedHeight';\n      const p = select(n[i].parentNode);\n      const groupEntering = p.classed('entering');\n      let xStart = groupEntering ? this[zeroScale](p.datum().key) : this[oneScale](d[this.ordinalAccessor]);\n      const xCenter = groupEntering ? this[zeroScale].bandwidth() / 2 : this[oneScale].bandwidth() / 2;\n      const xPercent = (xStart + xCenter) / (this[breadth] / 2);\n      xStart = groupEntering ? 0 : xStart;\n      const shift = xStart + xCenter * xPercent;\n      return shift;\n    });\n  }\n\n  updateDataLabels() {\n    this.updateLabels.interrupt();\n    const opacity = this.dataLabel.visible ? 1 : 0;\n\n    this.updateLabels\n      .transition('opacity')\n      .duration((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          // select(n[i]).classed('entering', false);\n          return this.duration / 4;\n        }\n        return 0;\n      })\n      .delay((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          // select(n[i]).classed('entering', false);\n          return (this.duration / 4) * 3;\n        }\n        return 0;\n      })\n      .ease(easeCircleIn)\n      .attr('opacity', d =>\n        checkInteraction(\n          d,\n          opacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        ) < 1\n          ? 0\n          : 1\n      )\n      .call(transitionEndAll, () => {\n        this.updateLabels.classed('entering', false);\n        // this.checkLabelColorAgainstBackground();\n      });\n  }\n\n  exitDataLabels() {\n    this.exitLabelWrappers\n      .selectAll('text')\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 3)\n      .attr('opacity', 0)\n      .call(transitionEndAll, () => {\n        this.exitLabelWrappers.remove();\n      });\n\n    this.exitLabels\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 3)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  setLabelContent() {\n    this.updateLabels.text(d => formatDataLabel(d, this.innerLabelAccessor, this.dataLabel.format));\n  }\n\n  setLabelPosition() {\n    // position the label wrappers with/without transition\n    this.updateLabelWrappers\n      .classed('clustered-bar-dataLabel-horizontal', false)\n      .classed('clustered-bar-dataLabel-vertical', false)\n      .classed('clustered-bar-dataLabel-' + this.layout, true);\n\n    const changeLabelWrappers = prepareRenderChange({\n      selection: this.updateLabelWrappers,\n      duration: this.duration,\n      namespace: 'position-label-wrappers',\n      easing: easeCircleIn\n    });\n\n    changeLabelWrappers\n      .attr('transform', d =>\n        this.layout === 'vertical' ? 'translate(' + this.x0(d.key) + ',0)' : 'translate(0,' + this.y0(d.key) + ')'\n      )\n      .call(transitionEndAll, () => {\n        this.updateLabelWrappers.classed('entering', false);\n      });\n\n    // we have to run this filter as there are times when enter/update will one another's nodes in them.\n    const enteringOnly = this.enterLabels.filter((_, i, n) => {\n      return select(n[i]).classed('entering');\n    });\n    const updatingOnly = this.updateLabels.filter((_, i, n) => {\n      return !select(n[i]).classed('entering');\n    });\n\n    // if we have enter and update we need to process them separately\n    // enter with no transition, update with transition\n    // the transition is the main reason we need to do this.\n    if (enteringOnly.size() > 0) {\n      this.processLabelPosition(enteringOnly, false, true, false);\n      this.processLabelPosition(updatingOnly, true, false, true);\n    } else {\n      // otherwise we can just process update and do it all in one step with transition\n      // doing this all at once saves processing time from calling resolveLabelCollision less\n      this.processLabelPosition(updatingOnly, true, true, false);\n    }\n  }\n\n  processLabelPosition(selection, runTransition?, redrawBitmap?, suppressMarkDraw?) {\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    const choice = this.layout === 'vertical' ? 'max' : 'min';\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n    let textHeight = 15; // default label is usually 15\n    const collisionSettings = {\n      vertical: {\n        top: {\n          validPositions: ['top', 'bottom'],\n          offsets: [4, 1]\n        },\n        middle: {\n          validPositions: ['middle', 'top'],\n          offsets: [1, textHeight / 2]\n        },\n        bottom: {\n          validPositions: ['middle', 'top'],\n          offsets: [1, textHeight / 2]\n        }\n      },\n      horizontal: {\n        right: {\n          validPositions: ['right', 'left'],\n          offsets: [4, 8]\n        },\n        middle: {\n          validPositions: ['middle', 'right'],\n          offsets: [1, 15]\n        },\n        left: {\n          validPositions: ['left', 'right'],\n          offsets: [1, 20]\n        }\n      }\n    };\n\n    const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n    const boundsScope =\n      collisionPlacement && collisionSettings[this.layout][collisionPlacement] // check whether placement provided maps correctly\n        ? this.dataLabel.collisionPlacement\n        : this.layout === 'vertical'\n        ? 'top' // if we don't have collisionPlacement\n        : 'right';\n\n    // prep the data- attributes for label collision algorithm\n    // only needs to be run if we are running collision though\n    selection\n      .style('visibility', (_, i, n) =>\n        this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly\n          ? select(n[i]).style('visibility')\n          : null\n      )\n      .attr(`data-${ordinalAxis}`, (d, i, n) => {\n        if (i === 0) {\n          // we just need to check this on one element\n          const textElement = n[i];\n          const style = getComputedStyle(textElement);\n          const fontSize = parseFloat(style.fontSize);\n          textHeight = Math.max(fontSize - 1, 1); // clone.getBBox().height;\n        }\n\n        return this[ordinalAxis + '1'](d[this.ordinalAccessor]);\n      })\n      .attr(\n        `data-translate-x`,\n        d => (this.layout === 'vertical' ? this.x0(d[this.groupAccessor]) : 0) + this.padding.left + this.margin.left\n      )\n      .attr(\n        `data-translate-y`,\n        d => (this.layout === 'vertical' ? 0 : this.y0(d[this.groupAccessor])) + this.padding.top + this.margin.top\n      )\n      .attr(`data-${ordinalDimension}`, this[ordinalAxis + '1'].bandwidth())\n      .attr(`data-${valueAxis}`, d => this[valueAxis](Math[choice](0, d[this.valueAccessor])))\n      .attr(\n        `data-${valueDimension}`,\n        d =>\n          Math.abs(\n            this.layout === 'vertical'\n              ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n              : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n          ) || 0.000001\n      );\n\n    // we use prepareRenderChange to use or not use .transition()\n    // immediate - label enter and interaction effects\n    // transition - update effects (e.g., data change)\n    const changeLabels = prepareRenderChange({\n      selection: selection,\n      duration: !runTransition ? 0 : this.duration,\n      namespace: 'position-labels',\n      easing: easeCircleIn\n    });\n\n    this.bitmaps = placeDataLabels({\n      root: changeLabels,\n      xScale: this.layout === 'vertical' ? this.x1 : this.x,\n      yScale: this.layout === 'vertical' ? this.y : this.y1,\n      ordinalAccessor: this.ordinalAccessor,\n      valueAccessor: this.valueAccessor,\n      placement: this.dataLabel.placement,\n      layout: this.layout,\n      chartType: 'bar',\n      avoidCollision: {\n        runOccupancyBitmap: this.dataLabel.visible && this.dataLabel.placement === 'auto',\n        bitmaps: !redrawBitmap ? this.bitmaps : undefined,\n        labelSelection: changeLabels,\n        avoidMarks: [this.update],\n        validPositions: hideOnly ? ['middle'] : collisionSettings[this.layout][boundsScope].validPositions,\n        offsets: hideOnly ? [1] : collisionSettings[this.layout][boundsScope].offsets,\n        accessors: [this.groupAccessor, this.ordinalAccessor, 'key'], // key is created for lines by nesting done in line,\n        size: [roundTo(this.width, 0), roundTo(this.height, 0)], // for some reason the bitmap needs width instead of inner padded width here\n        boundsScope: hideOnly ? undefined : boundsScope,\n        hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly,\n        suppressMarkDraw: suppressMarkDraw\n      }\n    });\n  }\n\n  drawReferenceLines() {\n    setReferenceLine({\n      groupName: 'cluster',\n      root: this.referencesG,\n      referenceLines: this.referenceLines,\n      referenceStyle: this.referenceStyle,\n      innerPaddedWidth: this.innerPaddedWidth,\n      innerPaddedHeight: this.innerPaddedHeight,\n      duration: this.duration,\n      layout: this.layout,\n      x: this.x,\n      y: this.y,\n      unitTest: this.unitTest\n    });\n  }\n\n  prepareLegendData() {\n    this.legendData = this.nest[0].values;\n  }\n\n  drawLegendElements() {\n    drawLegend({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      width: this.innerPaddedWidth,\n      height: this.margin.top + 20,\n      colorArr: this.colorArr,\n      baseColorArr: this.preparedColors,\n      hideStrokes: this.accessibility.hideStrokes,\n      margin: this.margin,\n      padding: this.padding,\n      duration: this.duration,\n      type: 'bar',\n      fontSize: 16,\n      data: this.legendData,\n      labelKey: this.ordinalAccessor,\n      label: this.legend.labels,\n      hide: !this.legend.visible,\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.ordinalAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.hoverStyle,\n      clickStyle: this.clickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  bindLegendInteractivity() {\n    select(this.clusteredBarChartEl)\n      .selectAll('.legend')\n      .style('cursor', this.legend.interactive && !this.suppressEvents ? this.cursor : '')\n      .on('click', this.legend.interactive && !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on(\n        'mouseover',\n        this.legend.interactive && !this.suppressEvents\n          ? (d, i, n) => {\n              this.hoverEvent.emit({ data: d, target: n[i] });\n            }\n          : null\n      )\n      .on('mouseout', this.legend.interactive && !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  setLegendCursor() {\n    select(this.clusteredBarChartEl)\n      .selectAll('.legend')\n      .style('cursor', this.legend.interactive && !this.suppressEvents ? this.cursor : null);\n  }\n\n  bindInteractivity() {\n    this.update\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    this.updateLabels\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  drawAnnotations() {\n    annotate({\n      source: this.rootG.node(),\n      data: this.annotations,\n      xScale: this.layout !== 'horizontal' ? this.x0 : this.x,\n      xAccessor: this.layout !== 'horizontal' ? this.groupAccessor : this.valueAccessor,\n      yScale: this.layout !== 'horizontal' ? this.y : this.y0,\n      yAccessor: this.layout !== 'horizontal' ? this.valueAccessor : this.groupAccessor,\n      width: this.width,\n      height: this.height,\n      padding: this.padding,\n      margin: this.margin,\n      bitmaps: this.bitmaps\n    });\n  }\n\n  setAnnotationAccessibility() {\n    setAccessAnnotation(this.getLanguageString(), this.clusteredBarChartEl, this.annotations, this.referenceLines);\n  }\n\n  // new accessibility functions added here\n  setTagLevels() {\n    this.topLevel = findTagLevel(this.highestHeadingLevel);\n    this.bottomLevel = findTagLevel(this.highestHeadingLevel, 3);\n  }\n\n  setChartDescriptionWrapper() {\n    initializeDescriptionRoot({\n      language: this.getLanguageString(),\n      rootEle: this.clusteredBarChartEl,\n      title: this.accessibility.title || this.mainTitle,\n      chartTag: 'clustered-bar-chart',\n      uniqueID: this.chartID,\n      highestHeadingLevel: this.highestHeadingLevel,\n      redraw: this.shouldRedrawWrapper,\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      hideDataTable: this.accessibility.hideDataTableButton\n    });\n    this.shouldRedrawWrapper = false;\n  }\n\n  setParentSVGAccessibility() {\n    setAccessibilityController({\n      chartTag: 'clustered-bar-chart',\n      language: this.getLanguageString(),\n      node: this.svg.node(),\n      title: this.accessibility.title || this.mainTitle,\n      description: this.subTitle,\n      uniqueID: this.chartID,\n      geomType: 'bar',\n      includeKeyNames: this.accessibility.includeDataKeyNames,\n      dataKeys: scopeDataKeys(this, chartAccessors, 'clustered-bar-chart'),\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.groupAccessor,\n      groupName: 'cluster',\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled\n      // groupKeys: [],\n      // nested: '',\n      // recursive: true\n    });\n  }\n\n  setGeometryAccessibilityAttributes() {\n    this.update.each((_d, i, n) => {\n      initializeElementAccess(n[i]);\n    });\n  }\n\n  setGeometryAriaLabels() {\n    const keys = scopeDataKeys(this, chartAccessors, 'clustered-bar-chart');\n    this.update.each((_d, i, n) => {\n      setElementFocusHandler({\n        chartTag: 'clustered-bar-chart',\n        language: this.getLanguageString(),\n        node: n[i],\n        geomType: 'bar',\n        includeKeyNames: this.accessibility.includeDataKeyNames,\n        dataKeys: keys,\n        dataKeyNames: this.dataKeyNames,\n        groupName: 'cluster',\n        uniqueID: this.chartID,\n        disableKeyNav:\n          this.suppressEvents &&\n          this.accessibility.elementsAreInterface === false &&\n          this.accessibility.keyboardNavConfig &&\n          this.accessibility.keyboardNavConfig.disabled\n      });\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setGroupAccessibilityID() {\n    this.updateBarWrappers.each((_, i, n) => {\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setChartAccessibilityTitle() {\n    setAccessTitle(this.getLanguageString(), this.clusteredBarChartEl, this.accessibility.title || this.mainTitle);\n  }\n\n  setChartAccessibilitySubtitle() {\n    setAccessSubtitle(this.getLanguageString(), this.clusteredBarChartEl, this.subTitle);\n  }\n\n  setChartAccessibilityLongDescription() {\n    setAccessLongDescription(this.getLanguageString(), this.clusteredBarChartEl, this.accessibility.longDescription);\n  }\n\n  setChartAccessibilityExecutiveSummary() {\n    setAccessExecutiveSummary(this.getLanguageString(), this.clusteredBarChartEl, this.accessibility.executiveSummary);\n  }\n\n  setChartAccessibilityPurpose() {\n    setAccessPurpose(this.getLanguageString(), this.clusteredBarChartEl, this.accessibility.purpose);\n  }\n\n  setChartAccessibilityContext() {\n    setAccessContext(this.getLanguageString(), this.clusteredBarChartEl, this.accessibility.contextExplanation);\n  }\n\n  setChartAccessibilityStatisticalNotes() {\n    setAccessStatistics(this.getLanguageString(), this.clusteredBarChartEl, this.accessibility.statisticalNotes);\n  }\n\n  setChartCountAccessibility() {\n    setAccessChartCounts({\n      rootEle: this.clusteredBarChartEl,\n      parentGNode: this.barG.node(), // pass the wrapper to <g> or geometries here, should be single node selection\n      chartTag: 'clustered-bar-chart',\n      geomType: 'bar',\n      groupName: 'cluster'\n      // recursive: true\n    });\n  }\n\n  setChartAccessibilityStructureNotes() {\n    setAccessStructure(this.getLanguageString(), this.clusteredBarChartEl, this.accessibility.structureNotes);\n  }\n  // new accessibility stuff ends here\n\n  onChangeHandler() {\n    if (this.accessibility && typeof this.accessibility.onChangeFunc === 'function') {\n      const d = {\n        updated: this.updated,\n        added: this.enterSize,\n        removed: this.exitSize\n      };\n      this.accessibility.onChangeFunc(d);\n    }\n    this.updated = false;\n    this.enterSize = 0;\n    this.exitSize = 0;\n  }\n\n  onClickHandler(d, n) {\n    this.clickEvent.emit({ data: d, target: n });\n  }\n\n  onHoverHandler(d, n) {\n    overrideTitleTooltip(this.chartID, true);\n    this.hoverEvent.emit({ data: d, target: n });\n    if (this.showTooltip && d[this.ordinalAccessor]) {\n      this.eventsTooltip({ data: d, evt: event, isToShow: true });\n    }\n  }\n\n  onMouseOutHandler() {\n    overrideTitleTooltip(this.chartID, false);\n    this.mouseOutEvent.emit();\n    if (this.showTooltip) {\n      this.eventsTooltip({ isToShow: false });\n    }\n  }\n\n  // set initial style (instead of copying css class across the lib)\n  setTooltipInitialStyle() {\n    initTooltipStyle(this.tooltipG);\n  }\n\n  // tooltip\n  eventsTooltip({ data, evt, isToShow }: { data?: any; evt?: any; isToShow: boolean }) {\n    drawTooltip({\n      root: this.tooltipG,\n      data,\n      event: evt,\n      isToShow,\n      tooltipLabel: this.tooltipLabel,\n      xAxis: this.xAxis,\n      yAxis: this.yAxis,\n      dataLabel: this.dataLabel,\n      dataKeyNames: this.dataKeyNames,\n      layout: this.layout,\n      ordinalAccessor: this.groupAccessor, // on purpose - to match tooltip util format\n      groupAccessor: this.ordinalAccessor, // on purpose - to match tooltip util format\n      valueAccessor: this.valueAccessor,\n      chartType: 'clustered'\n    });\n  }\n\n  render() {\n    this.drawStartEvent.emit({ chartID: this.chartID });\n    // hardcoded theme to light until we add this functionality\n    const theme = 'light';\n\n    // everything between this comment and the third should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n    this.init();\n    if (this.shouldSetLocalizationConfig) {\n      this.setLocalizationConfig();\n      this.shouldSetLocalizationConfig = false;\n    }\n    if (this.shouldSetTagLevels) {\n      this.setTagLevels();\n      this.shouldSetTagLevels = false;\n    }\n    if (this.shouldCheckValueAxis) {\n      if (this.layout === 'horizontal') {\n        this.shouldUpdateXAxis = true;\n        this.shouldUpdateXGrid = true;\n      } else if (this.layout === 'vertical') {\n        this.shouldUpdateYAxis = true;\n        this.shouldUpdateYGrid = true;\n      }\n      this.shouldCheckValueAxis = false;\n    }\n    if (this.shouldCheckLabelAxis) {\n      if (this.layout === 'vertical') {\n        this.shouldUpdateXAxis = true;\n        this.shouldUpdateXGrid = true;\n        this.shouldSetXAxisAccessibility = true;\n      } else if (this.layout === 'horizontal') {\n        this.shouldUpdateYAxis = true;\n        this.shouldUpdateYGrid = true;\n        this.shouldSetYAxisAccessibility = true;\n      }\n      this.shouldCheckLabelAxis = false;\n    }\n    if (this.shouldUpdateData) {\n      this.prepareData();\n      this.shouldUpdateData = false;\n    }\n    if (this.shouldUpdateLegendData) {\n      this.prepareLegendData();\n      this.shouldUpdateLegendData = false;\n    }\n    if (this.shouldSetDimensions) {\n      this.setDimensions();\n      this.shouldSetDimensions = false;\n    }\n    if (this.shouldUpdateScales) {\n      this.prepareScales();\n      this.shouldUpdateScales = false;\n    }\n    if (this.shouldValidateInteractionKeys) {\n      this.validateInteractionKeys();\n      this.shouldValidateInteractionKeys = false;\n    }\n    if (this.shouldValidateDataLabelAccessor) {\n      this.validateDataLabelAccessor();\n      this.shouldValidateDataLabelAccessor = false;\n    }\n    if (this.shouldValidateAxes) {\n      this.validateAxes();\n      this.shouldValidateAxes = false;\n    }\n    if (this.shouldUpdateTableData) {\n      this.setTableData();\n      this.shouldUpdateTableData = false;\n    }\n    if (this.shouldValidate) {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.shouldValidate = false;\n    }\n    if (this.shouldSetColors) {\n      this.setColors();\n      this.shouldSetColors = false;\n    }\n    if (this.shouldValidateLabelPlacement) {\n      this.validateLabelPlacement();\n      this.shouldValidateLabelPlacement = false;\n    }\n    // Everything between this comment and the first should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n\n    return (\n      <div class={`o-layout is--${this.layout} ${theme}`}>\n        <div class=\"o-layout--chart\">\n          <this.topLevel class=\"clustered-bar-main-title vcl-main-title\">{this.mainTitle}</this.topLevel>\n          <this.bottomLevel class=\"visa-ui-text--instructions clustered-bar-sub-title vcl-sub-title\" />\n          <div class=\"clustered-bar-legend vcl-legend\" style={{ display: this.legend.visible ? 'block' : 'none' }} />\n          <keyboard-instructions\n            uniqueID={this.chartID}\n            geomType={'bar'}\n            groupName={'cluster'} // taken from initializeDescriptionRoot, on bar this should be \"bar group\", stacked bar is \"stack\", and clustered is \"cluster\"\n            language={this.getLanguageString()}\n            chartTag={'clustered-bar-chart'}\n            width={this.width - (this.margin ? this.margin.right || 0 : 0)}\n            isInteractive={this.accessibility.elementsAreInterface}\n            hasCousinNavigation // on bar this requires checking for groupAccessor\n            disabled={\n              this.suppressEvents &&\n              this.accessibility.elementsAreInterface === false &&\n              this.accessibility.keyboardNavConfig &&\n              this.accessibility.keyboardNavConfig.disabled\n            } // the chart is \"simple\"\n          />\n          <div class=\"visa-viz-d3-clustered-bar-container\" />\n          <div class=\"clustered-bar-tooltip vcl-tooltip\" style={{ display: this.showTooltip ? 'block' : 'none' }} />\n          <data-table\n            uniqueID={this.chartID}\n            isCompact\n            language={this.getLanguageString()}\n            tableColumns={this.tableColumns}\n            dataKeyNames={this.dataKeyNames}\n            data={this.tableData}\n            padding={this.padding}\n            margin={this.margin}\n            hideDataTable={this.accessibility.hideDataTableButton}\n            unitTest={this.unitTest}\n          />\n        </div>\n        {/* <canvas id=\"bitmap-render\" /> */}\n      </div>\n    );\n  }\n  private init() {\n    // reading properties\n    const keys = Object.keys(ClusteredBarChartDefaultValues);\n    let i = 0;\n    // accept 0 or false as default value\n    const exceptions = {\n      mainTitle: {\n        exception: ''\n      },\n      subTitle: {\n        exception: ''\n      },\n      barIntervalRatio: {\n        exception: 0\n      },\n      groupIntervalRatio: {\n        exception: 0\n      },\n      showTooltip: {\n        exception: false\n      },\n      wrapLabel: {\n        exception: false\n      },\n      hoverOpacity: {\n        exception: 0\n      }\n    };\n    for (i = 0; i < keys.length; i++) {\n      const exception = !exceptions[keys[i]] ? false : this[keys[i]] === exceptions[keys[i]].exception;\n      this[keys[i]] = this[keys[i]] || exception ? this[keys[i]] : ClusteredBarChartDefaultValues[keys[i]];\n    }\n  }\n}\n\n// incorporate OSS licenses into build\nwindow['VisaChartsLibOSSLicenses'] = getLicenses(); // tslint:disable-line no-string-literal\n"],"mappings":"0XASA,MAAMA,kBAAEA,GAAsBC,E,MAEjBC,GACKA,EAAAC,UAAY,4BACZD,EAAAE,SAAWJ,EAAkBI,SAASC,KACtCH,EAAAI,OAAS,IACTJ,EAAAK,MAAQ,IACRL,EAAAM,OAAS,CACvBC,IAAK,IAAM,IACXC,OAAQ,IAAM,IACdC,MAAO,IAAM,IACbC,KAAM,IAAM,KAEEV,EAAAW,QAAU,CACxBJ,IAAK,GACLC,OAAQ,GACRC,MAAO,GACPC,KAAM,IAGQV,EAAAY,aAAed,EAAkBc,aAEjCZ,EAAAa,gBAAkB,QAClBb,EAAAc,cAAgB,QAChBd,EAAAe,cAAgB,WAChBf,EAAAgB,aAAe,MAEfhB,EAAAiB,OAASnB,EAAkBmB,OAC3BjB,EAAAkB,MAAQpB,EAAkBoB,MAC1BlB,EAAAmB,MAAQrB,EAAkBqB,MAC1BnB,EAAAoB,UAAYtB,EAAkBsB,UAE9BpB,EAAAqB,aAAevB,EAAkBwB,wBACjCtB,EAAAuB,WAAazB,EAAkByB,WAC/BvB,EAAAwB,WAAa1B,EAAkB0B,WAC/BxB,EAAAyB,eAAiB3B,EAAkB2B,eACnCzB,EAAA0B,OAAS5B,EAAkB4B,OAC3B1B,EAAA2B,cAAgB7B,EAAkB6B,cAClC3B,EAAA4B,iBAAmB9B,EAAkB8B,iBACrC5B,EAAA6B,mBAAqB/B,EAAkB8B,iBACvC5B,EAAA8B,aAAehC,EAAkBgC,aAEjC9B,EAAA+B,UAAYjC,EAAkBiC,UAG9B/B,EAAAgC,OAASlC,EAAkBmC,eAC3BjC,EAAAkC,aAAepC,EAAkBoC,aACjClC,EAAAmC,YAAcrC,EAAkBqC,YAChCnC,EAAAoC,cAAgBtC,EAAkBsC,cAClCpC,EAAAqC,gBAAkBvC,EAAkBuC,gBACpCrC,EAAAsC,oBAAsBxC,EAAkBwC,oBAExCtC,EAAAuC,eAAiBzC,EAAkByC,eACnCvC,EAAAwC,YAAc1C,EAAkB0C,YAEhCxC,EAAAyC,eAAiB3C,EAAkB2C,eAEnCzC,EAAA0C,eAAiB5C,EAAkB4C,eClErD,MAAMC,EAAuB,i1EAC7B,MAAAC,EAAeD,EC8Bf,MAAME,mBACJA,EAAkBC,mBAClBA,EAAkBC,wBAClBA,EAAuBC,mBACvBA,EAAkBC,0BAClBA,EAAyBC,uBACzBA,EAAsBC,iBACtBA,EAAgBC,mBAChBA,EAAkBC,aAClBA,EAAYC,wBACZA,EAAuBC,0BACvBA,EAAyBC,wBACzBA,EAAuBC,uBACvBA,EAAsBC,mBACtBA,EAAkBC,2BAClBA,EAA0BC,uBAC1BA,EAAsBC,eACtBA,EAAcC,kBACdA,EAAiBC,yBACjBA,EAAwBC,0BACxBA,EAAyBC,iBACzBA,EAAgBC,iBAChBA,EAAgBC,oBAChBA,EAAmBC,qBACnBA,EAAoBC,eACpBA,EAAcC,eACdA,EAAcC,mBACdA,EAAkBC,oBAClBA,EAAmBC,kBACnBA,EAAiBC,iBACjBA,EAAgBC,iCAChBA,EAAgCC,iCAChCA,EAAgCC,cAChCA,EAAaC,SACbA,EAAQC,eACRA,EAAcC,iBACdA,EAAgBC,iBAChBA,GAAgBC,aAChBA,GAAYC,aACZA,GAAYC,SACZA,GAAQC,SACRA,GAAQC,WACRA,GAAUC,0BACVA,GAAyBC,YACzBA,GAAWC,gBACXA,GAAeC,WACfA,GAAUC,UACVA,GAASC,YACTA,GAAWC,WACXA,GAAUC,cACVA,GAAaC,iBACbA,GAAgBC,qBAChBA,GAAoBC,gBACpBA,GAAeC,cACfA,GAAaC,iBACbA,GAAgBC,WAChBA,GAAUC,2BACVA,GAA0BC,0BAC1BA,GAAyBC,aACzBA,GAAYC,oBACZA,GAAmBC,QACnBA,GAAOC,sBACPA,GAAqBC,YACrBA,GAAWC,iBACXA,IACE7G,E,MAMS8G,GAAiB,M,iZA0E5BC,KAAAC,4BAAuC,KACvCD,KAAAE,2BAAsC,KAgCtCF,KAAAG,KAAY,GACZH,KAAAI,SAAgB,GAChBJ,KAAAK,WAAkB,GAOlBL,KAAAM,QAAmB,KAcnBN,KAAAO,eAA0B,MAC1BP,KAAAQ,iBAA4B,MAC5BR,KAAAS,oBAA+B,MAC/BT,KAAAU,mBAA8B,MAC9BV,KAAAW,mBAA8B,MAC9BX,KAAAY,wBAAmC,MACnCZ,KAAAa,gBAA2B,MAC3Bb,KAAAc,sBAAiC,MACjCd,KAAAe,gBAA2B,MAC3Bf,KAAAgB,kBAA6B,MAC7BhB,KAAAiB,6BAAwC,MACxCjB,KAAAkB,gCAA2C,MAC3ClB,KAAAmB,8BAAyC,MACzCnB,KAAAoB,wBAAmC,MACnCpB,KAAAqB,kBAA6B,MAC7BrB,KAAAsB,kBAA6B,MAC7BtB,KAAAuB,kBAA6B,MAC7BvB,KAAAwB,kBAA6B,MAC7BxB,KAAAyB,qBAAgC,MAChCzB,KAAA0B,qBAAgC,MAChC1B,KAAA2B,qBAAgC,MAChC3B,KAAA4B,0BAAqC,MACrC5B,KAAA6B,sBAAiC,MACjC7B,KAAA8B,uBAAkC,MAClC9B,KAAA+B,oBAA+B,MAC/B/B,KAAAgC,uBAAkC,MAClChC,KAAAiC,mBAA8B,MAC9BjC,KAAAkC,gCAA2C,MAC3ClC,KAAAmC,sBAAiC,MACjCnC,KAAAoC,2BAAsC,MACtCpC,KAAAqC,mBAA8B,MAC9BrC,KAAAsC,2BAAsC,MACtCtC,KAAAuC,sBAAiC,MACjCvC,KAAAwC,uBAAkC,MAClCxC,KAAAyC,sBAAiC,MACjCzC,KAAA0C,sBAAiC,MACjC1C,KAAA2C,wBAAmC,MACnC3C,KAAA4C,+BAA0C,MAC1C5C,KAAA6C,iCAA4C,MAC5C7C,KAAA8C,oCAA+C,MAC/C9C,KAAA+C,2CAAsD,MACtD/C,KAAAgD,4CAAuD,MACvDhD,KAAAiD,4CAAuD,MACvDjD,KAAAkD,0CAAqD,MACrDlD,KAAAmD,gCAA2C,MAC3CnD,KAAAoD,yCAAoD,MACpDpD,KAAAqD,4BAAuC,MACvCrD,KAAAsD,iCAA4C,MAC5CtD,KAAAuD,mCAA8C,MAC9CvD,KAAAwD,mCAA8C,MAC9CxD,KAAAyD,2BAAsC,MACtCzD,KAAA0D,oBAA+B,MAC/B1D,KAAA2D,mBAA8B,MAC9B3D,KAAA4D,iCAA4C,MAC5C5D,KAAA6D,4BAAuC,MACvC7D,KAAA8D,4BAAuC,MACvC9D,KAAA+D,iCAA4C,MAC5C/D,KAAAgE,kBAA6B,MAC7BhE,KAAAiE,iBAA4B,MAC5BjE,KAAAkE,4BAAuC,MACvClE,KAAAmE,QAAe,GACfnE,KAAAoE,SAAmB,KACnBpE,KAAAqE,YAAsB,IAk1DtBrE,KAAAsE,qBAAuB,CAACC,EAAGC,EAAGC,KAC5B,MAAMC,EAAKC,EAAOF,EAAED,IACpB,MAAMI,EACJ5E,KAAKrE,gBACLqE,KAAKrE,eAAekJ,OAAS,GAC7BzG,GAAamG,EAAGvE,KAAKrE,eAAgBqE,KAAK8E,uBAC1C9E,KAAKtF,WAAWqK,MACZzF,GAAWU,KAAKtF,WAAWqK,QAAU/E,KAAKtF,WAAWqK,MACrD/E,KAAKgF,gBACL3G,GAAakG,EAAGvE,KAAKgF,eAAgBhF,KAAK8E,uBAC1C9E,KAAKvF,WAAWsK,MAChBzF,GAAWU,KAAKvF,WAAWsK,QAAU/E,KAAKvF,WAAWsK,MACrD/E,KAAKiF,eAAeT,GAE1B,MAAMU,EACJlF,KAAK/E,UAAUkK,YAAc,OACzBnF,KAAK7F,SAAW,WACb6F,KAAK/E,UAAUmK,qBAAuB,OAASV,EAAGW,KAAK,mBAAqB,UAC5ErF,KAAK/E,UAAUmK,qBAAuB,UAAYV,EAAGW,KAAK,mBAAqB,UAC/ErF,KAAK/E,UAAUmK,qBAAuB,UACrCV,EAAGW,KAAK,mBAAqB,WAC3Bd,EAAEvE,KAAKhG,gBAAkB,GAAKgG,KAAKsF,EAAE,GAAKtF,KAAKsF,EAAEf,EAAEvE,KAAKhG,gBAAkB,IACzEuK,EAAEvE,KAAKhG,eAAiB,GAAKgG,KAAKsF,EAAE,GAAKtF,KAAKsF,EAAEf,EAAEvE,KAAKhG,iBAAmB,IAC9EgG,KAAK/E,UAAUmK,qBAAuB,SAAWV,EAAGW,KAAK,gBAAkB,QAC3ErF,KAAK/E,UAAUmK,qBAAuB,UAAYV,EAAGW,KAAK,gBAAkB,QAC5ErF,KAAK/E,UAAUmK,qBAAuB,QAAUV,EAAGW,KAAK,gBAAkB,QAC7E,MACN,MAAMN,EACJG,GAAgClF,KAAK/E,UAAUkK,YAAc,UAAYnF,KAAK/E,UAAUkK,YAAc,OAClGpH,EAAc6G,GACdtF,GAAWiG,UACjBb,EAAGW,KACD,UACCX,EAAGc,QAAQ,gBACRpJ,EAAuB,CACrBqJ,KAAMzF,KAAK0F,IAAIC,OACfC,GAAI5F,KAAK6F,QACTd,MACEG,GACAlF,KAAK/E,UAAUkK,YAAc,UAC7BnF,KAAK/E,UAAUkK,YAAc,OACzBP,EACA,YAER,MAEN,OAAOG,CAAK,E,eArjE+B7L,EAA+BC,U,cAChBD,EAA+BE,S,YACjDF,EAA+BI,O,WAChCJ,EAA+BK,M,YAC9BL,EAA+BiB,O,YACxBjB,EAA+BM,O,aAC9BN,EAA+BW,Q,yBACjBX,EAA+BsC,oB,8DAKpCtC,EAA+BY,a,qBACvCZ,EAA+Ba,gB,mBACjCb,EAA+Bc,c,mBAC/Bd,EAA+Be,c,kBAC/Bf,EAA+BgB,a,WAGpChB,EAA+BkB,M,WAC/BlB,EAA+BmB,M,eAC7BnB,EAA+BoB,U,kBAG7BpB,EAA+BqB,a,sCAExBrB,EAA+BuB,W,gBAC/BvB,EAA+BwB,W,oBACvBxB,EAA+ByB,e,YACpDzB,EAA+B0B,O,mBACxB1B,EAA+B2B,c,sBAC5B3B,EAA+B4B,iB,wBAC7B5B,EAA+B6B,mB,kBACrC7B,EAA+B8B,a,qBAClB9B,EAA+BqC,gB,eAGvCrC,EAA+B+B,U,6CAEpC/B,EAA+BmC,Y,kBACpBnC,EAA+BkC,a,mBAC7BlC,EAA+BoC,c,YAC7CpC,EAA+BgC,O,iBAC7BhC,EAA+BwC,Y,oFAK5BxC,EAA+BuC,e,oBAGhCvC,EAA+B0C,e,kDAE9B1C,EAA+ByC,e,6CAIvD,K,CAgI5B,WAAAmK,CAAYC,EAAUC,GACpBhG,KAAKM,QAAU,KACfN,KAAKQ,iBAAmB,KACxBR,KAAKe,gBAAkB,KACvBf,KAAKgE,kBAAoB,KACzBhE,KAAKc,sBAAwB,KAC7Bd,KAAK4B,0BAA4B,KACjC5B,KAAKyD,2BAA6B,KAClCzD,KAAK6B,sBAAwB,KAC7B7B,KAAKyC,sBAAwB,KAC7BzC,KAAKwC,uBAAyB,KAG9BxC,KAAKoD,yCAA2C,KAChDpD,KAAKqD,4BAA8B,KACnCrD,KAAKgC,uBAAyB,KAC9BhC,KAAKU,mBAAqB,KAC1BV,KAAKO,eAAiB,KACtBP,KAAK8B,uBAAyB,KAC9B9B,KAAKqB,kBAAoB,KACzBrB,KAAK8D,4BAA8B,KACnC9D,KAAKsB,kBAAoB,KACzBtB,KAAK6D,4BAA8B,KACnC7D,KAAKuB,kBAAoB,KACzBvB,KAAKwB,kBAAoB,KACzBxB,KAAKiC,mBAAqB,KAC1BjC,KAAKoC,2BAA6B,KAClCpC,KAAKyB,qBAAuB,KAC5BzB,KAAKY,wBAA0B,KAC/BZ,KAAKiE,iBAAmB,I,CAI1B,SAAAgC,CAAUC,EAAOC,GACfC,QAAQC,MACN,+CACEF,EACA,aACAD,EACA,4D,CAaN,cAAAI,CAAeC,EAASC,GACtBxG,KAAK0D,oBAAsB,KAC3B1D,KAAK2D,mBAAqB,KAC1B3D,KAAK4D,iCAAmC,KACxC5D,KAAK6D,4BAA8B,KACnC7D,KAAK8D,4BAA8B,KACnC9D,KAAK+D,iCAAmC,KACxC/D,KAAK4C,+BAAiC,KACtC5C,KAAKgB,kBAAoB,KACzBhB,KAAK6C,iCAAmC,KACxC7C,KAAK8C,oCAAsC,KAC3C9C,KAAK+C,2CAA6C,KAClD/C,KAAKwD,mCAAqC,KAC1CxD,KAAKgD,4CAA8C,KACnDhD,KAAKuD,mCAAqC,KAC1CvD,KAAKiD,4CAA8C,KACnDjD,KAAKkD,0CAA4C,I,CAInD,YAAAuD,CAAaF,EAASC,GACpBxG,KAAKO,eAAiB,KACtBP,KAAK4C,+BAAiC,KACtC5C,KAAK6C,iCAAmC,KACxC7C,KAAKmD,gCAAkC,I,CAIzC,eAAAuD,CAAgBH,EAASC,GACvBxG,KAAKgB,kBAAoB,KACzBhB,KAAK8C,oCAAsC,KAC3C9C,KAAKmD,gCAAkC,I,CAOzC,gBAAAwD,CAAiBJ,EAASC,GACxBxG,KAAKS,oBAAsB,KAC3BT,KAAKU,mBAAqB,KAC1BV,KAAKa,gBAAkB,KACvBb,KAAK8B,uBAAyB,KAC9B9B,KAAKqB,kBAAoB,KACzBrB,KAAKsB,kBAAoB,KACzBtB,KAAKuB,kBAAoB,KACzBvB,KAAKwB,kBAAoB,KACzBxB,KAAKwC,uBAAyB,KAC9BxC,KAAK0C,sBAAwB,KAC7B1C,KAAKiC,mBAAqB,KAC1BjC,KAAKoC,2BAA6B,KAClCpC,KAAKyB,qBAAuB,KAC5BzB,KAAKY,wBAA0B,I,CAIjC,aAAAgG,CAAcL,EAASC,GACrBxG,KAAKiB,6BAA+B,KACpCjB,KAAKU,mBAAqB,KAC1BV,KAAKW,mBAAqB,KAC1BX,KAAKa,gBAAkB,KACvBb,KAAK8B,uBAAyB,KAC9B9B,KAAKqB,kBAAoB,KACzBrB,KAAKsB,kBAAoB,KACzBtB,KAAKuB,kBAAoB,KACzBvB,KAAKwB,kBAAoB,KACzBxB,KAAKwC,uBAAyB,KAC9BxC,KAAK0C,sBAAwB,KAC7B1C,KAAKiC,mBAAqB,KAC1BjC,KAAKoC,2BAA6B,KAClCpC,KAAKyB,qBAAuB,KAC5BzB,KAAKY,wBAA0B,KAC/BZ,KAAKoD,yCAA2C,KAChDpD,KAAKyD,2BAA6B,I,CAIpC,sBAAAoD,CAAuBN,EAASC,GAC9BxG,KAAKc,sBAAwB,KAC7Bd,KAAKgC,uBAAyB,KAC9BhC,KAAKU,mBAAqB,KAC1BV,KAAKe,gBAAkB,KACvBf,KAAK8B,uBAAyB,KAC9B9B,KAAKsC,2BAA6B,KAClCtC,KAAK0C,sBAAwB,KAC7B1C,KAAKiC,mBAAqB,KAC1BjC,KAAKoC,2BAA6B,KAClCpC,KAAKY,wBAA0B,KAC/BZ,KAAKqD,4BAA8B,KACnCrD,KAAKiE,iBAAmB,KACxBjE,KAAKgE,kBAAoB,KACzB,KAAMhE,KAAK8G,iBAAmB9G,KAAK8G,gBAAgBjC,QAAS,CAC1D7E,KAAKmB,8BAAgC,KACrCnB,KAAKoB,wBAA0B,I,EAKnC,oBAAA2F,CAAqBR,EAASC,GAC5BxG,KAAKQ,iBAAmB,KACxBR,KAAKc,sBAAwB,KAC7Bd,KAAKU,mBAAqB,KAC1BV,KAAKe,gBAAkB,KACvBf,KAAK8B,uBAAyB,KAC9B9B,KAAKsC,2BAA6B,KAClCtC,KAAK0B,qBAAuB,KAC5B1B,KAAKkB,gCAAkC,KACvClB,KAAKyC,sBAAwB,KAC7BzC,KAAKwC,uBAAyB,KAC9BxC,KAAK0C,sBAAwB,KAC7B1C,KAAKoC,2BAA6B,KAClCpC,KAAKY,wBAA0B,KAC/BZ,KAAKqD,4BAA8B,KACnCrD,KAAKiE,iBAAmB,KACxBjE,KAAKgE,kBAAoB,I,CAI3B,oBAAAgD,CAAqBT,EAASC,GAC5BxG,KAAKQ,iBAAmB,KACxBR,KAAK4B,0BAA4B,KACjC5B,KAAK6B,sBAAwB,KAC7B7B,KAAKc,sBAAwB,KAC7Bd,KAAKU,mBAAqB,KAC1BV,KAAK8B,uBAAyB,KAC9B9B,KAAKsC,2BAA6B,KAClCtC,KAAK0C,sBAAwB,KAC7B1C,KAAK2B,qBAAuB,KAC5B3B,KAAKyB,qBAAuB,KAC5BzB,KAAKoC,2BAA6B,KAClCpC,KAAKY,wBAA0B,KAC/BZ,KAAKqD,4BAA8B,KACnCrD,KAAKsD,iCAAmC,KACxCtD,KAAKiE,iBAAmB,KACxBjE,KAAKgE,kBAAoB,KACzB,KAAMhE,KAAK8G,iBAAmB9G,KAAK8G,gBAAgBjC,QAAS,CAC1D7E,KAAKmB,8BAAgC,KACrCnB,KAAKoB,wBAA0B,I,EAKnC,mBAAA6F,CAAoBV,EAASC,GAC3BxG,KAAKc,sBAAwB,KAC7Bd,KAAKU,mBAAqB,KAC1BV,KAAK8B,uBAAyB,KAC9B9B,KAAKwC,uBAAyB,KAC9BxC,KAAK0C,sBAAwB,KAC7B1C,KAAKY,wBAA0B,KAC/BZ,KAAKoD,yCAA2C,KAChDpD,KAAKqD,4BAA8B,KACnC,GAAIrD,KAAK7F,SAAW,WAAY,CAC9B6F,KAAKW,mBAAqB,KAC1BX,KAAKqB,kBAAoB,KACzBrB,KAAK8D,4BAA8B,I,MAC9B,GAAI9D,KAAK7F,SAAW,aAAc,CACvC6F,KAAKW,mBAAqB,KAC1BX,KAAKsB,kBAAoB,KACzBtB,KAAK6D,4BAA8B,I,EAKvC,YAAAqD,CAAaX,EAASC,GACpBxG,KAAKW,mBAAqB,KAC1BX,KAAKqB,kBAAoB,KACzBrB,KAAK8D,4BAA8B,KACnC,MAAMqD,EAAaZ,GAAWA,EAAQa,YACtC,MAAMC,EAAab,GAAWA,EAAQY,YACtC,MAAME,EAAkBf,GAAWA,EAAQgB,aAAehB,EAAQgB,aAAe,EACjF,MAAMC,EAAkBhB,GAAWA,EAAQe,aAAef,EAAQe,aAAe,EACjF,GAAIJ,IAAeE,GAAcC,IAAoBE,EAAiB,CACpExH,KAAKuB,kBAAoB,I,EAK7B,YAAAkG,CAAalB,EAASC,GACpBxG,KAAKW,mBAAqB,KAC1BX,KAAKsB,kBAAoB,KACzBtB,KAAK6D,4BAA8B,KACnC,MAAMsD,EAAaZ,GAAWA,EAAQa,YACtC,MAAMC,EAAab,GAAWA,EAAQY,YACtC,MAAME,EAAkBf,GAAWA,EAAQgB,aAAehB,EAAQgB,aAAe,EACjF,MAAMC,EAAkBhB,GAAWA,EAAQe,aAAef,EAAQe,aAAe,EACjF,GAAIJ,IAAeE,GAAcC,IAAoBE,EAAiB,CACpExH,KAAKwB,kBAAoB,I,EAK7B,gBAAAkG,CAAiBnB,EAASC,GACxBxG,KAAKqB,kBAAoB,KACzBrB,KAAKsB,kBAAoB,I,CAK3B,aAAAqG,CAAcpB,EAASC,GACrBxG,KAAKe,gBAAkB,KACvBf,KAAKsC,2BAA6B,KAClCtC,KAAKiC,mBAAqB,KAC1BjC,KAAK0C,sBAAwB,KAC7B1C,KAAKiE,iBAAmB,KACxBjE,KAAKgE,kBAAoB,I,CAI3B,iBAAA4D,CAAkBrB,EAASC,GACzBxG,KAAKsC,2BAA6B,KAClCtC,KAAK0C,sBAAwB,KAC7B1C,KAAKiE,iBAAmB,I,CAI1B,iBAAA4D,CAAkBtB,EAASC,GACzBxG,KAAKsC,2BAA6B,KAClCtC,KAAK0C,sBAAwB,KAC7B1C,KAAKiE,iBAAmB,I,CAK1B,gBAAA6D,CAAiBvB,EAASC,GACxBxG,KAAKoC,2BAA6B,I,CAIpC,aAAA2F,CAAcxB,EAASC,GACrBxG,KAAKqC,mBAAqB,KAC1BrC,KAAKmC,sBAAwB,I,CAI/B,aAAA6F,CAAczB,EAASC,GACrBxG,KAAK+B,oBAAsB,I,CAI7B,oBAAAkG,CAAqB1B,EAASC,GAC5BxG,KAAKU,mBAAqB,KAC1BV,KAAK8B,uBAAyB,KAC9B9B,KAAK2B,qBAAuB,KAC5B3B,KAAKwC,uBAAyB,KAC9BxC,KAAK0C,sBAAwB,KAC7B1C,KAAKY,wBAA0B,I,CAIjC,yBAAAsH,CAA0B3B,EAASC,GACjCxG,KAAKU,mBAAqB,KAC1BV,KAAK8B,uBAAyB,KAC9B9B,KAAKwC,uBAAyB,KAC9BxC,KAAK0C,sBAAwB,KAC7B1C,KAAKY,wBAA0B,I,CAIjC,mBAAAuH,CAAoB5B,EAASC,GAC3BxG,KAAKsC,2BAA6B,KAClCtC,KAAK0C,sBAAwB,I,CAI/B,YAAA0F,CAAa7B,EAASC,GACpB,MAAM6B,EAAkB9B,GAAWA,EAAQpB,UAAYoB,EAAQpB,UAAY,MAC3E,MAAMmD,EAAkB9B,GAAWA,EAAQrB,UAAYqB,EAAQrB,UAAY,MAC3E,MAAMoD,EAA2BhC,GAAWA,EAAQnB,mBAAqBmB,EAAQnB,mBAAqB,MACtG,MAAMoD,EAA2BhC,GAAWA,EAAQpB,mBAAqBoB,EAAQpB,mBAAqB,MACtG,MAAMqD,EAAgBlC,GAAWA,EAAQmC,QACzC,MAAMC,EAAgBnC,GAAWA,EAAQkC,QACzC,MAAME,EAAcrC,GAAWA,EAAQsC,cAAgBtC,EAAQsC,cAAgB,MAC/E,MAAMC,EAActC,GAAWA,EAAQqC,cAAgBrC,EAAQqC,cAAgB,MAC/E,MAAME,EAAexC,GAAWA,EAAQyC,OAASzC,EAAQyC,OAAS,MAClE,MAAMC,EAAezC,GAAWA,EAAQwC,OAASxC,EAAQwC,OAAS,MAClE,MAAME,EAA0B3C,GAAWA,EAAQ4C,kBAAoB5C,EAAQ4C,kBAAoB,MACnG,MAAMC,EAA0B5C,GAAWA,EAAQ2C,kBAAoB3C,EAAQ2C,kBAAoB,MAEnG,GAAIV,IAAkBE,EAAe,CACnC3I,KAAKuC,sBAAwB,I,CAG/B,GACE8F,IAAoBC,GACpBC,IAA6BC,GAC7BU,IAA4BE,EAC5B,CACApJ,KAAKiB,6BAA+B,KACpCjB,KAAKwC,uBAAyB,KAC9BxC,KAAK0C,sBAAwB,I,CAG/B,GAAIkG,IAAgBE,GAAeC,IAAiBE,EAAc,CAChEjJ,KAAKkB,gCAAkC,KACvClB,KAAKc,sBAAwB,KAC7Bd,KAAKyC,sBAAwB,KAC7BzC,KAAK0C,sBAAwB,I,EAKjC,mBAAA2G,CAAoB9C,EAASC,GAC3BxG,KAAKc,sBAAwB,KAC7Bd,KAAKmD,gCAAkC,KACvCnD,KAAKqD,4BAA8B,I,CAIrC,oBAAAiG,CAAqB/C,EAASC,GAC5BxG,KAAKO,eAAiB,KACtB,MAAMgJ,EAAWhD,GAAWA,EAAQiD,MAAQjD,EAAQiD,MAAQ,MAC5D,MAAMC,EAAWjD,GAAWA,EAAQgD,MAAQhD,EAAQgD,MAAQ,MAC5D,GAAID,IAAaE,EAAU,CACzBzJ,KAAK4C,+BAAiC,KACtC5C,KAAK6C,iCAAmC,KACxC7C,KAAKmD,gCAAkC,I,CAEzC,MAAMuG,EAAsBnD,GAAWA,EAAQoD,iBAAmBpD,EAAQoD,iBAAmB,MAC7F,MAAMC,EAAsBpD,GAAWA,EAAQmD,iBAAmBnD,EAAQmD,iBAAmB,MAC7F,GAAID,IAAwBE,EAAqB,CAC/C5J,KAAKgD,4CAA8C,I,CAErD,MAAM6G,EAAatD,GAAWA,EAAQuD,QAAUvD,EAAQuD,QAAU,MAClE,MAAMC,EAAavD,GAAWA,EAAQsD,QAAUtD,EAAQsD,QAAU,MAClE,GAAID,IAAeE,EAAY,CAC7B/J,KAAKuD,mCAAqC,I,CAE5C,MAAMyG,EAAqBzD,GAAWA,EAAQ0D,gBAAkB1D,EAAQ0D,gBAAkB,MAC1F,MAAMC,EAAqB1D,GAAWA,EAAQyD,gBAAkBzD,EAAQyD,gBAAkB,MAC1F,GAAID,IAAuBE,EAAoB,CAC7ClK,KAAK+C,2CAA6C,I,CAEpD,MAAMoH,EAAa5D,GAAWA,EAAQ6D,mBAAqB7D,EAAQ6D,mBAAqB,MACxF,MAAMC,EAAa7D,GAAWA,EAAQ4D,mBAAqB5D,EAAQ4D,mBAAqB,MACxF,GAAID,IAAeE,EAAY,CAC7BrK,KAAKwD,mCAAqC,I,CAE5C,MAAM8G,EAAsB/D,GAAWA,EAAQgE,iBAAmBhE,EAAQgE,iBAAmB,MAC7F,MAAMC,EAAsBhE,GAAWA,EAAQ+D,iBAAmB/D,EAAQ+D,iBAAmB,MAC7F,GAAID,IAAwBE,EAAqB,CAC/CxK,KAAKiD,4CAA8C,I,CAErD,MAAMwH,EAAoBlE,GAAWA,EAAQmE,eAAiBnE,EAAQmE,eAAiB,MACvF,MAAMC,EAAoBnE,GAAWA,EAAQkE,eAAiBlE,EAAQkE,eAAiB,MACvF,GAAID,IAAsBE,EAAmB,CAC3C3K,KAAKkD,0CAA4C,I,CAEnD,MAAM0H,EAAyBrE,GAAWA,EAAQsE,oBAClD,MAAMC,EAAyBtE,GAAWA,EAAQqE,oBAClD,MAAME,EACJxE,GAAWA,EAAQyE,2BAA6BzE,EAAQyE,2BAA6B,MACvF,MAAMC,EACJzE,GAAWA,EAAQwE,2BAA6BxE,EAAQwE,2BAA6B,MACvF,GACEJ,IAA2BE,GAC3BC,IAAkCE,EAClC,CACA,GAAIL,IAA2BE,EAAwB,CAGrD9K,KAAKsD,iCAAmC,I,CAE1CtD,KAAKqD,4BAA8B,KACnCrD,KAAKmD,gCAAkC,I,CAEzC,MAAM+H,EAAc3E,GAAWA,EAAQ4E,aAAe5E,EAAQ4E,aAAe,MAC7E,MAAMC,EAAc5E,GAAWA,EAAQ2E,aAAe3E,EAAQ2E,aAAe,MAC7E,GAAID,IAAgBE,EAAa,CAC/BpL,KAAKgE,kBAAoB,KACzBhE,KAAKiC,mBAAqB,KAC1BjC,KAAKsC,2BAA6B,I,CAEpC,MAAM+I,EAAgB9E,GAAWA,EAAQ+E,gBAAkB/E,EAAQ+E,gBAAkB,MACrF,MAAMC,EAAgB/E,GAAWA,EAAQ8E,gBAAkB9E,EAAQ8E,gBAAkB,MACrF,GAAID,IAAkBE,EAAe,CACnCvL,KAAKuC,sBAAwB,I,CAE/B,MAAMiJ,EAAajF,GAAWA,EAAQkF,YAAclF,EAAQkF,YAAc,MAC1E,MAAMC,EAAalF,GAAWA,EAAQiF,YAAcjF,EAAQiF,YAAc,MAC1E,GAAID,IAAeE,EAAY,CAC7B1L,KAAKiC,mBAAqB,KAC1BjC,KAAKiE,iBAAmB,KACxBjE,KAAKsC,2BAA6B,I,CAEpC,MAAMqJ,EACJpF,GAAWA,EAAQqF,mBAAqBrF,EAAQqF,kBAAkBC,SAC9DtF,EAAQqF,kBAAkBC,SAC1B,MACN,MAAMC,EACJtF,GAAWA,EAAQoF,mBAAqBpF,EAAQoF,kBAAkBC,SAC9DrF,EAAQoF,kBAAkBC,SAC1B,MACN,MAAME,EAAexF,GAAWA,EAAQyF,qBAAuBzF,EAAQyF,qBAAuB,MAC9F,MAAMC,EAAezF,GAAWA,EAAQwF,qBAAuBxF,EAAQwF,qBAAuB,MAC9F,GAAIL,IAAcG,GAAaC,IAAiBE,EAAc,CAC5DjM,KAAKqD,4BAA8B,KACnCrD,KAAKmD,gCAAkC,KACvCnD,KAAK4C,+BAAiC,KACtC5C,KAAK0D,oBAAsB,KAC3B1D,KAAK6C,iCAAmC,KACxC7C,KAAK8C,oCAAsC,KAC3C9C,KAAK+C,2CAA6C,KAClD/C,KAAKwD,mCAAqC,KAC1CxD,KAAKgD,4CAA8C,KACnDhD,KAAKuD,mCAAqC,KAC1CvD,KAAKiD,4CAA8C,KACnDjD,KAAKkD,0CAA4C,I,CAEnD,GAAI6I,IAAiBE,EAAc,CACjCjM,KAAKsC,2BAA6B,I,EAKtC,aAAA4J,CAAc3F,EAASC,GACrBxG,KAAKiC,mBAAqB,KAC1B,MAAMkK,EAAoB5F,GAAWA,EAAQ6F,YAC7C,MAAMC,EAAoB7F,GAAWA,EAAQ4F,YAC7C,GAAID,IAAsBE,EAAmB,CAC3CrM,KAAKmC,sBAAwB,KAC7BnC,KAAKkC,gCAAkC,I,EAK3C,mBAAAoK,CAAoB/F,EAASC,GAC3BxG,KAAKO,eAAiB,KAGtB,MAAMgM,EAAchG,GAAWA,EAAQiG,SAAWjG,EAAQiG,SAAW,MACrE,MAAMC,EAAcjG,GAAWA,EAAQgG,SAAWhG,EAAQgG,SAAW,MACrE,GAAID,IAAgBE,EAAa,CAC/BzM,KAAKkE,4BAA8B,KACnClE,KAAKc,sBAAwB,KAC7Bd,KAAKkB,gCAAkC,KACvClB,KAAKyC,sBAAwB,KAC7BzC,KAAK0C,sBAAwB,KAC7B1C,KAAK0D,oBAAsB,KAC3B1D,KAAK4C,+BAAiC,KACtC5C,KAAK4D,iCAAmC,KACxC5D,KAAK6D,4BAA8B,KACnC7D,KAAK8D,4BAA8B,KACnC9D,KAAK4C,+BAAiC,KACtC5C,KAAKqD,4BAA8B,KACnCrD,KAAKmD,gCAAkC,I,CAIzC,MAAMuJ,EAAmBnG,GAAWA,EAAQoG,cAAgBpG,EAAQoG,cAAgB,MACpF,MAAMC,EAAmBpG,GAAWA,EAAQmG,cAAgBnG,EAAQmG,cAAgB,MACpF,GAAID,IAAqBE,EAAkB,CACzC5M,KAAKkE,4BAA8B,KACnClE,KAAKc,sBAAwB,KAC7Bd,KAAKkB,gCAAkC,KACvClB,KAAKyC,sBAAwB,KAC7BzC,KAAK0C,sBAAwB,KAC7B1C,KAAK0D,oBAAsB,KAC3B1D,KAAK4C,+BAAiC,KACtC5C,KAAK4D,iCAAmC,KACxC5D,KAAK6D,4BAA8B,KACnC7D,KAAK8D,4BAA8B,KACnC9D,KAAK4C,+BAAiC,KACtC5C,KAAKqD,4BAA8B,KACnCrD,KAAKmD,gCAAkC,I,EAK3C,kBAAA0J,CAAmBtG,EAASC,GAC1BxG,KAAKO,eAAiB,KACtBP,KAAKY,wBAA0B,KAC/BZ,KAAK+D,iCAAmC,I,CAK1C,oBAAA+I,CAAqBvG,EAASC,GAC5BxG,KAAKU,mBAAqB,KAC1BV,KAAK0B,qBAAuB,KAC5B1B,KAAK8B,uBAAyB,KAC9B9B,KAAKwC,uBAAyB,KAC9BxC,KAAK0C,sBAAwB,KAC7B1C,KAAKoC,2BAA6B,KAClCpC,KAAKyB,qBAAuB,KAC5BzB,KAAKY,wBAA0B,I,CAIjC,YAAAmM,CAAaxG,EAASC,GACpBxG,KAAKsC,2BAA6B,KAClCtC,KAAK0C,sBAAwB,KAC7B1C,KAAKoB,wBAA0B,I,CAIjC,YAAA4L,CAAazG,EAASC,GACpBxG,KAAKsC,2BAA6B,KAClCtC,KAAK0C,sBAAwB,I,CAI/B,kBAAAuK,CAAmB1G,EAASC,GAC1BxG,KAAKmB,8BAAgC,KACrCnB,KAAKsC,2BAA6B,KAClCtC,KAAK0C,sBAAwB,KAC7B1C,KAAKoB,wBAA0B,KAC/BpB,KAAKc,sBAAwB,KAC7Bd,KAAKqD,4BAA8B,I,CAIrC,mBAAA6J,CAAoB3G,EAASC,GAC3BxG,KAAKqB,kBAAoB,KACzBrB,KAAK8D,4BAA8B,KACnC9D,KAAKsB,kBAAoB,KACzBtB,KAAK6D,4BAA8B,KACnC7D,KAAKmD,gCAAkC,KACvCnD,KAAKsD,iCAAmC,KACxCtD,KAAKqD,4BAA8B,I,CAIrC,eAAA8J,CAAgB5G,EAASC,GACvBxG,KAAK2C,wBAA0B,KAC/B3C,KAAKqC,mBAAqB,KAC1BrC,KAAKmC,sBAAwB,KAC7BnC,KAAKkC,gCAAkC,KACvClC,KAAKqD,4BAA8B,KACnCrD,KAAKmD,gCAAkC,KACvCnD,KAAK4C,+BAAiC,KACtC5C,KAAK0D,oBAAsB,KAC3B1D,KAAKO,eAAiB,KACtBP,KAAKgB,kBAAoB,KACzBhB,KAAK6C,iCAAmC,KACxC7C,KAAK8C,oCAAsC,KAC3C9C,KAAK+C,2CAA6C,KAClD/C,KAAKwD,mCAAqC,KAC1CxD,KAAKgD,4CAA8C,KACnDhD,KAAKuD,mCAAqC,KAC1CvD,KAAKiD,4CAA8C,KACnDjD,KAAKkD,0CAA4C,I,CAInD,eAAAkK,CAAgB7G,EAASC,GACvBxG,KAAKyD,2BAA6B,I,CAGpC,iBAAA4J,GACE,MAAMxH,EAAU7F,KAAKsN,UAAY,uBAAyBC,IAC1DvN,KAAKwN,iBAAiBC,KAAK,CAAE5H,QAASA,IAItC,OAAO,IAAI6H,SAAQC,IACjB3N,KAAK4N,SAAW,EAChB5N,KAAK6N,SAAW,KAChB7N,KAAK6F,QAAUA,EACf7F,KAAK8N,oBAAoBlI,GAAK5F,KAAK6F,QACnC7F,KAAK+N,wBACL/N,KAAKgO,eACLhO,KAAKiO,cACLjO,KAAKkO,oBACLlO,KAAKmO,gBACLnO,KAAKoO,gBACLpO,KAAKqO,0BACLrO,KAAKsO,4BACLtO,KAAKuO,eACLvO,KAAKwO,yBACLxO,KAAKyO,eACLzO,KAAK0O,mCACL1O,KAAK2O,kCACL3O,KAAK4O,YACLjB,EAAQ,sBAAsB,G,CAIlC,mBAAAkB,GAIE,OAAO,IAAInB,SAAQC,IACjBA,EAAQ,wBAAwB,G,CAIpC,gBAAAmB,GACE,OAAO,IAAIpB,SAAQC,IACjB3N,KAAK0O,mCACL1O,KAAK2O,kCACL3O,KAAK+O,qBACL/O,KAAKgP,yBACLhP,KAAKiP,6BACLjP,KAAKkP,6BACLlP,KAAKmP,gCACLnP,KAAKoP,uCACLpP,KAAKqP,wCACLrP,KAAKsP,+BACLtP,KAAKuP,+BACLvP,KAAKwP,wCACLxP,KAAKyP,sCACLzP,KAAK0P,4BACL1P,KAAK2P,YACL3P,KAAK4P,cACL5P,KAAK6P,aACL7P,KAAK8P,sBACL9P,KAAK+P,YACL/P,KAAKgQ,YACLhQ,KAAKiQ,sBACLjQ,KAAKkQ,uBACLlQ,KAAKmQ,kBACLnQ,KAAKoQ,mBACLpQ,KAAKqQ,iBACLrQ,KAAKsQ,kBACLtQ,KAAKuQ,mBACLvQ,KAAKwQ,iBACLxQ,KAAKyQ,iBACLzQ,KAAK0Q,6BACL1Q,KAAK2Q,qCACL3Q,KAAK4Q,wBACL5Q,KAAK6Q,qBACL7Q,KAAK8Q,0BACL9Q,KAAK+Q,kBACL/Q,KAAKgR,qBAAqBhR,KAAKiR,aAAc,MAAO,KAAM,OAC1DjR,KAAKkR,qBACLlR,KAAKmR,mBACLnR,KAAKoR,mCACLpR,KAAKqR,eACLrR,KAAKsR,oBACLtR,KAAKuR,kBACLvR,KAAKwR,6BACLxR,KAAKyR,YACLzR,KAAK0R,wBACL1R,KAAK2R,YACL3R,KAAK4R,wBACL5R,KAAK6R,eACL7R,KAAK8R,kBAKLhV,EAAuBkD,KAAKyF,KAAKE,OAAQ3F,KAAK+R,KAAKpM,QACnD3F,KAAKgS,0BACLhS,KAAK6N,SAAW,MAGhB7N,KAAKiR,aAAazL,QAAQ,WAAY,OACtCmI,EAAQ,qBAAqB,IAC5BsE,MAAK,IAAMjS,KAAKkS,oBAAoBzE,KAAK,CAAE5H,QAAS7F,KAAK6F,W,CAG9D,kBAAAsM,GACE,OAAO,IAAIzE,SAAQC,IACjB3N,KAAK4N,UAAY5N,KAAKzE,kBAAoByE,KAAKzE,gBAAgBsQ,SAAW,IAAM,EAChF,GAAI7L,KAAK4C,+BAAgC,CACvC5C,KAAKiP,6BACLjP,KAAK4C,+BAAiC,K,CAExC,GAAI5C,KAAK4D,iCAAkC,CACzC5D,KAAK0Q,6BACL1Q,KAAK4D,iCAAmC,K,CAE1C,GAAI5D,KAAK6C,iCAAkC,CACzC7C,KAAKkP,6BACLlP,KAAK6C,iCAAmC,K,CAE1C,GAAI7C,KAAK8C,oCAAqC,CAC5C9C,KAAKmP,gCACLnP,KAAK8C,oCAAsC,K,CAE7C,GAAI9C,KAAK+C,2CAA4C,CACnD/C,KAAKoP,uCACLpP,KAAK+C,2CAA6C,K,CAEpD,GAAI/C,KAAKgD,4CAA6C,CACpDhD,KAAKqP,wCACLrP,KAAKgD,4CAA8C,K,CAErD,GAAIhD,KAAKuD,mCAAoC,CAC3CvD,KAAKsP,+BACLtP,KAAKuD,mCAAqC,K,CAE5C,GAAIvD,KAAKwD,mCAAoC,CAC3CxD,KAAKuP,+BACLvP,KAAKwD,mCAAqC,K,CAE5C,GAAIxD,KAAKiD,4CAA6C,CACpDjD,KAAKwP,wCACLxP,KAAKiD,4CAA8C,K,CAErD,GAAIjD,KAAKkD,0CAA2C,CAClDlD,KAAKyP,sCACLzP,KAAKkD,0CAA4C,K,CAEnD,GAAIlD,KAAKmD,gCAAiC,CACxCnD,KAAK0P,4BACL1P,KAAKmD,gCAAkC,K,CAEzC,GAAInD,KAAKa,gBAAiB,CACxBb,KAAK2P,YACL3P,KAAKa,gBAAkB,K,CAEzB,GAAIb,KAAKgE,kBAAmB,CAC1BhE,KAAK4P,cACL5P,KAAKgE,kBAAoB,K,CAE3B,GAAIhE,KAAKiE,iBAAkB,CACzBjE,KAAK6P,aACL7P,KAAKiE,iBAAmB,K,CAE1B,GAAIjE,KAAK4B,0BAA2B,CAClC5B,KAAKiQ,sBACLjQ,KAAK4B,0BAA4B,K,CAEnC,GAAI5B,KAAKyD,2BAA4B,CACnCzD,KAAKkQ,uBACLlQ,KAAKyD,2BAA6B,K,CAEpC,GAAIzD,KAAKgB,kBAAmB,CAC1BhB,KAAK8P,sBACL9P,KAAKgB,kBAAoB,K,CAE3B,GAAIhB,KAAKuB,kBAAmB,CAC1BvB,KAAK+P,YACL/P,KAAKuB,kBAAoB,K,CAE3B,GAAIvB,KAAKwB,kBAAmB,CAC1BxB,KAAKgQ,YACLhQ,KAAKwB,kBAAoB,K,CAE3B,GAAIxB,KAAK6B,sBAAuB,CAC9B7B,KAAKmQ,kBACLnQ,KAAKoQ,mBACLpQ,KAAKqQ,iBACLrQ,KAAKsQ,kBACLtQ,KAAKuQ,mBACLvQ,KAAKwQ,iBACLxQ,KAAK6B,sBAAwB,K,CAE/B,GAAI7B,KAAK8B,uBAAwB,CAC/B9B,KAAKyQ,iBACLzQ,KAAK8B,uBAAyB,K,CAEhC,GAAI9B,KAAKoD,yCAA0C,CACjDpD,KAAK2Q,qCACL3Q,KAAKoD,yCAA2C,K,CAElD,GAAIpD,KAAKqD,4BAA6B,CACpCrD,KAAK4Q,wBACL5Q,KAAKqD,4BAA8B,K,CAErC,GAAIrD,KAAKsD,iCAAkC,CACzCtD,KAAKgS,0BACLhS,KAAKsD,iCAAmC,K,CAE1C,GAAItD,KAAK+B,oBAAqB,CAC5B/B,KAAKoS,oBACLpS,KAAK+B,oBAAsB,K,CAE7B,GAAI/B,KAAKiC,mBAAoB,CAC3BjC,KAAK6Q,qBACL7Q,KAAKiC,mBAAqB,K,CAE5B,GAAIjC,KAAKyC,sBAAuB,CAC9BzC,KAAK+Q,kBACL/Q,KAAKyC,sBAAwB,K,CAE/B,GAAIzC,KAAKwC,uBAAwB,CAC/BxC,KAAKqS,mBACLrS,KAAKwC,uBAAyB,K,CAEhC,GAAIxC,KAAKoC,2BAA4B,CACnCpC,KAAKkR,qBACLlR,KAAKoC,2BAA6B,K,CAEpC,GAAIpC,KAAKsC,2BAA4B,CACnCtC,KAAKsS,yBACLtS,KAAKsC,2BAA6B,K,CAEpC,GAAItC,KAAKuC,sBAAuB,CAC9BvC,KAAKuS,kBACLvS,KAAKuC,sBAAwB,K,CAE/B,GAAIvC,KAAK0C,sBAAuB,CAC9B1C,KAAKoR,mCACLpR,KAAK0C,sBAAwB,K,CAE/B,GAAI1C,KAAKoB,wBAAyB,CAChCpB,KAAKmR,mBACLnR,KAAKoB,wBAA0B,K,CAEjC,GAAIpB,KAAKkC,gCAAiC,CACxClC,KAAK8Q,0BACL9Q,KAAKkC,gCAAkC,K,CAEzC,GAAIlC,KAAKmC,sBAAuB,CAC9BnC,KAAKwS,kBACLxS,KAAKmC,sBAAwB,K,CAE/B,GAAInC,KAAKqC,mBAAoB,CAC3BrC,KAAKqR,eACLrR,KAAKqC,mBAAqB,K,CAE5B,GAAIrC,KAAK2C,wBAAyB,CAChC3C,KAAKsR,oBACLtR,KAAK2C,wBAA0B,K,CAEjC,GAAI3C,KAAKY,wBAAyB,CAChCZ,KAAKuR,kBACLvR,KAAKY,wBAA0B,K,CAEjC,GAAIZ,KAAK+D,iCAAkC,CACzC/D,KAAKwR,6BACLxR,KAAK+D,iCAAmC,K,CAE1C,GAAI/D,KAAKqB,kBAAmB,CAC1BrB,KAAKyR,YACLzR,KAAKqB,kBAAoB,K,CAE3B,GAAIrB,KAAK8D,4BAA6B,CACpC9D,KAAK0R,wBACL1R,KAAK8D,4BAA8B,K,CAErC,GAAI9D,KAAKsB,kBAAmB,CAC1BtB,KAAK2R,YACL3R,KAAKsB,kBAAoB,K,CAE3B,GAAItB,KAAK6D,4BAA6B,CACpC7D,KAAK4R,wBACL5R,KAAK6D,4BAA8B,K,CAErC,GAAI7D,KAAKyB,qBAAsB,CAC7BzB,KAAK6R,eACL7R,KAAKyB,qBAAuB,K,CAE9BzB,KAAK8R,kBACL9R,KAAKiR,aAAazL,QAAQ,WAAY,OACtCmI,EAAQ,uBAAuB,IAC9BsE,MAAK,IAAMjS,KAAKyS,aAAahF,KAAK,CAAE5H,QAAS7F,KAAK6F,W,CAGvD,+BAAA8I,GACE,MAAM+D,EAAkB1W,IACxB,MAAM2W,EAAiBD,EAAgBE,QAAQpG,SAC/C,MAAMqG,EAAiBH,EAAgBE,QAAQE,kBAAkBH,GACjE,MAAMI,EAAgBL,EAAgBM,QAAQC,aAC9C,GAAIjT,KAAKE,6BAA+BF,KAAKlG,aAAaoZ,eAAgB,CACxElT,KAAKE,2BAA6B,MAClCV,GAA0BQ,KAAK6F,QAAOsN,OAAAC,OAAAD,OAAAC,OAAA,GACjCpT,KAAKlG,cAAY,CACpB0S,SAAUqG,EACVlG,cAAeoG,I,EAKrB,gCAAArE,GACE,GAAI1O,KAAKC,8BAAgCD,KAAK1E,cAAc+X,kBAAmB,CAC7ErT,KAAKC,4BAA8B,MACnCV,GACES,KAAK6F,QAAOsN,OAAAC,OAAA,GACPpT,KAAK1E,eACV,CACEI,YAAasE,KAAKtE,YAClB4X,KAAMtT,KAAKsT,KACXhG,SAAUtN,KAAKsN,SACfiG,QAAS,CACPpa,UAAW6G,KAAK7G,UAChBqa,cAAexT,KAAKpE,eAAiBoE,KAAKyT,WAAWhG,KAAOiG,Y,EAOtE,uBAAArF,GACErO,KAAK8E,qBACH9E,KAAK8G,iBAAmB9G,KAAK8G,gBAAgBjC,OAAS7E,KAAK8G,gBAAkB,CAAC9G,KAAKjG,gB,CAGvF,yBAAAuU,GACEtO,KAAK2T,mBAAqB3T,KAAK/E,UAAU4N,cAAgB7I,KAAK/E,UAAU4N,cAAgB7I,KAAKhG,a,CAG/F,sBAAAwU,GAEE,GAAIxO,KAAK7F,SAAW,WAAY,CAC9B,GACE6F,KAAK/E,UAAUkK,YAAc,OAC7BnF,KAAK/E,UAAUkK,YAAc,UAC7BnF,KAAK/E,UAAUkK,YAAc,OAC7B,CACAnF,KAAK/E,UAAUkK,UAAY,K,MAExB,CACL,GACEnF,KAAK/E,UAAUkK,YAAc,SAC7BnF,KAAK/E,UAAUkK,YAAc,QAC7BnF,KAAK/E,UAAUkK,YAAc,OAC7B,CACAnF,KAAK/E,UAAUkK,UAAY,O,GAKjC,iBAAAyO,GACE,OAAO3X,EAAwB+D,KAAKlG,a,CAGtC,qBAAAiU,GACEhS,EAAmBiE,KAAKlG,a,CAG1B,aAAAqU,GACEnO,KAAKnG,eAAiBmG,KAAKnG,UAAY,SAAWkF,GAAWiB,KAAKnG,SAAWmG,KAAKnG,QAGlFmG,KAAK6T,YAAc7T,KAAK1G,OAAS0G,KAAKxG,OAAOC,IAAMuG,KAAKxG,OAAOE,OAC/DsG,KAAK8T,WAAa9T,KAAKzG,MAAQyG,KAAKxG,OAAOI,KAAOoG,KAAKxG,OAAOG,MAE9DqG,KAAK+T,kBAAoB/T,KAAK6T,YAAc7T,KAAKnG,QAAQJ,IAAMuG,KAAKnG,QAAQH,OAC5EsG,KAAKgU,iBAAmBhU,KAAK8T,WAAa9T,KAAKnG,QAAQD,KAAOoG,KAAKnG,QAAQF,K,CAG7E,WAAAsU,GAEEjO,KAAKsT,KAAKW,KAAI1P,IACZA,EAAEvE,KAAKhG,eAAiBka,WAAW3P,EAAEvE,KAAKhG,gBAC1CuK,EAAEvE,KAAK/F,eACLsK,EAAEvE,KAAK/F,yBAA0Bka,KAC7BvV,GAAW,CACTwV,KAAM7P,EAAEvE,KAAK/F,eACb+O,OAAQhJ,KAAK7F,SAAW,WAAa6F,KAAK5F,MAAM4O,OAAShJ,KAAK3F,MAAM2O,OACpEqL,eAAgB,OAElB9P,EAAEvE,KAAK/F,cAAc,IAG7B+F,KAAKG,KAAOA,IACTmU,KAAI/P,GAAKA,EAAEvE,KAAK/F,iBAChBsa,QAAQvU,KAAKsT,MAGhBtT,KAAKI,SAAWJ,KAAKG,KAAK8T,KAAI1P,GAAKA,EAAE+P,K,CAGvC,YAAA7F,GAEE,MAAM+F,EAAOpV,GAAcY,KAAM/B,EAAgB,uBACjD+B,KAAKyU,UAAYzV,GAAcgB,KAAKsT,KAAMkB,GAC1CxU,KAAK0U,aAAevB,OAAOqB,KAAKA,E,CAGlC,aAAApG,GACE,MAAMuG,EACJ3U,KAAK4U,kBAAoB5U,KAAK4U,iBAAmBC,EAAI7U,KAAKsT,MAAM/O,GAAKA,EAAEvE,KAAKhG,iBACxEgG,KAAK4U,iBACLC,EAAI7U,KAAKsT,MAAM/O,GAAKA,EAAEvE,KAAKhG,iBAEjC,MAAM8a,EACJ9U,KAAK+U,kBAAoB/U,KAAK+U,iBAAmBC,EAAIhV,KAAKsT,MAAM/O,GAAKA,EAAEvE,KAAKhG,iBACxEgG,KAAK+U,iBACLC,EAAIhV,KAAKsT,MAAM/O,GAAKA,EAAEvE,KAAKhG,iBAGjC,GAAIgG,KAAK7F,SAAW,WAAY,CAC9B6F,KAAKsF,EAAI2P,IACNC,OAAO,CAACC,KAAKN,IAAI,EAAGF,GAAcQ,KAAKH,IAAI,EAAGF,KAC9CM,MAAM,CAACpV,KAAK+T,kBAAmB,IAElC/T,KAAKqV,GAAKC,IACPJ,OAAOlV,KAAKI,UACZgV,MAAMpV,KAAK9F,aAAe,CAAC8F,KAAKgU,iBAAkB,GAAK,CAAC,EAAGhU,KAAKgU,mBAChEna,QAAQmG,KAAKjF,oBAEhBiF,KAAKuV,GAAKD,IACPJ,OAAOlV,KAAKG,KAAK,GAAGqV,OAAOvB,KAAI1P,GAAKA,EAAEvE,KAAKjG,oBAC3C0b,WAAW,CAAC,EAAGzV,KAAKqV,GAAGK,cACvB7b,QAAQmG,KAAKlF,iB,MACX,GAAIkF,KAAK7F,SAAW,aAAc,CACvC6F,KAAK2V,EAAIV,IACNC,OAAO,CAACC,KAAKN,IAAI,EAAGF,GAAcQ,KAAKH,IAAI,EAAGF,KAC9CM,MAAM,CAAC,EAAGpV,KAAKgU,mBAElBhU,KAAK4V,GAAKN,IACPJ,OAAOlV,KAAKI,UACZgV,MAAMpV,KAAK9F,aAAe,CAAC8F,KAAK+T,kBAAmB,GAAK,CAAC,EAAG/T,KAAK+T,oBACjEla,QAAQmG,KAAKjF,oBAEhBiF,KAAK6V,GAAKP,IACPJ,OAAOlV,KAAKG,KAAK,GAAGqV,OAAOvB,KAAI1P,GAAKA,EAAEvE,KAAKjG,oBAC3C0b,WAAW,CAAC,EAAGzV,KAAK4V,GAAGF,cACvB7b,QAAQmG,KAAKlF,iB,EAIpB,YAAAyT,GAEEvO,KAAK8V,WAAU3C,OAAAC,OAAAD,OAAAC,OAAA,GAAQpT,KAAK5F,OAAK,CAAEgN,cAAepH,KAAK7F,SAAW,aAAe6F,KAAK5F,MAAMgN,cAC5FpH,KAAK+V,WAAU5C,OAAAC,OAAAD,OAAAC,OAAA,GAAQpT,KAAK3F,OAAK,CAAE+M,YAAapH,KAAK7F,SAAW,YAAc6F,KAAK3F,MAAM+M,a,CAG3F,mBAAA0I,GACEjQ,GAAY,CACV4F,KAAMzF,KAAKgW,UACX5c,SAAU4G,KAAK5G,U,CAInB,SAAAwV,GACE5O,KAAKiF,eAAiBjF,KAAKiW,OACvB/X,EAAiB8B,KAAKiW,QACtBpX,GAAUmB,KAAKzF,aAAcyF,KAAKG,KAAK,GAAGqV,OAAO3Q,O,CAGvD,WAAA+K,GACE,MAAMsG,EAAclW,KAAKiF,eAAemQ,MAAQpV,KAAKiF,eAAemQ,QAAUpV,KAAKiF,eACnF,GAAIjF,KAAK1E,cAAc6P,cAAgB+K,EAAYrR,OAAS,EAAG,CAC7D7E,KAAKmW,SAAWnW,KAAKiF,c,KAChB,CACL,MAAMmR,EAAkBF,EACxB,MAAMG,EAAW7Z,EAAwB,CACvCyZ,OAAQG,EACRE,QAAStW,KAAK0F,IAAIC,OAClBC,GAAI5F,KAAK6F,QACT0Q,OAAQ,cACRC,oBAAqBxW,KAAK4N,WAE5B5N,KAAKmW,SAAWnW,KAAKiF,eAAemQ,MAAQpV,KAAKiF,eAAewR,OAAOrB,MAAMiB,GAAYA,C,EAI7F,UAAAxG,GACE7P,KAAKmE,QAAU5H,EAAa,CAC1BkJ,KAAMzF,KAAK0F,IAAIC,OACfC,GAAI5F,KAAK6F,QACToQ,OAAQjW,KAAKiF,eAAemQ,MAAQpV,KAAKiF,eAAemQ,QAAUpV,KAAKiF,eACvEvK,WAAYsF,KAAKtF,WACjBD,WAAYuF,KAAKvF,Y,CAIrB,kBAAAsU,GACE/O,KAAK0F,IAAMf,EAAO3E,KAAK8N,qBACpBnJ,OAAO,wCACP+R,OAAO,OACPrR,KAAK,QAASrF,KAAKzG,OACnB8L,KAAK,SAAUrF,KAAK1G,QACpB+L,KAAK,UAAW,OAASrF,KAAKzG,MAAQ,IAAMyG,KAAK1G,QAEpD0G,KAAKyF,KAAOzF,KAAK0F,IAAIgR,OAAO,KAAKrR,KAAK,KAAM,+BAAiCrF,KAAK6F,SAClF7F,KAAK2W,MAAQ3W,KAAKyF,KAAKiR,OAAO,KAAKrR,KAAK,KAAM,gCAAkCrF,KAAK6F,SAErF7F,KAAK4W,MAAQ5W,KAAK2W,MAAMD,OAAO,KAAKrR,KAAK,QAAS,cAClDrF,KAAK+R,KAAO/R,KAAK2W,MAAMD,OAAO,KAAKrR,KAAK,QAAS,uBAEjDrF,KAAK6W,OAAS7W,KAAK2W,MAAMD,OAAO,KAAKrR,KAAK,QAAS,iCAEnDrF,KAAK8W,QAAUnS,EAAO3E,KAAK8N,qBACxBnJ,OAAO,yBACP+R,OAAO,OAEV1W,KAAKgW,UAAYrR,EAAO3E,KAAK8N,qBAAqBnJ,OAAO,4BACzD3E,KAAK+W,SAAWpS,EAAO3E,KAAK8N,qBAAqBnJ,OAAO,0BAExD3E,KAAKgX,YAAchX,KAAK2W,MAAMD,OAAO,KAAKrR,KAAK,QAAS,qC,CAG1D,oBAAA6K,GACE,GAAIlQ,KAAKiX,SAAU,CACjBtS,EAAO3E,KAAK8N,qBACTnJ,OAAO,wCACPU,KAAK,cAAe,mBACvBV,EAAO3E,KAAK8N,qBACTnJ,OAAO,6BACPU,KAAK,cAAe,cACvBV,EAAO3E,KAAK8N,qBACTnJ,OAAO,4BACPU,KAAK,cAAe,aAEvBrF,KAAK0F,IAAIL,KAAK,cAAe,YAC7BrF,KAAKyF,KAAKJ,KAAK,cAAe,oBAC9BrF,KAAK2W,MAAMtR,KAAK,cAAe,qBAC/BrF,KAAK8W,QAAQzR,KAAK,cAAe,oBACjCrF,KAAK+W,SAAS1R,KAAK,cAAe,qBAElCrF,KAAK+R,KAAK1M,KAAK,cAAe,uBAC9BrF,KAAKkX,kBACF7R,KAAK,cAAe,yBACpBA,KAAK,WAAWd,GAAK,yBAAyBA,EAAE+P,QACnDtU,KAAKmX,OACF9R,KAAK,cAAe,OACpBA,KAAK,WAAWd,GAAK,OAAOA,EAAEvE,KAAK/F,kBAAkBsK,EAAEvE,KAAKjG,qBAE/DiG,KAAK6W,OAAOxR,KAAK,cAAe,iCAChCrF,KAAKoX,oBACF/R,KAAK,cAAe,mCACpBA,KAAK,WAAWd,GAAK,mCAAmCA,EAAE+P,QAC7DtU,KAAKiR,aACF5L,KAAK,cAAe,aACpBA,KAAK,WAAWd,GAAK,aAAaA,EAAEvE,KAAK/F,kBAAkBsK,EAAEvE,KAAKjG,qBAErEiG,KAAKgX,YAAY3R,KAAK,cAAe,wBACrCrF,KAAK0F,IAAIf,OAAO,QAAQU,KAAK,cAAe,gBAG5CrF,KAAKgX,YAAYK,UAAU,iCAAiChS,KAAK,cAAe,kBAEhFrF,KAAKgX,YAAYK,UAAU,uCAAuChS,KAAK,cAAe,uB,KACjF,CACLV,EAAO3E,KAAK8N,qBACTnJ,OAAO,wCACPU,KAAK,cAAe,MACvBV,EAAO3E,KAAK8N,qBACTnJ,OAAO,6BACPU,KAAK,cAAe,MACvBV,EAAO3E,KAAK8N,qBACTnJ,OAAO,4BACPU,KAAK,cAAe,MACvBrF,KAAK0F,IAAIL,KAAK,cAAe,MAC7BrF,KAAKyF,KAAKJ,KAAK,cAAe,MAC9BrF,KAAK2W,MAAMtR,KAAK,cAAe,MAC/BrF,KAAK8W,QAAQzR,KAAK,cAAe,MACjCrF,KAAK+W,SAAS1R,KAAK,cAAe,MAElCrF,KAAK+R,KAAK1M,KAAK,cAAe,MAC9BrF,KAAKkX,kBAAkB7R,KAAK,cAAe,MAAMA,KAAK,UAAW,MACjErF,KAAKmX,OAAO9R,KAAK,cAAe,MAAMA,KAAK,UAAW,MAEtDrF,KAAK6W,OAAOxR,KAAK,cAAe,MAChCrF,KAAKoX,oBAAoB/R,KAAK,cAAe,MAAMA,KAAK,UAAW,MACnErF,KAAKiR,aAAa5L,KAAK,cAAe,MAAMA,KAAK,UAAW,MAE5DrF,KAAKgX,YAAY3R,KAAK,cAAe,MACrCrF,KAAK0F,IAAIf,OAAO,QAAQU,KAAK,cAAe,MAG5CrF,KAAKgX,YAAYK,UAAU,iCAAiChS,KAAK,cAAe,MAEhFrF,KAAKgX,YAAYK,UAAU,uCAAuChS,KAAK,cAAe,K,EAK1F,SAAAsK,GACE,MAAM2H,EAAY5X,GAAoB,CACpC6X,UAAWvX,KAAK0F,IAChBkI,SAAU5N,KAAK4N,SACf4J,UAAW,aACXC,OAAQC,IAGVJ,EACGjS,KAAK,QAASrF,KAAKzG,OACnB8L,KAAK,SAAUrF,KAAK1G,QACpB+L,KAAK,UAAW,OAASrF,KAAKzG,MAAQ,IAAMyG,KAAK1G,QAEpD,MAAMqe,EAAajY,GAAoB,CACrC6X,UAAWvX,KAAKyF,KAChBmI,SAAU5N,KAAK4N,SACf4J,UAAW,aACXC,OAAQC,IAGVC,EAAWtS,KAAK,YAAa,aAAarF,KAAKxG,OAAOI,SAASoG,KAAKxG,OAAOC,QAE3E,MAAMme,EAAclY,GAAoB,CACtC6X,UAAWvX,KAAK2W,MAChB/I,SAAU5N,KAAK4N,SACf4J,UAAW,aACXC,OAAQC,IAGVE,EAAYvS,KAAK,YAAa,aAAarF,KAAKnG,QAAQD,SAASoG,KAAKnG,QAAQJ,QAE9EqE,EAAiCkC,KAAK6F,QAAS7F,KAAKzG,M,CAItD,SAAAkY,GACE,MAAMoG,EAAe7X,KAAK7F,SAAW,WAAa6F,KAAK/F,cAAgB+F,KAAKhG,cAC5E,MAAM8d,EACJ9X,KAAK5F,MAAM2d,OAAS/X,KAAK5F,MAAM2d,QAAU,GACrC/X,KAAK5F,MAAM2d,MACX/X,KAAKgY,cAAgBhY,KAAKgY,aAAaH,GACvC7X,KAAKgY,aAAaH,GAClB7X,KAAK5F,MAAM2d,MAEjBzZ,GAAS,CACPmH,KAAMzF,KAAK2W,MACXrd,OAAQ0G,KAAK+T,kBACbxa,MAAOyG,KAAKgU,iBACZiE,UAAWjY,KAAK7F,SAAW,WAAa6F,KAAKqV,GAAKrV,KAAK2V,EACvD/b,KAAM,MACNU,UAAW0F,KAAK1F,WAAa0F,KAAK7F,SAAW,WAAa6F,KAAKqV,GAAGK,YAAc,GAChF1M,OAAQhJ,KAAK5F,MAAM4O,OACnBzB,aAAcvH,KAAK5F,MAAMmN,aACzBwQ,MAAOD,EACPje,QAASmG,KAAKnG,QACdqe,MAAOlY,KAAK8V,WAAWpN,QACvBkF,SAAU5N,KAAK4N,U,CAInB,SAAA+D,GACE,MAAMkG,EAAe7X,KAAK7F,SAAW,WAAa6F,KAAKhG,cAAgBgG,KAAK/F,cAC5E,MAAM6d,EACJ9X,KAAK3F,MAAM0d,OAAS/X,KAAK3F,MAAM0d,QAAU,GACrC/X,KAAK3F,MAAM0d,MACX/X,KAAKgY,cAAgBhY,KAAKgY,aAAaH,GACvC7X,KAAKgY,aAAaH,GAClB7X,KAAK3F,MAAM0d,MAEjBzZ,GAAS,CACPmH,KAAMzF,KAAK2W,MACXrd,OAAQ0G,KAAK+T,kBACbxa,MAAOyG,KAAKgU,iBACZiE,UAAWjY,KAAK7F,SAAW,WAAa6F,KAAKsF,EAAItF,KAAK4V,GACtDhc,KAAM,KACNU,UAAW0F,KAAK1F,UAAY0F,KAAKnG,QAAQD,MAAQ,IAAM,GACvDoP,OAAQhJ,KAAK3F,MAAM2O,OACnBzB,aAAcvH,KAAK3F,MAAMkN,aACzBwQ,MAAOD,EACPje,QAASmG,KAAKnG,QACdqe,MAAOlY,KAAK+V,WAAWrN,QACvBkF,SAAU5N,KAAK4N,U,CAInB,qBAAA8D,GACE,MAAMmG,EAAe7X,KAAK7F,SAAW,WAAa6F,KAAK/F,cAAgB+F,KAAKhG,cAC5E,MAAM8d,EACJ9X,KAAK5F,MAAM2d,OAAS/X,KAAK5F,MAAM2d,QAAU,GACrC/X,KAAK5F,MAAM2d,MACX/X,KAAKgY,cAAgBhY,KAAKgY,aAAaH,GACvC7X,KAAKgY,aAAaH,GAClB7X,KAAK5F,MAAM2d,MAEjBxa,EAAe,CACb4a,QAASnY,KAAK8N,oBACdsK,SAAUpY,KAAK8V,WAAa9V,KAAK8V,WAAWpN,QAAU,MACtDtO,MAAO4F,KAAK7F,SAAW,WAAa6F,KAAKqV,IAAM,MAAQrV,KAAK2V,GAAK,MACjE0C,WAAYP,EAAYA,EAAY,I,CAIxC,qBAAAlG,GACE,MAAMiG,EAAe7X,KAAK7F,SAAW,WAAa6F,KAAKhG,cAAgBgG,KAAK/F,cAC5E,MAAM6d,EACJ9X,KAAK3F,MAAM0d,OAAS/X,KAAK3F,MAAM0d,QAAU,GACrC/X,KAAK3F,MAAM0d,MACX/X,KAAKgY,cAAgBhY,KAAKgY,aAAaH,GACvC7X,KAAKgY,aAAaH,GAClB7X,KAAK3F,MAAM0d,MAEjBva,EAAe,CACb2a,QAASnY,KAAK8N,oBACdwK,SAAUtY,KAAK+V,WAAa/V,KAAK+V,WAAWrN,QAAU,MACtDrO,MAAO2F,KAAK7F,SAAW,WAAa6F,KAAKsF,GAAK,MAAQtF,KAAK4V,IAAM,MACjE2C,WAAYT,EAAYA,EAAY,I,CAIxC,YAAAjG,GACEvT,GAAS,CACPmH,KAAMzF,KAAK2W,MACXrd,OAAQ0G,KAAK+T,kBACbxa,MAAOyG,KAAKgU,iBACZiE,UAAWjY,KAAK7F,SAAW,WAAa6F,KAAKqV,GAAKrV,KAAK2V,EACvD/b,KAAM,MACNC,QAASmG,KAAKnG,QACd2e,WAAYxY,KAAK7F,SAAW,WAAa6F,KAAKsF,EAAE,KAAO,EAAItF,KAAK4V,GAAG,KAAO,EAC1EsC,OAAQlY,KAAK7F,SAAW,YACxByT,SAAU5N,KAAK4N,WAEjBtP,GAAS,CACPmH,KAAMzF,KAAK2W,MACXrd,OAAQ0G,KAAK+T,kBACbxa,MAAOyG,KAAKgU,iBACZiE,UAAWjY,KAAK7F,SAAW,WAAa6F,KAAKsF,EAAItF,KAAK4V,GACtDhc,KAAM,KACNC,QAASmG,KAAKnG,QACd2e,WAAYxY,KAAK7F,SAAW,WAAa6F,KAAKqV,GAAG,KAAO,EAAIrV,KAAK2V,EAAE,KAAO,EAC1EuC,KAAMlY,KAAK7F,SAAW,WACtByT,SAAU5N,KAAK4N,U,CAKnB,SAAAmC,GACExR,GACEyB,KAAK4W,MACL5W,KAAK+T,kBACL/T,KAAKgU,iBACLhU,KAAK7F,SAAW,WAAa6F,KAAKqV,GAAKrV,KAAK2V,EAC5C,OACC3V,KAAK8V,WAAW1O,YACjBpH,KAAK5F,MAAMmN,aACXvH,KAAK4N,S,CAIT,SAAAoC,GACEzR,GACEyB,KAAK4W,MACL5W,KAAK+T,kBACL/T,KAAKgU,iBACLhU,KAAK7F,SAAW,WAAa6F,KAAKsF,EAAItF,KAAK4V,GAC3C,MACC5V,KAAK+V,WAAW3O,YACjBpH,KAAK3F,MAAMkN,aACXvH,KAAK4N,S,CAIT,mBAAAqC,GACE,MAAMwI,EAAsBzY,KAAK+R,KAAKsF,UAAU,0BAA0B/D,KAAKtT,KAAKG,MAAMoE,GAAKA,EAAE+P,MAEjGtU,KAAK0Y,iBAAmBD,EAAoBE,QAAQjC,OAAO,KAC3D1W,KAAK4Y,gBAAkBH,EAAoBI,OAC3C7Y,KAAKkX,kBAAoBuB,EAAoBK,MAAM9Y,KAAK0Y,kBAExD,MAAMK,EAAwB/Y,KAAKkX,kBAChCG,UAAU,kBACV/D,MAAK/O,GAAKA,EAAEiR,SAAQjR,GAAKA,EAAEvE,KAAKjG,mBAEnCiG,KAAK2Y,MAAQI,EAAsBJ,QAAQjC,OAAO,QAClD1W,KAAK6Y,KAAOE,EAAsBF,OAClC7Y,KAAKmX,OAAS4B,EAAsBD,MAAM9Y,KAAK2Y,OAE/C3Y,KAAKgZ,UAAYhZ,KAAK2Y,MAAMM,OAC5BjZ,KAAKkZ,SAAWlZ,KAAK6Y,KAAKI,OAE1B,MAAME,EAA2BnZ,KAAK6W,OAAOQ,UAAU,KAAK/D,KAAKtT,KAAKG,MAAMoE,GAAKA,EAAE+P,MAEnFtU,KAAKoZ,mBAAqBD,EAAyBR,QAAQjC,OAAO,KAClE1W,KAAKqZ,kBAAoBF,EAAyBN,OAClD7Y,KAAKoX,oBAAsB+B,EAAyBL,MAAM9Y,KAAKoZ,oBAE/D,MAAME,EAAoBtZ,KAAKoX,oBAC5BC,UAAU,QACV/D,MAAK/O,GAAKA,EAAEiR,SAAQjR,GAAKA,EAAEvE,KAAKjG,mBACnCiG,KAAKuZ,YAAcD,EAAkBX,QAAQjC,OAAO,QACpD1W,KAAKwZ,WAAaF,EAAkBT,OACpC7Y,KAAKiR,aAAeqI,EAAkBR,MAAM9Y,KAAKuZ,Y,CAInD,eAAApJ,GACEnQ,KAAK2Y,MAAMc,YACX,MAAMC,EAAc1Z,KAAK7F,SAAW,WAAa,IAAM,IACvD,MAAMwf,EAAmB3Z,KAAK7F,SAAW,WAAa,QAAU,SAChE,MAAMyf,EAAY5Z,KAAK7F,SAAW,WAAa,IAAM,IACrD,MAAM0f,EAAiB7Z,KAAK7F,SAAW,WAAa,SAAW,QAC/D,MAAM2f,EAAS9Z,KAAK7F,SAAW,WAAa,MAAQ,MAEpD6F,KAAK0Y,iBACFrT,KAAK,QAAS,yBACdG,QAAQ,WAAY,MACpBH,KAAK,aAAad,GACjBvE,KAAK7F,SAAW,WAAa,aAAe6F,KAAKqV,GAAG9Q,EAAE+P,KAAO,MAAQ,eAAiBtU,KAAK4V,GAAGrR,EAAE+P,KAAO,MAExGyF,MAAK,CAACC,EAAGxV,EAAGC,KACX/H,EAAwB+H,EAAED,GAAG,IAGjCxE,KAAK2Y,MACFtT,KAAK,QAAS,iBACdA,KAAK,UAAWrF,KAAKpE,eAAiBoE,KAAKpF,OAAS,MACpDyK,KAAK,KAAMrF,KAAKnF,eAChBwK,KAAK,KAAMrF,KAAKnF,eAChBkf,MAAK,CAACE,EAAIzV,EAAGC,KACZ/H,EAAwB+H,EAAED,GAAG,IAE9B0V,GAAG,SAAUla,KAAKpE,eAAiB,CAAC2I,EAAGC,EAAGC,IAAMzE,KAAKma,eAAe5V,EAAGE,EAAED,IAAM,MAC/E0V,GAAG,aAAcla,KAAKpE,eAAiB,CAAC2I,EAAGC,EAAGC,IAAMzE,KAAKoa,eAAe7V,EAAGE,EAAED,IAAM,MACnF0V,GAAG,YAAala,KAAKpE,eAAiB,IAAMoE,KAAKqa,oBAAsB,MACvEhV,KAAK,QAAQ,CAACd,EAAGC,KAChB,MAAM8V,EACJta,KAAKrE,gBACLqE,KAAKrE,eAAekJ,OAAS,GAC7BzG,GAAamG,EAAGvE,KAAKrE,eAAgBqE,KAAK8E,sBAC5C,MAAMyV,EAAUva,KAAKgF,gBAAkB3G,GAAakG,EAAGvE,KAAKgF,eAAgBhF,KAAK8E,sBACjF,MAAM0V,EAAYxa,KAAKmW,SAAS3R,GAChC,OAAO8V,GAAWta,KAAKtF,WAAWqK,MAC9BzF,GAAWU,KAAKtF,WAAWqK,QAAU/E,KAAKtF,WAAWqK,MACrDuV,EACAE,EACAD,GAAWva,KAAKvF,WAAWsK,MAC3BzF,GAAWU,KAAKvF,WAAWsK,QAAU/E,KAAKvF,WAAWsK,MACrDyV,CAAS,IAEdnV,KAAK,UAAW,GAChBA,KAAKuU,GAAWrV,GAAKvE,KAAK4Z,GAAWzE,KAAK2E,GAAQ,EAAGvV,EAAEvE,KAAKhG,mBAC5DqL,KACCwU,GACAtV,GACE4Q,KAAKsF,IACHza,KAAK7F,SAAW,WACZ6F,KAAK4Z,GAAW,GAAK5Z,KAAK4Z,GAAWrV,EAAEvE,KAAKhG,gBAC5CgG,KAAK4Z,GAAWrV,EAAEvE,KAAKhG,gBAAkBgG,KAAK4Z,GAAW,KAC1D,OAERvU,KAAKqU,GAAanV,GAAKvE,KAAK0Z,EAAc,KAAKnV,EAAEvE,KAAKjG,oBACtDsL,KAAKsU,EAAkB3Z,KAAK0Z,EAAc,KAAKhE,aAElD,IAAK1V,KAAK6N,SAAU,CAClB7N,KAAK2Y,MACFnT,QAAQ,WAAY,MACpBH,KAAKqU,GAAa,CAACnV,EAAGC,EAAGC,KACxB,MAAMiW,EAAI/V,EAAOF,EAAED,GAAGmW,YACtB,MAAMC,EAAgBF,EAAElV,QAAQ,YAChC,IAAIqV,EAASD,EACT5a,KAAK0Z,EAAc,KAAKgB,EAAEI,QAAQxG,KAClCtU,KAAK0Z,EAAc,KAAKnV,EAAEvE,KAAKjG,kBACnC,MAAMghB,EAAUH,EACZ5a,KAAK0Z,EAAc,KAAKhE,YAAc,EACtC1V,KAAK0Z,EAAc,KAAKhE,YAAc,EAC1C,MAAMsF,GAAYH,EAASE,IAAY/a,KAAKgU,iBAAmB,GAC/D6G,EAASD,EAAgB,EAAIC,EAC7B,MAAMI,EAAQJ,EAASE,EAAUC,EACjC,OAAOC,CAAK,IAEb5V,KAAKsU,EAAkB,E,CAE5B3Z,KAAK0Y,iBAAiBwC,QACtBlb,KAAK2Y,MAAMuC,O,CAGb,gBAAA9K,GACEpQ,KAAKmX,OAAOsC,YAEZzZ,KAAKmX,OACFgE,WAAW,WACXvN,UAAS,CAACoM,EAAGxV,EAAGC,KACf,GAAIE,EAAOF,EAAED,IAAIgB,QAAQ,YAAa,CACpCb,EAAOF,EAAED,IAAIgB,QAAQ,WAAY,OACjC,OAAOxF,KAAK4N,Q,CAEd,OAAO,CAAC,IAETwN,KAAK1D,GACLrS,KAAK,WAAWd,GACfpG,GAAiBoG,EAAG,EAAGvE,KAAKhF,aAAcgF,KAAKgF,eAAgBhF,KAAKrE,eAAgBqE,KAAK8E,uB,CAI/F,cAAAuL,GACErQ,KAAK4Y,gBAAgBa,YACrBzZ,KAAK6Y,KAAKY,YAEV,MAAM4B,EAAcrb,KAAK7F,SAAW,WAAa,IAAM,IACvD,MAAMmhB,EAAmBtb,KAAK7F,SAAW,WAAa,QAAU,SAChE,MAAMohB,EAAuB,cAAgBD,EAAiB,GAAGE,cAAgBF,EAAiBG,UAAU,GAE5Gzb,KAAK6Y,KACFsC,WAAW,QACXvN,SAAS5N,KAAK4N,UACdwN,KAAK1D,GACLrS,KAAK,UAAW,GAChBA,KAAKgW,GAAa,CAACpB,EAAIzV,EAAGC,KACzB,MAAMiX,EAAO/W,EAAOF,EAAED,IACtB,IAAIyW,GAASS,EAAKrW,KAAKgW,KAAgBK,EAAKrW,KAAKiW,GAAoB,EACrEL,GACGS,EAAKrW,KAAKgW,KAAiBK,EAAKrW,KAAKiW,GAAoB,GAAML,GAASjb,KAAKub,GAAwB,IACxG,OAAON,CAAK,IAEb5V,KAAKiW,EAAkB,GAE1Btb,KAAKkZ,UAAYlZ,KAAK4Y,gBAAgBvB,UAAU,kBAAkB4B,OAElEjZ,KAAK4Y,gBACFvB,UAAU,kBACV8D,WAAW,iBACXvN,SAAS5N,KAAK4N,SAAW,KACzBwN,KAAK1D,GACLrS,KAAK,UAAW,GAChBA,KAAKgW,GAAa,CAACrB,EAAGxV,EAAGC,KACxB,MAAMiW,EAAIjW,EAAED,GAAGmW,WACf,MAAME,EAASH,EAAEiB,UAAUC,QAAQC,cAAcC,OAAOC,EACxD,MAAMhB,EAAU/a,KAAKqb,EAAc,KAAK3F,YAAc,EACtD,MAAMsF,GAAYH,EAASE,IAAY/a,KAAKub,GAAwB,GACpE,MAAMN,EAAQF,EAAUC,EACxB,OAAOC,CAAK,IAEb5V,KAAKiW,EAAkB,GAE1Btb,KAAKmX,OACFgE,WAAW,0BACXvN,SAAS5N,KAAK4N,UACdwN,KAAK1D,GACLsE,KAAK3c,IAAkB,KAEtB,MAAM4c,EAAgBre,EAAiBoC,KAAK2W,MAAMhR,QAElD3F,KAAK6Y,KAAKqD,SACVlc,KAAK4Y,gBAAgBsD,SAErBlc,KAAK0Q,6BAEL1Q,KAAKgS,0BAELhS,KAAK4Q,wBAELjT,EAAkB,CAChBwe,YAAanc,KAAK2W,MAAMhR,OACxBsW,iBAEA,G,CAIR,cAAAxL,GACE,MAAMiJ,EAAc1Z,KAAK7F,SAAW,WAAa,IAAM,IACvD,MAAMwf,EAAmB3Z,KAAK7F,SAAW,WAAa,QAAU,SAChE,MAAMyf,EAAY5Z,KAAK7F,SAAW,WAAa,IAAM,IACrD,MAAM0f,EAAiB7Z,KAAK7F,SAAW,WAAa,SAAW,QAC/D,MAAM2f,EAAS9Z,KAAK7F,SAAW,WAAa,MAAQ,MAEpD6F,KAAKkX,kBACFiE,WAAW,UACXvN,SAAS5N,KAAK4N,UACdwN,KAAK1D,GACLrS,KAAK,aAAad,GACjBvE,KAAK7F,SAAW,WAAa,aAAe6F,KAAKqV,GAAG9Q,EAAE+P,KAAO,MAAQ,eAAiBtU,KAAK4V,GAAGrR,EAAE+P,KAAO,MAExG0H,KAAK3c,IAAkB,KACtBW,KAAKkX,kBAAkB1R,QAAQ,WAAY,MAAM,IAGrDxF,KAAKmX,OACF3R,QAAQ,oBAAoB,CAACjB,EAAGC,EAAGC,KAClC,MAAM2X,EAAqBjgB,EAA0BwI,EAAOF,EAAED,IAAK,CACjE,CACEa,KAAMqU,EACN2C,QAAS,KACTC,SAAUtc,KAAK0Z,EAAc,KAAKnV,EAAEvE,KAAKjG,mBAE3C,CACEsL,KAAMsU,EACN0C,QAAS,KACTC,SAAUtc,KAAK0Z,EAAc,KAAKhE,aAEpC,CACErQ,KAAMuU,EACNyC,QAAS,KACTC,SAAUtc,KAAK4Z,GAAWzE,KAAK2E,GAAQ,EAAGvV,EAAEvE,KAAKhG,kBAEnD,CACEqL,KAAMwU,EACNwC,QAAS,KACTC,SACEnH,KAAKsF,IACHza,KAAK7F,SAAW,WACZ6F,KAAK4Z,GAAW,GAAK5Z,KAAK4Z,GAAWrV,EAAEvE,KAAKhG,gBAC5CgG,KAAK4Z,GAAWrV,EAAEvE,KAAKhG,gBAAkBgG,KAAK4Z,GAAW,KAC1D,QAGX,OAAOwC,CAAkB,IAE1B/W,KACC,QAAQqU,KACRnV,GACEvE,KAAK7F,SAAW,WACZ6F,KAAK0Z,EAAc,KAAKnV,EAAEvE,KAAKjG,kBAC/BiG,KAAK0Z,EAAc,KAAKnV,EAAEvE,KAAKjG,oBAEtCsL,KACC,oBACAd,IAAMvE,KAAK7F,SAAW,WAAa6F,KAAKqV,GAAG9Q,EAAEvE,KAAK/F,gBAAkB,GAAK+F,KAAKnG,QAAQD,KAAOoG,KAAKxG,OAAOI,OAE1GyL,KACC,oBACAd,IAAMvE,KAAK7F,SAAW,WAAa,EAAI6F,KAAK4V,GAAGrR,EAAEvE,KAAK/F,iBAAmB+F,KAAKnG,QAAQJ,IAAMuG,KAAKxG,OAAOC,MAEzG4L,KAAK,QAAQsU,IAAoB3Z,KAAK0Z,EAAc,KAAKhE,aACzDrQ,KAAK,QAAQuU,KAAarV,GAAKvE,KAAK4Z,GAAWzE,KAAK2E,GAAQ,EAAGvV,EAAEvE,KAAKhG,mBACtEqL,KACC,QAAQwU,KACRtV,GACE4Q,KAAKsF,IACHza,KAAK7F,SAAW,WACZ6F,KAAK4Z,GAAW,GAAK5Z,KAAK4Z,GAAWrV,EAAEvE,KAAKhG,gBAC5CgG,KAAK4Z,GAAWrV,EAAEvE,KAAKhG,gBAAkBgG,KAAK4Z,GAAW,KAC1D,OAERuB,WAAW,UACXvN,UAAS,CAACoM,EAAGxV,EAAGC,IACRE,EAAOF,EAAED,IAAIgB,QAAQ,YAAcxF,KAAK4N,SAAW,EAAI5N,KAAK4N,WAEpE2O,OAAM,CAACvC,EAAGxV,EAAGC,IACLE,EAAOF,EAAED,IAAIgB,QAAQ,YAAcxF,KAAK4N,SAAW,EAAI,IAE/DwN,KAAK1D,GACLrS,KAAKuU,GAAWrV,GAAKvE,KAAK4Z,GAAWzE,KAAK2E,GAAQ,EAAGvV,EAAEvE,KAAKhG,mBAC5DqL,KACCwU,GACAtV,GACE4Q,KAAKsF,IACHza,KAAK7F,SAAW,WACZ6F,KAAK4Z,GAAW,GAAK5Z,KAAK4Z,GAAWrV,EAAEvE,KAAKhG,gBAC5CgG,KAAK4Z,GAAWrV,EAAEvE,KAAKhG,gBAAkBgG,KAAK4Z,GAAW,KAC1D,OAERvU,KAAKqU,GAAanV,GAAKvE,KAAK0Z,EAAc,KAAKnV,EAAEvE,KAAKjG,oBACtDsL,KAAKsU,EAAkB3Z,KAAK0Z,EAAc,KAAKhE,aAC/CsG,KAAK3c,IAAkB,KACtBW,KAAKmX,OAAO3R,QAAQ,mBAAoB,OAExCxF,KAAKsS,yBACLtS,KAAKoR,mCAELzT,EAAkB,CAChBwe,YAAanc,KAAK2W,MAAMhR,SAG1B3F,KAAKwc,mBAAmB/O,KAAK,CAAE5H,QAAS7F,KAAK6F,SAAU,G,CAI7D,sBAAAyM,GACEhW,EAAmB0D,KAAK0F,IAAIC,QAG5B3F,KAAKmX,OAAOsC,UAAU,WAMtBzZ,KAAKmX,OACF9R,KAAK,WAAWd,GACfpG,GAAiBoG,EAAG,EAAGvE,KAAKhF,aAAcgF,KAAKgF,eAAgBhF,KAAKrE,eAAgBqE,KAAK8E,wBAE1FO,KAAK,QAAQ,CAACd,EAAGC,KAChB,MAAM8V,EACJta,KAAKrE,gBACLqE,KAAKrE,eAAekJ,OAAS,GAC7BzG,GAAamG,EAAGvE,KAAKrE,eAAgBqE,KAAK8E,sBAC5C,MAAMyV,EAAUva,KAAKgF,gBAAkB3G,GAAakG,EAAGvE,KAAKgF,eAAgBhF,KAAK8E,sBACjF,MAAM0V,EAAYxa,KAAKmW,SAAS3R,GAChC,OAAO8V,GAAWta,KAAKtF,WAAWqK,MAC9BzF,GAAWU,KAAKtF,WAAWqK,QAAU/E,KAAKtF,WAAWqK,MACrDuV,EACAE,EACAD,GAAWva,KAAKvF,WAAWsK,MAC3BzF,GAAWU,KAAKvF,WAAWsK,QAAU/E,KAAKvF,WAAWsK,MACrDyV,CAAS,IAEdnV,KAAK,UAAU,CAACd,EAAGC,EAAGC,KACrB,IAAKzE,KAAK1E,cAAcmQ,cAAgB9G,EAAOF,EAAED,IAAIgB,QAAQ,oBAAqB,CAChF,MAAM8U,EACJta,KAAKrE,gBACLqE,KAAKrE,eAAekJ,OAAS,GAC7BzG,GAAamG,EAAGvE,KAAKrE,eAAgBqE,KAAK8E,sBAC5C,MAAMyV,EAAUva,KAAKgF,gBAAkB3G,GAAakG,EAAGvE,KAAKgF,eAAgBhF,KAAK8E,sBACjF,MAAM0V,EAAYxa,KAAKiF,eAAeT,GACtC,MAAMiY,EAAQnC,EAAU,QAAUC,IAAY5V,EAAOF,EAAED,IAAIgB,QAAQ,oBAAsB,QAAU,OACnG,MAAMT,EACJuV,GAAWta,KAAKtF,WAAWqK,MACvBzF,GAAWU,KAAKtF,WAAWqK,QAAU/E,KAAKtF,WAAWqK,MACrDuV,EACAE,EACAD,GAAWva,KAAKvF,WAAWsK,MAC3BzF,GAAWU,KAAKvF,WAAWsK,QAAU/E,KAAKvF,WAAWsK,MACrDyV,EACN,GAAIiC,IAAU,QAAS,CACrBpgB,EAAiB,CACfqgB,aAAcjY,EAAED,GAChBoB,GAAI5F,KAAK6F,QACTyO,IAAK/P,EAAEvE,KAAKjG,iBAAmBwK,EAAEvE,KAAK/F,eACtC0iB,YAAa3c,KAAKvF,WAAWkiB,YAC7BC,KAAM7X,G,CAGV,OAAO/E,KAAKmE,QAAQsY,EAAQ1X,E,CAE9B,OAAO,IAAI,IAEfpH,EAAkB,CAChBwe,YAAanc,KAAK2W,MAAMhR,SAI1BlH,GAA0B,CACxBgH,KAAMzF,KAAK8W,QACXxJ,SAAUtN,KAAK6F,QACfiB,gBAAiB9G,KAAK8E,qBACtB7K,cAAe+F,KAAKjG,gBACpBiL,eAAgBhF,KAAKgF,eACrBrJ,eAAgBqE,KAAKrE,eACrBlB,WAAYuF,KAAKvF,WACjBC,WAAYsF,KAAKtF,WACjBM,aAAcgF,KAAKhF,eAIrBgF,KAAKiR,aAAawI,UAAU,WAC5B,MAAMoD,EAAoB7c,KAAK/E,UAAUkK,YAAc,QAAUnF,KAAK/E,UAAUkO,kBAChF,MAAM2T,EAAW9c,KAAK/E,UAAUkK,YAAc,QAAUnF,KAAK/E,UAAUkO,kBAEvEnJ,KAAK+c,oBAAoB/c,KAAKiR,aAAc4L,GAG5C,GAAIA,EAAmB,CACrB,MAAMG,EAAchd,KAAKiR,aAAagM,QAAO,CAACjD,EAAGxV,EAAGC,IAAME,EAAOF,EAAED,IAAIgB,QAAQ,qBAC/E,MAAM0X,EAAgBld,KAAKiR,aACxBgM,QAAO,CAACjD,EAAGxV,EAAGC,IAAME,EAAOF,EAAED,IAAIgB,QAAQ,uBACzCH,KAAK,cAAeyX,GACpBzX,KAAK,cAAeyX,GAGvB,GAAII,EAAcjE,OAAS,EAAG,CAC5BjZ,KAAKmd,QAAUvd,GAAsB,CACnCud,QAASnd,KAAKmd,QACdC,eAAgBF,EAChBG,WAAY,GACZC,eAAgB,CAAC,UACjBC,QAAS,CAAC,GACVC,UAAW,CAAC,OACZvE,KAAM,CAACtZ,GAAQK,KAAKzG,MAAO,GAAIoG,GAAQK,KAAK1G,OAAQ,IACpDwjB,SAAU,MACVW,WAAY,OAIdP,EAAc1X,QAAQ,oBAAqB,M,CAI7C,GAAIwX,EAAY/D,OAAS,EAAG,CAC1BjZ,KAAKgR,qBAAqBgM,EAAa,MAAO,MAAO,MAErDA,EAAYxX,QAAQ,kBAAmB,M,GAK7C,eAAA+M,GACEvS,KAAK+c,oBAAoB/c,KAAKiR,a,CAGhC,mBAAA8L,CAAoBxF,EAAWsF,GAC7B,MAAMa,EAAU1d,KAAK/E,UAAUyN,QAAU,EAAI,EAC7C,MAAMgR,EAAc1Z,KAAK7F,SAAW,WAAa,IAAM,IACvD,MAAMwf,EAAmB3Z,KAAK7F,SAAW,WAAa,QAAU,SAChE,MAAMyf,EAAY5Z,KAAK7F,SAAW,WAAa,IAAM,IACrD,MAAM0f,EAAiB7Z,KAAK7F,SAAW,WAAa,SAAW,QAC/D,MAAMwjB,EAAgB3d,KAAK0Z,EAAc,KAAKhE,YAAc1V,KAAKG,KAAK,GAAGqV,OAAO3Q,OAEhF0S,EAAUlS,KAAK,WAAW,CAACd,EAAGC,EAAGC,KAC/B,MAAMmZ,GAAejZ,EAAOF,EAAED,IAAIa,KAAK,WACvC,MAAMwY,EAAkBlZ,EAAOF,EAAED,IAAIsZ,MAAM,cAC3C,MAAMC,EAAa,GACnBA,EAAWpE,GACT3Z,KAAK/E,UAAUkK,YAAc,QAAUnF,KAAK/E,UAAUkK,YAAc,SAChEnF,KAAK0Z,EAAc,KAAKhE,YACxBiI,EACN,GAAI3d,KAAK/E,UAAUkK,YAAc,QAAUnF,KAAK/E,UAAUkK,YAAc,SAAU,CAChF4Y,EAAWlE,GAAkB1E,KAAKsF,IAChCza,KAAK7F,SAAW,WACZ6F,KAAK4Z,GAAW,GAAK5Z,KAAK4Z,GAAWrV,EAAEvE,KAAKhG,gBAC5CgG,KAAK4Z,GAAWrV,EAAEvE,KAAKhG,gBAAkBgG,KAAK4Z,GAAW,G,CAGjE,MAAMoE,EACJhe,KAAK/E,UAAUkK,YAAc,QAC7BnF,KAAK/E,UAAUkO,mBACfnJ,KAAK1E,cAAcgQ,iBACnBpP,EAAmB,CACjB7C,KAAMsF,GAAgB4F,EAAGvE,KAAK2T,mBAAoB3T,KAAK/E,UAAU+N,QACjE+U,aACAE,SAAU,KAEd,MAAMC,EAAgBF,EAClB7f,GACEoG,EACAmZ,EACA1d,KAAKhF,aACLgF,KAAKgF,eACLhF,KAAKrE,eACLqE,KAAK8E,sBACH,EACF,EACA,EACF,EACJ,IACIoZ,IAAkB,GAAKL,IAAoB,UAAaD,IAAgBM,IAC1ErB,EACA,CACA,GAAIqB,IAAkB,EAAG,CACvBvZ,EAAOF,EAAED,IACNgB,QAAQ,kBAAmB,MAC3BsY,MAAM,aAAc,K,KAClB,CACLnZ,EAAOF,EAAED,IAAIgB,QAAQ,oBAAqB,K,EAG9C,OAAO0Y,CAAa,G,CAIxB,gCAAA9M,GACEpR,KAAKiR,aAAa5L,KAAK,QAAQ,CAACd,EAAGC,EAAGC,IAC7BzE,KAAKsE,qBAAqBC,EAAGC,EAAGC,I,CAI3C,iBAAA2N,GACEpS,KAAKmX,OACFgE,WAAW,WACXvN,SAAS5N,KAAK4N,UACdwN,KAAK1D,GACLrS,KAAK,KAAMrF,KAAKnF,eAChBwK,KAAK,KAAMrF,KAAKnF,c,CAoDrB,gBAAAsW,GACEnR,KAAKmX,OAAO3R,QAAQ,aAAa,CAACjB,EAAGC,EAAGC,KACtC,IAAI0Z,EAAWhgB,GAAiBoG,EAAG,KAAM,MAAO,GAAIvE,KAAKrE,eAAgBqE,KAAK8E,sBAC9EqZ,EAAWne,KAAKrE,gBAAkBqE,KAAKrE,eAAekJ,OAASsZ,EAAW,MAC1E,MAAMC,EAAape,KAAK1E,cAAc0Q,qBACtCnO,EAAiC4G,EAAED,GAAI2Z,EAAUC,GACjD,OAAOD,CAAQ,G,CAInB,YAAA9M,GACErR,KAAKmX,OAAO9R,KAAK,UAAWrF,KAAKpE,eAAiBoE,KAAKpF,OAAS,MAChEoF,KAAKiR,aAAa5L,KAAK,UAAWrF,KAAKpE,eAAiBoE,KAAKpF,OAAS,K,CAGxE,eAAA0V,GACE,MAAMoJ,EAAc1Z,KAAK7F,SAAW,WAAa,IAAM,IACvD,MAAMujB,EAAU1d,KAAK/E,UAAUyN,QAAU,EAAI,EAE7C1I,KAAKoZ,mBACF/T,KAAK,QAAS,+BACdG,QAAQ,WAAY,MACpBH,KAAK,aAAad,GACjBvE,KAAK7F,SAAW,WAAa,aAAe6F,KAAKqV,GAAG9Q,EAAE+P,KAAO,MAAQ,eAAiBtU,KAAK4V,GAAGrR,EAAE+P,KAAO,MAG3GtU,KAAKuZ,YACFlU,KAAK,QAAS,2BACdG,QAAQ,WAAY,MACpBA,QAAQ,qCAAsC,OAC9CA,QAAQ,mCAAoC,OAC5CA,QAAQ,2BAA6BxF,KAAK7F,OAAQ,MAClDkL,KAAK,UAAWrF,KAAKpE,eAAiBoE,KAAKpF,OAAS,MACpDyK,KAAK,WAAWd,GACfpG,GACEoG,EACAmZ,EACA1d,KAAKhF,aACLgF,KAAKgF,eACLhF,KAAKrE,eACLqE,KAAK8E,sBACH,EACA,EACAuZ,OAAOC,UAEZjZ,KAAK,OAAQrF,KAAKsE,sBAClB4V,GAAG,SAAUla,KAAKpE,eAAiB,CAAC2I,EAAGC,EAAGC,IAAMzE,KAAKma,eAAe5V,EAAGE,EAAED,IAAM,MAC/E0V,GAAG,aAAcla,KAAKpE,eAAiB,CAAC2I,EAAGC,EAAGC,IAAMzE,KAAKoa,eAAe7V,EAAGE,EAAED,IAAM,MACnF0V,GAAG,YAAala,KAAKpE,eAAiB,IAAMoE,KAAKqa,oBAAsB,MAE1Era,KAAKuZ,YAAYlU,KAAKqU,GAAa,CAACnV,EAAGC,EAAGC,KACxC,MAAM8Z,EAAY7E,EAAc,IAChC,MAAM8E,EAAW9E,EAAc,IAC/B,MAAM+E,EAAU/E,IAAgB,IAAM,mBAAqB,oBAC3D,MAAMgB,EAAI/V,EAAOF,EAAED,GAAGmW,YACtB,MAAMC,EAAgBF,EAAElV,QAAQ,YAChC,IAAIqV,EAASD,EAAgB5a,KAAKue,GAAW7D,EAAEI,QAAQxG,KAAOtU,KAAKwe,GAAUja,EAAEvE,KAAKjG,kBACpF,MAAMghB,EAAUH,EAAgB5a,KAAKue,GAAW7I,YAAc,EAAI1V,KAAKwe,GAAU9I,YAAc,EAC/F,MAAMsF,GAAYH,EAASE,IAAY/a,KAAKye,GAAW,GACvD5D,EAASD,EAAgB,EAAIC,EAC7B,MAAMI,EAAQJ,EAASE,EAAUC,EACjC,OAAOC,CAAK,G,CAIhB,gBAAA1K,GACEvQ,KAAKiR,aAAawI,YAClB,MAAMiE,EAAU1d,KAAK/E,UAAUyN,QAAU,EAAI,EAE7C1I,KAAKiR,aACFkK,WAAW,WACXvN,UAAS,CAACoM,EAAGxV,EAAGC,KACf,GAAIE,EAAOF,EAAED,IAAIgB,QAAQ,YAAa,CAEpC,OAAOxF,KAAK4N,SAAW,C,CAEzB,OAAO,CAAC,IAET2O,OAAM,CAACvC,EAAGxV,EAAGC,KACZ,GAAIE,EAAOF,EAAED,IAAIgB,QAAQ,YAAa,CAEpC,OAAQxF,KAAK4N,SAAW,EAAK,C,CAE/B,OAAO,CAAC,IAETwN,KAAK1D,GACLrS,KAAK,WAAWd,GACfpG,GACEoG,EACAmZ,EACA1d,KAAKhF,aACLgF,KAAKgF,eACLhF,KAAKrE,eACLqE,KAAK8E,sBACH,EACA,EACA,IAELkX,KAAK3c,IAAkB,KACtBW,KAAKiR,aAAazL,QAAQ,WAAY,MAAM,G,CAKlD,cAAAgL,GACExQ,KAAKqZ,kBACFhC,UAAU,QACV8D,WAAW,QACXC,KAAK1D,GACL9J,SAAS5N,KAAK4N,SAAW,GACzBvI,KAAK,UAAW,GAChB2W,KAAK3c,IAAkB,KACtBW,KAAKqZ,kBAAkB6C,QAAQ,IAGnClc,KAAKwZ,WACF2B,WAAW,QACXC,KAAK1D,GACL9J,SAAS5N,KAAK4N,SAAW,GACzBvI,KAAK,UAAW,GAChB6W,Q,CAGL,eAAAnL,GACE/Q,KAAKiR,aAAa5X,MAAKkL,GAAK5F,GAAgB4F,EAAGvE,KAAK2T,mBAAoB3T,KAAK/E,UAAU+N,S,CAGzF,gBAAAqJ,GAEErS,KAAKoX,oBACF5R,QAAQ,qCAAsC,OAC9CA,QAAQ,mCAAoC,OAC5CA,QAAQ,2BAA6BxF,KAAK7F,OAAQ,MAErD,MAAMukB,EAAsBhf,GAAoB,CAC9C6X,UAAWvX,KAAKoX,oBAChBxJ,SAAU5N,KAAK4N,SACf4J,UAAW,0BACXC,OAAQC,IAGVgH,EACGrZ,KAAK,aAAad,GACjBvE,KAAK7F,SAAW,WAAa,aAAe6F,KAAKqV,GAAG9Q,EAAE+P,KAAO,MAAQ,eAAiBtU,KAAK4V,GAAGrR,EAAE+P,KAAO,MAExG0H,KAAK3c,IAAkB,KACtBW,KAAKoX,oBAAoB5R,QAAQ,WAAY,MAAM,IAIvD,MAAMmZ,EAAe3e,KAAKuZ,YAAY0D,QAAO,CAACjD,EAAGxV,EAAGC,IAC3CE,EAAOF,EAAED,IAAIgB,QAAQ,cAE9B,MAAMoZ,EAAe5e,KAAKiR,aAAagM,QAAO,CAACjD,EAAGxV,EAAGC,KAC3CE,EAAOF,EAAED,IAAIgB,QAAQ,cAM/B,GAAImZ,EAAa1F,OAAS,EAAG,CAC3BjZ,KAAKgR,qBAAqB2N,EAAc,MAAO,KAAM,OACrD3e,KAAKgR,qBAAqB4N,EAAc,KAAM,MAAO,K,KAChD,CAGL5e,KAAKgR,qBAAqB4N,EAAc,KAAM,KAAM,M,EAIxD,oBAAA5N,CAAqBuG,EAAWsH,EAAgBC,EAAeC,GAC7D,MAAMrF,EAAc1Z,KAAK7F,SAAW,WAAa,IAAM,IACvD,MAAMwf,EAAmB3Z,KAAK7F,SAAW,WAAa,QAAU,SAChE,MAAMyf,EAAY5Z,KAAK7F,SAAW,WAAa,IAAM,IACrD,MAAM0f,EAAiB7Z,KAAK7F,SAAW,WAAa,SAAW,QAC/D,MAAM2f,EAAS9Z,KAAK7F,SAAW,WAAa,MAAQ,MACpD,MAAM2iB,EAAW9c,KAAK/E,UAAUkK,YAAc,QAAUnF,KAAK/E,UAAUkO,kBACvE,IAAI6V,EAAa,GACjB,MAAMC,EAAoB,CACxBC,SAAU,CACRzlB,IAAK,CACH6jB,eAAgB,CAAC,MAAO,UACxBC,QAAS,CAAC,EAAG,IAEf4B,OAAQ,CACN7B,eAAgB,CAAC,SAAU,OAC3BC,QAAS,CAAC,EAAGyB,EAAa,IAE5BtlB,OAAQ,CACN4jB,eAAgB,CAAC,SAAU,OAC3BC,QAAS,CAAC,EAAGyB,EAAa,KAG9BI,WAAY,CACVzlB,MAAO,CACL2jB,eAAgB,CAAC,QAAS,QAC1BC,QAAS,CAAC,EAAG,IAEf4B,OAAQ,CACN7B,eAAgB,CAAC,SAAU,SAC3BC,QAAS,CAAC,EAAG,KAEf3jB,KAAM,CACJ0jB,eAAgB,CAAC,OAAQ,SACzBC,QAAS,CAAC,EAAG,OAKnB,MAAMnY,EAAqBpF,KAAK/E,WAAa+E,KAAK/E,UAAUmK,mBAC5D,MAAMia,EACJja,GAAsB6Z,EAAkBjf,KAAK7F,QAAQiL,GACjDpF,KAAK/E,UAAUmK,mBACfpF,KAAK7F,SAAW,WAChB,MACA,QAINod,EACGuG,MAAM,cAAc,CAAC9D,EAAGxV,EAAGC,IAC1BzE,KAAK/E,UAAUkK,YAAc,QAAUnF,KAAK/E,UAAUkO,kBAClDxE,EAAOF,EAAED,IAAIsZ,MAAM,cACnB,OAELzY,KAAK,QAAQqU,KAAe,CAACnV,EAAGC,EAAGC,KAClC,GAAID,IAAM,EAAG,CAEX,MAAM8a,EAAc7a,EAAED,GACtB,MAAMsZ,EAAQyB,iBAAiBD,GAC/B,MAAMrB,EAAW/J,WAAW4J,EAAMG,UAClCe,EAAa7J,KAAKH,IAAIiJ,EAAW,EAAG,E,CAGtC,OAAOje,KAAK0Z,EAAc,KAAKnV,EAAEvE,KAAKjG,iBAAiB,IAExDsL,KACC,oBACAd,IAAMvE,KAAK7F,SAAW,WAAa6F,KAAKqV,GAAG9Q,EAAEvE,KAAK/F,gBAAkB,GAAK+F,KAAKnG,QAAQD,KAAOoG,KAAKxG,OAAOI,OAE1GyL,KACC,oBACAd,IAAMvE,KAAK7F,SAAW,WAAa,EAAI6F,KAAK4V,GAAGrR,EAAEvE,KAAK/F,iBAAmB+F,KAAKnG,QAAQJ,IAAMuG,KAAKxG,OAAOC,MAEzG4L,KAAK,QAAQsU,IAAoB3Z,KAAK0Z,EAAc,KAAKhE,aACzDrQ,KAAK,QAAQuU,KAAarV,GAAKvE,KAAK4Z,GAAWzE,KAAK2E,GAAQ,EAAGvV,EAAEvE,KAAKhG,mBACtEqL,KACC,QAAQwU,KACRtV,GACE4Q,KAAKsF,IACHza,KAAK7F,SAAW,WACZ6F,KAAK4Z,GAAW,GAAK5Z,KAAK4Z,GAAWrV,EAAEvE,KAAKhG,gBAC5CgG,KAAK4Z,GAAWrV,EAAEvE,KAAKhG,gBAAkBgG,KAAK4Z,GAAW,KAC1D,OAMX,MAAM4F,EAAe9f,GAAoB,CACvC6X,UAAWA,EACX3J,UAAWiR,EAAgB,EAAI7e,KAAK4N,SACpC4J,UAAW,kBACXC,OAAQC,IAGV1X,KAAKmd,QAAUhe,GAAgB,CAC7BsG,KAAM+Z,EACNC,OAAQzf,KAAK7F,SAAW,WAAa6F,KAAKuV,GAAKvV,KAAK2V,EACpD+J,OAAQ1f,KAAK7F,SAAW,WAAa6F,KAAKsF,EAAItF,KAAK6V,GACnD9b,gBAAiBiG,KAAKjG,gBACtBC,cAAegG,KAAKhG,cACpBmL,UAAWnF,KAAK/E,UAAUkK,UAC1BhL,OAAQ6F,KAAK7F,OACbwlB,UAAW,MACXC,eAAgB,CACdC,mBAAoB7f,KAAK/E,UAAUyN,SAAW1I,KAAK/E,UAAUkK,YAAc,OAC3EgY,SAAU2B,EAAe9e,KAAKmd,QAAUzJ,UACxC0J,eAAgBoC,EAChBnC,WAAY,CAACrd,KAAKmX,QAClBmG,eAAgBR,EAAW,CAAC,UAAYmC,EAAkBjf,KAAK7F,QAAQklB,GAAa/B,eACpFC,QAAST,EAAW,CAAC,GAAKmC,EAAkBjf,KAAK7F,QAAQklB,GAAa9B,QACtEC,UAAW,CAACxd,KAAK/F,cAAe+F,KAAKjG,gBAAiB,OACtDkf,KAAM,CAACtZ,GAAQK,KAAKzG,MAAO,GAAIoG,GAAQK,KAAK1G,OAAQ,IACpD+lB,YAAavC,EAAWpJ,UAAY2L,EACpCvC,SAAU9c,KAAK/E,UAAUyN,SAAW1I,KAAK/E,UAAUkO,kBACnD4V,iBAAkBA,I,CAKxB,kBAAA7N,GACEpR,GAAiB,CACfggB,UAAW,UACXra,KAAMzF,KAAKgX,YACXvb,eAAgBuE,KAAKvE,eACrBd,eAAgBqF,KAAKrF,eACrBqZ,iBAAkBhU,KAAKgU,iBACvBD,kBAAmB/T,KAAK+T,kBACxBnG,SAAU5N,KAAK4N,SACfzT,OAAQ6F,KAAK7F,OACbwb,EAAG3V,KAAK2V,EACRrQ,EAAGtF,KAAKsF,EACR2R,SAAUjX,KAAKiX,U,CAInB,iBAAA/I,GACElO,KAAKK,WAAaL,KAAKG,KAAK,GAAGqV,M,CAGjC,kBAAA3E,GACErS,GAAW,CACTiH,KAAMzF,KAAK8W,QACXxJ,SAAUtN,KAAK6F,QACftM,MAAOyG,KAAKgU,iBACZ1a,OAAQ0G,KAAKxG,OAAOC,IAAM,GAC1B0c,SAAUnW,KAAKmW,SACf4J,aAAc/f,KAAKiF,eACnBwG,YAAazL,KAAK1E,cAAcmQ,YAChCjS,OAAQwG,KAAKxG,OACbK,QAASmG,KAAKnG,QACd+T,SAAU5N,KAAK4N,SACfoS,KAAM,MACN/B,SAAU,GACV3K,KAAMtT,KAAKK,WACX4f,SAAUjgB,KAAKjG,gBACfge,MAAO/X,KAAK9E,OAAOglB,OACnBhI,MAAOlY,KAAK9E,OAAOwN,QACnB5B,gBAAiB9G,KAAK8E,qBACtB7K,cAAe+F,KAAKjG,gBACpBiL,eAAgBhF,KAAKgF,eACrBrJ,eAAgBqE,KAAKrE,eACrBlB,WAAYuF,KAAKvF,WACjBC,WAAYsF,KAAKtF,WACjBM,aAAcgF,KAAKhF,c,CAIvB,uBAAA8V,GACEnM,EAAO3E,KAAK8N,qBACTuJ,UAAU,WACVyG,MAAM,SAAU9d,KAAK9E,OAAOkR,cAAgBpM,KAAKpE,eAAiBoE,KAAKpF,OAAS,IAChFsf,GAAG,QAASla,KAAK9E,OAAOkR,cAAgBpM,KAAKpE,eAAiB,CAAC2I,EAAGC,EAAGC,IAAMzE,KAAKma,eAAe5V,EAAGE,EAAED,IAAM,MAC1G0V,GACC,YACAla,KAAK9E,OAAOkR,cAAgBpM,KAAKpE,eAC7B,CAAC2I,EAAGC,EAAGC,KACLzE,KAAKmgB,WAAW1S,KAAK,CAAE6F,KAAM/O,EAAG6b,OAAQ3b,EAAED,IAAK,EAEjD,MAEL0V,GAAG,WAAYla,KAAK9E,OAAOkR,cAAgBpM,KAAKpE,eAAiB,IAAMoE,KAAKqa,oBAAsB,K,CAGvG,eAAA7H,GACE7N,EAAO3E,KAAK8N,qBACTuJ,UAAU,WACVyG,MAAM,SAAU9d,KAAK9E,OAAOkR,cAAgBpM,KAAKpE,eAAiBoE,KAAKpF,OAAS,K,CAGrF,iBAAA0W,GACEtR,KAAKmX,OACF+C,GAAG,SAAUla,KAAKpE,eAAiB,CAAC2I,EAAGC,EAAGC,IAAMzE,KAAKma,eAAe5V,EAAGE,EAAED,IAAM,MAC/E0V,GAAG,aAAcla,KAAKpE,eAAiB,CAAC2I,EAAGC,EAAGC,IAAMzE,KAAKoa,eAAe7V,EAAGE,EAAED,IAAM,MACnF0V,GAAG,YAAala,KAAKpE,eAAiB,IAAMoE,KAAKqa,oBAAsB,MAE1Era,KAAKiR,aACFiJ,GAAG,SAAUla,KAAKpE,eAAiB,CAAC2I,EAAGC,EAAGC,IAAMzE,KAAKma,eAAe5V,EAAGE,EAAED,IAAM,MAC/E0V,GAAG,aAAcla,KAAKpE,eAAiB,CAAC2I,EAAGC,EAAGC,IAAMzE,KAAKoa,eAAe7V,EAAGE,EAAED,IAAM,MACnF0V,GAAG,YAAala,KAAKpE,eAAiB,IAAMoE,KAAKqa,oBAAsB,K,CAG5E,eAAA9I,GACEvT,EAAS,CACPqiB,OAAQrgB,KAAK2W,MAAMhR,OACnB2N,KAAMtT,KAAKtE,YACX+jB,OAAQzf,KAAK7F,SAAW,aAAe6F,KAAKqV,GAAKrV,KAAK2V,EACtD2K,UAAWtgB,KAAK7F,SAAW,aAAe6F,KAAK/F,cAAgB+F,KAAKhG,cACpE0lB,OAAQ1f,KAAK7F,SAAW,aAAe6F,KAAKsF,EAAItF,KAAK4V,GACrD2K,UAAWvgB,KAAK7F,SAAW,aAAe6F,KAAKhG,cAAgBgG,KAAK/F,cACpEV,MAAOyG,KAAKzG,MACZD,OAAQ0G,KAAK1G,OACbO,QAASmG,KAAKnG,QACdL,OAAQwG,KAAKxG,OACb2jB,QAASnd,KAAKmd,S,CAIlB,0BAAA3L,GACE9T,EAAoBsC,KAAK4T,oBAAqB5T,KAAK8N,oBAAqB9N,KAAKtE,YAAasE,KAAKvE,e,CAIjG,YAAAuS,GACEhO,KAAKoE,SAAW3E,GAAaO,KAAKxE,qBAClCwE,KAAKqE,YAAc5E,GAAaO,KAAKxE,oBAAqB,E,CAG5D,0BAAAyT,GACExS,EAA0B,CACxB+P,SAAUxM,KAAK4T,oBACfuE,QAASnY,KAAK8N,oBACdtE,MAAOxJ,KAAK1E,cAAckO,OAASxJ,KAAK7G,UACxCqnB,SAAU,sBACVlT,SAAUtN,KAAK6F,QACfrK,oBAAqBwE,KAAKxE,oBAC1BilB,OAAQzgB,KAAK0D,oBACbgd,cACE1gB,KAAKpE,gBACLoE,KAAK1E,cAAc0Q,uBAAyB,OAC5ChM,KAAK1E,cAAcsQ,mBACnB5L,KAAK1E,cAAcsQ,kBAAkBC,SACvC8U,cAAe3gB,KAAK1E,cAAcslB,sBAEpC5gB,KAAK0D,oBAAsB,K,CAG7B,yBAAAgM,GACE7S,EAA2B,CACzB2jB,SAAU,sBACVhU,SAAUxM,KAAK4T,oBACfjO,KAAM3F,KAAK0F,IAAIC,OACf6D,MAAOxJ,KAAK1E,cAAckO,OAASxJ,KAAK7G,UACxC0nB,YAAa7gB,KAAK5G,SAClBkU,SAAUtN,KAAK6F,QACfib,SAAU,MACVC,gBAAiB/gB,KAAK1E,cAAcuP,oBACpCmW,SAAU5hB,GAAcY,KAAM/B,EAAgB,uBAC9C+Z,aAAchY,KAAKgY,aACnB/d,cAAe+F,KAAK/F,cACpB6lB,UAAW,UACXY,cACE1gB,KAAKpE,gBACLoE,KAAK1E,cAAc0Q,uBAAyB,OAC5ChM,KAAK1E,cAAcsQ,mBACnB5L,KAAK1E,cAAcsQ,kBAAkBC,U,CAO3C,kCAAA8E,GACE3Q,KAAKmX,OAAO4C,MAAK,CAACE,EAAIzV,EAAGC,KACvB/H,EAAwB+H,EAAED,GAAG,G,CAIjC,qBAAAoM,GACE,MAAM4D,EAAOpV,GAAcY,KAAM/B,EAAgB,uBACjD+B,KAAKmX,OAAO4C,MAAK,CAACE,EAAIzV,EAAGC,KACvB9H,EAAuB,CACrB6jB,SAAU,sBACVhU,SAAUxM,KAAK4T,oBACfjO,KAAMlB,EAAED,GACRsc,SAAU,MACVC,gBAAiB/gB,KAAK1E,cAAcuP,oBACpCmW,SAAUxM,EACVwD,aAAchY,KAAKgY,aACnB8H,UAAW,UACXxS,SAAUtN,KAAK6F,QACf6a,cACE1gB,KAAKpE,gBACLoE,KAAK1E,cAAc0Q,uBAAyB,OAC5ChM,KAAK1E,cAAcsQ,mBACnB5L,KAAK1E,cAAcsQ,kBAAkBC,WAEzCjP,EAAmB,CACjB+I,KAAMlB,EAAED,GACR8I,SAAUtN,KAAK6F,SACf,G,CAIN,uBAAAmM,GACEhS,KAAKkX,kBAAkB6C,MAAK,CAACC,EAAGxV,EAAGC,KACjC7H,EAAmB,CACjB+I,KAAMlB,EAAED,GACR8I,SAAUtN,KAAK6F,SACf,G,CAIN,0BAAAqJ,GACEnS,EAAeiD,KAAK4T,oBAAqB5T,KAAK8N,oBAAqB9N,KAAK1E,cAAckO,OAASxJ,KAAK7G,U,CAGtG,6BAAAgW,GACEnS,EAAkBgD,KAAK4T,oBAAqB5T,KAAK8N,oBAAqB9N,KAAK5G,S,CAG7E,oCAAAgW,GACEnS,EAAyB+C,KAAK4T,oBAAqB5T,KAAK8N,oBAAqB9N,KAAK1E,cAAc2O,gB,CAGlG,qCAAAoF,GACEnS,EAA0B8C,KAAK4T,oBAAqB5T,KAAK8N,oBAAqB9N,KAAK1E,cAAcqO,iB,CAGnG,4BAAA2F,GACEnS,EAAiB6C,KAAK4T,oBAAqB5T,KAAK8N,oBAAqB9N,KAAK1E,cAAcwO,Q,CAG1F,4BAAAyF,GACEnS,EAAiB4C,KAAK4T,oBAAqB5T,KAAK8N,oBAAqB9N,KAAK1E,cAAc8O,mB,CAG1F,qCAAAoF,GACEnS,EAAoB2C,KAAK4T,oBAAqB5T,KAAK8N,oBAAqB9N,KAAK1E,cAAciP,iB,CAG7F,0BAAAmG,GACEpT,EAAqB,CACnB6a,QAASnY,KAAK8N,oBACdqO,YAAanc,KAAK+R,KAAKpM,OACvB6a,SAAU,sBACVM,SAAU,MACVhB,UAAW,W,CAKf,mCAAArQ,GACEhS,EAAmBuC,KAAK4T,oBAAqB5T,KAAK8N,oBAAqB9N,KAAK1E,cAAcoP,e,CAI5F,eAAAoH,GACE,GAAI9R,KAAK1E,sBAAwB0E,KAAK1E,cAAc2lB,eAAiB,WAAY,CAC/E,MAAM1c,EAAI,CACRjE,QAASN,KAAKM,QACd4gB,MAAOlhB,KAAKgZ,UACZmI,QAASnhB,KAAKkZ,UAEhBlZ,KAAK1E,cAAc2lB,aAAa1c,E,CAElCvE,KAAKM,QAAU,MACfN,KAAKgZ,UAAY,EACjBhZ,KAAKkZ,SAAW,C,CAGlB,cAAAiB,CAAe5V,EAAGE,GAChBzE,KAAKyT,WAAWhG,KAAK,CAAE6F,KAAM/O,EAAG6b,OAAQ3b,G,CAG1C,cAAA2V,CAAe7V,EAAGE,GAChBvF,GAAqBc,KAAK6F,QAAS,MACnC7F,KAAKmgB,WAAW1S,KAAK,CAAE6F,KAAM/O,EAAG6b,OAAQ3b,IACxC,GAAIzE,KAAK3E,aAAekJ,EAAEvE,KAAKjG,iBAAkB,CAC/CiG,KAAKohB,cAAc,CAAE9N,KAAM/O,EAAG8c,IAAKC,EAAOC,SAAU,M,EAIxD,iBAAAlH,GACEnb,GAAqBc,KAAK6F,QAAS,OACnC7F,KAAKwhB,cAAc/T,OACnB,GAAIzN,KAAK3E,YAAa,CACpB2E,KAAKohB,cAAc,CAAEG,SAAU,O,EAKnC,sBAAAvS,GACE/P,GAAiBe,KAAK+W,S,CAIxB,aAAAqK,EAAc9N,KAAEA,EAAI+N,IAAEA,EAAGE,SAAEA,IACzB7iB,GAAY,CACV+G,KAAMzF,KAAK+W,SACXzD,OACAgO,MAAOD,EACPE,WACAnmB,aAAc4E,KAAK5E,aACnBhB,MAAO4F,KAAK5F,MACZC,MAAO2F,KAAK3F,MACZY,UAAW+E,KAAK/E,UAChB+c,aAAchY,KAAKgY,aACnB7d,OAAQ6F,KAAK7F,OACbJ,gBAAiBiG,KAAK/F,cACtBA,cAAe+F,KAAKjG,gBACpBC,cAAegG,KAAKhG,cACpB2lB,UAAW,a,CAIf,MAAA8B,GACEzhB,KAAK0hB,eAAejU,KAAK,CAAE5H,QAAS7F,KAAK6F,UAEzC,MAAM8b,EAAQ,QAId3hB,KAAK4hB,OACL,GAAI5hB,KAAKkE,4BAA6B,CACpClE,KAAK+N,wBACL/N,KAAKkE,4BAA8B,K,CAErC,GAAIlE,KAAK2D,mBAAoB,CAC3B3D,KAAKgO,eACLhO,KAAK2D,mBAAqB,K,CAE5B,GAAI3D,KAAK0B,qBAAsB,CAC7B,GAAI1B,KAAK7F,SAAW,aAAc,CAChC6F,KAAKqB,kBAAoB,KACzBrB,KAAKuB,kBAAoB,I,MACpB,GAAIvB,KAAK7F,SAAW,WAAY,CACrC6F,KAAKsB,kBAAoB,KACzBtB,KAAKwB,kBAAoB,I,CAE3BxB,KAAK0B,qBAAuB,K,CAE9B,GAAI1B,KAAK2B,qBAAsB,CAC7B,GAAI3B,KAAK7F,SAAW,WAAY,CAC9B6F,KAAKqB,kBAAoB,KACzBrB,KAAKuB,kBAAoB,KACzBvB,KAAK8D,4BAA8B,I,MAC9B,GAAI9D,KAAK7F,SAAW,aAAc,CACvC6F,KAAKsB,kBAAoB,KACzBtB,KAAKwB,kBAAoB,KACzBxB,KAAK6D,4BAA8B,I,CAErC7D,KAAK2B,qBAAuB,K,CAE9B,GAAI3B,KAAKQ,iBAAkB,CACzBR,KAAKiO,cACLjO,KAAKQ,iBAAmB,K,CAE1B,GAAIR,KAAKgC,uBAAwB,CAC/BhC,KAAKkO,oBACLlO,KAAKgC,uBAAyB,K,CAEhC,GAAIhC,KAAKS,oBAAqB,CAC5BT,KAAKmO,gBACLnO,KAAKS,oBAAsB,K,CAE7B,GAAIT,KAAKU,mBAAoB,CAC3BV,KAAKoO,gBACLpO,KAAKU,mBAAqB,K,CAE5B,GAAIV,KAAKmB,8BAA+B,CACtCnB,KAAKqO,0BACLrO,KAAKmB,8BAAgC,K,CAEvC,GAAInB,KAAKkB,gCAAiC,CACxClB,KAAKsO,4BACLtO,KAAKkB,gCAAkC,K,CAEzC,GAAIlB,KAAKW,mBAAoB,CAC3BX,KAAKuO,eACLvO,KAAKW,mBAAqB,K,CAE5B,GAAIX,KAAKc,sBAAuB,CAC9Bd,KAAKyO,eACLzO,KAAKc,sBAAwB,K,CAE/B,GAAId,KAAKO,eAAgB,CACvBP,KAAK0O,mCACL1O,KAAK2O,kCACL3O,KAAKO,eAAiB,K,CAExB,GAAIP,KAAKe,gBAAiB,CACxBf,KAAK4O,YACL5O,KAAKe,gBAAkB,K,CAEzB,GAAIf,KAAKiB,6BAA8B,CACrCjB,KAAKwO,yBACLxO,KAAKiB,6BAA+B,K,CAKtC,OACE4gB,EAAA,OAAAvN,IAAA,2CAAKwN,MAAO,gBAAgB9hB,KAAK7F,UAAUwnB,KACzCE,EAAA,OAAAvN,IAAA,2CAAKwN,MAAM,mBACTD,EAAC7hB,KAAKoE,SAAQ,CAAAkQ,IAAA,2CAACwN,MAAM,2CAA2C9hB,KAAK7G,WACrE0oB,EAAC7hB,KAAKqE,YAAW,CAAAiQ,IAAA,2CAACwN,MAAM,qEACxBD,EAAA,OAAAvN,IAAA,2CAAKwN,MAAM,kCAAkChE,MAAO,CAAEiE,QAAS/hB,KAAK9E,OAAOwN,QAAU,QAAU,UAC/FmZ,EAAA,yBAAAvN,IAAA,2CACEhH,SAAUtN,KAAK6F,QACfib,SAAU,MACVhB,UAAW,UACXtT,SAAUxM,KAAK4T,oBACf4M,SAAU,sBACVjnB,MAAOyG,KAAKzG,OAASyG,KAAKxG,OAASwG,KAAKxG,OAAOG,OAAS,EAAI,GAC5DqoB,cAAehiB,KAAK1E,cAAc0Q,qBAClCiW,oB,KACApW,SACE7L,KAAKpE,gBACLoE,KAAK1E,cAAc0Q,uBAAyB,OAC5ChM,KAAK1E,cAAcsQ,mBACnB5L,KAAK1E,cAAcsQ,kBAAkBC,WAGzCgW,EAAA,OAAAvN,IAAA,2CAAKwN,MAAM,wCACXD,EAAA,OAAAvN,IAAA,2CAAKwN,MAAM,oCAAoChE,MAAO,CAAEiE,QAAS/hB,KAAK3E,YAAc,QAAU,UAC9FwmB,EAAA,cAAAvN,IAAA,2CACEhH,SAAUtN,KAAK6F,QACfqc,UAAS,KACT1V,SAAUxM,KAAK4T,oBACfc,aAAc1U,KAAK0U,aACnBsD,aAAchY,KAAKgY,aACnB1E,KAAMtT,KAAKyU,UACX5a,QAASmG,KAAKnG,QACdL,OAAQwG,KAAKxG,OACbmnB,cAAe3gB,KAAK1E,cAAcslB,oBAClC3J,SAAUjX,KAAKiX,Y,CAOjB,IAAA2K,GAEN,MAAMpN,EAAOrB,OAAOqB,KAAKtb,GACzB,IAAIsL,EAAI,EAER,MAAM2d,EAAa,CACjBhpB,UAAW,CACTipB,UAAW,IAEbhpB,SAAU,CACRgpB,UAAW,IAEbtnB,iBAAkB,CAChBsnB,UAAW,GAEbrnB,mBAAoB,CAClBqnB,UAAW,GAEb/mB,YAAa,CACX+mB,UAAW,OAEb9nB,UAAW,CACT8nB,UAAW,OAEbpnB,aAAc,CACZonB,UAAW,IAGf,IAAK5d,EAAI,EAAGA,EAAIgQ,EAAK3P,OAAQL,IAAK,CAChC,MAAM4d,GAAaD,EAAW3N,EAAKhQ,IAAM,MAAQxE,KAAKwU,EAAKhQ,MAAQ2d,EAAW3N,EAAKhQ,IAAI4d,UACvFpiB,KAAKwU,EAAKhQ,IAAMxE,KAAKwU,EAAKhQ,KAAO4d,EAAYpiB,KAAKwU,EAAKhQ,IAAMtL,EAA+Bsb,EAAKhQ,G,66CAMvG6d,OAAO,4BAA8BvjB,K","ignoreList":[]}