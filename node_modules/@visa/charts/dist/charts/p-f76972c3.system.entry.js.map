{"version":3,"names":["sum","values","valueof","undefined","_i","values_1","length","value","index","_a","values_2","propDefaultValues","Utils","StackedBarChartDefaultValues","mainTitle","subTitle","text","height","width","margin","top","bottom","right","left","padding","localization","normalized","showTotalValue","showZeroLabels","ordinalAccessor","valueAccessor","groupAccessor","layout","accessibility","animationConfig","highestHeadingLevel","sortOrder","xAxis","yAxis","wrapLabel","colorPalette","colorPaletteCategorical","hoverStyle","clickStyle","referenceStyle","cursor","roundedCorner","barIntervalRatio","hoverOpacity","dataLabel","dataLabelMiddle","legend","categoryLegend","tooltipLabel","showTooltip","suppressEvents","referenceLines","annotations","clickHighlight","stackedBarChartCss","StackedBarChartStyle0","getGlobalInstances","configLocalization","getActiveLanguageString","getBrowser","verifyTextHasSpace","checkAttributeTransitions","createTextStrokeFilter","drawHoverStrokes","removeHoverStrokes","buildStrokes","convertColorsToTextures","findTagLevel","prepareRenderChange","initializeDescriptionRoot","initializeElementAccess","setElementFocusHandler","setElementAccessID","setAccessibilityController","hideNonessentialGroups","setAccessTitle","setAccessSubtitle","setAccessLongDescription","setAccessExecutiveSummary","setAccessPurpose","setAccessContext","setAccessStatistics","setAccessChartCounts","setAccessXAxis","setAccessYAxis","setAccessStructure","setAccessAnnotation","retainAccessFocus","checkAccessFocus","setElementInteractionAccessState","setAccessibilityDescriptionWidth","autoTextColor","annotate","chartAccessors","checkInteraction","checkClicked","checkHovered","convertVisaColor","drawAxis","drawGrid","drawLegend","setLegendInteractionState","drawTooltip","formatStats","formatDate","formatDataLabel","getPadding","getColors","getLicenses","getScopedData","initTooltipStyle","overrideTitleTooltip","placeDataLabels","transitionEndAll","scopeDataKeys","visaColors","validateAccessibilityProps","validateLocalizationProps","roundTo","resolveLabelCollision","setSubTitle","setReferenceLine","StackedBarChart","exports","this","shouldValidateAccessibility","shouldValidateLocalization","series","extent","datakeys","updated","shouldValidateInteractionKeys","shouldValidate","shouldUpdateData","shouldSetDimensions","shouldUpdateTableData","shouldSetColors","shouldSetSubTitle","shouldValidateAxes","shouldValidateClickHighlight","shouldUpdateScales","shouldUpdateAnnotations","shouldResetRoot","shouldEnterUpdateExit","shouldSetGlobalSelections","shouldSetTestingAttributes","shouldUpdateGeometries","shouldCheckValueAxis","shouldCheckLabelAxis","shouldUpdateXAxis","shouldUpdateYAxis","shouldUpdateXGrid","shouldUpdateYGrid","shouldUpdateBaseline","shouldSetSelectionClass","shouldUpdateCursor","shouldUpdateCorners","shouldUpdateLegendData","shouldValidateLabelPlacement","shouldValidateDataLabelAccessor","shouldUpdateLegend","shouldUpdateLegendInteractivity","shouldUpdateReferenceLines","shouldDrawInteractionState","shouldBindInteractivity","shouldSetLabelOpacity","shouldUpdateLabels","shouldUpdateTotalLabels","shouldCheckLabelColor","shouldUpdateDescriptionWrapper","shouldSetChartAccessibilityTitle","shouldSetChartAccessibilitySubtitle","shouldSetChartAccessibilityLongDescription","shouldSetChartAccessibilityExecutiveSummary","shouldSetChartAccessibilityStatisticalNotes","shouldSetChartAccessibilityStructureNotes","shouldSetParentSVGAccessibility","shouldSetGeometryAccessibilityAttributes","shouldSetGeometryAriaLabels","shouldSetGroupAccessibilityLabel","shouldSetChartAccessibilityPurpose","shouldSetChartAccessibilityContext","shouldRedrawWrapper","shouldSetTagLevels","shouldSetChartAccessibilityCount","shouldSetYAxisAccessibility","shouldSetXAxisAccessibility","shouldSetAnnotationAccessibility","shouldSetTextures","shouldSetStrokes","shouldSetLocalizationConfig","isSafari","strokes","textStrokes","topLevel","bottomLevel","textTreatmentHandler","d","i","n","me","select","bgColor","_this","innerInteractionKeys","color","hoverHighlight","preparedColors","classed","filter_1","attr","setTimeout","class_1","prototype","dataWatcher","_newData","_oldData","idWatcher","newID","_oldID","console","error","headingWatcher","_newVal","_oldVal","titleWatcher","subtitleWatcher","dimensionWatcher","layoutWatcher","interpolating","ordinalAccessorWatcher","interactionKeys","valueAccessorWatcher","groupAccessorWatcher","sortWatcher","xAxisWatcher","newGridVal","gridVisible","oldGridVal","newTickInterval","tickInterval","oldTickInterval","yAxisWatcher","wrapLabelWatcher","normalizedWatcher","paletteWatcher","colorsWatcher","hoverStyleWatcher","clickStyleWatcher","referenceWatcher","cursorWatcher","cornerWatcher","intervalRatioWatcher","hoverOpacityWatcher","labelWatcher","newPlacementVal","placement","oldPlacementVal","newVisibleVal","visible","oldVisibleVal","newAccessor","labelAccessor","oldAccessor","showTotalValueWatcher","showTooltipWatcher","tooltipLabelWatcher","localizationWatcher","newLanguage","language","oldLanguage","newNumeralLocale","numeralLocale","oldNumeralLocale","accessibilityWatcher","newTitle","title","oldTitle","newExecutiveSummary","executiveSummary","oldExecutiveSummary","newPurpose","purpose","oldPurpose","newLongDescription","longDescription","oldLongDescription","newContext","contextExplanation","oldContext","newStatisticalNotes","statisticalNotes","oldStatisticalNotes","newStructureNotes","structureNotes","oldStructureNotes","newincludeDataKeyNames","includeDataKeyNames","oldincludeDataKeyNames","newElementDescriptionAccessor","elementDescriptionAccessor","oldElementDescriptionAccessor","newTextures","hideTextures","oldTextures","newSmallValue","showSmallLabels","oldSmallValue","newStrokes","hideStrokes","oldStrokes","newKeyNav","keyboardNavConfig","disabled","oldKeyNav","newInterface","elementsAreInterface","oldInterface","showZeroLabelsWatcher","legendWatcher","newInteractiveVal","interactive","oldInteractiveVal","annotationsWatcher","valueOverrideWatcher","interactionWatcher","dataKeyNamesWatcher","hoverWatcher","clickWatcher","suppressWatcher","unitTestWatcher","componentWillLoad","chartID","uniqueID","uuid","initialLoadEvent","emit","Promise","resolve","duration","defaults","stackedBarChartEl","id","setLocalizationConfig","setTagLevels","prepareData","prepareLegendData","setDimensions","prepareScales","validateClickHighlight","validateInteractionKeys","validateDataLabelAccessor","validateAxes","setTableData","shouldValidateAccessibilityProps","shouldValidateLocalizationProps","setColors","componentWillUpdate","componentDidLoad","renderRootElements","setTooltipInitialStyle","setChartDescriptionWrapper","setChartAccessibilityTitle","setChartAccessibilitySubtitle","setChartAccessibilityLongDescription","setChartAccessibilityExecutiveSummary","setChartAccessibilityPurpose","setChartAccessibilityContext","setChartAccessibilityStatisticalNotes","setChartAccessibilityStructureNotes","setParentSVGAccessibility","reSetRoot","setTextures","setStrokes","setSubTitleElements","drawXGrid","drawYGrid","setGlobalSelections","setTestingAttributes","enterGeometries","updateGeometries","exitGeometries","setRoundedCorners","drawGeometries","enterDataLabels","updateDataLabels","exitDataLabels","enterTotalDataLabels","updateTotalDataLabels","exitTotalDataLabels","setChartCountAccessibility","setGeometryAccessibilityAttributes","setGeometryAriaLabels","drawLegendElements","bindLegendInteractivity","validateLabelPlacement","drawDataLabels","drawTotalDataLabels","drawReferenceLines","setSelectedClass","checkLabelColorAgainstBackground","updateCursor","bindInteractivity","drawAnnotations","setAnnotationAccessibility","drawXAxis","setXAxisAccessibility","drawYAxis","setYAxisAccessibility","drawBaseline","root","node","barG","setGroupAccessibilityID","onChangeHandler","then","initialLoadEndEvent","componentDidUpdate","updateInteractionState","setLabelOpacity","drawEndEvent","windowInstances","languageString","i18Next","languageObject","getResourceBundle","numeralObject","numeral","localeData","skipValidation","Object","assign","disableValidation","data","context","onClickEvent","clickEvent","misc","innerLabelAccessor","innerXAxis","innerYAxis","getLanguageString","modifier","getSum","innerHeight","innerWidth","innerPaddedHeight","innerPaddedWidth","dataCopy","forEach","keys","item","key","Date","getTime","push","nestData","nest","parseFloat","date","format","offsetTimezone","entries","stackOrder","ordinalValues","stackDiverging","nestedArray","j","output","row","k","runSum","sumAboveZero","base","positive","negative","v","l","s","previous","stackEnd","stackStart","group","enteringStackStart","interpolateGroup_1","findInterpolation_1","preceedingElement","nextPrevious","sumMessage","__spreadArray","sort","a","b","legendData","map","flattenedNest","val","label_1","dataKeyNames","concat","tableData","tableColumns","subTitleG","colors","colorsArray","range","colorArr","colorsToConvert","textures","rootSVG","svg","scheme","disableTransitions","copy","stacked","minBarValue","minValueOverride","maxBarValue","maxValueOverride","domain","oldXDomain","x","oldXRange","oldYDomain","y","oldYRange","scaleBand","scaleLinear","append","rootG","gridG","labelG","totalLabels","legendG","tooltipG","referencesG","unitTest","updateBarWrappers","update","updateLabelWrappers","updateLabels","updateTotalLabels","selectAll","changeSvg","selection","namespace","easing","easeCircleIn","changeRoot","changeRootG","axisAccessor","axisLabel","label","axisScale","bandwidth","dateFormat","hide","rootEle","hasXAxis","xAxisLabel","hasYAxis","yAxisLabel","markOffset","dataBoundToBarGroups","enterBarWrappers","enter","exitBarWrappers","exit","merge","dataBoundToGeometries","exitSize","size","enterSize","dataBoundToLabelWrappers","enterLabelWrappers","exitLabelWrappers","dataBoundToLabels","enterLabels","exitLabels","dataBoundToTotalLabels","enterTotalLabels","exitTotalLabels","interrupt","ordinalAxis","ordinalDimension","valueAxis","valueDimension","each","_d","on","onClickHandler","onHoverHandler","onMouseOutHandler","clicked","hovered","baseColor","scale","direction","_","shift","order","transition","ease","call","self","focusDidExist","remove","parentGNode","geometryIsUpdating","numeric","newValue","transitionEndEvent","state","inputElement","strokeWidth","fill","filter_2","addCollisionClass","collisionHideOnly","hideOnly","textHeight","textElement","style","getComputedStyle","fontSize","Math","max","processLabelOpacity","labelsAdded","filter","labelsRemoved","collisionSettings","vertical","validPositions","offsets","middle","horizontal","collisionPlacement","boundsScope","bitmaps","labelSelection","avoidMarks","accessors","removeOnly","xScale","yScale","chartType","avoidCollision","runOccupancyBitmap","suppressMarkDraw","opacity","prevOpacity","styleVisibility","dimensions","hasRoom","targetOpacity","Number","EPSILON","selected","selectable","updatingLabels","stack","labelUpdate","textIsMoving","groupDimension","sumDimension","dark_text","totalValueOpacity","totalLabelSelection","groupName","ordinalScale","valueScale","maxDate","minDate","min","scaleTime","source","xAccessor","yAccessor","baseColorArr","type","labelKey","labels","hoverEvent","target","chartTag","redraw","disableKeyNav","hideDataTable","hideDataTableButton","description","geomType","includeKeyNames","dataKeys","groupKeys","onChangeFunc","added","removed","eventsTooltip","evt","event","isToShow","mouseOutEvent","render","drawStartEvent","theme","init","h","class","display","isInteractive","hasCousinNavigation","isCompact","exceptions","exception","window"],"sources":["node_modules/d3-array/src/sum.js","src/components/stacked-bar-chart/stacked-bar-chart-default-values.ts","src/components/stacked-bar-chart/stacked-bar-chart.scss?tag=stacked-bar-chart","src/components/stacked-bar-chart/stacked-bar-chart.tsx"],"sourcesContent":["export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport Utils from '@visa/visa-charts-utils';\n\nconst { propDefaultValues } = Utils;\nexport class StackedBarChartDefaultValues {\n  static readonly mainTitle = 'Stacked Bar Chart Title';\n  static readonly subTitle = propDefaultValues.subTitle.text;\n  static readonly height = 280;\n  static readonly width = 700;\n  static readonly margin = {\n    top: 400 * 0.01,\n    bottom: 400 * 0.01,\n    right: 400 * 0.01,\n    left: 400 * 0.01\n  };\n  static readonly padding = {\n    top: 20,\n    bottom: 50,\n    right: 50,\n    left: 50\n  };\n\n  static readonly localization = propDefaultValues.localization;\n\n  static readonly normalized = false;\n  static readonly showTotalValue = true;\n  static readonly showZeroLabels = false;\n\n  static readonly ordinalAccessor = 'label';\n  static readonly valueAccessor = 'value';\n  static readonly groupAccessor = 'item';\n\n  static readonly layout = propDefaultValues.layout;\n  static readonly accessibility = propDefaultValues.accessibility;\n  static readonly animationConfig = propDefaultValues.animationConfig;\n  static readonly highestHeadingLevel = propDefaultValues.highestHeadingLevel;\n  static readonly sortOrder = propDefaultValues.sortOrder;\n  static readonly xAxis = propDefaultValues.xAxis;\n\n  static readonly yAxis = propDefaultValues.yAxis;\n  static readonly wrapLabel = propDefaultValues.wrapLabel;\n  static readonly colorPalette = propDefaultValues.colorPaletteCategorical;\n\n  static readonly hoverStyle = propDefaultValues.hoverStyle;\n  static readonly clickStyle = propDefaultValues.clickStyle;\n\n  static readonly referenceStyle = propDefaultValues.referenceStyle;\n  static readonly cursor = propDefaultValues.cursor;\n  static readonly roundedCorner = propDefaultValues.roundedCorner;\n  static readonly barIntervalRatio = propDefaultValues.barIntervalRatio;\n  static readonly hoverOpacity = propDefaultValues.hoverOpacity;\n\n  static readonly dataLabel = propDefaultValues.dataLabelMiddle;\n  static readonly dataKeyNames;\n  static readonly legend = propDefaultValues.categoryLegend;\n  static readonly tooltipLabel = propDefaultValues.tooltipLabel;\n\n  static readonly showTooltip = propDefaultValues.showTooltip;\n  static readonly suppressEvents = propDefaultValues.suppressEvents;\n  static readonly referenceLines = propDefaultValues.referenceLines;\n  static readonly annotations = propDefaultValues.annotations;\n\n  static readonly hoverHighlight;\n  static readonly clickHighlight = propDefaultValues.clickHighlight;\n}\n","/**\n * Copyright (c) 2020, 2021, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nstacked-bar-chart {\n  .annotations {\n    pointer-events: none;\n    .handle {\n      pointer-events: all;\n    }\n  }\n\n  .screen-reader-info {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n\n  .data-table-link {\n    color: #767676;\n    text-decoration: none;\n    font-size: 12px;\n    margin-left: 5%;\n  }\n\n  .hidden {\n    display: none;\n  }\n  cursor: default;\n  #visa-viz-d3-stacked-bar-container {\n    clear: both;\n  }\n\n  .stacked-bar-legend {\n    font-size: 1em;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n    .legend {\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n      margin-right: 10px;\n    }\n\n    .key-dot {\n      margin: 3px 8px;\n    }\n  }\n\n  .light {\n    .grid {\n      line {\n        stroke: #c9c9c9;\n        stroke-opacity: 1;\n        stroke-width: 0.8;\n        // shape-rendering: crispEdges;\n        // stroke-dasharray: 4, 4;\n      }\n      path {\n        stroke-width: 0;\n      }\n    }\n\n    .axis {\n      font-size: 12px;\n      .tick {\n        text {\n          fill: #767676;\n        }\n        line {\n          stroke: #767676;\n        }\n      }\n\n      &-label {\n        // axis label\n        text-anchor: middle;\n        font: 1rem sans-serif;\n      }\n\n      &-mark {\n        // axis mark\n        color: #949494;\n        stroke-width: 2px;\n      }\n    }\n\n    .y.axis {\n      path {\n        stroke: #767676;\n        opacity: 0;\n      }\n    }\n    .x.axis {\n      path {\n        stroke: transparent;\n      }\n    }\n\n    .o-layout--chart {\n      .bar-dataLabel-vertical {\n        font-size: 1rem;\n        fill: #767676;\n        font-weight: 550;\n      }\n      .bar-dataLabel-horizontal {\n        font-size: 1rem;\n        fill: #767676;\n        font-weight: 550;\n      }\n    }\n  }\n  .dark {\n    .grid {\n      line {\n        stroke: lightgrey;\n        stroke-opacity: 0.7;\n        shape-rendering: crispEdges;\n      }\n      path {\n        stroke-width: 0;\n      }\n    }\n    .axis {\n      font-size: 12px;\n      .tick {\n        line {\n          stroke: lightgrey;\n        }\n        text {\n          fill: grey;\n        }\n      }\n      path {\n        stroke: black;\n      }\n\n      &-label {\n        text-anchor: middle;\n        font: 1rem sans-serif;\n      }\n    }\n    .o-layout--chart svg {\n      background: black;\n      .bar-dataLabel-vertical {\n        fill: #767676;\n        text-anchor: middle;\n      }\n      .bar-dataLabel-horizontal {\n        fill: #767676;\n        text-anchor: start;\n      }\n    }\n  }\n\n  //TBD: add color based on scheme\n  // .r.axis circle {\n  //   stroke: #cccccc;\n  //   stroke-width: 1px;\n  //   fill: none;\n  // }\n\n  //Text alignment, not impacted by color theme\n  // .a.axis text {\n  //   text-anchor: middle;\n  //   font-size: 10pt;\n  // }\n  //\n  // .r.axis text {\n  //   text-anchor: end;\n  //   font-size: 8pt;\n  // }\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport { Component, Element, Prop, Watch, h, Event, EventEmitter } from '@stencil/core';\nimport { select, event } from 'd3-selection';\nimport { scaleBand, scaleLinear, scaleTime } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport { max, min, sum } from 'd3-array';\nimport { easeCircleIn } from 'd3-ease';\nimport 'd3-transition';\nimport { v4 as uuid } from 'uuid';\nimport Utils from '@visa/visa-charts-utils';\nimport {\n  IBoxModelType,\n  ILocalizationType,\n  IHoverStyleType,\n  IClickStyleType,\n  IAxisType,\n  IReferenceStyleType,\n  IDataLabelType,\n  ITooltipLabelType,\n  IAccessibilityType,\n  IAnimationConfig,\n  ILegendType,\n  ISubTitleType\n} from '@visa/charts-types';\nimport { StackedBarChartDefaultValues } from './stacked-bar-chart-default-values';\nconst {\n  getGlobalInstances,\n  configLocalization,\n  getActiveLanguageString,\n  getBrowser,\n  verifyTextHasSpace,\n  checkAttributeTransitions,\n  createTextStrokeFilter,\n  drawHoverStrokes,\n  removeHoverStrokes,\n  buildStrokes,\n  convertColorsToTextures,\n  findTagLevel,\n  prepareRenderChange,\n  initializeDescriptionRoot,\n  initializeElementAccess,\n  setElementFocusHandler,\n  setElementAccessID,\n  setAccessibilityController,\n  hideNonessentialGroups,\n  setAccessTitle,\n  setAccessSubtitle,\n  setAccessLongDescription,\n  setAccessExecutiveSummary,\n  setAccessPurpose,\n  setAccessContext,\n  setAccessStatistics,\n  setAccessChartCounts,\n  setAccessXAxis,\n  setAccessYAxis,\n  setAccessStructure,\n  setAccessAnnotation,\n  retainAccessFocus,\n  checkAccessFocus,\n  setElementInteractionAccessState,\n  setAccessibilityDescriptionWidth,\n  autoTextColor,\n  annotate,\n  chartAccessors,\n  checkInteraction,\n  checkClicked,\n  checkHovered,\n  convertVisaColor,\n  drawAxis,\n  drawGrid,\n  drawLegend,\n  setLegendInteractionState,\n  drawTooltip,\n  formatStats,\n  formatDate,\n  formatDataLabel,\n  getPadding,\n  getColors,\n  getLicenses,\n  getScopedData,\n  initTooltipStyle,\n  overrideTitleTooltip,\n  placeDataLabels,\n  transitionEndAll,\n  scopeDataKeys,\n  visaColors,\n  validateAccessibilityProps,\n  validateLocalizationProps,\n  roundTo,\n  resolveLabelCollision,\n  setSubTitle,\n  setReferenceLine\n} = Utils;\n@Component({\n  tag: 'stacked-bar-chart',\n  styleUrl: 'stacked-bar-chart.scss'\n})\nexport class StackedBarChart {\n  @Event() clickEvent: EventEmitter;\n  @Event() hoverEvent: EventEmitter;\n  @Event() mouseOutEvent: EventEmitter;\n  @Event() initialLoadEvent: EventEmitter;\n  @Event() initialLoadEndEvent: EventEmitter;\n  @Event() drawStartEvent: EventEmitter;\n  @Event() drawEndEvent: EventEmitter;\n  @Event() transitionEndEvent: EventEmitter;\n  // Chart Attributes (1/7)\n  @Prop({ mutable: true }) mainTitle: string = StackedBarChartDefaultValues.mainTitle;\n  @Prop({ mutable: true }) subTitle: string | ISubTitleType = StackedBarChartDefaultValues.subTitle;\n  @Prop({ mutable: true }) height: number = StackedBarChartDefaultValues.height;\n  @Prop({ mutable: true }) width: number = StackedBarChartDefaultValues.width;\n  @Prop({ mutable: true }) layout: string = StackedBarChartDefaultValues.layout;\n  @Prop({ mutable: true }) highestHeadingLevel: string | number = StackedBarChartDefaultValues.highestHeadingLevel;\n  @Prop({ mutable: true }) margin: IBoxModelType = StackedBarChartDefaultValues.margin;\n  @Prop({ mutable: true }) padding: IBoxModelType = StackedBarChartDefaultValues.padding;\n\n  // Data (2/7)\n  @Prop() data: object[];\n  @Prop() uniqueID: string;\n  @Prop({ mutable: true }) localization: ILocalizationType = StackedBarChartDefaultValues.localization;\n  @Prop({ mutable: true }) ordinalAccessor: string = StackedBarChartDefaultValues.ordinalAccessor;\n  @Prop({ mutable: true }) valueAccessor: string = StackedBarChartDefaultValues.valueAccessor;\n  @Prop({ mutable: true }) groupAccessor: string = StackedBarChartDefaultValues.groupAccessor;\n  @Prop({ mutable: true }) sortOrder: string = StackedBarChartDefaultValues.sortOrder;\n\n  // Axis (3/7)\n  @Prop({ mutable: true }) xAxis: IAxisType = StackedBarChartDefaultValues.xAxis;\n  @Prop({ mutable: true }) yAxis: IAxisType = StackedBarChartDefaultValues.yAxis;\n  @Prop({ mutable: true }) wrapLabel: boolean = StackedBarChartDefaultValues.wrapLabel;\n  @Prop({ mutable: true }) normalized: boolean = StackedBarChartDefaultValues.normalized;\n\n  // Color & Shape (4/7)\n  @Prop({ mutable: true }) colorPalette: string = StackedBarChartDefaultValues.colorPalette;\n  @Prop({ mutable: true }) colors: string[];\n  @Prop({ mutable: true }) hoverStyle: IHoverStyleType = StackedBarChartDefaultValues.hoverStyle;\n  @Prop({ mutable: true }) clickStyle: IClickStyleType = StackedBarChartDefaultValues.clickStyle;\n  @Prop({ mutable: true }) referenceStyle: IReferenceStyleType = StackedBarChartDefaultValues.referenceStyle;\n  @Prop({ mutable: true }) cursor: string = StackedBarChartDefaultValues.cursor;\n  @Prop({ mutable: true }) roundedCorner: number = StackedBarChartDefaultValues.roundedCorner;\n  @Prop({ mutable: true }) barIntervalRatio: number = StackedBarChartDefaultValues.barIntervalRatio;\n  @Prop({ mutable: true }) hoverOpacity: number = StackedBarChartDefaultValues.hoverOpacity;\n  @Prop({ mutable: true }) animationConfig: IAnimationConfig = StackedBarChartDefaultValues.animationConfig;\n\n  // Data label (5/7)\n  @Prop({ mutable: true }) dataLabel: IDataLabelType = StackedBarChartDefaultValues.dataLabel;\n  @Prop({ mutable: true }) dataKeyNames: object;\n  @Prop({ mutable: true }) showTotalValue: boolean = StackedBarChartDefaultValues.showTotalValue;\n  @Prop({ mutable: true }) showTooltip: boolean = StackedBarChartDefaultValues.showTooltip;\n  @Prop({ mutable: true }) tooltipLabel: ITooltipLabelType = StackedBarChartDefaultValues.tooltipLabel;\n  @Prop({ mutable: true }) accessibility: IAccessibilityType = StackedBarChartDefaultValues.accessibility;\n  @Prop({ mutable: true }) legend: ILegendType = StackedBarChartDefaultValues.legend;\n  @Prop({ mutable: true }) annotations: object[] = StackedBarChartDefaultValues.annotations;\n  @Prop({ mutable: true }) showZeroLabels: boolean = StackedBarChartDefaultValues.showZeroLabels;\n\n  // Calculation (6/7)\n  @Prop({ mutable: true }) minValueOverride: number;\n  @Prop({ mutable: true }) maxValueOverride: number;\n  @Prop({ mutable: true }) referenceLines: object[] = StackedBarChartDefaultValues.referenceLines;\n\n  // Interactivity (7/7)\n  @Prop({ mutable: true }) suppressEvents: boolean = StackedBarChartDefaultValues.suppressEvents;\n  @Prop({ mutable: true }) hoverHighlight: object;\n  @Prop({ mutable: true }) clickHighlight: object[] = StackedBarChartDefaultValues.clickHighlight;\n  @Prop({ mutable: true }) interactionKeys: string[];\n\n  // Testing (8/7)\n  @Prop() unitTest: boolean = false;\n  //  @Prop() debugMode: boolean = false;\n\n  // Element\n  @Element()\n  stackedBarChartEl: HTMLElement;\n  shouldValidateAccessibility: boolean = true;\n  shouldValidateLocalization: boolean = true;\n  svg: any;\n  root: any;\n  rootG: any;\n  gridG: any;\n  barG: any;\n  bars: any;\n  labelG: any;\n  labels: any;\n  totalLabels: any;\n  defaults: boolean;\n  current: any;\n  enter: any;\n  exit: any;\n  update: any;\n  enterBarWrappers: any;\n  exitBarWrappers: any;\n  updateBarWrappers: any;\n  x: any;\n  y: any;\n  innerHeight: number;\n  innerWidth: number;\n  innerPaddedHeight: number;\n  innerPaddedWidth: number;\n  innerXAxis: any;\n  innerYAxis: any;\n  series: any = [];\n  extent: any = [];\n  datakeys: any = [];\n  colorArr: any;\n  preparedColors: any;\n  duration: any;\n  referencesG: any;\n  legendG: any;\n  subTitleG: any;\n  tooltipG: any;\n  interpolating: any;\n  stackOrder: any;\n  updated: boolean = true;\n  enterSize: number;\n  exitSize: number;\n  enterLabels: any;\n  exitLabels: any;\n  updateLabels: any;\n  enterLabelWrappers: any;\n  updateLabelWrappers: any;\n  exitLabelWrappers: any;\n  enterTotalLabels: any;\n  updateTotalLabels: any;\n  exitTotalLabels: any;\n  tableData: any;\n  tableColumns: any;\n  chartID: string;\n  innerInteractionKeys: any;\n  innerLabelAccessor: string;\n  legendData: any;\n  shouldValidateInteractionKeys: boolean = false;\n  shouldValidate: boolean = false;\n  shouldUpdateData: boolean = false;\n  shouldSetDimensions: boolean = false;\n  shouldUpdateTableData: boolean = false;\n  shouldSetColors: boolean = false;\n  shouldSetSubTitle: boolean = false;\n  shouldValidateAxes: boolean = false;\n  shouldValidateClickHighlight: boolean = false;\n  shouldUpdateScales: boolean = false;\n  shouldUpdateAnnotations: boolean = false;\n  shouldResetRoot: boolean = false;\n  shouldEnterUpdateExit: boolean = false;\n  shouldSetGlobalSelections: boolean = false;\n  shouldSetTestingAttributes: boolean = false;\n  shouldUpdateGeometries: boolean = false;\n  shouldCheckValueAxis: boolean = false;\n  shouldCheckLabelAxis: boolean = false;\n  shouldUpdateXAxis: boolean = false;\n  shouldUpdateYAxis: boolean = false;\n  shouldUpdateXGrid: boolean = false;\n  shouldUpdateYGrid: boolean = false;\n  shouldUpdateBaseline: boolean = false;\n  shouldSetSelectionClass: boolean = false;\n  shouldUpdateCursor: boolean = false;\n  shouldUpdateCorners: boolean = false;\n  shouldUpdateLegendData: boolean = false;\n  shouldValidateLabelPlacement: boolean = false;\n  shouldValidateDataLabelAccessor: boolean = false;\n  shouldUpdateLegend: boolean = false;\n  shouldUpdateLegendInteractivity: boolean = false;\n  shouldUpdateReferenceLines: boolean = false;\n  shouldDrawInteractionState: boolean = false;\n  shouldBindInteractivity: boolean = false;\n  shouldSetLabelOpacity: boolean = false;\n  shouldUpdateLabels: boolean = false;\n  shouldUpdateTotalLabels: boolean = false;\n  shouldCheckLabelColor: boolean = false;\n  shouldUpdateDescriptionWrapper: boolean = false;\n  shouldSetChartAccessibilityTitle: boolean = false;\n  shouldSetChartAccessibilitySubtitle: boolean = false;\n  shouldSetChartAccessibilityLongDescription: boolean = false;\n  shouldSetChartAccessibilityExecutiveSummary: boolean = false;\n  shouldSetChartAccessibilityStatisticalNotes: boolean = false;\n  shouldSetChartAccessibilityStructureNotes: boolean = false;\n  shouldSetParentSVGAccessibility: boolean = false;\n  shouldSetGeometryAccessibilityAttributes: boolean = false;\n  shouldSetGeometryAriaLabels: boolean = false;\n  shouldSetGroupAccessibilityLabel: boolean = false;\n  shouldSetChartAccessibilityPurpose: boolean = false;\n  shouldSetChartAccessibilityContext: boolean = false;\n  shouldRedrawWrapper: boolean = false;\n  shouldSetTagLevels: boolean = false;\n  shouldSetChartAccessibilityCount: boolean = false;\n  shouldSetYAxisAccessibility: boolean = false;\n  shouldSetXAxisAccessibility: boolean = false;\n  shouldSetAnnotationAccessibility: boolean = false;\n  shouldSetTextures: boolean = false;\n  shouldSetStrokes: boolean = false;\n  shouldSetLocalizationConfig: boolean = false;\n  isSafari: boolean = getBrowser() === 'Safari'; // this is necessary for handling redraw when filter attributes change\n  strokes: any = {};\n  textStrokes: any = {};\n  topLevel: string = 'h2';\n  bottomLevel: string = 'p';\n  bitmaps: any;\n\n  @Watch('data')\n  dataWatcher(_newData, _oldData) {\n    this.updated = true;\n    this.shouldUpdateData = true;\n    this.shouldValidateClickHighlight = true;\n    this.shouldSetColors = true;\n    this.shouldSetTextures = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateLegendData = true;\n    this.shouldValidate = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateLabels = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('uniqueID')\n  idWatcher(newID, _oldID) {\n    console.error(\n      'Change detected in prop uniqueID from value ' +\n        _oldID +\n        ' to value ' +\n        newID +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.chartID = newID;\n    // this.stackedBarChartEl.id = this.chartID;\n    // this.shouldValidate = true;\n    // this.shouldUpdateDescriptionWrapper = true;\n    // this.shouldSetParentSVGAccessibility = true;\n    // this.shouldUpdateLegend = true;\n    // this.shouldSetTextures = true;\n    // this.shouldCheckLabelColor = true;\n    // this.shouldDrawInteractionState = true;\n    // this.shouldSetStrokes = true;\n  }\n\n  @Watch('highestHeadingLevel')\n  headingWatcher(_newVal, _oldVal) {\n    this.shouldRedrawWrapper = true;\n    this.shouldSetTagLevels = true;\n    this.shouldSetChartAccessibilityCount = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('mainTitle')\n  titleWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('subTitle')\n  subtitleWatcher(_newVal, _oldVal) {\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('height')\n  @Watch('width')\n  @Watch('padding')\n  @Watch('margin')\n  dimensionWatcher(_newVal, _oldVal) {\n    this.shouldSetDimensions = true;\n    this.shouldUpdateScales = true;\n    this.shouldResetRoot = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('layout')\n  layoutWatcher(_newVal, _oldVal) {\n    this.interpolating = false;\n    this.shouldValidateLabelPlacement = true;\n    this.shouldUpdateScales = true;\n    this.shouldValidateAxes = true;\n    this.shouldResetRoot = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('ordinalAccessor')\n  ordinalAccessorWatcher(_newVal, _oldVal) {\n    this.shouldSetGlobalSelections = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateData = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateLegendData = true;\n    this.shouldSetColors = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateLegend = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n    this.shouldCheckValueAxis = true;\n  }\n\n  @Watch('valueAccessor')\n  valueAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldValidateClickHighlight = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetColors = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldValidateDataLabelAccessor = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldCheckValueAxis = true;\n  }\n\n  @Watch('groupAccessor')\n  groupAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldValidateClickHighlight = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldCheckLabelAxis = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateReferenceLines = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n  }\n\n  @Watch('sortOrder')\n  sortWatcher(_newVal, _oldVal) {\n    this.updated = true;\n    this.shouldUpdateData = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldCheckLabelAxis = true;\n  }\n\n  @Watch('xAxis')\n  xAxisWatcher(_newVal, _oldVal) {\n    this.shouldValidateAxes = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateXAxis = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateXGrid = true;\n    }\n  }\n\n  @Watch('yAxis')\n  yAxisWatcher(_newVal, _oldVal) {\n    this.shouldValidateAxes = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateYGrid = true;\n    }\n  }\n\n  @Watch('wrapLabel')\n  wrapLabelWatcher(_newVal, _oldVal) {\n    this.shouldCheckLabelAxis = true;\n  }\n\n  @Watch('normalized')\n  normalizedWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldValidateClickHighlight = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetColors = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldCheckValueAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n  }\n\n  @Watch('colorPalette')\n  paletteWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n  }\n\n  @Watch('colors')\n  colorsWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n  }\n\n  @Watch('hoverStyle')\n  hoverStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('clickStyle')\n  clickStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('referenceLines')\n  @Watch('referenceStyle')\n  referenceWatcher(_newVal, _oldVal) {\n    this.shouldUpdateReferenceLines = true;\n  }\n\n  @Watch('cursor')\n  cursorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCursor = true;\n  }\n\n  @Watch('roundedCorner')\n  cornerWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCorners = true;\n  }\n\n  @Watch('barIntervalRatio')\n  intervalRatioWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldCheckLabelAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('hoverOpacity')\n  hoverOpacityWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('dataLabel')\n  labelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateGeometries = true; // draw geometries has the transition end all callback in it which we need for labels\n    this.shouldUpdateTableData = true;\n    const newPlacementVal = _newVal && _newVal.placement ? _newVal.placement : false;\n    const oldPlacementVal = _oldVal && _oldVal.placement ? _oldVal.placement : false;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    const newAccessor = _newVal && _newVal.labelAccessor ? _newVal.labelAccessor : false;\n    const oldAccessor = _oldVal && _oldVal.labelAccessor ? _oldVal.labelAccessor : false;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetLabelOpacity = true;\n    }\n    if (newPlacementVal !== oldPlacementVal) {\n      this.shouldSetLabelOpacity = true;\n      this.shouldValidateLabelPlacement = true;\n      this.shouldCheckLabelColor = true;\n    }\n    if (newAccessor !== oldAccessor) {\n      this.shouldValidateDataLabelAccessor = true;\n    }\n  }\n\n  @Watch('showTotalValue')\n  showTotalValueWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('showTooltip')\n  showTooltipWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('tooltipLabel')\n  tooltipLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('localization')\n  localizationWatcher(_newVal, _oldVal) {\n    // language\n    const newLanguage = _newVal && _newVal.language ? _newVal.language : false;\n    const oldLanguage = _oldVal && _oldVal.language ? _oldVal.language : false;\n    if (newLanguage !== oldLanguage) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldCheckLabelColor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n\n    // numeralLocale\n    const newNumeralLocale = _newVal && _newVal.numeralLocale ? _newVal.numeralLocale : false;\n    const oldNumeralLocale = _oldVal && _oldVal.numeralLocale ? _oldVal.numeralLocale : false;\n    if (newNumeralLocale !== oldNumeralLocale) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldCheckLabelColor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n  }\n\n  @Watch('accessibility')\n  accessibilityWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    const newTitle = _newVal && _newVal.title ? _newVal.title : false;\n    const oldTitle = _oldVal && _oldVal.title ? _oldVal.title : false;\n    if (newTitle !== oldTitle) {\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newExecutiveSummary = _newVal && _newVal.executiveSummary ? _newVal.executiveSummary : false;\n    const oldExecutiveSummary = _oldVal && _oldVal.executiveSummary ? _oldVal.executiveSummary : false;\n    if (newExecutiveSummary !== oldExecutiveSummary) {\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n    }\n    const newPurpose = _newVal && _newVal.purpose ? _newVal.purpose : false;\n    const oldPurpose = _oldVal && _oldVal.purpose ? _oldVal.purpose : false;\n    if (newPurpose !== oldPurpose) {\n      this.shouldSetChartAccessibilityPurpose = true;\n    }\n    const newLongDescription = _newVal && _newVal.longDescription ? _newVal.longDescription : false;\n    const oldLongDescription = _oldVal && _oldVal.longDescription ? _oldVal.longDescription : false;\n    if (newLongDescription !== oldLongDescription) {\n      this.shouldSetChartAccessibilityLongDescription = true;\n    }\n    const newContext = _newVal && _newVal.contextExplanation ? _newVal.contextExplanation : false;\n    const oldContext = _oldVal && _oldVal.contextExplanation ? _oldVal.contextExplanation : false;\n    if (newContext !== oldContext) {\n      this.shouldSetChartAccessibilityContext = true;\n    }\n    const newStatisticalNotes = _newVal && _newVal.statisticalNotes ? _newVal.statisticalNotes : false;\n    const oldStatisticalNotes = _oldVal && _oldVal.statisticalNotes ? _oldVal.statisticalNotes : false;\n    if (newStatisticalNotes !== oldStatisticalNotes) {\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n    }\n    const newStructureNotes = _newVal && _newVal.structureNotes ? _newVal.structureNotes : false;\n    const oldStructureNotes = _oldVal && _oldVal.structureNotes ? _oldVal.structureNotes : false;\n    if (newStructureNotes !== oldStructureNotes) {\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    const newincludeDataKeyNames = _newVal && _newVal.includeDataKeyNames;\n    const oldincludeDataKeyNames = _oldVal && _oldVal.includeDataKeyNames;\n    const newElementDescriptionAccessor =\n      _newVal && _newVal.elementDescriptionAccessor ? _newVal.elementDescriptionAccessor : false;\n    const oldElementDescriptionAccessor =\n      _oldVal && _oldVal.elementDescriptionAccessor ? _oldVal.elementDescriptionAccessor : false;\n    if (\n      newincludeDataKeyNames !== oldincludeDataKeyNames ||\n      newElementDescriptionAccessor !== oldElementDescriptionAccessor\n    ) {\n      if (newincludeDataKeyNames !== oldincludeDataKeyNames) {\n        // this one is tricky because it needs to run after the lifecycle\n        // AND it could run in the off-chance this prop is changed\n        this.shouldSetGroupAccessibilityLabel = true;\n      }\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newTextures = _newVal && _newVal.hideTextures ? _newVal.hideTextures : false;\n    const oldTextures = _oldVal && _oldVal.hideTextures ? _oldVal.hideTextures : false;\n    if (newTextures !== oldTextures) {\n      this.shouldSetTextures = true;\n      this.shouldUpdateLegend = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newSmallValue = _newVal && _newVal.showSmallLabels ? _newVal.showSmallLabels : false;\n    const oldSmallValue = _oldVal && _oldVal.showSmallLabels ? _oldVal.showSmallLabels : false;\n    if (newSmallValue !== oldSmallValue) {\n      this.shouldSetLabelOpacity = true;\n    }\n    const newStrokes = _newVal && _newVal.hideStrokes ? _newVal.hideStrokes : false;\n    const oldStrokes = _oldVal && _oldVal.hideStrokes ? _oldVal.hideStrokes : false;\n    if (newStrokes !== oldStrokes) {\n      this.shouldSetStrokes = true;\n      this.shouldUpdateLegend = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newKeyNav =\n      _newVal && _newVal.keyboardNavConfig && _newVal.keyboardNavConfig.disabled\n        ? _newVal.keyboardNavConfig.disabled\n        : false;\n    const oldKeyNav =\n      _oldVal && _oldVal.keyboardNavConfig && _oldVal.keyboardNavConfig.disabled\n        ? _oldVal.keyboardNavConfig.disabled\n        : false;\n    const newInterface = _newVal && _newVal.elementsAreInterface ? _newVal.elementsAreInterface : false;\n    const oldInterface = _oldVal && _oldVal.elementsAreInterface ? _oldVal.elementsAreInterface : false;\n    if (newKeyNav !== oldKeyNav || newInterface !== oldInterface) {\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetChartAccessibilitySubtitle = true;\n      this.shouldSetChartAccessibilityLongDescription = true;\n      this.shouldSetChartAccessibilityContext = true;\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n      this.shouldSetChartAccessibilityPurpose = true;\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    if (newInterface !== oldInterface) {\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('showZeroLabels')\n  showZeroLabelsWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLabels = true;\n  }\n\n  @Watch('legend')\n  legendWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLegend = true;\n    const newInteractiveVal = _newVal && _newVal.interactive;\n    const oldInteractiveVal = _oldVal && _oldVal.interactive;\n    if (newInteractiveVal !== oldInteractiveVal) {\n      this.shouldUpdateLegendInteractivity = true;\n    }\n  }\n\n  @Watch('annotations')\n  annotationsWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetAnnotationAccessibility = true;\n  }\n\n  @Watch('maxValueOverride')\n  @Watch('minValueOverride')\n  valueOverrideWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldCheckValueAxis = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('interactionKeys')\n  interactionWatcher(_newVal, _oldVal) {\n    this.shouldValidateInteractionKeys = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('dataKeyNames')\n  dataKeyNamesWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateTableData = true;\n  }\n\n  @Watch('hoverHighlight')\n  hoverWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('clickHighlight')\n  clickWatcher(_newVal, _oldVal) {\n    this.shouldValidateClickHighlight = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('suppressEvents')\n  suppressWatcher(_newVal, _oldVal) {\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldUpdateLegendInteractivity = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldRedrawWrapper = true;\n    this.shouldValidate = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('unitTest')\n  unitTestWatcher(_newVal, _oldVal) {\n    this.shouldSetTestingAttributes = true;\n  }\n\n  componentWillLoad() {\n    const chartID = this.uniqueID || 'stacked-bar-chart-' + uuid();\n    this.initialLoadEvent.emit({ chartID: chartID });\n    // contrary to componentWillUpdate, this method appears safe to use for\n    // any calculations we need. Keeping them here reduces future refactor,\n    // since componentWillUpdate should eventually mirror this method\n    return new Promise(resolve => {\n      this.duration = 0;\n      this.defaults = true;\n      this.chartID = chartID;\n      this.stackedBarChartEl.id = this.chartID;\n      this.setLocalizationConfig();\n      this.setTagLevels();\n      this.prepareData();\n      this.prepareLegendData();\n      this.setDimensions();\n      this.prepareScales();\n      this.validateClickHighlight();\n      this.validateInteractionKeys();\n      this.validateDataLabelAccessor();\n      this.validateAxes();\n      this.setTableData();\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.setColors();\n      resolve('component will load');\n    });\n  }\n\n  componentWillUpdate() {\n    // NEVER put items in this method that rely on props (until stencil bug is resolved)\n    // All items that belong here are currently at the top of render\n    // see: https://github.com/ionic-team/stencil/issues/2061#issuecomment-578282178\n    return new Promise(resolve => {\n      resolve('component will update');\n    });\n  }\n\n  componentDidLoad() {\n    return new Promise(resolve => {\n      this.renderRootElements();\n      this.setTooltipInitialStyle();\n      this.setChartDescriptionWrapper();\n      this.setChartAccessibilityTitle();\n      this.setChartAccessibilitySubtitle();\n      this.setChartAccessibilityLongDescription();\n      this.setChartAccessibilityExecutiveSummary();\n      this.setChartAccessibilityPurpose();\n      this.setChartAccessibilityContext();\n      this.setChartAccessibilityStatisticalNotes();\n      this.setChartAccessibilityStructureNotes();\n      this.setParentSVGAccessibility();\n      this.reSetRoot();\n      this.setTextures();\n      this.setStrokes();\n      this.setSubTitleElements();\n      this.drawXGrid();\n      this.drawYGrid();\n      this.setGlobalSelections();\n      this.setTestingAttributes();\n      this.enterGeometries();\n      this.updateGeometries();\n      this.exitGeometries();\n      this.setRoundedCorners();\n      this.drawGeometries();\n      this.enterDataLabels();\n      this.updateDataLabels();\n      this.exitDataLabels();\n      this.enterTotalDataLabels();\n      this.updateTotalDataLabels();\n      this.exitTotalDataLabels();\n      this.setChartCountAccessibility();\n      this.setGeometryAccessibilityAttributes();\n      this.setGeometryAriaLabels();\n      this.drawLegendElements();\n      this.bindLegendInteractivity();\n      this.validateLabelPlacement();\n      this.drawDataLabels();\n      this.drawTotalDataLabels();\n      this.drawReferenceLines();\n      this.setSelectedClass();\n      // this.updateInteractionState();\n      // this.setLabelOpacity();\n      this.checkLabelColorAgainstBackground();\n      this.updateCursor();\n      this.bindInteractivity();\n      this.drawAnnotations();\n      this.setAnnotationAccessibility();\n      this.drawXAxis();\n      this.setXAxisAccessibility();\n      this.drawYAxis();\n      this.setYAxisAccessibility();\n      this.drawBaseline();\n      // we want to hide all child <g> of this.root BUT we want to make sure not to hide the\n      // parent<g> that contains our geometries! In a subGroup chart (like stacked bars),\n      // we want to pass the PARENT of all the <g>s that contain bars\n      hideNonessentialGroups(this.root.node(), this.barG.node());\n      this.setGroupAccessibilityID();\n      this.onChangeHandler();\n      this.defaults = false;\n      resolve('component did load');\n    }).then(() => this.initialLoadEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  componentDidUpdate() {\n    return new Promise(resolve => {\n      this.duration = !this.animationConfig || !this.animationConfig.disabled ? 750 : 0;\n      if (this.shouldUpdateDescriptionWrapper) {\n        this.setChartDescriptionWrapper();\n        this.shouldUpdateDescriptionWrapper = false;\n      }\n      if (this.shouldSetChartAccessibilityCount) {\n        this.setChartCountAccessibility();\n        this.shouldSetChartAccessibilityCount = false;\n      }\n      if (this.shouldSetChartAccessibilityTitle) {\n        this.setChartAccessibilityTitle();\n        this.shouldSetChartAccessibilityTitle = false;\n      }\n      if (this.shouldSetChartAccessibilitySubtitle) {\n        this.setChartAccessibilitySubtitle();\n        this.shouldSetChartAccessibilitySubtitle = false;\n      }\n      if (this.shouldSetChartAccessibilityLongDescription) {\n        this.setChartAccessibilityLongDescription();\n        this.shouldSetChartAccessibilityLongDescription = false;\n      }\n      if (this.shouldSetChartAccessibilityExecutiveSummary) {\n        this.setChartAccessibilityExecutiveSummary();\n        this.shouldSetChartAccessibilityExecutiveSummary = false;\n      }\n      if (this.shouldSetChartAccessibilityPurpose) {\n        this.setChartAccessibilityPurpose();\n        this.shouldSetChartAccessibilityPurpose = false;\n      }\n      if (this.shouldSetChartAccessibilityContext) {\n        this.setChartAccessibilityContext();\n        this.shouldSetChartAccessibilityContext = false;\n      }\n      if (this.shouldSetChartAccessibilityStatisticalNotes) {\n        this.setChartAccessibilityStatisticalNotes();\n        this.shouldSetChartAccessibilityStatisticalNotes = false;\n      }\n      if (this.shouldSetChartAccessibilityStructureNotes) {\n        this.setChartAccessibilityStructureNotes();\n        this.shouldSetChartAccessibilityStructureNotes = false;\n      }\n      if (this.shouldSetParentSVGAccessibility) {\n        this.setParentSVGAccessibility();\n        this.shouldSetParentSVGAccessibility = false;\n      }\n      if (this.shouldResetRoot) {\n        this.reSetRoot();\n        this.shouldResetRoot = false;\n      }\n      if (this.shouldSetTextures) {\n        this.setTextures();\n        this.shouldSetTextures = false;\n      }\n      if (this.shouldSetStrokes) {\n        this.setStrokes();\n        this.shouldSetStrokes = false;\n      }\n      if (this.shouldSetGlobalSelections) {\n        this.setGlobalSelections();\n        this.shouldSetGlobalSelections = false;\n      }\n      if (this.shouldSetTestingAttributes) {\n        this.setTestingAttributes();\n        this.shouldSetTestingAttributes = false;\n      }\n      if (this.shouldSetSubTitle) {\n        this.setSubTitleElements();\n        this.shouldSetSubTitle = false;\n      }\n      if (this.shouldUpdateXGrid) {\n        this.drawXGrid();\n        this.shouldUpdateXGrid = false;\n      }\n      if (this.shouldUpdateYGrid) {\n        this.drawYGrid();\n        this.shouldUpdateYGrid = false;\n      }\n      if (this.shouldEnterUpdateExit) {\n        this.enterGeometries();\n        this.updateGeometries();\n        this.exitGeometries();\n        this.enterDataLabels();\n        this.updateDataLabels();\n        this.exitDataLabels();\n        this.enterTotalDataLabels();\n        this.updateTotalDataLabels();\n        this.exitTotalDataLabels();\n        this.shouldEnterUpdateExit = false;\n      }\n      if (this.shouldUpdateCorners) {\n        this.setRoundedCorners();\n        this.shouldUpdateCorners = false;\n      }\n      if (this.shouldUpdateGeometries) {\n        this.drawGeometries();\n        this.shouldUpdateGeometries = false;\n      }\n      if (this.shouldSetGeometryAccessibilityAttributes) {\n        this.setGeometryAccessibilityAttributes();\n        this.shouldSetGeometryAccessibilityAttributes = false;\n      }\n      if (this.shouldSetGeometryAriaLabels) {\n        this.setGeometryAriaLabels();\n        this.shouldSetGeometryAriaLabels = false;\n      }\n      if (this.shouldSetGroupAccessibilityLabel) {\n        this.setGroupAccessibilityID();\n        this.shouldSetGroupAccessibilityLabel = false;\n      }\n      if (this.shouldUpdateLegend) {\n        this.drawLegendElements();\n        this.shouldUpdateLegend = false;\n      }\n      if (this.shouldUpdateLabels) {\n        this.drawDataLabels();\n        this.shouldUpdateLabels = false;\n      }\n      if (this.shouldUpdateTotalLabels) {\n        this.drawTotalDataLabels();\n        this.shouldUpdateTotalLabels = false;\n      }\n      if (this.shouldUpdateReferenceLines) {\n        this.drawReferenceLines();\n        this.shouldUpdateReferenceLines = false;\n      }\n      if (this.shouldDrawInteractionState) {\n        this.updateInteractionState();\n        this.shouldDrawInteractionState = false;\n      }\n      if (this.shouldSetLabelOpacity) {\n        this.setLabelOpacity();\n        this.shouldSetLabelOpacity = false;\n      }\n      if (this.shouldCheckLabelColor) {\n        this.checkLabelColorAgainstBackground();\n        this.shouldCheckLabelColor = false;\n      }\n      if (this.shouldSetSelectionClass) {\n        this.setSelectedClass();\n        this.shouldSetSelectionClass = false;\n      }\n      if (this.shouldUpdateLegendInteractivity) {\n        this.bindLegendInteractivity();\n        this.shouldUpdateLegendInteractivity = false;\n      }\n      if (this.shouldUpdateCursor) {\n        this.updateCursor();\n        this.shouldUpdateCursor = false;\n      }\n      if (this.shouldBindInteractivity) {\n        this.bindInteractivity();\n        this.shouldBindInteractivity = false;\n      }\n      if (this.shouldUpdateAnnotations) {\n        this.drawAnnotations();\n        this.shouldUpdateAnnotations = false;\n      }\n      if (this.shouldSetAnnotationAccessibility) {\n        this.setAnnotationAccessibility();\n        this.shouldSetAnnotationAccessibility = false;\n      }\n      if (this.shouldUpdateXAxis) {\n        this.drawXAxis();\n        this.shouldUpdateXAxis = false;\n      }\n      if (this.shouldSetXAxisAccessibility) {\n        this.setXAxisAccessibility();\n        this.shouldSetXAxisAccessibility = false;\n      }\n      if (this.shouldUpdateYAxis) {\n        this.drawYAxis();\n        this.shouldUpdateYAxis = false;\n      }\n      if (this.shouldSetYAxisAccessibility) {\n        this.setYAxisAccessibility();\n        this.shouldSetYAxisAccessibility = false;\n      }\n      if (this.shouldUpdateBaseline) {\n        this.drawBaseline();\n        this.shouldUpdateBaseline = false;\n      }\n      this.onChangeHandler();\n      resolve('component did update');\n    }).then(() => this.drawEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  shouldValidateLocalizationProps() {\n    const windowInstances = getGlobalInstances();\n    const languageString = windowInstances.i18Next.language;\n    const languageObject = windowInstances.i18Next.getResourceBundle(languageString);\n    const numeralObject = windowInstances.numeral.localeData();\n    if (this.shouldValidateLocalization && !this.localization.skipValidation) {\n      this.shouldValidateLocalization = false;\n      validateLocalizationProps(this.chartID, {\n        ...this.localization,\n        language: languageObject,\n        numeralLocale: numeralObject\n      });\n    }\n  }\n\n  shouldValidateAccessibilityProps() {\n    if (this.shouldValidateAccessibility && !this.accessibility.disableValidation) {\n      this.shouldValidateAccessibility = false;\n      validateAccessibilityProps(this.chartID, this.accessibility, {\n        annotations: this.annotations,\n        data: this.data,\n        uniqueID: this.uniqueID,\n        context: {\n          mainTitle: this.mainTitle,\n          onClickEvent: this.suppressEvents ? undefined : this.clickEvent.emit,\n          tooltipLabel: this.tooltipLabel,\n          dataLabel: this.dataLabel,\n          valueAccessor: this.valueAccessor\n        },\n        misc: {\n          normalized: this.normalized\n        }\n      });\n    }\n  }\n\n  validateLabelPlacement() {\n    // check data label placement assignment based on layout\n    if (this.layout === 'vertical') {\n      if (\n        !(\n          this.dataLabel.placement === 'top' ||\n          this.dataLabel.placement === 'middle' ||\n          this.dataLabel.placement === 'bottom' ||\n          this.dataLabel.placement === 'auto'\n        )\n      ) {\n        this.dataLabel.placement = 'middle';\n      }\n    } else {\n      if (\n        !(\n          this.dataLabel.placement === 'end' ||\n          this.dataLabel.placement === 'middle' ||\n          this.dataLabel.placement === 'base' ||\n          this.dataLabel.placement === 'auto'\n        )\n      ) {\n        this.dataLabel.placement = 'middle';\n      }\n    }\n  }\n\n  validateInteractionKeys() {\n    this.innerInteractionKeys =\n      this.interactionKeys && this.interactionKeys.length ? this.interactionKeys : [this.ordinalAccessor];\n  }\n\n  validateDataLabelAccessor() {\n    this.innerLabelAccessor = this.dataLabel.labelAccessor ? this.dataLabel.labelAccessor : this.valueAccessor;\n  }\n\n  validateAxes() {\n    // check whether we are going to display axis and then update props\n    this.innerXAxis = { ...this.xAxis, gridVisible: !(this.layout === 'vertical') && this.xAxis.gridVisible };\n    this.innerYAxis = { ...this.yAxis, gridVisible: this.layout === 'vertical' && this.yAxis.gridVisible };\n  }\n\n  getLanguageString() {\n    return getActiveLanguageString(this.localization);\n  }\n\n  setLocalizationConfig() {\n    configLocalization(this.localization);\n  }\n\n  // if normalized and not 0 use getSum(), otherwise use 1\n  modifier(d) {\n    return !this.normalized || d.getSum() === 0 ? 1 : d.getSum();\n  }\n\n  setDimensions() {\n    this.padding = typeof this.padding === 'string' ? getPadding(this.padding) : this.padding;\n\n    // before we render/load we need to set our height and width based on props\n    this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n    this.innerWidth = this.width - this.margin.left - this.margin.right;\n\n    this.innerPaddedHeight = this.innerHeight - this.padding.top - this.padding.bottom;\n    this.innerPaddedWidth = this.innerWidth - this.padding.left - this.padding.right;\n  }\n\n  prepareData() {\n    this.extent = [0, 0];\n    const dataCopy = [];\n\n    this.data.forEach(d => {\n      const keys = Object.keys(d);\n      const item = {};\n      keys.forEach(key => {\n        item[key] = !(d[key] instanceof Date) ? d[key] : new Date(d[key].getTime());\n      });\n      dataCopy.push(item);\n    });\n\n    // prepare flat data for stacked layout\n    const nestData = nest()\n      .key(d => {\n        d[this.valueAccessor] = parseFloat(d[this.valueAccessor]);\n        d[this.groupAccessor] =\n          d[this.groupAccessor] instanceof Date\n            ? formatDate({\n                date: d[this.groupAccessor],\n                format: this.layout === 'vertical' ? this.xAxis.format : this.yAxis.format,\n                offsetTimezone: true\n              })\n            : d[this.groupAccessor];\n        return d[this.groupAccessor];\n      })\n      .entries(dataCopy);\n\n    this.interpolating = this.series.length ? this.series : '';\n    if (this.interpolating) {\n      this.interpolating.stackOrder = this.stackOrder;\n    }\n    const ordinalValues = {};\n    const stackDiverging = nestedArray => {\n      let i = 0;\n      const j = nestedArray.length;\n      const output = [];\n      this.stackOrder = {};\n      for (i = 0; i < j; i++) {\n        const row = { ...nestedArray[i] };\n        let k = 0;\n        let runSum = 0;\n        let sumAboveZero = 0;\n        const base = {\n          positive: 0.0,\n          negative: 0.0\n        };\n        const v = nestedArray[i].values;\n        const l = v.length;\n        const s = sum(v, d => d[this.valueAccessor]);\n        row.values = [];\n        let previous = 0;\n        for (k = 0; k < l; k++) {\n          const item = { ...v[k] };\n          const value = item[this.valueAccessor];\n          if (value >= 0 && s !== 0) {\n            item.stackEnd = base.positive;\n            base.positive += value;\n            item.stackStart = base.positive;\n          } else if (value < 0) {\n            item.stackStart = base.negative;\n            base.negative += value;\n            item.stackEnd = base.negative;\n          } else {\n            // value === 0 and sum === 0\n            item.stackEnd = base.positive;\n            base.positive += 0.000001; // denominator needs to be bigger than data points we can handle\n            item.stackStart = base.positive;\n          }\n          let group = this.stackOrder[item[this.groupAccessor]];\n          if (!group) {\n            this.stackOrder[item[this.groupAccessor]] = {};\n            group = this.stackOrder[item[this.groupAccessor]];\n          }\n          if (!group[item[this.ordinalAccessor]]) {\n            group[item[this.ordinalAccessor]] = {\n              previous,\n              value,\n              stackStart: item.stackStart,\n              stackEnd: item.stackEnd\n            };\n          }\n          item.enteringStackStart = false;\n          if (this.interpolating && this.interpolating.stackOrder[item[this.groupAccessor]]) {\n            const interpolateGroup = this.interpolating.stackOrder[item[this.groupAccessor]];\n            const findInterpolation = preceedingElement => {\n              if (preceedingElement === 0) {\n                return 0;\n              } else if (interpolateGroup[preceedingElement]) {\n                if (value >= 0 && interpolateGroup[preceedingElement].value >= 0) {\n                  return interpolateGroup[preceedingElement].stackStart;\n                } else if (value < 0 && interpolateGroup[preceedingElement].value < 0) {\n                  return interpolateGroup[preceedingElement].stackEnd;\n                }\n              }\n              const nextPrevious = group[preceedingElement].previous;\n              return findInterpolation(nextPrevious);\n            };\n            if (!interpolateGroup[item[this.ordinalAccessor]]) {\n              item.enteringStackStart = findInterpolation(previous);\n            }\n          }\n          previous = item[this.ordinalAccessor];\n          item.getSum = () => row.sum;\n          runSum += value;\n          if (value > 0) {\n            sumAboveZero += value;\n          }\n          if (!ordinalValues[item[this.ordinalAccessor]]) {\n            ordinalValues[item[this.ordinalAccessor]] = 1;\n          }\n          row.values.push(item);\n        }\n        if (base.positive > this.extent[1]) {\n          this.extent[1] = base.positive;\n        }\n        if (base.negative < this.extent[0]) {\n          this.extent[0] = base.negative;\n        }\n        row.sum = runSum;\n        row.sumMessage = 'Sum ' + runSum;\n        row.sumAboveZero = sumAboveZero;\n        output.push(row);\n      }\n      return output;\n    };\n    stackDiverging(nestData);\n\n    // Get all item categories (ordinal accessor)\n    this.datakeys = Object.keys(ordinalValues);\n    this.series = stackDiverging(nestData);\n    if (this.sortOrder === 'asc') {\n      this.series = [...this.series].sort((a, b) => a.sum - b.sum);\n    } else if (this.sortOrder === 'desc') {\n      this.series = [...this.series].sort((a, b) => b.sum - a.sum);\n    }\n  }\n\n  prepareLegendData() {\n    this.legendData = this.series[0].values;\n  }\n\n  validateClickHighlight() {\n    // format clickHighlight data row if there is date and data in clickHighlight\n    if (this.clickHighlight && this.clickHighlight.length > 0) {\n      this.clickHighlight.map(d => {\n        d[this.groupAccessor] =\n          d[this.groupAccessor] instanceof Date\n            ? formatDate({\n                date: d[this.groupAccessor],\n                format: this.layout === 'vertical' ? this.xAxis.format : this.yAxis.format,\n                offsetTimezone: true\n              })\n            : d[this.groupAccessor];\n      });\n    }\n  }\n\n  setTableData() {\n    const flattenedNest = [];\n    this.series.forEach(s => {\n      s.values.forEach(val => {\n        // val['rowSum'] = val.getSum();\n        flattenedNest.push(val);\n      });\n    });\n    // generate scoped and formatted data for data-table component\n    const keys = scopeDataKeys(this, chartAccessors, 'stacked-bar-chart');\n    if (this.normalized) {\n      const label =\n        this.dataKeyNames && (this.dataKeyNames[`${this.valueAccessor}`] || this.dataKeyNames[`${this.valueAccessor}%`])\n          ? this.dataKeyNames[`${this.valueAccessor}%`] || this.dataKeyNames[`${this.valueAccessor}`] + ' (%)'\n          : `${this.valueAccessor}%`;\n      keys[label] = '0[.][0][0]%';\n      flattenedNest.forEach(i => {\n        i[label] = i[`${this.valueAccessor}`] / i.getSum();\n      });\n    }\n    this.tableData = getScopedData(flattenedNest, keys);\n    this.tableColumns = Object.keys(keys);\n  }\n\n  setSubTitleElements() {\n    setSubTitle({\n      root: this.subTitleG,\n      subTitle: this.subTitle\n    });\n  }\n\n  setColors() {\n    this.preparedColors = this.colors\n      ? convertVisaColor(this.colors)\n      : getColors(this.colorPalette, this.datakeys.length);\n  }\n\n  setTextures() {\n    const colorsArray = this.preparedColors.range ? this.preparedColors.range() : this.preparedColors;\n    if (this.accessibility.hideTextures || colorsArray.length > 6) {\n      this.colorArr = this.preparedColors;\n    } else {\n      const colorsToConvert = colorsArray;\n      const textures = convertColorsToTextures({\n        colors: colorsToConvert,\n        rootSVG: this.svg.node(),\n        id: this.chartID,\n        scheme: 'categorical',\n        disableTransitions: !this.duration\n      });\n      this.colorArr = this.preparedColors.range ? this.preparedColors.copy().range(textures) : textures;\n    }\n  }\n\n  setStrokes() {\n    const colors = this.preparedColors.range ? this.preparedColors.range() : this.preparedColors;\n    this.strokes = buildStrokes({\n      root: this.svg.node(),\n      id: this.chartID,\n      colors,\n      clickStyle: this.clickStyle,\n      hoverStyle: this.hoverStyle,\n      stacked: true\n    });\n    this.textStrokes = {};\n    colors.forEach(color => {\n      this.textStrokes[color] = createTextStrokeFilter({\n        root: this.svg.node(),\n        id: this.chartID,\n        color\n      });\n    });\n    if (this.clickStyle && this.clickStyle.color) {\n      this.textStrokes[this.clickStyle.color] = createTextStrokeFilter({\n        root: this.svg.node(),\n        id: this.chartID,\n        color: this.clickStyle.color\n      });\n    }\n    if (this.hoverStyle && this.hoverStyle.color) {\n      this.textStrokes[this.hoverStyle.color] = createTextStrokeFilter({\n        root: this.svg.node(),\n        id: this.chartID,\n        color: this.hoverStyle.color\n      });\n    }\n  }\n\n  prepareScales() {\n    const minBarValue =\n      this.minValueOverride && this.minValueOverride < this.extent[0] ? this.minValueOverride : this.extent[0];\n    const maxBarValue = this.maxValueOverride || this.extent[1];\n    const domain = this.normalized ? [0, 1] : [minBarValue, maxBarValue];\n\n    if (this.interpolating) {\n      this.interpolating.oldXDomain = this.x.domain();\n      this.interpolating.oldXRange = this.x.range();\n      this.interpolating.oldYDomain = this.y.domain();\n      this.interpolating.oldYRange = this.y.range();\n    }\n    // scale band based on layout of chart\n    if (this.layout === 'vertical') {\n      if (this.interpolating) {\n        this.interpolating.padding = this.x.padding();\n        this.interpolating.x = scaleBand()\n          .domain(this.interpolating.oldXDomain)\n          .range(this.interpolating.oldXRange)\n          .padding(this.interpolating.padding);\n        this.interpolating.y = scaleLinear()\n          .domain(this.interpolating.oldYDomain)\n          .range(this.interpolating.oldYRange);\n      }\n      this.y = scaleLinear()\n        .domain(domain)\n        .range([this.innerPaddedHeight, 0]);\n\n      this.x = scaleBand()\n        .domain(this.series.map(d => d.key))\n        .range([0, this.innerPaddedWidth])\n        .padding(this.barIntervalRatio);\n    } else if (this.layout === 'horizontal') {\n      if (this.interpolating) {\n        this.interpolating.padding = this.y.padding();\n        this.interpolating.x = scaleLinear()\n          .domain(this.interpolating.oldXDomain)\n          .range(this.interpolating.oldXRange);\n        this.interpolating.y = scaleBand()\n          .domain(this.interpolating.oldYDomain)\n          .range(this.interpolating.oldYRange)\n          .padding(this.interpolating.padding);\n      }\n      this.x = scaleLinear()\n        .domain(domain)\n        .range([0, this.innerPaddedWidth]);\n\n      this.y = scaleBand()\n        .domain(this.series.map(d => d.key))\n        .range([0, this.innerPaddedHeight])\n        .padding(this.barIntervalRatio);\n    }\n  }\n\n  renderRootElements() {\n    this.svg = select(this.stackedBarChartEl)\n      .select('.visa-viz-d3-stacked-bar-container')\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    this.root = this.svg.append('g').attr('id', 'visa-viz-margin-container-g-' + this.chartID);\n    this.rootG = this.root.append('g').attr('id', 'visa-viz-padding-container-g-' + this.chartID);\n\n    this.gridG = this.rootG.append('g').attr('class', 'grid-group');\n    this.barG = this.rootG.append('g').attr('class', 'stacked-bar-group');\n\n    this.labelG = this.rootG.append('g').attr('class', 'stacked-bar-dataLabel-group');\n    this.totalLabels = this.rootG.append('g').attr('class', 'bar-dataLabel-group');\n    this.legendG = select(this.stackedBarChartEl)\n      .select('.stacked-bar-legend')\n      .append('svg');\n\n    this.subTitleG = select(this.stackedBarChartEl).select('.stacked-bar-sub-title');\n    this.tooltipG = select(this.stackedBarChartEl).select('.stacked-bar-tooltip');\n    this.referencesG = this.rootG.append('g').attr('class', 'stacked-bar-reference-line-group');\n  }\n\n  setTestingAttributes() {\n    if (this.unitTest) {\n      select(this.stackedBarChartEl)\n        .select('.visa-viz-d3-stacked-bar-container')\n        .attr('data-testid', 'chart-container');\n      select(this.stackedBarChartEl)\n        .select('.stacked-bar-main-title')\n        .attr('data-testid', 'main-title');\n      select(this.stackedBarChartEl)\n        .select('.stacked-bar-sub-title')\n        .attr('data-testid', 'sub-title');\n\n      this.svg.attr('data-testid', 'root-svg');\n      this.root.attr('data-testid', 'margin-container');\n      this.rootG.attr('data-testid', 'padding-container');\n      this.legendG.attr('data-testid', 'legend-container');\n      this.tooltipG.attr('data-testid', 'tooltip-container');\n\n      this.barG.attr('data-testid', 'stacked-bar-group');\n      this.updateBarWrappers\n        .attr('data-testid', 'stacked-bar-wrapper')\n        .attr('data-id', d => `stacked-bar-wrapper-${d.key}`);\n      this.update\n        .attr('data-testid', 'bar')\n        .attr('data-id', d => `bar-${d[this.groupAccessor]}-${d[this.ordinalAccessor]}`);\n\n      this.labelG.attr('data-testid', 'stacked-bar-dataLabel-group');\n      this.updateLabelWrappers\n        .attr('data-testid', 'stacked-bar-dataLabel-wrapper')\n        .attr('data-id', d => `stacked-bar-dataLabel-wrapper-${d.key}`);\n      this.updateLabels\n        .attr('data-testid', 'dataLabel')\n        .attr('data-id', d => `dataLabel-${d[this.groupAccessor]}-${d[this.ordinalAccessor]}`);\n\n      this.totalLabels.attr('data-testid', 'stacked-bar-totalLabel-group');\n      this.updateTotalLabels.attr('data-testid', 'totalLabel').attr('data-id', d => `totalLabel-${d.key}`);\n\n      this.referencesG.attr('data-testid', 'reference-line-group');\n      this.svg.select('defs').attr('data-testid', 'pattern-defs');\n\n      // reference lines do not have global selections\n      this.referencesG.selectAll('.stacked-bar-reference-line').attr('data-testid', 'reference-line');\n\n      this.referencesG.selectAll('.stacked-bar-reference-line-label').attr('data-testid', 'reference-line-label');\n    } else {\n      select(this.stackedBarChartEl)\n        .select('.visa-viz-d3-stacked-bar-container')\n        .attr('data-testid', null);\n      select(this.stackedBarChartEl)\n        .select('.stacked-bar-main-title')\n        .attr('data-testid', null);\n      select(this.stackedBarChartEl)\n        .select('.stacked-bar-sub-title')\n        .attr('data-testid', null);\n      this.svg.attr('data-testid', null);\n      this.root.attr('data-testid', null);\n      this.rootG.attr('data-testid', null);\n      this.legendG.attr('data-testid', null);\n      this.tooltipG.attr('data-testid', null);\n\n      this.barG.attr('data-testid', null);\n      this.updateBarWrappers.attr('data-testid', null).attr('data-id', null);\n      this.update.attr('data-testid', null).attr('data-id', null);\n\n      this.labelG.attr('data-testid', null);\n      this.updateLabelWrappers.attr('data-testid', null).attr('data-id', null);\n      this.updateLabels.attr('data-testid', null).attr('data-id', null);\n\n      this.totalLabels.attr('data-testid', null);\n      this.updateTotalLabels.attr('data-testid', null).attr('data-id', null);\n\n      this.referencesG.attr('data-testid', null);\n      this.svg.select('defs').attr('data-testid', null);\n\n      // reference lines do not have global selections\n      this.referencesG.selectAll('.stacked-bar-reference-line').attr('data-testid', null);\n\n      this.referencesG.selectAll('.stacked-bar-reference-line-label').attr('data-testid', null);\n    }\n  }\n\n  // reset graph size based on window size\n  reSetRoot() {\n    const changeSvg = prepareRenderChange({\n      selection: this.svg,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeSvg\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    const changeRoot = prepareRenderChange({\n      selection: this.root,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRoot.attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n\n    const changeRootG = prepareRenderChange({\n      selection: this.rootG,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRootG.attr('transform', `translate(${this.padding.left}, ${this.padding.top})`);\n\n    setAccessibilityDescriptionWidth(this.chartID, this.width);\n  }\n\n  drawXAxis() {\n    const axisAccessor = this.layout === 'vertical' ? this.groupAccessor : this.valueAccessor;\n    const axisLabel =\n      this.xAxis.label && this.xAxis.label !== ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.xAxis.label;\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.x,\n      left: false,\n      wrapLabel: this.wrapLabel && this.layout === 'vertical' ? this.x.bandwidth() : '',\n      format: this.xAxis.format,\n      dateFormat: this.xAxis.format,\n      tickInterval: this.xAxis.tickInterval,\n      label: axisLabel, // this.xAxis.label,\n      padding: this.padding,\n      hide: !this.innerXAxis.visible,\n      duration: this.duration\n    });\n  }\n\n  drawYAxis() {\n    const axisAccessor = this.layout === 'vertical' ? this.valueAccessor : this.groupAccessor;\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.yAxis.label;\n\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.y,\n      left: true,\n      wrapLabel: this.wrapLabel ? this.padding.left || 100 : '',\n      format: this.yAxis.format,\n      dateFormat: this.yAxis.format,\n      tickInterval: this.yAxis.tickInterval,\n      label: axisLabel, // this.yAxis.label,\n      padding: this.padding,\n      hide: !this.innerYAxis.visible,\n      duration: this.duration\n    });\n  }\n\n  setXAxisAccessibility() {\n    const axisAccessor = this.layout === 'vertical' ? this.groupAccessor : this.valueAccessor;\n    const axisLabel =\n      this.xAxis.label && this.xAxis.label !== ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.xAxis.label;\n\n    setAccessXAxis({\n      rootEle: this.stackedBarChartEl,\n      hasXAxis: this.innerXAxis ? this.innerXAxis.visible : false,\n      xAxis: this.layout === 'vertical' ? this.x || false : this.y || false, // this is optional for some charts, if hasXAxis is always false\n      xAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasXAxis is always false\n    });\n  }\n\n  setYAxisAccessibility() {\n    const axisAccessor = this.layout === 'vertical' ? this.valueAccessor : this.groupAccessor;\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.yAxis.label;\n\n    setAccessYAxis({\n      rootEle: this.stackedBarChartEl,\n      hasYAxis: this.innerYAxis ? this.innerYAxis.visible : false,\n      yAxis: this.layout === 'vertical' ? this.y || false : this.x || false, // this is optional for some charts, if hasXAxis is always false\n      yAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasXAxis is always false\n    });\n  }\n\n  drawBaseline() {\n    if (this.layout === 'vertical') {\n      drawAxis({\n        root: this.rootG,\n        height: this.innerPaddedHeight,\n        width: this.innerPaddedWidth,\n        axisScale: this.x,\n        left: false,\n        padding: this.padding,\n        markOffset: this.y(0) || -1,\n        duration: this.duration\n      });\n    }\n    if (this.layout === 'horizontal') {\n      drawAxis({\n        root: this.rootG,\n        height: this.innerPaddedHeight,\n        width: this.innerPaddedWidth,\n        axisScale: this.y,\n        left: true,\n        padding: this.padding,\n        markOffset: this.x(0) || -1,\n        duration: this.duration\n      });\n    }\n  }\n\n  // dashed line grid for chart\n  drawXGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.x,\n      false,\n      !this.innerXAxis.gridVisible,\n      this.xAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  drawYGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.y,\n      true,\n      !this.innerYAxis.gridVisible,\n      this.yAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  setGlobalSelections() {\n    const dataBoundToBarGroups = this.barG.selectAll('.stacked-bar-series').data(this.series, d => d.key);\n\n    this.enterBarWrappers = dataBoundToBarGroups.enter().append('g');\n    this.exitBarWrappers = dataBoundToBarGroups.exit();\n    this.updateBarWrappers = dataBoundToBarGroups.merge(this.enterBarWrappers);\n\n    const dataBoundToGeometries = this.updateBarWrappers\n      .selectAll('.stacked-bar')\n      .data(d => d.values, d => d[this.ordinalAccessor]);\n\n    this.enter = dataBoundToGeometries.enter().append('rect');\n    this.exit = dataBoundToGeometries.exit();\n    this.update = dataBoundToGeometries.merge(this.enter);\n\n    this.exitSize = this.exit.size();\n    this.enterSize = this.enter.size();\n\n    const dataBoundToLabelWrappers = this.labelG\n      .selectAll('.stacked-bar-dataLabel-series')\n      .data(this.series, d => d.key);\n    this.enterLabelWrappers = dataBoundToLabelWrappers.enter().append('g');\n    this.exitLabelWrappers = dataBoundToLabelWrappers.exit();\n    this.updateLabelWrappers = dataBoundToLabelWrappers.merge(this.enterLabelWrappers);\n\n    const dataBoundToLabels = this.updateLabelWrappers\n      .selectAll('.stacked-bar-dataLabel')\n      .data(d => d.values, d => d[this.ordinalAccessor]);\n    this.enterLabels = dataBoundToLabels.enter().append('text');\n    this.exitLabels = dataBoundToLabels.exit();\n    this.updateLabels = dataBoundToLabels.merge(this.enterLabels);\n\n    const dataBoundToTotalLabels = this.totalLabels\n      .selectAll('.bar-dataLabel-group text')\n      .data(this.series, d => d.key);\n    this.enterTotalLabels = dataBoundToTotalLabels.enter().append('text');\n    this.exitTotalLabels = dataBoundToTotalLabels.exit();\n    this.updateTotalLabels = dataBoundToTotalLabels.merge(this.enterTotalLabels);\n  }\n\n  enterGeometries() {\n    this.enter.interrupt();\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    const padding = this.layout === 'vertical' ? 'innerPaddedWidth' : 'innerPaddedHeight';\n\n    this.enter\n      .attr('class', 'stacked-bar')\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .each((_d, i, n) => {\n        initializeElementAccess(n[i]);\n      })\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .attr('fill', (d, i) => {\n        const clicked =\n          this.clickHighlight &&\n          this.clickHighlight.length > 0 &&\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n        const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n        const baseColor = this.colorArr[i];\n        return clicked && this.clickStyle.color\n          ? visaColors[this.clickStyle.color] || this.clickStyle.color\n          : clicked\n          ? baseColor\n          : hovered && this.hoverStyle.color\n          ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n          : baseColor;\n      })\n      .attr('opacity', 0)\n      .attr(valueAxis, d => {\n        let scale = this[valueAxis];\n        if (this.interpolating) {\n          scale = this.interpolating[valueAxis];\n        }\n        let direction = d.stackEnd;\n        if (d.stackEnd < 0) {\n          direction = d.stackStart;\n        }\n        if (typeof d.enteringStackStart === 'number') {\n          direction = d.enteringStackStart;\n        }\n        return scale(direction / this.modifier(d));\n      })\n      .attr(valueDimension, 0)\n      .attr(ordinalAxis, d => {\n        let scale = this[ordinalAxis];\n        if (this.interpolating) {\n          scale = this.interpolating[ordinalAxis];\n        }\n        return scale(d[this.groupAccessor]);\n      })\n      .attr(ordinalDimension, () => {\n        let scale = this[ordinalAxis];\n        if (this.interpolating) {\n          scale = this.interpolating[ordinalAxis];\n        }\n        return scale.bandwidth();\n      });\n\n    this.enterBarWrappers\n      .attr('class', 'stacked-bar-series entering')\n      .each((_, i, n) => {\n        // we bind accessible interactivity and semantics here (role, tabindex, etc)\n        initializeElementAccess(n[i]);\n      })\n      .selectAll('.stacked-bar')\n      .attr(valueDimension, d => {\n        return this.layout === 'vertical'\n          ? this.y(d.stackEnd / this.modifier(d)) - this.y(d.stackStart / this.modifier(d))\n          : this.x(d.stackStart / this.modifier(d)) - this.x(d.stackEnd / this.modifier(d));\n      });\n\n    this.enterBarWrappers\n      .selectAll('.stacked-bar')\n      .attr(valueAxis, d => {\n        return this.layout === 'vertical'\n          ? this.y(d.stackStart / this.modifier(d))\n          : this.x(d.stackEnd / this.modifier(d));\n      })\n      .attr(ordinalAxis, d => {\n        let shift = this[ordinalAxis](d[this.groupAccessor]) + this[ordinalAxis].bandwidth() / 2;\n        shift =\n          this[ordinalAxis](d[this.groupAccessor]) +\n          (this[ordinalAxis].bandwidth() / 2) * (shift / (this[padding] / 2));\n        return shift;\n      })\n      .attr(ordinalDimension, 0);\n\n    this.enterBarWrappers.order();\n    this.enter.order();\n  }\n\n  updateGeometries() {\n    this.update.interrupt();\n\n    this.update\n      .transition('opacity')\n      .duration((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          select(n[i]).classed('entering', false);\n          return this.duration;\n        }\n        return 0;\n      })\n      .ease(easeCircleIn)\n      .attr('opacity', d =>\n        checkInteraction(d, 1, this.hoverOpacity, this.hoverHighlight, this.clickHighlight, this.innerInteractionKeys)\n      )\n      .call(transitionEndAll, () => {\n        this.update.classed('entering', false);\n      });\n  }\n\n  exitGeometries() {\n    this.exit.interrupt();\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    const padding = this.layout === 'vertical' ? 'innerPaddedWidth' : 'innerPaddedHeight';\n\n    this.exit\n      .attr('filter', null)\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr(valueDimension, 0)\n      .attr(valueAxis, d => {\n        let direction = d.stackEnd;\n        if (d.stackEnd < 0) {\n          direction = d.stackStart;\n        }\n        return this[valueAxis](direction / this.modifier(d));\n      })\n      .attr(ordinalAxis, d => this[ordinalAxis](d[this.groupAccessor]));\n\n    this.exitBarWrappers\n      .selectAll('.stacked-bar')\n      .attr('filter', null)\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .attr(valueAxis, (_, i, n) => select(n[i]).attr(valueAxis))\n      .attr(ordinalAxis, (_d, i, n) => {\n        const self = select(n[i]);\n        let shift = +self.attr(ordinalAxis) + +self.attr(ordinalDimension) / 2;\n        shift = +self.attr(ordinalAxis) + (+self.attr(ordinalDimension) / 2) * (shift / (this[padding] / 2));\n        return shift;\n      })\n      .attr(valueDimension, (_, i, n) => select(n[i]).attr(valueDimension))\n      .attr(ordinalDimension, 0);\n\n    // this new transtition ensures that the chart counts and all labels\n    // correctly reflect the newest information\n    this.update\n      .transition('accessibilityAfterExit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        // before we exit geometries, we need to check if a focus exists or not\n        const focusDidExist = checkAccessFocus(this.rootG.node());\n        // then we must remove the exiting elements\n        this.exit.remove();\n        this.exitBarWrappers.remove();\n        // then our util can count geometries\n        this.setChartCountAccessibility();\n        // our group's label should update with new counts too\n        this.setGroupAccessibilityID();\n        // since items exited, labels must receive updated values\n        this.setGeometryAriaLabels();\n        // and also make sure the user's focus isn't lost\n        retainAccessFocus({\n          parentGNode: this.rootG.node(),\n          focusDidExist\n          // recursive: true\n        });\n      });\n  }\n\n  drawGeometries() {\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    // const padding = this.layout === 'vertical' ? 'innerPaddedWidth' : 'innerPaddedHeight';\n\n    this.updateBarWrappers\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        this.updateBarWrappers.classed('entering', false);\n      });\n\n    this.update\n      .classed('geometryIsMoving', (d, i, n) => {\n        const geometryIsUpdating = checkAttributeTransitions(select(n[i]), [\n          {\n            attr: ordinalAxis,\n            numeric: true,\n            newValue: this[ordinalAxis](d[this.groupAccessor])\n          },\n          {\n            attr: ordinalDimension,\n            numeric: true,\n            newValue: this[ordinalAxis].bandwidth()\n          },\n          {\n            attr: valueAxis,\n            numeric: true,\n            newValue:\n              this.layout === 'vertical'\n                ? this.y(d.stackStart / this.modifier(d))\n                : this.x(d.stackEnd / this.modifier(d))\n          },\n          {\n            attr: valueDimension,\n            numeric: true,\n            newValue:\n              this.layout === 'vertical'\n                ? this.y(d.stackEnd / this.modifier(d)) - this.y(d.stackStart / this.modifier(d))\n                : this.x(d.stackStart / this.modifier(d)) - this.x(d.stackEnd / this.modifier(d))\n          }\n        ]);\n        return geometryIsUpdating;\n      })\n      .attr(`data-${ordinalAxis}`, d => this[ordinalAxis](d[this.groupAccessor]))\n      .attr(`data-${ordinalDimension}`, this[ordinalAxis].bandwidth())\n      .attr(`data-${valueAxis}`, d => {\n        return this.layout === 'vertical'\n          ? this.y(d.stackStart / this.modifier(d))\n          : this.x(d.stackEnd / this.modifier(d));\n      })\n      .attr(`data-${valueDimension}`, d => {\n        return this.layout === 'vertical'\n          ? this.y(d.stackEnd / this.modifier(d)) - this.y(d.stackStart / this.modifier(d))\n          : this.x(d.stackStart / this.modifier(d)) - this.x(d.stackEnd / this.modifier(d));\n      })\n      .attr('data-translate-x', this.padding.left + this.margin.left)\n      .attr('data-translate-y', this.padding.top + this.margin.top)\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr(valueAxis, d => {\n        return this.layout === 'vertical'\n          ? this.y(d.stackStart / this.modifier(d))\n          : this.x(d.stackEnd / this.modifier(d));\n      })\n      .attr(valueDimension, d => {\n        return this.layout === 'vertical'\n          ? this.y(d.stackEnd / this.modifier(d)) - this.y(d.stackStart / this.modifier(d))\n          : this.x(d.stackStart / this.modifier(d)) - this.x(d.stackEnd / this.modifier(d));\n      })\n      .attr(ordinalAxis, d => this[ordinalAxis](d[this.groupAccessor]))\n      .attr(ordinalDimension, this[ordinalAxis].bandwidth())\n      .call(transitionEndAll, () => {\n        setTimeout(() => {\n          this.update.classed('geometryIsMoving', false);\n          this.updateInteractionState();\n\n          this.updateLabels.classed('textIsMoving', false);\n          this.checkLabelColorAgainstBackground();\n        }, 0); // 33 is the magic number: it is approx 1 frame at 30fps, so the largest, least-noticable timeout\n        // we must make sure if geometries move, that our focus indicator does too\n        retainAccessFocus({\n          parentGNode: this.rootG.node()\n        });\n\n        // now we can emit the event that transitions are complete\n        this.transitionEndEvent.emit({ chartID: this.chartID });\n      });\n  }\n\n  updateInteractionState() {\n    removeHoverStrokes(this.svg.node());\n    // we created an \"opacity\" transition namespace in update's transition\n    // we override it here to instantly display opacity state (below)\n    this.update.interrupt('opacity');\n    this.updateLabels.interrupt('opacity');\n\n    // we use this.update and this.labelCurrent from setGlobalSelection here\n    // the lifecycle state does not matter (enter/update/exit)\n    // since interaction state can happen at any time\n\n    this.update\n      .attr('opacity', d =>\n        checkInteraction(d, 1, this.hoverOpacity, this.hoverHighlight, this.clickHighlight, this.innerInteractionKeys)\n      )\n      .attr('fill', (d, i) => {\n        const clicked =\n          this.clickHighlight &&\n          this.clickHighlight.length > 0 &&\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n        const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n        const baseColor = this.colorArr[i];\n        return clicked && this.clickStyle.color\n          ? visaColors[this.clickStyle.color] || this.clickStyle.color\n          : clicked\n          ? baseColor\n          : hovered && this.hoverStyle.color\n          ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n          : baseColor;\n      })\n      .each((d, i, n) => {\n        const me = select(n[i]);\n        if (!this.accessibility.hideStrokes && !me.classed('geometryIsMoving')) {\n          const clicked =\n            this.clickHighlight &&\n            this.clickHighlight.length > 0 &&\n            checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n          const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n          const baseColor = this.preparedColors[i];\n          const state = clicked ? 'click' : hovered ? 'hover' : 'rest';\n          const color =\n            clicked && this.clickStyle.color\n              ? visaColors[this.clickStyle.color] || this.clickStyle.color\n              : clicked\n              ? baseColor\n              : hovered && this.hoverStyle.color\n              ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n              : baseColor;\n          if (state === 'hover') {\n            drawHoverStrokes({\n              inputElement: n[i],\n              id: this.chartID,\n              key: d[this.ordinalAccessor] + d[this.groupAccessor],\n              strokeWidth: this.hoverStyle.strokeWidth,\n              fill: color\n            });\n          }\n          const filter = this.strokes[state + color];\n          if (filter !== me.attr('filter')) {\n            // this setTimeout is actually related to a browser bug in safari (it won't draw\n            // updates if the filter changes from one type to another). we must remove the\n            // filter and then add the right one in a different scope of execution\n            if (this.isSafari) {\n              me.attr('filter', null);\n              setTimeout(() => {\n                me.attr('filter', filter);\n              }, 0);\n            } else {\n              me.attr('filter', filter);\n            }\n          }\n        } else {\n          me.attr('filter', null);\n        }\n      });\n    // in case the fill/stroke contents change, we want to update our focus indicator to match\n    // (the focus indicator copies the whole element being focused to place it on top)\n    retainAccessFocus({\n      parentGNode: this.rootG.node()\n    });\n\n    setLegendInteractionState({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.ordinalAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.hoverStyle,\n      clickStyle: this.clickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  setLabelOpacity() {\n    const addCollisionClass = this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly;\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n    let textHeight = 15; // default label is usually 15\n\n    this.updateLabels\n      // .interrupt('opacity')\n      .each((_, i, n) => {\n        if (i === 0) {\n          // we just need to check this on one element\n          const textElement = n[i];\n          const style = getComputedStyle(textElement);\n          const fontSize = parseFloat(style.fontSize);\n          textHeight = Math.max(fontSize - 1, 1); // clone.getBBox().height;\n        }\n      });\n    this.processLabelOpacity(this.updateLabels, addCollisionClass);\n    this.updateTotalLabels.attr('opacity', this.showTotalValue && !this.normalized ? 1 : 0);\n\n    if (addCollisionClass) {\n      const labelsAdded = this.updateLabels.filter((_, i, n) => select(n[i]).classed('collision-added'));\n      const labelsRemoved = this.updateLabels\n        .filter((_, i, n) => select(n[i]).classed('collision-removed'))\n        .attr('data-use-dx', hideOnly) // need to add this for remove piece of collision below\n        .attr('data-use-dy', hideOnly); // .transition().duration(0);\n\n      const collisionSettings = {\n        vertical: {\n          top: {\n            validPositions: ['bottom'],\n            offsets: [5]\n          },\n          middle: {\n            validPositions: ['middle'],\n            offsets: [1]\n          },\n          bottom: {\n            validPositions: ['top'],\n            offsets: [textHeight / 2]\n          }\n        },\n        horizontal: {\n          right: {\n            validPositions: ['left'],\n            offsets: [8]\n          },\n          middle: {\n            validPositions: ['middle'],\n            offsets: [1]\n          },\n          left: {\n            validPositions: ['right'],\n            offsets: [20]\n          }\n        }\n      };\n\n      const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n      const boundsScope =\n        collisionPlacement && collisionSettings[this.layout][collisionPlacement] // check whether placement provided maps correctly\n          ? this.dataLabel.collisionPlacement\n          : this.layout === 'vertical'\n          ? 'top' // if we don't have collisionPlacement\n          : 'right';\n\n      // we can now remove labels as well if we need to...\n      if (labelsRemoved.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsRemoved,\n          avoidMarks: [],\n          validPositions: ['middle'],\n          offsets: [1],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n          hideOnly: false,\n          removeOnly: true\n        });\n\n        // remove temporary class now\n        labelsRemoved.classed('collision-removed', false);\n      }\n\n      // we can now add labels as well if we need to...\n      if (labelsAdded.size() > 0) {\n        this.bitmaps = placeDataLabels({\n          root: labelsAdded,\n          xScale: this.x,\n          yScale: this.y,\n          ordinalAccessor: this.groupAccessor,\n          valueAccessor: this.valueAccessor,\n          placement: this.dataLabel.placement,\n          layout: this.layout,\n          chartType: 'stacked',\n          normalized: this.normalized,\n          avoidCollision: {\n            runOccupancyBitmap: this.dataLabel.visible && this.dataLabel.placement === 'auto',\n            bitmaps: this.bitmaps,\n            labelSelection: labelsAdded,\n            avoidMarks: [this.update],\n            validPositions: hideOnly ? ['middle'] : collisionSettings[this.layout][boundsScope].validPositions,\n            offsets: hideOnly ? [1] : collisionSettings[this.layout][boundsScope].offsets,\n            accessors: [this.groupAccessor, this.ordinalAccessor, 'key'], // key is created for lines by nesting done in line,\n            size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n            boundsScope: hideOnly ? undefined : boundsScope,\n            hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly,\n            suppressMarkDraw: true\n          }\n        });\n\n        // remove temporary class now\n        labelsAdded.classed('collision-added', false);\n      }\n    }\n  }\n\n  processLabelOpacity(selection, addCollisionClass?) {\n    const opacity = this.dataLabel.visible ? 1 : 0;\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n\n    selection.attr('opacity', (d, i, n) => {\n      const prevOpacity = +select(n[i]).attr('opacity');\n      const styleVisibility = select(n[i]).style('visibility');\n      const dimensions = {};\n      dimensions[ordinalDimension] = this[ordinalAxis].bandwidth();\n      dimensions[valueDimension] =\n        this.layout === 'vertical'\n          ? this.y(d.stackEnd / this.modifier(d)) - this.y(d.stackStart / this.modifier(d))\n          : this.x(d.stackStart / this.modifier(d)) - this.x(d.stackEnd / this.modifier(d));\n      const hasRoom =\n        this.dataLabel.placement === 'auto' || // we ignore show small labels when running collision algorithm\n        this.dataLabel.collisionHideOnly ||\n        this.accessibility.showSmallLabels ||\n        verifyTextHasSpace({\n          text: formatDataLabel(d, this.innerLabelAccessor, this.dataLabel.format, this.normalized),\n          dimensions,\n          fontSize: 14\n        });\n      const targetOpacity = hasRoom\n        ? checkInteraction(\n            d,\n            opacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n          ? addCollisionClass\n            ? Number.EPSILON\n            : 0\n          : 1\n        : 0;\n      if (\n        ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n        addCollisionClass\n      ) {\n        if (targetOpacity === 1) {\n          select(n[i])\n            .classed('collision-added', true)\n            .style('visibility', null);\n        } else {\n          select(n[i]).classed('collision-removed', true);\n        }\n      }\n      return targetOpacity;\n    });\n  }\n\n  checkLabelColorAgainstBackground() {\n    this.updateLabels.attr('fill', (d, i, n) => {\n      return this.textTreatmentHandler(d, i, n);\n    });\n  }\n\n  textTreatmentHandler = (d, i, n) => {\n    const me = select(n[i]);\n    const bgColor =\n      this.clickHighlight &&\n      this.clickHighlight.length > 0 &&\n      checkClicked(d, this.clickHighlight, this.innerInteractionKeys) &&\n      this.clickStyle.color\n        ? visaColors[this.clickStyle.color] || this.clickStyle.color\n        : this.hoverHighlight &&\n          checkHovered(d, this.hoverHighlight, this.innerInteractionKeys) &&\n          this.hoverStyle.color\n        ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n        : this.preparedColors[i];\n\n    const color = autoTextColor(bgColor);\n    if (!me.classed('textIsMoving')) {\n      const filter = this.textStrokes[bgColor];\n      if (filter !== me.attr('filter')) {\n        if (this.isSafari) {\n          me.attr('filter', null);\n          setTimeout(() => {\n            me.attr('filter', filter);\n          }, 0);\n        } else {\n          me.attr('filter', filter);\n        }\n      }\n    } else {\n      me.attr('filter', null);\n    }\n\n    return color;\n  };\n\n  bindInteractivity() {\n    this.update\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  setRoundedCorners() {\n    this.update\n      .transition('shared_update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('rx', this.roundedCorner)\n      .attr('ry', this.roundedCorner);\n  }\n\n  setSelectedClass() {\n    this.update.classed('highlight', (d, i, n) => {\n      let selected = checkInteraction(d, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n      selected = this.clickHighlight && this.clickHighlight.length ? selected : false;\n      const selectable = this.accessibility.elementsAreInterface;\n      setElementInteractionAccessState(n[i], selected, selectable);\n      return selected;\n    });\n  }\n\n  updateCursor() {\n    this.update.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    select(this.stackedBarChartEl)\n      .selectAll('.legend')\n      .style('cursor', !this.suppressEvents && this.legend.interactive && this.legend.visible ? this.cursor : null);\n  }\n\n  enterDataLabels() {\n    const opacity = this.dataLabel.visible ? 1 : 0;\n    this.enterLabelWrappers.attr('class', 'stacked-bar-dataLabel-series entering');\n\n    this.enterLabels\n      .attr('class', 'stacked-bar-dataLabel entering')\n      .style('pointer-events', 'none')\n      .classed('stacked-bar-dataLabel-' + this.layout, true)\n      .attr(\n        'opacity',\n        d =>\n          checkInteraction(\n            d,\n            opacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n            ? 0\n            : Number.EPSILON // we need this to be epsilon initially to enable auto placement algorithm to run on load\n      )\n      .attr('fill', this.textTreatmentHandler);\n\n    placeDataLabels({\n      root: this.enterLabels,\n      xScale: this.x,\n      yScale: this.y,\n      ordinalAccessor: this.groupAccessor,\n      valueAccessor: this.valueAccessor,\n      placement: this.dataLabel.placement,\n      layout: this.layout,\n      chartType: 'stacked',\n      normalized: this.normalized\n    });\n  }\n\n  updateDataLabels() {\n    this.updateLabels.interrupt();\n\n    this.updateLabelWrappers\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        this.updateLabelWrappers.classed('entering', false);\n      });\n\n    const updatingLabels = this.updateLabels\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          select(n[i]).classed('entering', false);\n          return this.duration;\n        }\n        return 0;\n      });\n    this.processLabelOpacity(updatingLabels);\n    updatingLabels.call(transitionEndAll, () => {\n      this.updateLabels.classed('entering', false);\n    });\n  }\n\n  exitDataLabels() {\n    this.exitLabelWrappers\n      .selectAll('text')\n      .attr('filter', null)\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .attr('opacity', 0)\n      .call(transitionEndAll, () => {\n        this.exitLabelWrappers.remove();\n      });\n\n    this.exitLabels\n      .attr('filter', null)\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  drawDataLabels() {\n    let textHeight = 15; // default label is usually 15\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n\n    this.updateLabels\n      .classed('stacked-bar-dataLabel-horizontal', false)\n      .classed('stacked-bar-dataLabel-vertical', false)\n      .classed('stacked-bar-dataLabel-' + this.layout, true)\n      .text((d, i, n) => {\n        if (d[this.valueAccessor] === 0 && !this.showZeroLabels) {\n          return '';\n        }\n        if (i === 0) {\n          // we just need to check this on one element\n          const textElement = n[i];\n          const style = getComputedStyle(textElement);\n          const fontSize = parseFloat(style.fontSize);\n          textHeight = Math.max(fontSize - 1, 1); // clone.getBBox().height;\n        }\n        return formatDataLabel(d, this.innerLabelAccessor, this.dataLabel.format, this.normalized);\n      })\n      .style('visibility', (_, i, n) =>\n        this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly\n          ? select(n[i]).style('visibility')\n          : null\n      );\n\n    this.updateLabelWrappers\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        this.updateLabelWrappers.classed('entering', false);\n      });\n\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const stack = this.layout === 'vertical' ? 'stackStart' : 'stackEnd';\n\n    const labelUpdate = this.updateLabels\n      .classed('textIsMoving', d => {\n        if (!this.interpolating) {\n          return false;\n        }\n        const textIsMoving =\n          this.interpolating[ordinalAxis](d[this.groupAccessor]) !== this[ordinalAxis](d[this.groupAccessor]) ||\n          this.interpolating[valueAxis](d[stack] / this.modifier(d)) !== this[valueAxis](d[stack] / this.modifier(d));\n        return textIsMoving;\n      })\n      .attr('data-translate-x', this.padding.left + this.margin.left)\n      .attr('data-translate-y', this.padding.top + this.margin.top)\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration);\n\n    const collisionSettings = {\n      vertical: {\n        top: {\n          validPositions: ['bottom'],\n          offsets: [5]\n        },\n        middle: {\n          validPositions: ['middle'],\n          offsets: [1]\n        },\n        bottom: {\n          validPositions: ['top'],\n          offsets: [textHeight / 2]\n        }\n      },\n      horizontal: {\n        right: {\n          validPositions: ['left'],\n          offsets: [8]\n        },\n        middle: {\n          validPositions: ['middle'],\n          offsets: [1]\n        },\n        left: {\n          validPositions: ['right'],\n          offsets: [20]\n        }\n      }\n    };\n\n    const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n    const boundsScope =\n      collisionPlacement && collisionSettings[this.layout][collisionPlacement] // check whether placement provided maps correctly\n        ? this.dataLabel.collisionPlacement\n        : this.layout === 'vertical'\n        ? 'top' // if we don't have collisionPlacement\n        : 'right';\n\n    this.bitmaps = placeDataLabels({\n      root: labelUpdate,\n      xScale: this.x,\n      yScale: this.y,\n      ordinalAccessor: this.groupAccessor,\n      valueAccessor: this.valueAccessor,\n      placement: this.dataLabel.placement,\n      layout: this.layout,\n      chartType: 'stacked',\n      normalized: this.normalized,\n      avoidCollision: {\n        runOccupancyBitmap: this.dataLabel.visible && this.dataLabel.placement === 'auto',\n        labelSelection: labelUpdate,\n        avoidMarks: [this.update],\n        validPositions: hideOnly ? ['middle'] : collisionSettings[this.layout][boundsScope].validPositions,\n        offsets: hideOnly ? [1] : collisionSettings[this.layout][boundsScope].offsets,\n        accessors: [this.groupAccessor, this.ordinalAccessor, 'key'], // key is created for lines by nesting done in line,\n        size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n        boundsScope: hideOnly ? undefined : boundsScope,\n        hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly\n      }\n    });\n  }\n  // draw total value dataLabel\n\n  enterTotalDataLabels() {\n    const groupDimension = this.layout === 'vertical' ? 'x' : 'y';\n    const sumDimension = this.layout === 'vertical' ? 'y' : 'x';\n\n    this.enterTotalLabels\n      .attr('class', 'bar-dataLabel-' + this.layout)\n      .attr('opacity', Number.EPSILON)\n      .attr('fill', visaColors.dark_text)\n      .attr(groupDimension, d => {\n        return this[groupDimension](d.key) + this[groupDimension].bandwidth() / 2;\n      })\n      .attr(sumDimension, d => {\n        return this[sumDimension](d.sumAboveZero) + 4;\n      });\n    // .attr('text-anchor', this.layout === 'vertical' ? 'middle' : 'start');\n  }\n\n  updateTotalDataLabels() {\n    const totalValueOpacity = this.showTotalValue && !this.normalized ? 1 : 0;\n\n    this.updateTotalLabels\n      .transition('total_opacity')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', totalValueOpacity);\n  }\n\n  exitTotalDataLabels() {\n    this.exitTotalLabels\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  drawTotalDataLabels() {\n    const groupDimension = this.layout === 'vertical' ? 'x' : 'y';\n    const sumDimension = this.layout === 'vertical' ? 'y' : 'x';\n    const totalValueOpacity = this.showTotalValue && !this.normalized ? 1 : 0;\n\n    this.updateTotalLabels\n      .text(d => formatStats(d.sum, this.dataLabel.format))\n      .attr('text-anchor', this.layout === 'vertical' ? 'middle' : 'start');\n\n    const totalLabelSelection = this.updateTotalLabels\n      .classed('bar-dataLabel-horizontal', false)\n      .classed('bar-dataLabel-vertical', false)\n      .classed('bar-dataLabel-' + this.layout, true)\n      .attr(`data-${groupDimension}`, d => {\n        return this[groupDimension](d.key) + this[groupDimension].bandwidth() / 2;\n      })\n      .attr(`data-${sumDimension}`, d => {\n        return this[sumDimension](d.sumAboveZero); // 5 is a spacer for the collision placement using middle\n      })\n      .attr('data-use-dx', true)\n      .attr('data-use-dy', true)\n      .attr('data-translate-x', this.padding.left + this.margin.left)\n      .attr('data-translate-y', this.padding.top + this.margin.top)\n      .attr('dx', this.layout === 'vertical' ? '0' : '0.3em')\n      .attr('dy', this.layout === 'vertical' ? '-0.3em' : '.3em')\n      .style('visibility', (_, i, n) =>\n        this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly\n          ? select(n[i]).style('visibility')\n          : null\n      )\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', totalValueOpacity);\n\n    // for stacked we will only run this if data label props are true and show totals is visible\n    if (this.showTotalValue && (this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly)) {\n      // const validPositions = this.layout === 'vertical' ? ['middle', 'top'] : ['middle', 'right'];\n      this.bitmaps = resolveLabelCollision({\n        bitmaps: this.bitmaps,\n        labelSelection: totalLabelSelection,\n        avoidMarks: [this.update],\n        validPositions: ['middle'], // only do middle since we are forcing to collisionHideOnly\n        offsets: [1], // [1,1]\n        accessors: [this.ordinalAccessor],\n        // boundsScope: this.layout === 'vertical' ? 'top' : 'center',\n        size: [roundTo(this.width, 0), roundTo(this.height, 0)], // we need the whole width and height for pie\n        hideOnly: true\n      });\n\n      // since we are hardcoding hide only for these, we must apply x/y locations after collision\n      totalLabelSelection\n        .attr(groupDimension, d => {\n          return this[groupDimension](d.key) + this[groupDimension].bandwidth() / 2;\n        })\n        .attr(sumDimension, d => {\n          return this[sumDimension](d.sumAboveZero);\n        });\n    } else {\n      totalLabelSelection\n        .attr(groupDimension, d => {\n          return this[groupDimension](d.key) + this[groupDimension].bandwidth() / 2;\n        })\n        .attr(sumDimension, d => {\n          return this[sumDimension](d.sumAboveZero);\n        });\n    }\n  }\n\n  drawReferenceLines() {\n    setReferenceLine({\n      groupName: 'stack',\n      root: this.referencesG,\n      referenceLines: this.referenceLines,\n      referenceStyle: this.referenceStyle,\n      innerPaddedWidth: this.innerPaddedWidth,\n      innerPaddedHeight: this.innerPaddedHeight,\n      duration: this.duration,\n      layout: this.layout,\n      x: this.x,\n      y: this.y,\n      unitTest: this.unitTest\n    });\n  }\n\n  drawAnnotations() {\n    let ordinalScale = this.layout !== 'horizontal' ? this.x : this.y;\n    const valueScale = this.layout !== 'horizontal' ? this.y : this.x;\n    if (this.data[0][this.groupAccessor] instanceof Date) {\n      const maxDate = max(this.data, d => d[this.groupAccessor]);\n      const minDate = min(this.data, d => d[this.groupAccessor]);\n      const range = this.layout !== 'horizontal' ? [0, this.innerPaddedWidth] : [this.innerPaddedHeight, 0];\n\n      ordinalScale = scaleTime()\n        .domain([minDate, maxDate])\n        .range(range);\n    }\n    annotate({\n      source: this.rootG.node(),\n      data: this.annotations,\n      xScale: this.layout !== 'horizontal' ? ordinalScale : valueScale,\n      xAccessor: this.layout !== 'horizontal' ? this.groupAccessor : this.valueAccessor,\n      yScale: this.layout !== 'horizontal' ? valueScale : ordinalScale,\n      yAccessor: this.layout !== 'horizontal' ? this.valueAccessor : this.groupAccessor,\n      width: this.width,\n      height: this.height,\n      padding: this.padding,\n      margin: this.margin,\n      bitmaps: this.bitmaps\n    });\n  }\n\n  setAnnotationAccessibility() {\n    setAccessAnnotation(this.getLanguageString(), this.stackedBarChartEl, this.annotations, this.referenceLines);\n  }\n\n  drawLegendElements() {\n    drawLegend({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      width: this.innerPaddedWidth,\n      height: this.margin.top + 20,\n      colorArr: this.colorArr,\n      baseColorArr: this.preparedColors,\n      hideStrokes: this.accessibility.hideStrokes,\n      margin: this.margin,\n      padding: this.padding,\n      duration: this.duration,\n      type: 'bar',\n      fontSize: 16,\n      data: this.legendData,\n      labelKey: this.ordinalAccessor,\n      label: this.legend.labels,\n      hide: !this.legend.visible,\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.ordinalAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.hoverStyle,\n      clickStyle: this.clickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  bindLegendInteractivity() {\n    select(this.stackedBarChartEl)\n      .selectAll('.legend')\n      .style('cursor', !this.suppressEvents && this.legend.interactive && this.legend.visible ? this.cursor : null)\n      .on(\n        'click',\n        !this.suppressEvents && this.legend.interactive && this.legend.visible\n          ? (d, i, n) => this.onClickHandler(d, n[i])\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.legend.interactive && this.legend.visible\n          ? (d, i, n) => {\n              this.hoverEvent.emit({ data: d, target: n[i] });\n            }\n          : null\n      )\n      .on(\n        'mouseout',\n        !this.suppressEvents && this.legend.interactive && this.legend.visible ? () => this.onMouseOutHandler() : null\n      );\n  }\n\n  // new accessibility functions added here\n  setTagLevels() {\n    this.topLevel = findTagLevel(this.highestHeadingLevel);\n    this.bottomLevel = findTagLevel(this.highestHeadingLevel, 3);\n  }\n\n  setChartDescriptionWrapper() {\n    // this initializes the accessibility description section of the chart\n    initializeDescriptionRoot({\n      language: this.getLanguageString(),\n      rootEle: this.stackedBarChartEl,\n      title: this.accessibility.title || this.mainTitle,\n      chartTag: 'stacked-bar-chart',\n      uniqueID: this.chartID,\n      highestHeadingLevel: this.highestHeadingLevel,\n      redraw: this.shouldRedrawWrapper,\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      hideDataTable: this.accessibility.hideDataTableButton\n    });\n    this.shouldRedrawWrapper = false;\n  }\n\n  setParentSVGAccessibility() {\n    setAccessibilityController({\n      chartTag: 'stacked-bar-chart',\n      language: this.getLanguageString(),\n      node: this.svg.node(),\n      title: this.accessibility.title || this.mainTitle,\n      description: this.subTitle,\n      uniqueID: this.chartID,\n      geomType: 'bar',\n      includeKeyNames: this.accessibility.includeDataKeyNames,\n      dataKeys: scopeDataKeys(this, chartAccessors, 'stacked-bar-chart'),\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.groupAccessor,\n      groupName: 'stack',\n      groupKeys: this.showTotalValue ? ['sumMessage'] : false, // for special group-level keys (typically not needed)\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      // nested: '', // dumbbell only right now\n      // recursive: true // circle-pack only right now\n      normalized: this.normalized,\n      valueAccessor: this.valueAccessor\n    });\n  }\n\n  setGeometryAccessibilityAttributes() {\n    // this makes sure every geom element has correct event handlers + semantics (role, tabindex, etc)\n    this.update.each((_d, i, n) => {\n      initializeElementAccess(n[i]);\n    });\n  }\n\n  setGeometryAriaLabels() {\n    // this adds an ARIA label to each geom (a description read by screen readers)\n    const keys = scopeDataKeys(this, chartAccessors, 'stacked-bar-chart');\n    this.update.each((_d, i, n) => {\n      setElementFocusHandler({\n        chartTag: 'stacked-bar-chart',\n        language: this.getLanguageString(),\n        node: n[i],\n        geomType: 'bar',\n        includeKeyNames: this.accessibility.includeDataKeyNames,\n        dataKeys: keys,\n        dataKeyNames: this.dataKeyNames,\n        groupKeys: this.showTotalValue ? ['sumMessage'] : false,\n        groupName: 'stack',\n        uniqueID: this.chartID,\n        disableKeyNav:\n          this.suppressEvents &&\n          this.accessibility.elementsAreInterface === false &&\n          this.accessibility.keyboardNavConfig &&\n          this.accessibility.keyboardNavConfig.disabled,\n        normalized: this.normalized,\n        valueAccessor: this.valueAccessor\n      });\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setGroupAccessibilityID() {\n    // this sets an ARIA label on all the g elements in the chart\n    this.updateBarWrappers.each((_, i, n) => {\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setChartAccessibilityTitle() {\n    setAccessTitle(this.getLanguageString(), this.stackedBarChartEl, this.accessibility.title || this.mainTitle);\n  }\n\n  setChartAccessibilitySubtitle() {\n    setAccessSubtitle(this.getLanguageString(), this.stackedBarChartEl, this.subTitle);\n  }\n\n  setChartAccessibilityLongDescription() {\n    setAccessLongDescription(this.getLanguageString(), this.stackedBarChartEl, this.accessibility.longDescription);\n  }\n\n  setChartAccessibilityExecutiveSummary() {\n    setAccessExecutiveSummary(this.getLanguageString(), this.stackedBarChartEl, this.accessibility.executiveSummary);\n  }\n\n  setChartAccessibilityPurpose() {\n    setAccessPurpose(this.getLanguageString(), this.stackedBarChartEl, this.accessibility.purpose);\n  }\n\n  setChartAccessibilityContext() {\n    setAccessContext(this.getLanguageString(), this.stackedBarChartEl, this.accessibility.contextExplanation);\n  }\n\n  setChartAccessibilityStatisticalNotes() {\n    setAccessStatistics(this.getLanguageString(), this.stackedBarChartEl, this.accessibility.statisticalNotes);\n  }\n\n  setChartCountAccessibility() {\n    // this is our automated section that describes the chart contents\n    // (like geometry and gorup counts, etc)\n    setAccessChartCounts({\n      rootEle: this.stackedBarChartEl,\n      parentGNode: this.barG.node(), // pass the wrapper to <g> or geometries here, should be single node selection\n      chartTag: 'stacked-bar-chart',\n      geomType: 'bars',\n      groupName: 'stacks'\n      // recursive: true\n    });\n  }\n\n  setChartAccessibilityStructureNotes() {\n    setAccessStructure(this.getLanguageString(), this.stackedBarChartEl, this.accessibility.structureNotes);\n  }\n  // new accessibility stuff ends here\n\n  onChangeHandler() {\n    if (this.accessibility && typeof this.accessibility.onChangeFunc === 'function') {\n      const d = {\n        updated: this.updated,\n        added: this.enterSize,\n        removed: this.exitSize\n      };\n      this.accessibility.onChangeFunc(d);\n    }\n    this.updated = false;\n    this.enterSize = 0;\n    this.exitSize = 0;\n  }\n\n  onClickHandler(d, n) {\n    this.clickEvent.emit({ data: d, target: n });\n  }\n\n  onHoverHandler(d, n) {\n    overrideTitleTooltip(this.chartID, true);\n    this.hoverEvent.emit({ data: d, target: n });\n    if (this.showTooltip && d) {\n      this.eventsTooltip({ data: d, evt: event, isToShow: true });\n    }\n  }\n\n  onMouseOutHandler() {\n    overrideTitleTooltip(this.chartID, false);\n    this.mouseOutEvent.emit();\n    if (this.showTooltip) {\n      this.eventsTooltip({ isToShow: false });\n    }\n  }\n\n  // set initial style (instead of copying css class across the lib)\n  setTooltipInitialStyle() {\n    initTooltipStyle(this.tooltipG);\n  }\n\n  // tooltip\n  eventsTooltip({ data, evt, isToShow }: { data?: any; evt?: any; isToShow: boolean }) {\n    drawTooltip({\n      root: this.tooltipG,\n      data,\n      event: evt,\n      isToShow,\n      tooltipLabel: this.tooltipLabel,\n      dataKeyNames: this.dataKeyNames,\n      xAxis: this.xAxis,\n      yAxis: this.yAxis,\n      dataLabel: this.dataLabel,\n      layout: this.layout,\n      ordinalAccessor: this.groupAccessor, // on purpose - to match tooltip util format\n      groupAccessor: this.ordinalAccessor, // on purpose - to match tooltip util format\n      valueAccessor: this.valueAccessor,\n      normalized: this.normalized,\n      chartType: 'stacked'\n    });\n  }\n\n  render() {\n    this.drawStartEvent.emit({ chartID: this.chartID });\n    // theme hardcoded until functionality is added\n    const theme = 'light';\n\n    // everything between this comment and the third should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n    this.init();\n    if (this.shouldSetLocalizationConfig) {\n      this.setLocalizationConfig();\n      this.shouldSetLocalizationConfig = false;\n    }\n    if (this.shouldSetTagLevels) {\n      this.setTagLevels();\n      this.shouldSetTagLevels = false;\n    }\n    if (this.shouldCheckValueAxis) {\n      if (this.layout === 'horizontal') {\n        this.shouldUpdateXAxis = true;\n        this.shouldSetXAxisAccessibility = true;\n        this.shouldUpdateXGrid = true;\n      } else if (this.layout === 'vertical') {\n        this.shouldUpdateYAxis = true;\n        this.shouldSetYAxisAccessibility = true;\n        this.shouldUpdateYGrid = true;\n      }\n      this.shouldCheckValueAxis = false;\n    }\n    if (this.shouldCheckLabelAxis) {\n      if (this.layout === 'vertical') {\n        this.shouldUpdateXAxis = true;\n        this.shouldSetXAxisAccessibility = true;\n      } else if (this.layout === 'horizontal') {\n        this.shouldUpdateYAxis = true;\n        this.shouldSetYAxisAccessibility = true;\n      }\n      this.shouldCheckLabelAxis = false;\n    }\n    if (this.shouldUpdateData) {\n      this.prepareData();\n      this.shouldUpdateData = false;\n    }\n    if (this.shouldUpdateLegendData) {\n      this.prepareLegendData();\n      this.shouldUpdateLegendData = false;\n    }\n    if (this.shouldSetDimensions) {\n      this.setDimensions();\n      this.shouldSetDimensions = false;\n    }\n    if (this.shouldUpdateScales) {\n      this.prepareScales();\n      this.shouldUpdateScales = false;\n    }\n    if (this.shouldValidateClickHighlight) {\n      this.validateClickHighlight();\n      this.shouldValidateClickHighlight = false;\n    }\n    if (this.shouldValidateInteractionKeys) {\n      this.validateInteractionKeys();\n      this.shouldValidateInteractionKeys = false;\n    }\n    if (this.shouldValidateDataLabelAccessor) {\n      this.validateDataLabelAccessor();\n      this.shouldValidateDataLabelAccessor = false;\n    }\n    if (this.shouldValidateAxes) {\n      this.validateAxes();\n      this.shouldValidateAxes = false;\n    }\n    if (this.shouldUpdateTableData) {\n      this.setTableData();\n      this.shouldUpdateTableData = false;\n    }\n    if (this.shouldValidate) {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.shouldValidate = false;\n    }\n    if (this.shouldSetColors) {\n      this.setColors();\n      this.shouldSetColors = false;\n    }\n    if (this.shouldValidateLabelPlacement) {\n      this.validateLabelPlacement();\n      this.shouldValidateLabelPlacement = false;\n    }\n    // Everything between this comment and the first should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n\n    return (\n      <div class={`o-layout is--${this.layout} ${theme}`}>\n        <div class=\"o-layout--chart\">\n          <this.topLevel class=\"stacked-bar-main-title vcl-main-title\">{this.mainTitle}</this.topLevel>\n          <this.bottomLevel class=\"visa-ui-text--instructions stacked-bar-sub-title vcl-sub-title\" />\n          <div class=\"stacked-bar-legend vcl-legend\" style={{ display: this.legend.visible ? 'block' : 'none' }} />\n          <keyboard-instructions\n            uniqueID={this.chartID}\n            geomType={'bar'}\n            groupName={'stack'} // taken from initializeDescriptionRoot, on bar this should be \"bar group\", stacked bar is \"stack\", and clustered is \"cluster\"\n            language={this.getLanguageString()}\n            chartTag={'stacked-bar-chart'}\n            width={this.width - (this.margin ? this.margin.right || 0 : 0)}\n            isInteractive={this.accessibility.elementsAreInterface}\n            hasCousinNavigation\n            disabled={\n              this.suppressEvents &&\n              this.accessibility.elementsAreInterface === false &&\n              this.accessibility.keyboardNavConfig &&\n              this.accessibility.keyboardNavConfig.disabled\n            } // the chart is \"simple\"\n          />\n          <div class=\"visa-viz-d3-stacked-bar-container\" />\n          <div class=\"stacked-bar-tooltip vcl-tooltip\" style={{ display: this.showTooltip ? 'block' : 'none' }} />\n          <data-table\n            uniqueID={this.chartID}\n            isCompact\n            language={this.getLanguageString()}\n            tableColumns={this.tableColumns}\n            dataKeyNames={this.dataKeyNames}\n            data={this.tableData}\n            padding={this.padding}\n            margin={this.margin}\n            hideDataTable={this.accessibility.hideDataTableButton}\n            unitTest={this.unitTest}\n          />\n        </div>\n        {/* <canvas id=\"bitmap-render\" /> */}\n      </div>\n    );\n  }\n  private init() {\n    // reading properties\n    const keys = Object.keys(StackedBarChartDefaultValues);\n    let i = 0;\n    // accept 0 or false as default value\n    const exceptions = {\n      mainTitle: {\n        exception: ''\n      },\n      subTitle: {\n        exception: ''\n      },\n      showTooltip: {\n        exception: false\n      },\n      wrapLabel: {\n        exception: false\n      },\n      showTotalValue: {\n        exception: false\n      },\n      barIntervalRatio: {\n        exception: 0\n      },\n      hoverOpacity: {\n        exception: 0\n      }\n    };\n    for (i = 0; i < keys.length; i++) {\n      const exception = !exceptions[keys[i]] ? false : this[keys[i]] === exceptions[keys[i]].exception;\n      this[keys[i]] = this[keys[i]] || exception ? this[keys[i]] : StackedBarChartDefaultValues[keys[i]];\n    }\n  }\n}\n\n// incorporate OSS licenses into build\nwindow['VisaChartsLibOSSLicenses'] = getLicenses(); // tslint:disable-line no-string-literal\n"],"mappings":"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","ignoreList":[]}