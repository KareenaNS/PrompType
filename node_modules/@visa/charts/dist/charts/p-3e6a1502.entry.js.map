{"version":3,"names":["linkSource","d","source","linkTarget","target","link","curve","x","pointX","y","pointY","context","output","path","withPath","buffer","argv","slice","call","arguments","s","apply","this","t","lineStart","point","lineEnd","_","length","constant","linkHorizontal","bumpX","linkVertical","bumpY","propDefaultValues","Utils","AlluvialDiagramDefaultValues","highestHeadingLevel","mainTitle","subTitle","text","height","width","layout","layoutHorizontal","margin","top","bottom","right","left","padding","localization","sourceAccessor","targetAccessor","valueAccessor","groupAccessor","nodeIDAccessor","nodeConfig","fill","alignment","compare","linkConfig","visible","fillMode","opacity","accessibility","animationConfig","colorPalette","colorPaletteCategorical","dataLabel","annotations","hoverStyle","clickStyle","hoverOpacity","cursor","tooltipLabel","showTooltip","suppressEvents","clickHighlight","alluvialDiagramCss","AlluvialDiagramStyle0","getGlobalInstances","configLocalization","getActiveLanguageString","initializeDescriptionRoot","setAccessibilityController","initializeElementAccess","setElementFocusHandler","setElementAccessID","setAccessChartCounts","hideNonessentialGroups","setAccessTitle","setAccessSubtitle","setAccessLongDescription","setAccessExecutiveSummary","setAccessPurpose","setAccessContext","setAccessStatistics","setAccessStructure","setAccessAnnotation","retainAccessFocus","checkAccessFocus","setElementInteractionAccessState","setAccessibilityDescriptionWidth","roundTo","resolveLabelCollision","transitionEndAll","annotate","checkClicked","checkInteraction","convertVisaColor","createTextStrokeFilter","drawTooltip","findTagLevel","formatDataLabel","formatStats","getColors","getContrastingStroke","getPadding","checkHovered","initTooltipStyle","overrideTitleTooltip","scopeDataKeys","chartAccessors","sankey","sankeyCenter","sankeyJustify","sankeyLeft","sankeyLinkHorizontal","sankeyLinkVertical","sankeyRight","prepareRenderChange","visaColors","validateAccessibilityProps","validateLocalizationProps","setSubTitle","AlluvialDiagram","shouldValidateAccessibility","shouldValidateLocalization","innerInteractionKeys","topLevel","bottomLevel","sourceLinksString","targetLinksString","valueString","updated","shouldSetDimensions","shouldUpdateData","shouldSetColors","shouldSetSubTitle","shouldSetTagLevels","shouldRedrawWrapper","shouldUpdateTableData","shouldUpdateDescriptionWrapper","shouldSetChartAccessibilityCount","shouldSetChartAccessibilityTitle","shouldSetChartAccessibilitySubtitle","shouldSetChartAccessibilityLongDescription","shouldSetChartAccessibilityExecutiveSummary","shouldSetChartAccessibilityPurpose","shouldSetChartAccessibilityContext","shouldSetChartAccessibilityStatisticalNotes","shouldSetChartAccessibilityStructureNotes","shouldSetParentSVGAccessibility","shouldSetGeometryAccessibilityAttributes","shouldSetGeometryAriaLabels","shouldSetGroupAccessibilityLabel","shouldSetSelectionClass","shouldSetAnnotationAccessibility","shouldSetGlobalSelections","shouldSetTestingAttributes","shouldDrawInteractionState","shouldEnterUpdateExit","shouldUpdateNodeGeometries","shouldUpdateNodeStyle","shouldUpdateLinkGeometries","shouldUpdateLinkStyle","shouldDrawNodeLabels","shouldSetNodeDimensions","shouldCallSankeyGenerator","shouldUpdateAnnotations","shouldValidateIdAccessor","shouldValidateLabelText","shouldValidateLinkFillMode","shouldValidateNodeAlignment","shouldValidateInteractionKeys","shouldValidateLinkGroups","shouldUpdateCursor","shouldBindInteractivity","shouldResetRoot","shouldSetNodeLabelOpacity","shouldSetLocalizationConfig","dataWatcher","_newData","_oldData","idWatcher","newID","_oldID","console","error","headingWatcher","_newVal","_oldVal","mainTitleWatcher","subTitleWatcher","dimensionWatcher","layoutWatcher","warn","sourceAccessorWatcher","targetAccessorWatcher","valueAccessorWatcher","groupAccessorWatcher","nodeIDAccessorWatcher","nodeConfigWatcher","newAlignmentVal","oldAlignmentVal","newCompareVal","oldCompareVal","newFillVal","oldFillVal","newWidthVal","oldWidthVal","newPaddingVal","oldPaddingVal","linkConfigWatcher","newFillModeVal","oldFillModeVal","newVisibleVal","oldVisibleVal","colorWatcher","interactionStyleWatcher","cursorWatcher","hoverOpacityWatcher","dataLabelWatcher","newLabelAccessorVal","labelAccessor","oldLabelAccessorVal","tooltipLabelWatcher","showTooltipWatcher","accessibilityWatcher","newTitle","title","oldTitle","newExecutiveSummary","executiveSummary","oldExecutiveSummary","newPurpose","purpose","oldPurpose","newLongDescription","longDescription","oldLongDescription","newContext","contextExplanation","oldContext","newStatisticalNotes","statisticalNotes","oldStatisticalNotes","newStructureNotes","structureNotes","oldStructureNotes","newincludeDataKeyNames","includeDataKeyNames","oldincludeDataKeyNames","newElementDescriptionAccessor","elementDescriptionAccessor","oldElementDescriptionAccessor","newKeyNav","keyboardNavConfig","disabled","oldKeyNav","newInterface","elementsAreInterface","oldInterface","localizationWatcher","newLanguage","language","oldLanguage","newNumeralLocale","numeralLocale","oldNumeralLocale","annotationsWatcher","clickWatcher","hoverWatcher","interactionWatcher","dataKeyNamesWatcher","suppressWatcher","unitTestWatcher","componentWillLoad","chartID","uniqueID","uuid","initialLoadEvent","emit","Promise","resolve","duration","defaults","alluvialDiagramEl","id","setLocalizationConfig","setTagLevels","prepareData","setDimensions","validateIdAccessor","validateLabelText","validateLinkFillMode","validateNodeAlignment","validateInteractionKeys","validateLinkGroups","shouldValidateAccessibilityProps","shouldValidateLocalizationProps","setColors","setNodeDimensions","callSankeyGenerator","setTableData","componentWillUpdate","componentDidLoad","renderRootElements","setTooltipInitialStyle","setChartDescriptionWrapper","setChartAccessibilityTitle","setChartAccessibilitySubtitle","setChartAccessibilityLongDescription","setChartAccessibilityExecutiveSummary","setChartAccessibilityPurpose","setChartAccessibilityContext","setChartAccessibilityStatisticalNotes","setChartAccessibilityStructureNotes","setParentSVGAccessibility","reSetRoot","setSubTitleElements","setGlobalSelections","setTestingAttributes","enterLinkGeometries","updateLinkGeometries","exitLinkGeometries","enterNodeGeometries","updateNodeGeometries","exitNodeGeometries","enterNodeLabels","updateNodeLabels","exitNodeLabels","updateLinkStyle","drawNodeGeometries","drawLinkGeometries","setGeometryAccessibilityAttributes","setGeometryAriaLabels","setGroupAccessibilityID","setChartCountAccessibility","setSelectedClass","updateCursor","drawNodeLabels","bindInteractivity","drawAnnotations","setAnnotationAccessibility","onChangeHandler","root","node","then","initialLoadEndEvent","componentDidUpdate","updateNodeStyle","updateInteractionState","setNodeLabelOpacity","drawEndEvent","innerWidth","innerHeight","innerPaddedHeight","innerPaddedWidth","nodeList","linkList","linkData","forEach","obj","i","linkObj","value","data","nodeData","createNodeList","map","some","e","uniqueSourceID","push","uniqueTargetID","innerLabelAccessor","innerIDAccessor","innerLinkFillMode","innerNodeAlignment","interactionKeys","groupKeys","filter","a","indexOf","windowInstances","languageString","i18Next","languageObject","getResourceBundle","numeralObject","numeral","localeData","skipValidation","Object","assign","disableValidation","onClickEvent","undefined","clickEvent","getLanguageString","uniqueNodeAccessors","nodeAccessors","singleAccessors","nestedAccessors","objectName","objectAccessors","formatAccessors","nodeKeys","tableData","getScopedTableData","preppedData","nodes","tableColumns","keys","linkChartAccessors","secondaryTableData","links","secondaryTableColumns","keyMap","scopedData","dataRecord","scopedDataRecord","field","alluvialProperties","nodeId","nodeWidth","nodePadding","nodeAlign","nodeSort","size","sankeyData","nodeCount","max","layer","svg","select","append","attr","rootG","nodeG","linkG","labelG","subTitleG","tooltipG","updateLinks","updatingLabels","changeSvg","selection","namespace","easing","easeCircleIn","changeRoot","changeRootG","currentNodeLayers","previousNodeLayers","dataBoundToNodes","selectAll","enterNodes","enter","exitNodes","exit","updateNodes","merge","updatingNodesWithoutEnteringNodes","item","includes","previousMaxNodeLayer","previousMinNodeLayer","min","updatingNodesWithoutExitingNodes","currentMaxNodeLayer","currentMinNodeLayer","each","n","linkDataGroups","dataBoundToLinkGroups","enterLinkGroups","exitLinkGroups","remove","updateLinkGroups","dataBoundToLinks","sourceLinks","enterLinks","exitLinks","exitSize","enterSize","dataBoundToLabels","enteringLabels","exitingLabels","unitTest","newColumnInterpolationPosition","x0","y0","x1","y1","newColumnInterpolationPositionVertical","interrupt","linkOpacity","classed","on","onClickHandler","onHoverHandler","onMouseOutHandler","linelength","getTotalLength","Math","transition","ease","hoverHighlight","removeTemporaryClickedLinks","clicked","drawDuplicateClickedLink","focusDidExist","parentGNode","transitionEndEvent","inputElement","className","parent","parentNode","sourceCopy","cloneNode","style","parentOfParent","validSiblings","_groups","lastGroup","appendChild","color","colorArr","index","delay","placeNodeLabels","xPlacement","yPlacement","offsetX","offsetY","textAnchor","placement","hiddenOpacity","Number","EPSILON","widthAllNodesNoLinks","noLinksLeftPadding","matchHover","addStrokeUnder","hideOnly","collisionHideOnly","cloneAdjustment","nodeLabelUpdate","format","collisionPlacement","nodeRects","clonedRects","bitmaps","labelSelection","avoidMarks","validPositions","offsets","accessors","addCollisionClass","prevOpacity","styleVisibility","targetOpacity","labelsAdded","labelsRemoved","removeOnly","suppressMarkDraw","positionData","preppedAnnotations","datum","internalData","positionType","hasOwnProperty","findIndex","ignoreScales","colors","rootEle","chartTag","redraw","disableKeyNav","hideDataTable","hideDataTableButton","description","geomType","includeKeyNames","dataKeys","dataKeyNames","groupName","_d","selected","selectable","onChangeFunc","added","removed","hoverEvent","eventsTooltip","evt","event","isToShow","mouseOutEvent","xAccessor","yAccessor","ordinalAccessor","chartType","render","drawStartEvent","init","h","key","class","isInteractive","hasCousinNavigation","display","isCompact","secondaryData","exceptions","exception"],"sources":["node_modules/d3-shape/src/link.js","src/components/alluvial-diagram/alluvial-diagram-default-values.ts","src/components/alluvial-diagram/alluvial-diagram.scss?tag=alluvial-diagram","src/components/alluvial-diagram/alluvial-diagram.tsx"],"sourcesContent":["import {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport {bumpX, bumpY, bumpRadial} from \"./curve/bump.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nexport function link(curve) {\n  let source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null,\n      output = null,\n      path = withPath(link);\n\n  function link() {\n    let buffer;\n    const argv = slice.call(arguments);\n    const s = source.apply(this, argv);\n    const t = target.apply(this, argv);\n    if (context == null) output = curve(buffer = path());\n    output.lineStart();\n    argv[0] = s, output.point(+x.apply(this, argv), +y.apply(this, argv));\n    argv[0] = t, output.point(+x.apply(this, argv), +y.apply(this, argv));\n    output.lineEnd();\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), link) : context;\n  };\n\n  return link;\n}\n\nexport function linkHorizontal() {\n  return link(bumpX);\n}\n\nexport function linkVertical() {\n  return link(bumpY);\n}\n\nexport function linkRadial() {\n  const l = link(bumpRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","/**\n * Copyright (c) 2021, 2022, 2023 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport Utils from '@visa/visa-charts-utils';\n\nconst { propDefaultValues } = Utils;\nexport class AlluvialDiagramDefaultValues {\n  static readonly highestHeadingLevel = propDefaultValues.highestHeadingLevel;\n  static readonly mainTitle = 'Alluvial Diagram Title';\n  static readonly subTitle = propDefaultValues.subTitle.text;\n  static readonly height = 300;\n  static readonly width = 650;\n  static readonly layout = propDefaultValues.layoutHorizontal;\n  static readonly margin = {\n    top: 300 * 0.01,\n    bottom: 300 * 0.01,\n    right: 650 * 0.01,\n    left: 650 * 0.01\n  };\n  static readonly padding = {\n    top: 20,\n    bottom: 50,\n    right: 50,\n    left: 50\n  };\n\n  static readonly localization = propDefaultValues.localization;\n\n  static readonly sourceAccessor = 'source';\n  static readonly targetAccessor = 'target';\n  static readonly valueAccessor = 'value';\n  static readonly groupAccessor = '';\n  // static readonly labelAccessor = '';\n  static readonly nodeIDAccessor = 'id';\n\n  static readonly nodeConfig = {\n    fill: false,\n    width: 12,\n    padding: 20,\n    alignment: 'left',\n    compare: false\n  };\n\n  static readonly linkConfig = {\n    visible: true,\n    fillMode: 'none',\n    opacity: 0.3\n  };\n\n  static readonly accessibility = propDefaultValues.accessibility;\n  static readonly animationConfig = propDefaultValues.animationConfig;\n  static readonly colorPalette = propDefaultValues.colorPaletteCategorical;\n  static readonly dataLabel = propDefaultValues.dataLabel;\n  static readonly dataKeyNames;\n  static readonly annotations = propDefaultValues.annotations;\n\n  static readonly hoverStyle = propDefaultValues.hoverStyle;\n  static readonly clickStyle = propDefaultValues.clickStyle;\n  static readonly hoverOpacity = propDefaultValues.hoverOpacity;\n  static readonly cursor = propDefaultValues.cursor;\n  static readonly tooltipLabel = propDefaultValues.tooltipLabel;\n  static readonly showTooltip = propDefaultValues.showTooltip;\n  static readonly suppressEvents = propDefaultValues.suppressEvents;\n  static readonly hoverHighlight;\n  static readonly clickHighlight = propDefaultValues.clickHighlight;\n}\n","/**\n * Copyright (c) 2021, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nalluvial-diagram {\n  .annotations {\n    pointer-events: none;\n    .handle {\n      pointer-events: all;\n    }\n  }\n\n  .screen-reader-info {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n\n  .data-table-link {\n    color: #767676;\n    text-decoration: none;\n    font-size: 12px;\n    margin-left: 5%;\n  }\n\n  .hidden {\n    display: none;\n  }\n\n  cursor: default;\n\n  .node rect {\n    cursor: move;\n    // fill-opacity: 0.9;\n    // shape-rendering: crispEdges;\n  }\n\n  .node text {\n    pointer-events: none;\n    text-shadow: 0 1px 0 #fff;\n  }\n\n  .link {\n    fill: none;\n    stroke: #000;\n    stroke-opacity: 0.2;\n  }\n\n  .link:hover {\n    stroke-opacity: 0.5;\n  }\n}\n","/**\n * Copyright (c) 2021, 2022, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport { Component, Element, Prop, Watch, h, Event, EventEmitter } from '@stencil/core';\n\nimport { select, event } from 'd3-selection';\nimport { min, max } from 'd3-array';\nimport { linkHorizontal, linkVertical } from 'd3-shape';\nimport { easeCircleIn } from 'd3-ease';\n\nimport {\n  IBoxModelType,\n  ILocalizationType,\n  IHoverStyleType,\n  IClickStyleType,\n  IDataLabelType,\n  ITooltipLabelType,\n  IAccessibilityType,\n  IAnimationConfig,\n  INodeConfigType,\n  ILinkConfigType,\n  ISubTitleType\n} from '@visa/charts-types';\nimport { AlluvialDiagramDefaultValues } from './alluvial-diagram-default-values';\nimport { v4 as uuid } from 'uuid';\nimport 'd3-transition';\nimport Utils from '@visa/visa-charts-utils';\nconst {\n  getGlobalInstances,\n  configLocalization,\n  getActiveLanguageString,\n  initializeDescriptionRoot,\n  setAccessibilityController,\n  initializeElementAccess,\n  setElementFocusHandler,\n  setElementAccessID,\n  setAccessChartCounts,\n  hideNonessentialGroups,\n  setAccessTitle,\n  setAccessSubtitle,\n  setAccessLongDescription,\n  setAccessExecutiveSummary,\n  setAccessPurpose,\n  setAccessContext,\n  setAccessStatistics,\n  setAccessStructure,\n  setAccessAnnotation,\n  retainAccessFocus,\n  checkAccessFocus,\n  setElementInteractionAccessState,\n  setAccessibilityDescriptionWidth,\n  roundTo,\n  resolveLabelCollision,\n  transitionEndAll,\n  annotate,\n  checkClicked,\n  checkInteraction,\n  convertVisaColor,\n  createTextStrokeFilter,\n  drawTooltip,\n  findTagLevel,\n  formatDataLabel,\n  formatStats,\n  getColors,\n  getContrastingStroke,\n  getPadding,\n  // getScopedData,\n  checkHovered,\n  initTooltipStyle,\n  overrideTitleTooltip,\n  scopeDataKeys,\n  chartAccessors,\n  sankey,\n  sankeyCenter,\n  sankeyJustify,\n  sankeyLeft,\n  sankeyLinkHorizontal,\n  sankeyLinkVertical,\n  sankeyRight,\n  prepareRenderChange,\n  visaColors,\n  validateAccessibilityProps,\n  validateLocalizationProps,\n  setSubTitle\n} = Utils;\n\n@Component({\n  tag: 'alluvial-diagram',\n  styleUrl: 'alluvial-diagram.scss'\n})\nexport class AlluvialDiagram {\n  @Event() clickEvent: EventEmitter;\n  @Event() hoverEvent: EventEmitter;\n  @Event() mouseOutEvent: EventEmitter;\n  @Event() initialLoadEvent: EventEmitter;\n  @Event() initialLoadEndEvent: EventEmitter;\n  @Event() drawStartEvent: EventEmitter;\n  @Event() drawEndEvent: EventEmitter;\n  @Event() transitionEndEvent: EventEmitter;\n\n  // Chart Attributes (1/7)\n  @Prop({ mutable: true }) mainTitle: string = AlluvialDiagramDefaultValues.mainTitle;\n  @Prop({ mutable: true }) subTitle: string | ISubTitleType = AlluvialDiagramDefaultValues.subTitle;\n  @Prop({ mutable: true }) height: number = AlluvialDiagramDefaultValues.height;\n  @Prop({ mutable: true }) width: number = AlluvialDiagramDefaultValues.width;\n  @Prop({ mutable: true }) highestHeadingLevel: string | number = AlluvialDiagramDefaultValues.highestHeadingLevel;\n  @Prop({ mutable: true }) margin: IBoxModelType = AlluvialDiagramDefaultValues.margin;\n  @Prop({ mutable: true }) padding: IBoxModelType = AlluvialDiagramDefaultValues.padding;\n  @Prop({ mutable: true }) layout: string = AlluvialDiagramDefaultValues.layout;\n\n  // Data (2/7)\n  @Prop() linkData: object[];\n  @Prop() nodeData: object[];\n  @Prop() uniqueID: string;\n  @Prop({ mutable: true }) localization: ILocalizationType = AlluvialDiagramDefaultValues.localization;\n  @Prop({ mutable: true }) sourceAccessor: string = AlluvialDiagramDefaultValues.sourceAccessor;\n  @Prop({ mutable: true }) targetAccessor: string = AlluvialDiagramDefaultValues.targetAccessor;\n  @Prop({ mutable: true }) valueAccessor: string = AlluvialDiagramDefaultValues.valueAccessor;\n  @Prop({ mutable: true }) groupAccessor: string = AlluvialDiagramDefaultValues.groupAccessor;\n  @Prop({ mutable: true }) nodeIDAccessor: string = AlluvialDiagramDefaultValues.nodeIDAccessor;\n\n  // Color & Shape (4/7)\n  @Prop({ mutable: true }) nodeConfig: INodeConfigType = AlluvialDiagramDefaultValues.nodeConfig;\n  @Prop({ mutable: true }) linkConfig: ILinkConfigType = AlluvialDiagramDefaultValues.linkConfig;\n  @Prop({ mutable: true }) colorPalette: string = AlluvialDiagramDefaultValues.colorPalette;\n  @Prop({ mutable: true }) colors: string[];\n  @Prop({ mutable: true }) hoverStyle: IHoverStyleType = AlluvialDiagramDefaultValues.hoverStyle;\n  @Prop({ mutable: true }) clickStyle: IClickStyleType = AlluvialDiagramDefaultValues.clickStyle;\n  @Prop({ mutable: true }) cursor: string = AlluvialDiagramDefaultValues.cursor;\n  @Prop({ mutable: true }) hoverOpacity: number = AlluvialDiagramDefaultValues.hoverOpacity;\n  @Prop({ mutable: true }) animationConfig: IAnimationConfig = AlluvialDiagramDefaultValues.animationConfig;\n\n  // Data label (5/7)\n  @Prop({ mutable: true }) dataLabel: IDataLabelType = AlluvialDiagramDefaultValues.dataLabel;\n  @Prop({ mutable: true }) dataKeyNames: object;\n  @Prop({ mutable: true }) showTooltip: boolean = AlluvialDiagramDefaultValues.showTooltip;\n  @Prop({ mutable: true }) tooltipLabel: ITooltipLabelType = AlluvialDiagramDefaultValues.tooltipLabel;\n  @Prop({ mutable: true }) accessibility: IAccessibilityType = AlluvialDiagramDefaultValues.accessibility;\n  @Prop({ mutable: true }) annotations: object[] = AlluvialDiagramDefaultValues.annotations;\n\n  // Interactivity (7/7)\n  @Prop({ mutable: true }) suppressEvents: boolean = AlluvialDiagramDefaultValues.suppressEvents;\n  @Prop({ mutable: true }) hoverHighlight: object;\n  @Prop({ mutable: true }) clickHighlight: object[] = AlluvialDiagramDefaultValues.clickHighlight;\n  @Prop({ mutable: true }) interactionKeys: string[];\n\n  // Testing (8/7)\n  @Prop() unitTest: boolean = false;\n  //  @Prop() debugMode: boolean = false;\n\n  @Element()\n  alluvialDiagramEl: HTMLElement;\n  shouldValidateAccessibility: boolean = true;\n  shouldValidateLocalization: boolean = true;\n  svg: any;\n  root: any;\n  rootG: any;\n  nest: any;\n  alluvialProperties: any;\n  labels: any;\n  tooltipG: any;\n  defaults: boolean;\n  duration: number;\n  innerHeight: number;\n  innerWidth: number;\n  innerPaddedHeight: number;\n  innerPaddedWidth: number;\n  dataTest: any;\n  chartID: string;\n  enterNodeGroups: any;\n  exitNodeGroups: any;\n  updateNodeGroups: any;\n  enterNodes: any;\n  exitNodes: any;\n  updateNodes: any;\n  enterLinks: any;\n  exitLinks: any;\n  enterLinkGroups: any;\n  exitLinkGroups: any;\n  updateLinkGroups: any;\n  updateLinks: any;\n  enteringLabels: any;\n  exitingLabels: any;\n  updatingLabels: any;\n  nodeList: any;\n  linkList: any;\n  innerNodeData: any;\n  innerLinkData: any;\n  preppedData: any;\n  oldNodeCount: any;\n  nodeCount: any;\n  newColumn: any;\n  nodeG: any;\n  linkG: any;\n  labelG: any;\n  subTitleG: any;\n  innerLinkFillMode: any;\n  innerLabelAccessor: any;\n  innerIDAccessor: any;\n  innerNodeAlignment: any;\n  innerNodeInteractionKeys: any;\n  innerLinkInteractionKeys: any;\n  innerInteractionKeys: any = [];\n  colorArr: any;\n  noLinksLeftPadding: any;\n  widthAllNodesNoLinks: any;\n  previousNodeLayers: any;\n  currentNodeLayers: any;\n  previousMinNodeLayer: any;\n  previousMaxNodeLayer: any;\n  currentMaxNodeLayer: any;\n  currentMinNodeLayer: any;\n  topLevel: string = 'h2';\n  bottomLevel: string = 'p';\n  sourceLinksString: string = 'sourceLinks';\n  targetLinksString: string = 'targetLinks';\n  valueString: string = 'value';\n  groupKeys: any;\n  tableData: any;\n  tableColumns: any;\n  secondaryTableData: any;\n  secondaryTableColumns: any;\n  updated: boolean = true;\n  enterSize: number;\n  exitSize: number;\n  shouldSetDimensions: boolean = false;\n  shouldUpdateData: boolean = false;\n  shouldSetColors: boolean = false;\n  shouldSetSubTitle: boolean = false;\n  shouldSetTagLevels: boolean = false;\n  shouldRedrawWrapper: boolean = false;\n  shouldUpdateTableData: boolean = false;\n  shouldUpdateDescriptionWrapper: boolean = false;\n  shouldSetChartAccessibilityCount: boolean = false;\n  shouldSetChartAccessibilityTitle: boolean = false;\n  shouldSetChartAccessibilitySubtitle: boolean = false;\n  shouldSetChartAccessibilityLongDescription: boolean = false;\n  shouldSetChartAccessibilityExecutiveSummary: boolean = false;\n  shouldSetChartAccessibilityPurpose: boolean = false;\n  shouldSetChartAccessibilityContext: boolean = false;\n  shouldSetChartAccessibilityStatisticalNotes: boolean = false;\n  shouldSetChartAccessibilityStructureNotes: boolean = false;\n  shouldSetParentSVGAccessibility: boolean = false;\n  shouldSetGeometryAccessibilityAttributes: boolean = false;\n  shouldSetGeometryAriaLabels: boolean = false;\n  shouldSetGroupAccessibilityLabel: boolean = false;\n  shouldSetSelectionClass: boolean = false;\n  shouldSetAnnotationAccessibility: boolean = false;\n  shouldSetGlobalSelections: boolean = false;\n  shouldSetTestingAttributes: boolean = false;\n  shouldDrawInteractionState: boolean = false;\n  shouldEnterUpdateExit: boolean = false;\n  shouldUpdateNodeGeometries: boolean = false;\n  shouldUpdateNodeStyle: boolean = false;\n  shouldUpdateLinkGeometries: boolean = false;\n  shouldUpdateLinkStyle: boolean = false;\n  shouldDrawNodeLabels: boolean = false;\n  shouldSetNodeDimensions: boolean = false;\n  shouldCallSankeyGenerator: boolean = false;\n  shouldUpdateAnnotations: boolean = false;\n  shouldValidateIdAccessor: boolean = false;\n  shouldValidateLabelText: boolean = false;\n  shouldValidateLinkFillMode: boolean = false;\n  shouldValidateNodeAlignment: boolean = false;\n  shouldValidateInteractionKeys: boolean = false;\n  shouldValidateLinkGroups: boolean = false;\n  shouldUpdateCursor: boolean = false;\n  shouldBindInteractivity: boolean = false;\n  shouldResetRoot: boolean = false;\n  shouldSetNodeLabelOpacity: boolean = false;\n  shouldSetLocalizationConfig: boolean = false;\n  bitmaps: any;\n\n  @Watch('nodeData')\n  @Watch('linkData')\n  dataWatcher(_newData, _oldData) {\n    this.updated = true;\n    this.shouldUpdateData = true;\n    this.shouldSetColors = true;\n    this.shouldValidateIdAccessor = true;\n    this.shouldSetNodeDimensions = true;\n    this.shouldCallSankeyGenerator = true;\n    this.shouldUpdateTableData = true;\n    this.shouldValidateLinkGroups = true;\n    this.shouldValidateAccessibility = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateNodeGeometries = true;\n    this.shouldUpdateNodeStyle = true;\n    this.shouldUpdateLinkGeometries = true;\n    this.shouldDrawNodeLabels = true;\n    this.shouldUpdateLinkStyle = true;\n    this.shouldDrawInteractionState = true;\n    // this.shouldSetNodeLabelOpacity = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('uniqueID')\n  idWatcher(newID, _oldID) {\n    console.error(\n      'Change detected in prop uniqueID from value ' +\n        _oldID +\n        ' to value ' +\n        newID +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.chartID = newID || 'alluvial-diagram-' + uuid();\n    // this.alluvialDiagramEl.id = this.chartID;\n    // this.shouldValidateAccessibility = true;\n    // this.shouldUpdateDescriptionWrapper = true;\n    // this.shouldSetParentSVGAccessibility = true;\n    // this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('highestHeadingLevel')\n  headingWatcher(_newVal, _oldVal) {\n    this.shouldRedrawWrapper = true;\n    this.shouldSetTagLevels = true;\n    this.shouldSetChartAccessibilityCount = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('mainTitle')\n  mainTitleWatcher(_newVal, _oldVal) {\n    this.shouldValidateAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('subTitle')\n  subTitleWatcher(_newVal, _oldVal) {\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('height')\n  @Watch('width')\n  @Watch('padding')\n  @Watch('margin')\n  dimensionWatcher(_newVal, _oldVal) {\n    this.shouldSetDimensions = true;\n    this.shouldSetNodeDimensions = true;\n    this.shouldResetRoot = true;\n    this.shouldCallSankeyGenerator = true;\n    this.shouldSetGlobalSelections = true;\n    // this.shouldEnterUpdateExit = true;\n    this.shouldUpdateNodeGeometries = true;\n    this.shouldUpdateNodeStyle = true;\n    this.shouldUpdateLinkGeometries = true;\n    this.shouldUpdateLinkStyle = true;\n    this.shouldDrawNodeLabels = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('layout')\n  layoutWatcher(_newVal, _oldVal) {\n    this.shouldSetDimensions = true;\n    this.shouldSetNodeDimensions = true;\n    this.shouldResetRoot = true;\n    this.shouldCallSankeyGenerator = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldUpdateNodeGeometries = true;\n    this.shouldUpdateNodeStyle = true;\n    this.shouldUpdateLinkGeometries = true;\n    this.shouldUpdateLinkStyle = true;\n    this.shouldDrawNodeLabels = true;\n    this.shouldUpdateAnnotations = true;\n    console.warn(\n      'Change detected in prop layout from value ' +\n        _oldVal +\n        ' to value ' +\n        _newVal +\n        '. Transitions have yet to be designed in VCC for this prop.'\n    );\n  }\n\n  @Watch('sourceAccessor')\n  sourceAccessorWatcher(_newVal, _oldVal) {\n    console.error(\n      'Change detected in prop sourceAccessor from value ' +\n        _oldVal +\n        ' to value ' +\n        _newVal +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.shouldUpdateData = true;\n    // this.shouldSetNodeDimensions = true;\n    // this.shouldCallSankeyGenerator = true;\n    // this.shouldUpdateTableData = true;\n    // this.shouldSetGlobalSelections = true;\n    // this.shouldEnterUpdateExit = true;\n    // this.shouldUpdateNodeGeometries = true;\n    // this.shouldUpdateNodeStyle = true;\n    // this.shouldUpdateLinkGeometries = true;\n    // this.shouldUpdateLinkStyle = true;\n    // this.shouldDrawInteractionState = true;\n    // this.shouldSetNodeLabelOpacity = true;\n    // this.shouldDrawNodeLabels = true;\n    // this.shouldUpdateAnnotations = true;\n    // this.shouldSetGeometryAriaLabels = true;\n    // if (!(this.interactionKeys && this.interactionKeys.length)) {\n    //   this.shouldValidateInteractionKeys = true;\n    //   this.shouldSetSelectionClass = true;\n    // }\n  }\n\n  @Watch('targetAccessor')\n  targetAccessorWatcher(_newVal, _oldVal) {\n    console.error(\n      'Change detected in prop targetAccessor from value ' +\n        _oldVal +\n        ' to value ' +\n        _newVal +\n        '. This prop cannot be changed after component has loaded.'\n    );\n\n    // this.shouldUpdateData = true;\n    // this.shouldSetNodeDimensions = true;\n    // this.shouldCallSankeyGenerator = true;\n    // this.shouldUpdateTableData = true;\n    // this.shouldSetGlobalSelections = true;\n    // this.shouldEnterUpdateExit = true;\n    // this.shouldUpdateNodeGeometries = true;\n    // this.shouldUpdateNodeStyle = true;\n    // this.shouldUpdateLinkGeometries = true;\n    // this.shouldUpdateLinkStyle = true;\n    // this.shouldDrawInteractionState = true;\n    // this.shouldSetNodeLabelOpacity = true;\n    // this.shouldDrawNodeLabels = true;\n    // this.shouldUpdateAnnotations = true;\n    // this.shouldSetGeometryAriaLabels = true;\n    // if (!(this.interactionKeys && this.interactionKeys.length)) {\n    //   this.shouldValidateInteractionKeys = true;\n    //   this.shouldSetSelectionClass = true;\n    // }\n  }\n\n  @Watch('valueAccessor')\n  valueAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldSetNodeDimensions = true;\n    this.shouldCallSankeyGenerator = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateNodeGeometries = true;\n    this.shouldUpdateNodeStyle = true;\n    this.shouldUpdateLinkGeometries = true;\n    this.shouldUpdateLinkStyle = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetNodeLabelOpacity = true;\n    this.shouldDrawNodeLabels = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('groupAccessor')\n  groupAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldValidateLinkFillMode = true;\n    this.shouldValidateLinkGroups = true;\n    this.shouldSetNodeDimensions = true;\n    this.shouldCallSankeyGenerator = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateNodeGeometries = true;\n    this.shouldUpdateNodeStyle = true;\n    this.shouldUpdateLinkGeometries = true;\n    this.shouldUpdateLinkStyle = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetNodeLabelOpacity = true;\n    this.shouldDrawNodeLabels = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('nodeIDAccessor')\n  nodeIDAccessorWatcher(_newVal, _oldVal) {\n    console.error(\n      'Change detected in prop nodeIDAccessor from value ' +\n        _oldVal +\n        ' to value ' +\n        _newVal +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.shouldUpdateData = true;\n    // this.shouldValidateIdAccessor = true;\n    // this.shouldSetNodeDimensions = true;\n    // this.shouldCallSankeyGenerator = true;\n    // this.shouldUpdateTableData = true;\n    // this.shouldSetGlobalSelections = true;\n    // this.shouldEnterUpdateExit = true;\n    // this.shouldUpdateNodeGeometries = true;\n    // this.shouldUpdateNodeStyle = true;\n    // this.shouldUpdateLinkGeometries = true;\n    // this.shouldUpdateLinkStyle = true;\n    // this.shouldDrawInteractionState = true;\n    // this.shouldSetNodeLabelOpacity = true;\n    // this.shouldDrawNodeLabels = true;\n    // this.shouldUpdateAnnotations = true;\n    // this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('nodeConfig')\n  nodeConfigWatcher(_newVal, _oldVal) {\n    const newAlignmentVal = _newVal && _newVal.alignment;\n    const oldAlignmentVal = _oldVal && _oldVal.alignment;\n    const newCompareVal = _newVal && _newVal.compare;\n    const oldCompareVal = _oldVal && _oldVal.compare;\n    const newFillVal = _newVal && _newVal.fill;\n    const oldFillVal = _oldVal && _oldVal.fill;\n    const newWidthVal = _newVal && _newVal.width;\n    const oldWidthVal = _oldVal && _oldVal.width;\n    const newPaddingVal = _newVal && _newVal.padding;\n    const oldPaddingVal = _oldVal && _oldVal.padding;\n    if (newAlignmentVal !== oldAlignmentVal) {\n      this.shouldValidateNodeAlignment = true;\n    }\n    if (\n      newAlignmentVal !== oldAlignmentVal ||\n      newCompareVal !== oldCompareVal ||\n      newWidthVal !== oldWidthVal ||\n      newPaddingVal !== oldPaddingVal\n    ) {\n      this.shouldSetNodeDimensions = true;\n      this.shouldCallSankeyGenerator = true;\n      this.shouldSetGlobalSelections = true;\n      this.shouldDrawInteractionState = true;\n      this.shouldSetGeometryAccessibilityAttributes = true;\n      this.shouldUpdateNodeGeometries = true;\n      this.shouldUpdateLinkGeometries = true;\n      this.shouldDrawNodeLabels = true;\n      this.shouldUpdateAnnotations = true;\n    }\n    if (newFillVal !== oldFillVal) {\n      this.shouldUpdateNodeStyle = true;\n      this.shouldUpdateLinkStyle = true;\n    }\n  }\n\n  @Watch('linkConfig')\n  linkConfigWatcher(_newVal, _oldVal) {\n    const newFillModeVal = _newVal && _newVal.fillMode;\n    const oldFillModeVal = _oldVal && _oldVal.fillMode;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    // const newOpacityVal = _newVal && _newVal.opacity;\n    // const oldOpacityVal = _oldVal && _oldVal.opacity;\n    if (newFillModeVal !== oldFillModeVal) {\n      this.shouldValidateLinkFillMode = true;\n      this.shouldSetGlobalSelections = true;\n      this.shouldEnterUpdateExit = true;\n      this.shouldUpdateLinkGeometries = true;\n    }\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetNodeDimensions = true;\n      this.shouldCallSankeyGenerator = true;\n      this.shouldSetGlobalSelections = true;\n      this.shouldSetNodeLabelOpacity = true;\n      this.shouldUpdateNodeGeometries = true;\n      this.shouldUpdateLinkGeometries = true;\n      this.shouldDrawNodeLabels = true;\n      this.shouldUpdateAnnotations = true;\n    }\n    this.shouldUpdateLinkStyle = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetTestingAttributes = true;\n    // if (newOpacityVal !== oldOpacityVal) {\n    // }\n  }\n\n  @Watch('colors')\n  @Watch('colorPalette')\n  colorWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldUpdateNodeStyle = true;\n    this.shouldUpdateLinkStyle = true;\n    this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('clickStyle')\n  @Watch('hoverStyle')\n  interactionStyleWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetNodeLabelOpacity = true;\n  }\n\n  @Watch('cursor')\n  cursorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCursor = true;\n  }\n\n  @Watch('hoverOpacity')\n  hoverOpacityWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetNodeLabelOpacity = true;\n  }\n\n  @Watch('dataLabel')\n  dataLabelWatcher(_newVal, _oldVal) {\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    const newLabelAccessorVal = _newVal && _newVal.labelAccessor ? _newVal.labelAccessor : false;\n    const oldLabelAccessorVal = _oldVal && _oldVal.labelAccessor ? _oldVal.labelAccessor : false;\n    if (newLabelAccessorVal !== oldLabelAccessorVal) {\n      this.shouldValidateLabelText = true;\n    }\n    this.shouldDrawNodeLabels = true;\n    this.shouldUpdateTableData = true;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetNodeLabelOpacity = true;\n    }\n  }\n\n  @Watch('tooltipLabel')\n  tooltipLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('showTooltip')\n  showTooltipWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('accessibility')\n  accessibilityWatcher(_newVal, _oldVal) {\n    this.shouldValidateAccessibility = true;\n    const newTitle = _newVal && _newVal.title ? _newVal.title : false;\n    const oldTitle = _oldVal && _oldVal.title ? _oldVal.title : false;\n    if (newTitle !== oldTitle) {\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newExecutiveSummary = _newVal && _newVal.executiveSummary ? _newVal.executiveSummary : false;\n    const oldExecutiveSummary = _oldVal && _oldVal.executiveSummary ? _oldVal.executiveSummary : false;\n    if (newExecutiveSummary !== oldExecutiveSummary) {\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n    }\n    const newPurpose = _newVal && _newVal.purpose ? _newVal.purpose : false;\n    const oldPurpose = _oldVal && _oldVal.purpose ? _oldVal.purpose : false;\n    if (newPurpose !== oldPurpose) {\n      this.shouldSetChartAccessibilityPurpose = true;\n    }\n    const newLongDescription = _newVal && _newVal.longDescription ? _newVal.longDescription : false;\n    const oldLongDescription = _oldVal && _oldVal.longDescription ? _oldVal.longDescription : false;\n    if (newLongDescription !== oldLongDescription) {\n      this.shouldSetChartAccessibilityLongDescription = true;\n    }\n    const newContext = _newVal && _newVal.contextExplanation ? _newVal.contextExplanation : false;\n    const oldContext = _oldVal && _oldVal.contextExplanation ? _oldVal.contextExplanation : false;\n    if (newContext !== oldContext) {\n      this.shouldSetChartAccessibilityContext = true;\n    }\n    const newStatisticalNotes = _newVal && _newVal.statisticalNotes ? _newVal.statisticalNotes : false;\n    const oldStatisticalNotes = _oldVal && _oldVal.statisticalNotes ? _oldVal.statisticalNotes : false;\n    if (newStatisticalNotes !== oldStatisticalNotes) {\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n    }\n    const newStructureNotes = _newVal && _newVal.structureNotes ? _newVal.structureNotes : false;\n    const oldStructureNotes = _oldVal && _oldVal.structureNotes ? _oldVal.structureNotes : false;\n    if (newStructureNotes !== oldStructureNotes) {\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    const newincludeDataKeyNames = _newVal && _newVal.includeDataKeyNames;\n    const oldincludeDataKeyNames = _oldVal && _oldVal.includeDataKeyNames;\n    const newElementDescriptionAccessor =\n      _newVal && _newVal.elementDescriptionAccessor ? _newVal.elementDescriptionAccessor : false;\n    const oldElementDescriptionAccessor =\n      _oldVal && _oldVal.elementDescriptionAccessor ? _oldVal.elementDescriptionAccessor : false;\n    if (\n      newincludeDataKeyNames !== oldincludeDataKeyNames ||\n      newElementDescriptionAccessor !== oldElementDescriptionAccessor\n    ) {\n      if (newincludeDataKeyNames !== oldincludeDataKeyNames) {\n        // this one is tricky because it needs to run after the lifecycle\n        // AND it could run in the off-chance this prop is changed\n        this.shouldSetGroupAccessibilityLabel = true;\n      }\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    // const newTextures = _newVal && _newVal.hideTextures ? _newVal.hideTextures : false;\n    // const oldTextures = _oldVal && _oldVal.hideTextures ? _oldVal.hideTextures : false;\n    // const newExTextures = _newVal && _newVal.showExperimentalTextures ? _newVal.showExperimentalTextures : false;\n    // const oldExTextures = _oldVal && _oldVal.showExperimentalTextures ? _oldVal.showExperimentalTextures : false;\n    // if (newTextures !== oldTextures || newExTextures !== oldExTextures) {\n    //   this.shouldSetTextures = true;\n    //   this.shouldUpdateLegend = true;\n    //   this.shouldDrawInteractionState = true;\n    //   this.shouldCheckLabelColor = true;\n    // }\n    // const newStrokes = _newVal && _newVal.hideStrokes ? _newVal.hideStrokes : false;\n    // const oldStrokes = _oldVal && _oldVal.hideStrokes ? _oldVal.hideStrokes : false;\n    // if (newStrokes !== oldStrokes) {\n    //   this.shouldSetStrokes = true;\n    //   this.shouldUpdateLegend = true;\n    //   this.shouldDrawInteractionState = true;\n    // }\n    const newKeyNav =\n      _newVal && _newVal.keyboardNavConfig && _newVal.keyboardNavConfig.disabled\n        ? _newVal.keyboardNavConfig.disabled\n        : false;\n    const oldKeyNav =\n      _oldVal && _oldVal.keyboardNavConfig && _oldVal.keyboardNavConfig.disabled\n        ? _oldVal.keyboardNavConfig.disabled\n        : false;\n    const newInterface = _newVal && _newVal.elementsAreInterface ? _newVal.elementsAreInterface : false;\n    const oldInterface = _oldVal && _oldVal.elementsAreInterface ? _oldVal.elementsAreInterface : false;\n    if (newKeyNav !== oldKeyNav || newInterface !== oldInterface) {\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetChartAccessibilitySubtitle = true;\n      this.shouldSetChartAccessibilityLongDescription = true;\n      this.shouldSetChartAccessibilityContext = true;\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n      this.shouldSetChartAccessibilityPurpose = true;\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    if (newInterface !== oldInterface) {\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('localization')\n  localizationWatcher(_newVal, _oldVal) {\n    this.shouldValidateLocalization = true;\n\n    // language\n    const newLanguage = _newVal && _newVal.language ? _newVal.language : false;\n    const oldLanguage = _oldVal && _oldVal.language ? _oldVal.language : false;\n    if (newLanguage !== oldLanguage) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n\n    // numeralLocale\n    const newNumeralLocale = _newVal && _newVal.numeralLocale ? _newVal.numeralLocale : false;\n    const oldNumeralLocale = _oldVal && _oldVal.numeralLocale ? _oldVal.numeralLocale : false;\n    if (newNumeralLocale !== oldNumeralLocale) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n  }\n\n  @Watch('annotations')\n  annotationsWatcher(_newVal, _oldVal) {\n    this.shouldValidateAccessibility = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('clickHighlight')\n  clickWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetNodeLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n  }\n\n  @Watch('hoverHighlight')\n  hoverWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetNodeLabelOpacity = true;\n  }\n\n  @Watch('interactionKeys')\n  interactionWatcher(_newVal, _oldVal) {\n    this.shouldSetNodeDimensions = true;\n    this.shouldCallSankeyGenerator = true;\n    this.shouldValidateInteractionKeys = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetNodeLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n  }\n\n  @Watch('dataKeyNames')\n  dataKeyNamesWatcher(_newVal, _oldVal) {\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('suppressEvents')\n  suppressWatcher(_newVal, _oldVal) {\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldValidateAccessibility = true;\n    this.shouldRedrawWrapper = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n    // this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('unitTest')\n  unitTestWatcher(_newVal, _oldVal) {\n    this.shouldSetTestingAttributes = true;\n  }\n\n  componentWillLoad() {\n    const chartID = this.uniqueID || 'alluvial-diagram-' + uuid();\n    this.initialLoadEvent.emit({ chartID: chartID });\n    // contrary to componentWillUpdate, this method appears safe to use for\n    // any calculations we need. Keeping them here reduces future refactor,\n    // since componentWillUpdate should eventually mirror this method\n    return new Promise(resolve => {\n      this.duration = 0;\n      this.defaults = true;\n      this.chartID = chartID;\n      this.alluvialDiagramEl.id = this.chartID;\n      this.setLocalizationConfig();\n      this.setTagLevels();\n      this.prepareData();\n      this.setDimensions();\n      this.validateIdAccessor();\n      this.validateLabelText();\n      this.validateLinkFillMode();\n      this.validateNodeAlignment();\n      this.validateInteractionKeys();\n      this.validateLinkGroups();\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.setColors();\n      this.setNodeDimensions();\n      this.callSankeyGenerator();\n      this.setTableData();\n      resolve('component will load');\n    });\n  }\n\n  componentWillUpdate() {\n    // NEVER put items in this method that rely on props (until stencil bug is resolved)\n    // All items that belong here are currently at the top of render\n    // see: https://github.com/ionic-team/stencil/issues/2061#issuecomment-578282178\n    return new Promise(resolve => {\n      resolve('component will update');\n    });\n  }\n\n  componentDidLoad() {\n    return new Promise(resolve => {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.renderRootElements();\n      this.setTooltipInitialStyle();\n      this.setChartDescriptionWrapper();\n      this.setChartAccessibilityTitle();\n      this.setChartAccessibilitySubtitle();\n      this.setChartAccessibilityLongDescription();\n      this.setChartAccessibilityExecutiveSummary();\n      this.setChartAccessibilityPurpose();\n      this.setChartAccessibilityContext();\n      this.setChartAccessibilityStatisticalNotes();\n      this.setChartAccessibilityStructureNotes();\n      this.setParentSVGAccessibility();\n      this.reSetRoot();\n      this.setSubTitleElements();\n      this.setGlobalSelections();\n      this.setTestingAttributes();\n      this.enterLinkGeometries();\n      this.updateLinkGeometries();\n      this.exitLinkGeometries();\n      this.enterNodeGeometries();\n      this.updateNodeGeometries();\n      this.exitNodeGeometries();\n      this.enterNodeLabels();\n      this.updateNodeLabels();\n      this.exitNodeLabels();\n      this.updateLinkStyle();\n      this.drawNodeGeometries();\n      this.drawLinkGeometries();\n      this.setGeometryAccessibilityAttributes();\n      this.setGeometryAriaLabels();\n      this.setGroupAccessibilityID();\n      this.setChartCountAccessibility();\n      this.setSelectedClass();\n      this.updateCursor();\n      this.drawNodeLabels();\n      this.bindInteractivity();\n      this.drawAnnotations();\n      this.setAnnotationAccessibility();\n      this.onChangeHandler();\n      this.duration = 750;\n      this.defaults = false;\n      hideNonessentialGroups(this.root.node(), null);\n      resolve('component did load');\n    }).then(() => this.initialLoadEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  componentDidUpdate() {\n    return new Promise(resolve => {\n      this.duration = !this.animationConfig || !this.animationConfig.disabled ? 750 : 0;\n      if (this.shouldUpdateDescriptionWrapper) {\n        this.setChartDescriptionWrapper();\n        this.shouldUpdateDescriptionWrapper = false;\n      }\n      if (this.shouldSetChartAccessibilityCount) {\n        this.setChartCountAccessibility();\n        this.shouldSetChartAccessibilityCount = false;\n      }\n      if (this.shouldSetChartAccessibilityTitle) {\n        this.setChartAccessibilityTitle();\n        this.shouldSetChartAccessibilityTitle = false;\n      }\n      if (this.shouldSetChartAccessibilitySubtitle) {\n        this.setChartAccessibilitySubtitle();\n        this.shouldSetChartAccessibilitySubtitle = false;\n      }\n      if (this.shouldSetChartAccessibilityLongDescription) {\n        this.setChartAccessibilityLongDescription();\n        this.shouldSetChartAccessibilityLongDescription = false;\n      }\n      if (this.shouldSetChartAccessibilityExecutiveSummary) {\n        this.setChartAccessibilityExecutiveSummary();\n        this.shouldSetChartAccessibilityExecutiveSummary = false;\n      }\n      if (this.shouldSetChartAccessibilityPurpose) {\n        this.setChartAccessibilityPurpose();\n        this.shouldSetChartAccessibilityPurpose = false;\n      }\n      if (this.shouldSetChartAccessibilityContext) {\n        this.setChartAccessibilityContext();\n        this.shouldSetChartAccessibilityContext = false;\n      }\n      if (this.shouldSetChartAccessibilityStatisticalNotes) {\n        this.setChartAccessibilityStatisticalNotes();\n        this.shouldSetChartAccessibilityStatisticalNotes = false;\n      }\n      if (this.shouldSetChartAccessibilityStructureNotes) {\n        this.setChartAccessibilityStructureNotes();\n        this.shouldSetChartAccessibilityStructureNotes = false;\n      }\n      if (this.shouldSetParentSVGAccessibility) {\n        this.setParentSVGAccessibility();\n        this.shouldSetParentSVGAccessibility = false;\n      }\n      if (this.shouldResetRoot) {\n        this.reSetRoot();\n        this.shouldResetRoot = false;\n      }\n      if (this.shouldSetGlobalSelections) {\n        this.setGlobalSelections();\n        this.shouldSetGlobalSelections = false;\n      }\n      if (this.shouldSetTestingAttributes) {\n        this.setTestingAttributes();\n        this.shouldSetTestingAttributes = false;\n      }\n      if (this.shouldSetSubTitle) {\n        this.setSubTitleElements();\n        this.shouldSetSubTitle = false;\n      }\n      if (this.shouldEnterUpdateExit) {\n        this.enterLinkGeometries();\n        this.updateLinkGeometries();\n        this.exitLinkGeometries();\n        this.enterNodeGeometries();\n        this.updateNodeGeometries();\n        this.exitNodeGeometries();\n        this.enterNodeLabels();\n        this.updateNodeLabels();\n        this.exitNodeLabels();\n        this.shouldEnterUpdateExit = false;\n      }\n      if (this.shouldUpdateNodeGeometries) {\n        this.drawNodeGeometries();\n        this.shouldUpdateNodeGeometries = false;\n      }\n      if (this.shouldUpdateNodeStyle) {\n        this.updateNodeStyle();\n        this.shouldUpdateNodeStyle = false;\n      }\n      if (this.shouldUpdateLinkGeometries) {\n        this.drawLinkGeometries();\n        this.shouldUpdateLinkGeometries = false;\n      }\n      if (this.shouldUpdateLinkStyle) {\n        this.updateLinkStyle();\n        this.shouldUpdateLinkStyle = false;\n      }\n      if (this.shouldSetGeometryAccessibilityAttributes) {\n        this.setGeometryAccessibilityAttributes();\n        this.shouldSetGeometryAccessibilityAttributes = false;\n      }\n      if (this.shouldSetGeometryAriaLabels) {\n        this.setGeometryAriaLabels();\n        this.shouldSetGeometryAriaLabels = false;\n      }\n      if (this.shouldSetGroupAccessibilityLabel) {\n        this.setGroupAccessibilityID();\n        this.shouldSetGroupAccessibilityLabel = false;\n      }\n      if (this.shouldDrawNodeLabels) {\n        this.drawNodeLabels();\n        this.shouldDrawNodeLabels = false;\n      }\n      if (this.shouldDrawInteractionState) {\n        this.updateInteractionState();\n        this.shouldDrawInteractionState = false;\n      }\n      if (this.shouldSetNodeLabelOpacity) {\n        this.setNodeLabelOpacity();\n        this.shouldSetNodeLabelOpacity = false;\n      }\n      if (this.shouldSetSelectionClass) {\n        this.setSelectedClass();\n        this.shouldSetSelectionClass = false;\n      }\n      if (this.shouldUpdateCursor) {\n        this.updateCursor();\n        this.shouldUpdateCursor = false;\n      }\n      if (this.shouldBindInteractivity) {\n        this.bindInteractivity();\n        this.shouldBindInteractivity = false;\n      }\n      if (this.shouldUpdateAnnotations) {\n        this.drawAnnotations();\n        this.shouldUpdateAnnotations = false;\n      }\n      if (this.shouldSetAnnotationAccessibility) {\n        this.setAnnotationAccessibility();\n        this.shouldSetAnnotationAccessibility = false;\n      }\n      this.onChangeHandler();\n      resolve('component did update');\n    }).then(() => this.drawEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  setDimensions() {\n    this.padding = typeof this.padding === 'string' ? getPadding(this.padding) : this.padding;\n\n    // since we hacked sankey.ts for vertical layout, we have to get a bit weird\n    // on the definition of these dimesions and flip things for vertical layout\n    if (this.layout === 'vertical') {\n      this.innerWidth = this.height - this.margin.top - this.margin.bottom;\n      this.innerHeight = this.width - this.margin.left - this.margin.right;\n      this.innerPaddedHeight = this.innerHeight - this.padding.left - this.padding.right;\n      this.innerPaddedWidth = this.innerWidth - this.padding.top - this.padding.bottom;\n    } else {\n      this.innerWidth = this.width - this.margin.left - this.margin.right;\n      this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n      this.innerPaddedHeight = this.innerHeight - this.padding.top - this.padding.bottom;\n      this.innerPaddedWidth = this.innerWidth - this.padding.left - this.padding.right;\n    }\n  }\n\n  prepareData() {\n    this.nodeList = [];\n    this.linkList = [];\n\n    this.linkData.forEach((obj, i) => {\n      const linkObj = {\n        source: obj[this.sourceAccessor],\n        target: obj[this.targetAccessor],\n        value: obj[this.valueAccessor],\n        data: obj\n      };\n\n      if (this.groupAccessor) {\n        linkObj[this.groupAccessor] = obj[this.groupAccessor];\n      }\n\n      this.linkList[i] = linkObj;\n    });\n\n    // if the user did not set this.nodeData, generate node data from link data\n    this.nodeData && this.nodeData.length > 1 ? (this.nodeList = this.nodeData) : this.createNodeList();\n  }\n\n  createNodeList() {\n    this.nodeList = [];\n    this.linkData.map(link => {\n      if (!this.nodeList.some(e => e.id === link[this.sourceAccessor])) {\n        const uniqueSourceID = { id: link[this.sourceAccessor] };\n        this.nodeList.push(uniqueSourceID);\n      }\n      if (!this.nodeList.some(e => e.id === link[this.targetAccessor])) {\n        const uniqueTargetID = { id: link[this.targetAccessor] };\n        this.nodeList.push(uniqueTargetID);\n      }\n    });\n  }\n\n  validateLabelText() {\n    // if label accessor is passed use that, otherwise default to value hardcoded which is the total\n    // of valueAccessor at the node level\n    this.innerLabelAccessor = this.dataLabel.labelAccessor ? this.dataLabel.labelAccessor : this.valueString;\n  }\n\n  // if there is no nodeData present, use 'id', otherwise use the nodeIDAccessor that is passed\n  validateIdAccessor() {\n    this.innerIDAccessor =\n      this.nodeData && this.nodeData.length > 1\n        ? this.nodeList[0][this.nodeIDAccessor]\n          ? this.nodeIDAccessor\n          : 'id'\n        : 'id';\n  }\n\n  validateLinkFillMode() {\n    this.innerLinkFillMode =\n      this.groupAccessor && this.linkConfig.fillMode === 'group'\n        ? 'group'\n        : this.linkConfig.fillMode === 'source'\n        ? 'source'\n        : this.linkConfig.fillMode === 'target'\n        ? 'target'\n        : this.linkConfig.fillMode === 'link'\n        ? 'link'\n        : 'none';\n  }\n\n  validateNodeAlignment() {\n    this.innerNodeAlignment =\n      this.layout === 'vertical'\n        ? this.nodeConfig.alignment === 'bottom'\n          ? sankeyRight\n          : this.nodeConfig.alignment === 'middle'\n          ? sankeyCenter\n          : this.nodeConfig.alignment === 'justify'\n          ? sankeyJustify\n          : sankeyLeft\n        : this.nodeConfig.alignment === 'right'\n        ? sankeyRight\n        : this.nodeConfig.alignment === 'center'\n        ? sankeyCenter\n        : this.nodeConfig.alignment === 'justify'\n        ? sankeyJustify\n        : sankeyLeft;\n  }\n\n  validateInteractionKeys() {\n    this.innerInteractionKeys = [];\n\n    this.innerInteractionKeys =\n      this.interactionKeys && this.interactionKeys.length\n        ? this.interactionKeys\n        : [this.sourceAccessor, this.targetAccessor];\n  }\n\n  validateLinkGroups() {\n    this.groupKeys = [];\n\n    if (this.groupAccessor) {\n      this.groupKeys = this.linkData.map(d => d[this.groupAccessor]).filter((x, i, a) => a.indexOf(x) === i);\n    }\n  }\n\n  shouldValidateLocalizationProps() {\n    const windowInstances = getGlobalInstances();\n    const languageString = windowInstances.i18Next.language;\n    const languageObject = windowInstances.i18Next.getResourceBundle(languageString);\n    const numeralObject = windowInstances.numeral.localeData();\n    if (this.shouldValidateLocalization && !this.localization.skipValidation) {\n      this.shouldValidateLocalization = false;\n      validateLocalizationProps(this.chartID, {\n        ...this.localization,\n        language: languageObject,\n        numeralLocale: numeralObject\n      });\n    }\n  }\n\n  shouldValidateAccessibilityProps() {\n    if (this.shouldValidateAccessibility && !this.accessibility.disableValidation) {\n      this.shouldValidateAccessibility = false;\n      validateAccessibilityProps(\n        this.chartID,\n        { ...this.accessibility },\n        {\n          annotations: this.annotations,\n          data: this.linkData,\n          uniqueID: this.uniqueID,\n          context: {\n            mainTitle: this.mainTitle,\n            onClickEvent: this.suppressEvents ? undefined : this.clickEvent.emit\n          }\n        }\n      );\n    }\n  }\n\n  getLanguageString() {\n    return getActiveLanguageString(this.localization);\n  }\n\n  setLocalizationConfig() {\n    configLocalization(this.localization);\n  }\n\n  setTableData() {\n    // generate scoped and formatted data for data-table component, showing node data\n    const uniqueNodeAccessors = ['nodeIDAccessor', 'valueAccessor'];\n    const nodeAccessors = {\n      singleAccessors: uniqueNodeAccessors,\n      nestedAccessors: [\n        {\n          objectName: 'dataLabel',\n          objectAccessors: ['labelAccessor'],\n          formatAccessors: ['format']\n        }\n      ]\n    };\n\n    const nodeKeys = scopeDataKeys(this, nodeAccessors, 'alluvial-diagram');\n    this.tableData = this.getScopedTableData(this.preppedData.nodes, nodeKeys);\n    this.tableColumns = Object.keys(nodeKeys);\n\n    // create secondary table data for link data\n    // remove dataLabel accessor, as we use this in the nodeData table\n    const linkChartAccessors = chartAccessors;\n    delete linkChartAccessors.nestedAccessors[2];\n    const keys = scopeDataKeys(this, linkChartAccessors, 'alluvial-diagram-secondary-table');\n    this.secondaryTableData = this.getScopedTableData(this.preppedData.links, keys);\n    this.secondaryTableColumns = Object.keys(keys);\n  }\n\n  getScopedTableData(data, keyMap) {\n    const scopedData = [];\n    data.forEach(dataRecord => {\n      const scopedDataRecord = {};\n      // links always have data objects, so will always enter this section of the loop\n      Object.keys(keyMap).forEach(field => {\n        if ('data' in dataRecord && dataRecord.data[field]) {\n          scopedDataRecord[field] =\n            keyMap[field] && dataRecord.data[field]\n              ? formatStats(dataRecord.data[field], keyMap[field])\n              : dataRecord.data[field];\n        } else {\n          if (field === this.valueAccessor) {\n            scopedDataRecord[field] = keyMap[field]\n              ? formatStats(dataRecord[this.valueString], keyMap[field])\n              : dataRecord[this.valueString];\n          } else {\n            scopedDataRecord[field] =\n              keyMap[field] && dataRecord[field] ? formatStats(dataRecord[field], keyMap[field]) : dataRecord[field];\n          }\n        }\n      });\n      scopedData.push(scopedDataRecord);\n    });\n    return scopedData;\n  }\n\n  setNodeDimensions() {\n    // controls node width and node padding\n    this.alluvialProperties = sankey(this.nodeConfig.compare, this.linkConfig.visible, this.layout)\n      .nodeId(d => d[this.innerIDAccessor])\n      .nodeWidth(this.nodeConfig.width)\n      .nodePadding(this.nodeConfig.padding)\n      .nodeAlign(this.innerNodeAlignment)\n      .nodeSort(null)\n      .size([this.innerPaddedWidth, this.innerPaddedHeight]);\n  }\n\n  callSankeyGenerator() {\n    const sankeyData = (nodes, links) =>\n      this.alluvialProperties({\n        nodes: nodes.map(d => ({ ...d })),\n        links: links.map(d => ({ ...d }))\n      });\n    this.preppedData = sankeyData(this.nodeList, this.linkList);\n    this.nodeCount = max(this.preppedData.nodes, d => d.layer);\n  }\n\n  renderRootElements() {\n    this.svg = select(this.alluvialDiagramEl)\n      .select('.visa-viz-d3-alluvial-container')\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height);\n    // .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    this.root = this.svg.append('g').attr('id', 'visa-viz-margin-container-g-' + this.chartID);\n    this.rootG = this.root.append('g').attr('id', 'visa-viz-padding-container-g-' + this.chartID);\n\n    this.nodeG = this.rootG.append('g').attr('class', 'alluvial-node-group');\n    this.linkG = this.rootG.append('g').attr('class', 'alluvial-link-group');\n\n    this.labelG = this.rootG.append('g').attr('class', 'alluvial-dataLabel-group');\n    this.subTitleG = select(this.alluvialDiagramEl).select('.alluvial-sub-title');\n    this.tooltipG = select(this.alluvialDiagramEl).select('.alluvial-tooltip');\n  }\n\n  updateCursor() {\n    this.updateLinks.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    // this.updateNodes.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    this.updatingLabels.attr('cursor', !this.suppressEvents && this.dataLabel.visible ? this.cursor : null);\n  }\n  // reset graph size based on window size\n  reSetRoot() {\n    const changeSvg = prepareRenderChange({\n      selection: this.svg,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeSvg\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    const changeRoot = prepareRenderChange({\n      selection: this.root,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRoot.attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n\n    const changeRootG = prepareRenderChange({\n      selection: this.rootG,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRootG.attr('transform', `translate(${this.padding.left}, ${this.padding.top})`);\n\n    setAccessibilityDescriptionWidth(this.chartID, this.width);\n  }\n\n  setGlobalSelections() {\n    if (this.currentNodeLayers) {\n      this.previousNodeLayers = this.currentNodeLayers;\n    }\n\n    const dataBoundToNodes = this.nodeG\n      .selectAll('.node-wrapper')\n      .data(this.preppedData.nodes, d => d[this.innerIDAccessor]);\n\n    this.enterNodes = dataBoundToNodes\n      .enter()\n      .append('g')\n      .attr('class', 'node-wrapper')\n      .attr('data-offset-group', 'true');\n    this.enterNodes.append('rect').attr('class', 'alluvial-node');\n    this.exitNodes = dataBoundToNodes.exit();\n    this.updateNodes = dataBoundToNodes.merge(this.enterNodes);\n    this.updateNodes.selectAll('.alluvial-node').data(d => [d]);\n\n    this.currentNodeLayers = this.preppedData.nodes;\n    if (this.previousNodeLayers) {\n      const updatingNodesWithoutEnteringNodes = this.currentNodeLayers.filter(item =>\n        this.previousNodeLayers.map(a => a[this.innerIDAccessor]).includes(item.id)\n      );\n      this.previousMaxNodeLayer = max(updatingNodesWithoutEnteringNodes, d => d.layer);\n      this.previousMinNodeLayer = min(updatingNodesWithoutEnteringNodes, d => d.layer);\n\n      const updatingNodesWithoutExitingNodes = this.previousNodeLayers.filter(item =>\n        this.currentNodeLayers.map(a => a[this.innerIDAccessor]).includes(item.id)\n      );\n      this.currentMaxNodeLayer = max(updatingNodesWithoutExitingNodes, d => d.layer);\n      this.currentMinNodeLayer = min(updatingNodesWithoutExitingNodes, d => d.layer);\n    }\n\n    // temporary, to be removed when lifecycle functions are added\n    // tslint:disable-next-line:no-unused-expression\n    // this.updateLinkGroups && this.updateLinkGroups.remove();\n    // tslint:disable-next-line:no-unused-expression\n    // this.updateLinks && this.updateLinks.remove();\n\n    if (this.innerLinkFillMode === 'source' || this.innerLinkFillMode === 'target') {\n      this.updateNodes.each((_, i, n) => {\n        initializeElementAccess(n[i]);\n      });\n      const linkDataGroups = this.preppedData.nodes;\n      const dataBoundToLinkGroups = this.linkG\n        .selectAll('.alluvial-link-wrapper')\n        .data(linkDataGroups, d => d[this.innerIDAccessor]);\n      this.enterLinkGroups = dataBoundToLinkGroups.enter().append('g');\n      this.exitLinkGroups = dataBoundToLinkGroups.exit().remove();\n      this.updateLinkGroups = dataBoundToLinkGroups.merge(this.enterLinkGroups);\n\n      const dataBoundToLinks = this.updateLinkGroups\n        .selectAll('.alluvial-link')\n        .data(d => d.sourceLinks, d => d.data[this.sourceAccessor] + d.data[this.targetAccessor]);\n      this.enterLinks = dataBoundToLinks.enter().append('path');\n      this.exitLinks = dataBoundToLinks.exit();\n      this.updateLinks = dataBoundToLinks.merge(this.enterLinks).attr('data-offset-element', this.innerLinkFillMode);\n    } else {\n      this.updateNodes.attr('tabindex', null);\n\n      const dataBoundToLinks = this.linkG\n        .selectAll('.alluvial-link')\n        .data(this.preppedData.links, d => d.data[this.sourceAccessor] + d.data[this.targetAccessor]);\n      this.enterLinks = dataBoundToLinks.enter().append('path');\n      this.exitLinks = dataBoundToLinks.exit();\n      this.updateLinks = dataBoundToLinks.merge(this.enterLinks).attr('data-offset-element', null);\n    }\n\n    this.exitSize = this.exitLinks.size();\n    this.enterSize = this.enterLinks.size();\n\n    const dataBoundToLabels = this.labelG.selectAll('text').data(this.preppedData.nodes, d => d[this.innerIDAccessor]);\n    this.enteringLabels = dataBoundToLabels.enter().append('text');\n    this.exitingLabels = dataBoundToLabels.exit();\n    this.updatingLabels = dataBoundToLabels.merge(this.enteringLabels);\n  }\n\n  setTestingAttributes() {\n    if (this.unitTest) {\n      select(this.alluvialDiagramEl)\n        .select('.visa-viz-d3-alluvial-container')\n        .attr('data-testid', 'chart-container');\n      select(this.alluvialDiagramEl)\n        .select('.alluvial-main-title')\n        .attr('data-testid', 'main-title');\n      select(this.alluvialDiagramEl)\n        .select('.alluvial-sub-title')\n        .attr('data-testid', 'sub-title');\n      this.svg.attr('data-testid', 'root-svg');\n      this.root.attr('data-testid', 'margin-container');\n      this.rootG.attr('data-testid', 'padding-container');\n      // this.legendG.attr('data-testid', 'legend-container');\n      this.tooltipG.attr('data-testid', 'tooltip-container');\n\n      // add test attributes to nodes\n      // note that nodes are each wrapped in their own G, which is what this grabs\n      this.updateNodes.attr('data-testid', 'node').attr('data-id', d => `node-${d[this.innerIDAccessor]}`);\n\n      // add test attributes to links\n      if (this.innerLinkFillMode === 'source' || this.innerLinkFillMode === 'target') {\n        this.updateLinkGroups\n          .attr('data-testid', 'alluvial-link-group')\n          .attr('data-id', d => `link-group-${d[this.innerIDAccessor]}`);\n      }\n      this.updateLinks\n        .attr('data-testid', 'link')\n        .attr('data-id', d => `link-${d.source[this.innerIDAccessor]}-${d.target[this.innerIDAccessor]}`);\n\n      // add test attributes to labels\n      this.updatingLabels.attr('data-testid', 'dataLabel').attr('data-id', d => `dataLabel-${d[this.innerIDAccessor]}`);\n\n      this.svg.select('defs').attr('data-testid', 'pattern-defs');\n    } else {\n      select(this.alluvialDiagramEl)\n        .select('.visa-viz-d3-alluvial-container')\n        .attr('data-testid', null);\n      select(this.alluvialDiagramEl)\n        .select('.alluvial-main-title')\n        .attr('data-testid', null);\n      select(this.alluvialDiagramEl)\n        .select('.alluvial-sub-title')\n        .attr('data-testid', null);\n      this.svg.attr('data-testid', null);\n      this.root.attr('data-testid', null);\n      this.rootG.attr('data-testid', null);\n      // this.legendG.attr('data-testid', null);\n      this.tooltipG.attr('data-testid', null);\n\n      // add test attributes to nodes\n      this.updateNodes.attr('data-testid', null).attr('data-id', null);\n\n      // add test attributes to links\n      if (this.innerLinkFillMode === 'source' || this.innerLinkFillMode === 'target') {\n        this.updateLinkGroups.attr('data-testid', null).attr('data-id', null);\n      }\n      this.updateLinks.attr('data-testid', null).attr('data-id', null);\n\n      // add test attributes to labels\n      this.updatingLabels.attr('data-testid', null).attr('data-id', null);\n\n      this.svg.select('defs').attr('data-testid', null);\n    }\n  }\n\n  newColumnInterpolationPosition() {\n    return linkHorizontal()\n      .source(d =>\n        d.target.layer <= this.previousMinNodeLayer\n          ? [d.source.x0, d.y0]\n          : d.source.layer >= this.previousMaxNodeLayer\n          ? [d.target.x1, d.y0]\n          : [d.source.x1, d.y0]\n      )\n      .target(d =>\n        d.target.layer <= this.previousMinNodeLayer\n          ? [d.source.x0, d.y0]\n          : d.source.layer >= this.previousMaxNodeLayer\n          ? [d.target.x1, d.y0]\n          : [d.target.x0, d.y1]\n      );\n  }\n\n  newColumnInterpolationPositionVertical() {\n    return linkVertical()\n      .source(d =>\n        d.target.layer <= this.previousMinNodeLayer\n          ? [d.x0, d.source.y0]\n          : d.source.layer >= this.previousMaxNodeLayer\n          ? [d.x0, d.target.y1]\n          : [d.x0, d.source.y1]\n      )\n      .target(d =>\n        d.target.layer <= this.previousMinNodeLayer\n          ? [d.x0, d.source.y0]\n          : d.source.layer >= this.previousMaxNodeLayer\n          ? [d.x0, d.target.y1]\n          : [d.x1, d.target.y0]\n      );\n  }\n\n  enterLinkGeometries() {\n    this.enterLinks.interrupt();\n    const linkOpacity = this.linkConfig.visible ? this.linkConfig.opacity : 0;\n\n    if (this.innerLinkFillMode === 'source' || this.innerLinkFillMode === 'target') {\n      this.enterLinkGroups.attr('class', 'alluvial-link-wrapper');\n    }\n\n    this.enterLinks\n      .attr('class', 'alluvial-link')\n      .classed('entering', true)\n      .attr(\n        'd',\n        this.layout === 'vertical'\n          ? this.newColumnInterpolationPositionVertical()\n          : this.newColumnInterpolationPosition()\n      );\n\n    this.enterLinks\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .attr('stroke-dasharray', (d, i, n) => {\n        d.linelength = n[i].getTotalLength() - 2;\n        // return d.linelength + ' ' + d.linelength;\n        return d.target.layer <= this.previousMinNodeLayer || d.source.layer >= this.previousMaxNodeLayer\n          ? ''\n          : d.linelength + ' ' + d.linelength;\n      })\n      // .attr('stroke-dashoffset', d => d.linelength)\n      .attr('stroke-dashoffset', d =>\n        d.target.layer <= this.previousMinNodeLayer || d.source.layer >= this.previousMaxNodeLayer ? 0 : d.linelength\n      )\n      .attr('stroke-width', d =>\n        d.target.layer <= this.previousMinNodeLayer || d.source.layer >= this.previousMaxNodeLayer\n          ? Math.max(1, d.width)\n          : 0.1\n      )\n      .attr('stroke-opacity', linkOpacity)\n      .transition('enter')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('d', this.layout === 'vertical' ? sankeyLinkVertical() : sankeyLinkHorizontal())\n      .attr('stroke-width', d =>\n        d.target.layer <= this.previousMinNodeLayer || d.source.layer >= this.previousMaxNodeLayer\n          ? Math.max(1, d.width)\n          : 1\n      )\n      .attr('stroke-dashoffset', 0);\n\n    // const test = select(this.svg.node())\n    //   .selectAll('.duplicated-clicked-link');\n\n    // this.enterLinks.each((d, i, n) => {\n    //   const clicked =\n    //     this.clickHighlight &&\n    //     this.clickHighlight.length > 0 &&\n    //     checkClicked(d.data, this.clickHighlight, this.innerInteractionKeys);\n    //   if (clicked) {\n    //     // this.drawDuplicateClickedLink(n[i]);\n    //     // if (n[i].classed('duplicated-clicked-link')){\n    //     // }\n    //   }\n    // });\n  }\n\n  updateLinkGeometries() {\n    this.updateLinks.interrupt();\n    const linkOpacity = this.linkConfig.visible ? this.linkConfig.opacity : 0;\n\n    this.updateLinks\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('stroke-opacity', d => {\n        return checkInteraction(\n          d.data,\n          linkOpacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n          // this.nodeIDAccessor\n        );\n      });\n  }\n\n  exitLinkGeometries() {\n    this.exitLinks.interrupt();\n    const linkOpacity = this.linkConfig.visible ? this.linkConfig.opacity : 0;\n\n    this.exitLinks\n      .attr('stroke-dasharray', (d, i, n) => {\n        d.linelength = n[i].getTotalLength();\n        return d.target.layer <= this.previousMinNodeLayer || d.source.layer >= this.previousMaxNodeLayer\n          ? ''\n          : d.linelength + ' ' + d.linelength;\n      })\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr(\n        'd',\n        this.layout === 'vertical'\n          ? this.newColumnInterpolationPositionVertical()\n          : this.newColumnInterpolationPosition()\n      )\n      .attr('stroke-opacity', linkOpacity)\n      .attr('stroke-dashoffset', d => d.linelength)\n      .attr('stroke-width', d =>\n        d.target.layer <= this.currentMinNodeLayer || d.source.layer >= this.currentMaxNodeLayer\n          ? Math.max(1, d.width)\n          : 0.1\n      )\n      .remove();\n  }\n\n  drawLinkGeometries() {\n    this.removeTemporaryClickedLinks(this.svg.node());\n    // const linkOpacity = this.linkConfig.visible ? this.linkConfig.opacity : 0;\n\n    if (this.innerLinkFillMode === 'source' || this.innerLinkFillMode === 'target') {\n      this.updateLinkGroups.classed('link-group offset-target', true);\n      // .classed('entering', true)\n      // .attr('cursor', !this.suppressEvents ? this.cursor : null);\n    }\n\n    this.updateLinks\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      // .attr('stroke-opacity', d => {\n      //   return checkInteraction(\n      //     d.data,\n      //     linkOpacity,\n      //     this.hoverOpacity,\n      //     this.hoverHighlight,\n      //     this.clickHighlight,\n      //     this.innerInteractionKeys\n      //     // this.nodeIDAccessor\n      //   );\n      // })\n      .attr('d', this.layout === 'vertical' ? sankeyLinkVertical() : sankeyLinkHorizontal())\n      .attr('stroke-width', d => Math.max(1, d.width))\n      .call(transitionEndAll, () => {\n        this.removeTemporaryClickedLinks(this.svg.node());\n        this.updateLinks\n          .classed('entering', false)\n          .attr('d', this.layout === 'vertical' ? sankeyLinkVertical() : sankeyLinkHorizontal())\n          .attr('stroke-dasharray', '');\n\n        this.updateInteractionState();\n        this.updateLinks.each((d, i, n) => {\n          const clicked =\n            this.clickHighlight &&\n            this.clickHighlight.length > 0 &&\n            checkClicked(d.data, this.clickHighlight, this.innerInteractionKeys);\n          if (clicked) {\n            // this will add a non-interactive duplicate of each clicked link above the existing ones\n            // so that the link visually appears above all other links, but the keyboard nav order does not change\n            this.drawDuplicateClickedLink(n[i], d);\n          }\n        });\n      });\n\n    this.updateLinks\n      .transition('accessibilityAfterExit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        // before we exit geometries, we need to check if a focus exists or not\n        const focusDidExist = checkAccessFocus(this.rootG.node());\n        // then we must remove the exiting elements\n        this.exitLinks.remove();\n        // then our util can count geometries\n        this.setChartCountAccessibility();\n        // our group's label should update with new counts too\n        this.setGroupAccessibilityID();\n        // since items exited, labels must receive updated values\n        this.setGeometryAriaLabels();\n        // and also make sure the user's focus isn't lost\n        retainAccessFocus({\n          parentGNode: this.rootG.node(),\n          focusDidExist\n          // recursive: true\n        });\n        // now we can emit the event that transitions are complete\n        this.transitionEndEvent.emit({ chartID: this.chartID });\n      });\n  }\n\n  // creates a clone of clicked links\n  drawDuplicateClickedLink(inputElement, d) {\n    const source = inputElement;\n    const className = 'vcl-accessibility-focus';\n    const parent = source.parentNode;\n    const sourceCopy = source.cloneNode();\n    select(sourceCopy)\n      .classed('alluvial-link', false)\n      .classed(className + '-highlight ' + className + '-hover', true)\n      .classed('duplicated-clicked-link', true)\n      .classed('entering', false)\n      .data([d.data])\n      .attr('focusable', false)\n      .attr('aria-label', null)\n      .attr('aria-hidden', true)\n      .attr('role', null)\n      .style('pointer-events', 'none')\n      .attr('tabindex', null);\n\n    if (this.innerLinkFillMode === 'source' || this.innerLinkFillMode === 'target') {\n      const parentOfParent = parent.parentNode;\n      const validSiblings = select(parentOfParent).selectAll('.link-group')._groups[0];\n      const lastGroup = validSiblings[validSiblings.length - 1];\n      lastGroup.appendChild(sourceCopy);\n    } else {\n      parent.appendChild(sourceCopy);\n    }\n  }\n\n  removeTemporaryClickedLinks(root) {\n    select(root)\n      .selectAll('.duplicated-clicked-link')\n      .remove();\n  }\n\n  updateLinkStyle() {\n    this.updateLinks\n      .attr('stroke', d =>\n        this.clickHighlight.length > 0 &&\n        checkClicked(d.data, this.clickHighlight, this.innerInteractionKeys) &&\n        this.clickStyle.color\n          ? visaColors[this.clickStyle.color] || this.clickStyle.color\n          : this.hoverHighlight &&\n            checkHovered(d.data, this.hoverHighlight, this.innerInteractionKeys) &&\n            this.hoverStyle.color\n          ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n          : this.innerLinkFillMode === 'group'\n          ? this.colorArr[this.groupKeys.indexOf(d[this.groupAccessor])]\n          : this.innerLinkFillMode === 'none'\n          ? this.colorArr[0] || '#E4E4E4'\n          : this.innerLinkFillMode === 'link'\n          ? this.colorArr[d.index]\n          : this.innerLinkFillMode === 'source'\n          ? this.colorArr[d.source.index]\n          : this.colorArr[d.target.index]\n      )\n      .attr('fill', 'none');\n  }\n\n  enterNodeGeometries() {\n    this.enterNodes.interrupt();\n\n    if (!this.defaults) {\n      this.enterNodes.classed('entering', true);\n    }\n\n    this.enterNodes\n      .select('.alluvial-node')\n      // .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .attr('fill', (_, i) => (this.nodeConfig.fill ? this.colorArr[i] || this.colorArr[0] : '#E4E4E4'))\n      .attr('stroke', (_, i) =>\n        getContrastingStroke(this.nodeConfig.fill ? this.colorArr[i] || this.colorArr[0] : '#E4E4E4')\n      )\n      .attr('stroke-width', '1px')\n      .attr('x', d => d.x0)\n      .attr('y', d => d.y0)\n      .attr('height', d => d.y1 - d.y0)\n      .attr('opacity', 0)\n      .attr('width', d => d.x1 - d.x0);\n\n    // .transition('enter_nodes')\n    // .delay(20 * this.duration)\n    // .duration(this.duration)\n    // .ease(easeCircleIn)\n    // .attr('x', d => d.x0)\n    // .attr('y', d => d.y0)\n    // .attr('height', d => d.y1 - d.y0)\n    // .attr('width', d => d.x1 - d.x0)\n    // .attr('opacity', 1);\n\n    // this.enterNodeGroups\n    //   .attr('class', 'node-wrapper')\n    //   .attr('data-offset-group', 'true');\n    // this.enterNodes\n    //   .attr('class', 'alluvial-node');\n  }\n\n  updateNodeGeometries() {\n    this.updateNodes.interrupt();\n\n    this.updateNodes\n      .select('.alluvial-node')\n      .transition('node_opacity')\n      .duration((_, i, n) => {\n        if (select(n[i].parentNode).classed('entering')) {\n          // select(n[i].parentNode).classed('entering', false);\n          return this.duration / 3;\n        }\n        return 0;\n      })\n      // .duration(this.duration)\n      .delay((_, i, n) => {\n        return select(n[i].parentNode).classed('entering') ? this.duration / 1.2 : 0;\n      })\n      .ease(easeCircleIn)\n      .attr(\n        'opacity',\n        1\n        // d => {\n        //   return checkInteraction(\n        //     d.data,\n        //     1,\n        //     this.hoverOpacity,\n        //     this.hoverHighlight,\n        //     this.clickHighlight,\n        //     this.innerInteractionKeys\n        //     // this.nodeIDAccessor\n        //   );\n        // }\n      );\n  }\n\n  exitNodeGeometries() {\n    this.exitNodes.interrupt();\n\n    this.exitNodes\n      .select('.alluvial-node')\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 3)\n      .attr('opacity', 0)\n      .attr('width', 0)\n      .select(function() {\n        return this.parentNode;\n      })\n      .remove();\n  }\n\n  drawNodeGeometries() {\n    this.updateNodes\n      .select('.alluvial-node')\n      // .on('click', !this.suppressEvents ? d => this.onClickHandler(d) : null)\n      // .on('mouseover', !this.suppressEvents ? d => this.onHoverHandler(d) : null)\n      // .on('mouseover', !this.suppressEvents ? d => this.onHoverHandler(d) : null)\n      // .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      // .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .transition('update_nodes')\n      .duration((_, i, n) => {\n        return select(n[i].parentNode).classed('entering') ? this.duration / 3 : this.duration;\n      })\n      .delay((_, i, n) => {\n        return select(n[i].parentNode).classed('entering') ? this.duration / 1.2 : 0;\n      })\n      .ease(easeCircleIn)\n      .attr('x', d => d.x0)\n      .attr('y', d => d.y0)\n      .attr('height', d => d.y1 - d.y0)\n      .attr('width', d => d.x1 - d.x0)\n      .attr('opacity', 1)\n      .call(transitionEndAll, () => {\n        this.updateNodes.classed('entering', false);\n        // .attr('opacity', 1)\n        // .attr('d', sankeyLinkHorizontal())\n        // .attr('stroke-dasharray', '');\n      });\n    // d => {\n    // let matchHover = true;\n    // if (d[this.sourceLinksString].length) {\n    //   matchHover = d[this.sourceLinksString].some(\n    //     linkData =>\n    //       checkInteraction(\n    //         linkData,\n    //         1,\n    //         this.hoverOpacity,\n    //         this.hoverHighlight,\n    //         this.clickHighlight,\n    //         this.innerInteractionKeys,\n    //         this.nodeIDAccessor\n    //       ) >= 1\n    //   );\n    // }\n    // if (d[this.targetLinksString].length) {\n    //   matchHover = d[this.targetLinksString].some(\n    //     linkData =>\n    //       checkInteraction(\n    //         linkData,\n    //         1,\n    //         this.hoverOpacity,\n    //         this.hoverHighlight,\n    //         this.clickHighlight,\n    //         this.innerInteractionKeys,\n    //         this.nodeIDAccessor\n    //       ) >= 1\n    //   );\n    // }\n    // return matchHover ? 1 : this.hoverOpacity;\n    // })\n  }\n\n  updateNodeStyle() {\n    this.updateNodes\n      .select('.alluvial-node')\n      .attr('fill', (_, i) => (this.nodeConfig.fill ? this.colorArr[i] || this.colorArr[0] : '#E4E4E4'));\n    this.updateNodes\n      .select('.alluvial-node')\n      .attr('stroke', (_, i) =>\n        getContrastingStroke(this.nodeConfig.fill ? this.colorArr[i] || this.colorArr[0] : '#E4E4E4')\n      );\n    this.updateNodes.select('.alluvial-node').attr('stroke-width', '1px');\n  }\n\n  // at some point we could extract this to dataLabel.ts, but not now\n  // the additional selection of this below will skip any transition that\n  // is taking place in the selection, we need to use transition on update\n  // but not on entry, need to look into this more.\n  placeNodeLabels({\n    root,\n    layout,\n    dataLabel,\n    innerPaddedWidth\n  }: {\n    root?: any;\n    layout?: string;\n    dataLabel: any;\n    innerPaddedWidth?: number;\n  }) {\n    // scenarios we need to account for\n    // vertical - top, middle, bottom, auto\n    // horizontal - top, middle, bottom, auto\n    let xPlacement, yPlacement, offsetX, offsetY, textAnchor;\n\n    // note: keep in mind that width/height have been flipped for vertical\n    if (layout === 'vertical') {\n      switch (dataLabel.placement) {\n        case 'outside':\n          xPlacement = d => d.x0 + (d.x1 - d.x0) / 2;\n          yPlacement = d => {\n            return d.y0 < innerPaddedWidth / 2 ? d.y0 : d.y1;\n          };\n          offsetX = '0.0em';\n          offsetY = d => (d.y0 < innerPaddedWidth / 2 ? '-0.5em' : '1.3em');\n          textAnchor = 'middle';\n          break;\n        case 'on-node':\n          xPlacement = d => d.x0 + (d.x1 - d.x0) / 2;\n          yPlacement = d => d.y0 + (d.y1 - d.y0) / 2;\n          offsetX = '0.0em';\n          offsetY = '0.4em';\n          textAnchor = 'middle';\n          break;\n        case 'inside':\n          xPlacement = d => d.x0 + (d.x1 - d.x0) / 2;\n          yPlacement = d => (d.y0 < innerPaddedWidth / 2 ? d.y1 : d.y0);\n          offsetX = '0.0em';\n          offsetY = d => (d.y0 < innerPaddedWidth / 2 ? '1.3em' : '-0.5em');\n          textAnchor = 'middle';\n          break;\n        default:\n          xPlacement = d => d.x0 + (d.x1 - d.x0) / 2;\n          yPlacement = d => (d.y0 < innerPaddedWidth / 2 ? d.y1 : d.y0);\n          offsetX = '0.0em';\n          offsetY = d => (d.y0 < innerPaddedWidth / 2 ? '1.3em' : '-0.5em');\n          textAnchor = 'middle';\n          break;\n      }\n    } else {\n      switch (dataLabel.placement) {\n        case 'outside':\n          xPlacement = d => (d.x0 < innerPaddedWidth / 2 ? d.x0 : d.x1);\n          yPlacement = d => d.y0 + (d.y1 - d.y0) / 2;\n          offsetX = d => (d.x0 < innerPaddedWidth / 2 ? '-0.5em' : '0.5em');\n          offsetY = '0.4em';\n          textAnchor = d => (d.x0 < innerPaddedWidth / 2 ? 'end' : 'start');\n          break;\n        case 'on-node':\n          xPlacement = d => d.x0 + (d.x1 - d.x0) / 2;\n          yPlacement = d => d.y0 + (d.y1 - d.y0) / 2;\n          offsetX = '0.0em';\n          offsetY = '0.4em';\n          textAnchor = 'middle';\n          break;\n        case 'inside':\n          xPlacement = d => (d.x0 < innerPaddedWidth / 2 ? d.x1 : d.x0);\n          yPlacement = d => d.y0 + (d.y1 - d.y0) / 2;\n          offsetX = d => (d.x0 < innerPaddedWidth / 2 ? '0.5em' : '-0.5em');\n          offsetY = '0.4em';\n          textAnchor = d => (d.x0 < innerPaddedWidth / 2 ? 'start' : 'end');\n          break;\n        default:\n          xPlacement = d => (d.x0 < innerPaddedWidth / 2 ? d.x1 : d.x0);\n          yPlacement = d => d.y0 + (d.y1 - d.y0) / 2;\n          offsetX = d => (d.x0 < innerPaddedWidth / 2 ? '0.5em' : '-0.5em');\n          offsetY = '0.4em';\n          textAnchor = d => (d.x0 < innerPaddedWidth / 2 ? 'start' : 'end');\n          break;\n      }\n    }\n\n    // now we use d3 each to call the above accessors for each node label placement\n    // if we need to skip the transition at times we can use the .each() function like below\n    // .each((_, i, n) => {\n    //   select(n[i]) // this new selection will be outside of the transition scope\n    //    .attr(...)\n    // });\n    // the call below will be within the transition scope of the selection passed\n    root\n      .attr('x', xPlacement)\n      .attr('y', yPlacement)\n      .attr('dx', offsetX)\n      .attr('dy', offsetY)\n      .attr('data-dx', offsetX)\n      .attr('data-dy', offsetY)\n      .attr('text-anchor', textAnchor);\n    // we handle these attributes slightly differently in the functions below\n    // .attr('data-x', xPlacement)\n    // .attr('data-use-dx', true)\n    // .attr('data-y', yPlacement)\n    // .attr('data-use-dy', true)\n  }\n\n  enterNodeLabels() {\n    this.enteringLabels.interrupt();\n    const opacity = this.dataLabel.visible ? 1 : 0;\n    const hiddenOpacity = this.dataLabel.visible ? Number.EPSILON : 0;\n    this.widthAllNodesNoLinks = this.nodeCount * this.nodeConfig.width + this.nodeCount * this.nodeConfig.width;\n    this.noLinksLeftPadding = (this.innerPaddedWidth - this.widthAllNodesNoLinks) / 2;\n\n    this.enteringLabels\n      .attr('class', 'alluvial-diagram-dataLabel entering')\n      .attr('cursor', !this.suppressEvents && this.dataLabel.visible ? this.cursor : null)\n      .attr('opacity', d => {\n        if (this.linkConfig.visible) {\n          let matchHover = true;\n          if (d[this.sourceLinksString].length) {\n            matchHover = d[this.sourceLinksString].some(\n              linkData =>\n                checkInteraction(\n                  linkData.data,\n                  opacity,\n                  this.hoverOpacity,\n                  this.hoverHighlight,\n                  this.clickHighlight,\n                  this.innerInteractionKeys\n                ) >= 1\n            );\n          }\n          if (d[this.targetLinksString].length) {\n            matchHover = d[this.targetLinksString].some(\n              linkData =>\n                checkInteraction(\n                  linkData.data,\n                  opacity,\n                  this.hoverOpacity,\n                  this.hoverHighlight,\n                  this.clickHighlight,\n                  this.innerInteractionKeys\n                ) >= 1\n            );\n          }\n          return matchHover ? hiddenOpacity : 0;\n        } else {\n          return d.layer === 0 ? hiddenOpacity : d.layer === this.nodeCount ? hiddenOpacity : 0;\n        }\n      });\n\n    this.placeNodeLabels({\n      root: this.enteringLabels,\n      layout: this.layout,\n      dataLabel: this.dataLabel,\n      innerPaddedWidth: this.innerPaddedWidth\n    });\n  }\n\n  updateNodeLabels() {\n    this.updatingLabels.interrupt('label_opacity');\n    const opacity = this.dataLabel.visible ? 1 : 0;\n\n    this.updatingLabels\n      .transition('label_opacity')\n      .ease(easeCircleIn)\n      // .duration(this.duration)\n      .duration((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          return this.duration / 3;\n        }\n        return 0;\n      })\n      // .duration(this.duration)\n      .delay((_, i, n) => {\n        return select(n[i]).classed('entering') ? this.duration / 1.2 : 0;\n      })\n      .attr('opacity', d => {\n        if (this.linkConfig.visible) {\n          let matchHover = true;\n          if (d[this.sourceLinksString].length) {\n            matchHover = d[this.sourceLinksString].some(\n              linkData =>\n                checkInteraction(\n                  linkData.data,\n                  opacity,\n                  this.hoverOpacity,\n                  this.hoverHighlight,\n                  this.clickHighlight,\n                  this.innerInteractionKeys\n                ) >= 1\n            );\n          }\n          if (d[this.targetLinksString].length) {\n            matchHover = d[this.targetLinksString].some(\n              linkData =>\n                checkInteraction(\n                  linkData.data,\n                  opacity,\n                  this.hoverOpacity,\n                  this.hoverHighlight,\n                  this.clickHighlight,\n                  this.innerInteractionKeys\n                ) >= 1\n            );\n          }\n          return matchHover ? 1 : 0;\n        } else {\n          return d.layer === 0 ? opacity : d.layer === this.nodeCount ? opacity : 0;\n        }\n      });\n  }\n\n  exitNodeLabels() {\n    this.exitingLabels.interrupt();\n\n    this.exitingLabels\n      .transition('exit_labels')\n      // .duration(this.duration)\n      .duration(this.duration / 3)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  addStrokeUnder() {\n    const filter = createTextStrokeFilter({\n      root: this.svg.node(),\n      id: this.chartID,\n      color: '#ffffff'\n    });\n    this.updatingLabels.attr('filter', filter);\n  }\n\n  drawNodeLabels() {\n    // const opacity = this.dataLabel.visible ? 1 : 0;\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n    const cloneAdjustment = hideOnly ? 0 : 4;\n\n    this.widthAllNodesNoLinks = this.nodeCount * this.nodeConfig.width * 2;\n    this.noLinksLeftPadding = (this.innerPaddedWidth - this.widthAllNodesNoLinks) / 2;\n    const nodeLabelUpdate = this.updatingLabels\n      .text(d =>\n        this.dataLabel.format\n          ? formatDataLabel(d, this.innerLabelAccessor, this.dataLabel.format)\n          : d[this.innerLabelAccessor]\n      )\n      .attr('data-x', d =>\n        this.layout === 'vertical'\n          ? d.x0 + (d.x1 - d.x0) / 2\n          : this.dataLabel.placement === 'outside'\n          ? d.x0 < this.innerPaddedWidth / 2\n            ? d.x0 - cloneAdjustment\n            : d.x1 + cloneAdjustment\n          : d.x0 < this.innerPaddedWidth / 2\n          ? d.x1 + cloneAdjustment\n          : d.x0 - cloneAdjustment\n      ) // note we hacked vertical layout so still have to use width here\n      .attr('data-y', d =>\n        this.layout === 'vertical'\n          ? this.dataLabel.placement === 'outside'\n            ? d.y0 < this.innerPaddedWidth / 2\n              ? d.y0 - cloneAdjustment\n              : d.y1 + cloneAdjustment\n            : d.y0 < this.innerPaddedWidth / 2\n            ? d.y1 + cloneAdjustment\n            : d.y0 - cloneAdjustment\n          : d.y0 + (d.y1 - d.y0) / 2\n      )\n      .attr('data-translate-x', this.padding.left + this.margin.left)\n      .attr('data-translate-y', this.padding.top + this.margin.top)\n      .attr('data-use-dx', hideOnly)\n      .attr('data-use-dy', hideOnly)\n      .transition('update_labels')\n      .duration((_, i, n) => {\n        return select(n[i]).classed('entering') ? this.duration / 3 : this.duration;\n      })\n      .delay((_, i, n) => {\n        return select(n[i]).classed('entering') ? this.duration / 1.2 : 0;\n      })\n      .ease(easeCircleIn);\n\n    if (this.dataLabel.visible && (this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly)) {\n      // we only need the node outlines and correct attributes on them\n      const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n      const nodeRects = this.updateNodes\n        .select('.alluvial-node')\n        .attr('data-x', d => d.x0)\n        .attr('data-y', d => d.y0)\n        .attr('data-translate-x', this.padding.left + this.margin.left)\n        .attr('data-translate-y', this.padding.top + this.margin.top)\n        .attr('data-height', d => d.y1 - d.y0)\n        .attr('data-width', d => d.x1 - d.x0)\n        .each((d, i, n) => {\n          // for each node, we create a clone and place it\n          // on either side of the rect to hack an inside/outside\n          // placement from the collision util\n          if (!hideOnly) {\n            const source = n[i];\n            const parent = source.parentNode;\n            const className = 'alluvial-node-collision-clone';\n            const sourceCopy = source.cloneNode();\n            select(sourceCopy)\n              .classed('alluvial-node', false)\n              .classed(className, true)\n              .classed('entering', false)\n              .data([d])\n              .attr('focusable', false)\n              .attr('aria-label', null)\n              .attr('aria-hidden', true)\n              .attr('role', null)\n              .style('pointer-events', 'none')\n              .style('visibility', 'hidden')\n              .attr('tabindex', null)\n              .attr(\n                'data-x',\n                this.layout === 'vertical'\n                  ? d.x0\n                  : collisionPlacement === 'all'\n                  ? d.x0\n                  : collisionPlacement === 'outside'\n                  ? d.x0 < this.innerPaddedWidth / 2\n                    ? d.x0 - cloneAdjustment\n                    : d.x1 + cloneAdjustment\n                  : d.x0 < this.innerPaddedWidth / 2\n                  ? d.x1 + cloneAdjustment\n                  : d.x0 - cloneAdjustment\n              ) // note we hacked vertical layout so still have to use width here\n              .attr(\n                'data-y',\n                this.layout === 'vertical'\n                  ? collisionPlacement === 'all'\n                    ? d.y0\n                    : collisionPlacement === 'outside'\n                    ? d.y0 < this.innerPaddedWidth / 2\n                      ? d.y0 - cloneAdjustment\n                      : d.y1 + cloneAdjustment\n                    : d.y0 < this.innerPaddedWidth / 2\n                    ? d.y1 + cloneAdjustment\n                    : d.y0 - cloneAdjustment\n                  : d.y0\n              )\n              .attr(\n                'data-width',\n                this.layout === 'vertical' ? d.x1 - d.x0 : collisionPlacement === 'all' ? d.x1 - d.x0 : 1\n              )\n              .attr(\n                'data-height',\n                this.layout === 'vertical' ? (collisionPlacement === 'all' ? d.y1 - d.y0 : 1) : d.y1 - d.y0\n              );\n\n            // temporarily append these to the parent\n            parent.appendChild(sourceCopy);\n          }\n        });\n      const clonedRects = this.updateNodes.select('.alluvial-node-collision-clone');\n      this.bitmaps = resolveLabelCollision({\n        labelSelection: nodeLabelUpdate,\n        avoidMarks: hideOnly ? [nodeRects] : [nodeRects, clonedRects],\n        validPositions: hideOnly ? ['middle'] : this.layout === 'vertical' ? ['top', 'bottom'] : ['left', 'right'],\n        offsets: hideOnly ? [1] : [4, 4],\n        accessors: [this.innerIDAccessor],\n        size: [roundTo(this.width, 0), roundTo(this.height, 0)], // we need the whole width for series labels\n        hideOnly: this.dataLabel.visible && hideOnly\n      });\n      clonedRects.remove();\n\n      // if we are in hide only we need to add attributes back\n      if (hideOnly) {\n        this.placeNodeLabels({\n          root: nodeLabelUpdate,\n          layout: this.layout,\n          dataLabel: this.dataLabel,\n          innerPaddedWidth: this.innerPaddedWidth\n        });\n      }\n    } else {\n      this.placeNodeLabels({\n        root: nodeLabelUpdate,\n        layout: this.layout,\n        dataLabel: this.dataLabel,\n        innerPaddedWidth: this.innerPaddedWidth\n      });\n    }\n    // we need to call this after the transitions\n    nodeLabelUpdate.call(transitionEndAll, () => {\n      this.updatingLabels.classed('entering', false);\n      this.addStrokeUnder();\n    });\n  }\n\n  setNodeLabelOpacity() {\n    this.updatingLabels.interrupt('label_opacity');\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n    const cloneAdjustment = hideOnly ? 0 : 4;\n    const addCollisionClass =\n      this.dataLabel.visible && (this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly);\n    const opacity = this.dataLabel.visible ? 1 : 0;\n\n    this.updatingLabels.attr('opacity', (d, i, n) => {\n      const prevOpacity = +select(n[i]).attr('opacity');\n      const styleVisibility = select(n[i]).style('visibility');\n      let targetOpacity;\n      if (this.linkConfig.visible) {\n        let matchHover = true;\n        if (d[this.sourceLinksString].length) {\n          matchHover = d[this.sourceLinksString].some(\n            linkData =>\n              checkInteraction(\n                linkData.data,\n                opacity,\n                this.hoverOpacity,\n                this.hoverHighlight,\n                this.clickHighlight,\n                this.innerInteractionKeys\n              ) >= 1\n          );\n        }\n        if (d[this.targetLinksString].length) {\n          matchHover = d[this.targetLinksString].some(\n            linkData =>\n              checkInteraction(\n                linkData.data,\n                opacity,\n                this.hoverOpacity,\n                this.hoverHighlight,\n                this.clickHighlight,\n                this.innerInteractionKeys\n              ) >= 1\n          );\n        }\n        targetOpacity = matchHover ? opacity : 0;\n      } else {\n        targetOpacity = d.layer === 0 ? opacity : d.layer === this.nodeCount ? opacity : 0;\n      }\n      if (\n        ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n        addCollisionClass\n      ) {\n        if (targetOpacity === 1) {\n          select(n[i])\n            .classed('collision-added', true)\n            .style('visibility', null);\n        } else {\n          select(n[i]).classed('collision-removed', true);\n        }\n      }\n      return targetOpacity;\n    });\n\n    if (addCollisionClass) {\n      const labelsAdded = this.updatingLabels.filter((_, i, n) => select(n[i]).classed('collision-added'));\n      const labelsRemoved = this.updatingLabels\n        .filter((_, i, n) => select(n[i]).classed('collision-removed'))\n        .attr('data-use-dx', hideOnly) // need to add this for remove piece of collision below\n        .attr('data-use-dy', hideOnly);\n\n      // we can now remove labels as well if we need to...\n      if (labelsRemoved.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsRemoved,\n          avoidMarks: [],\n          validPositions: ['middle'],\n          offsets: [1],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n          hideOnly: false,\n          removeOnly: true\n        });\n\n        // remove temporary class now\n        labelsRemoved.classed('collision-removed', false);\n      }\n\n      // we can now add labels as well if we need to...\n      if (labelsAdded.size() > 0) {\n        // we only need the node outlines and correct attributes on them\n        const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n        const nodeRects = this.updateNodes\n          .select('.alluvial-node')\n          .attr('data-x', d => d.x0)\n          .attr('data-y', d => d.y0)\n          .attr('data-translate-x', this.padding.left + this.margin.left)\n          .attr('data-translate-y', this.padding.top + this.margin.top)\n          .attr('data-height', d => d.y1 - d.y0)\n          .attr('data-width', d => d.x1 - d.x0)\n          .each((d, i, n) => {\n            // for each node, we create a clone and place it\n            // on either side of the rect to hack an inside/outside\n            // placement from the collision util\n            if (!hideOnly) {\n              const source = n[i];\n              const parent = source.parentNode;\n              const className = 'alluvial-node-collision-clone';\n              const sourceCopy = source.cloneNode();\n              select(sourceCopy)\n                .classed('alluvial-node', false)\n                .classed(className, true)\n                .classed('entering', false)\n                .data([d])\n                .attr('focusable', false)\n                .attr('aria-label', null)\n                .attr('aria-hidden', true)\n                .attr('role', null)\n                .style('pointer-events', 'none')\n                .style('visibility', 'hidden')\n                .attr('tabindex', null)\n                .attr(\n                  'data-x',\n                  this.layout === 'vertical'\n                    ? d.x0\n                    : collisionPlacement === 'all'\n                    ? d.x0\n                    : collisionPlacement === 'outside'\n                    ? d.x0 < this.innerPaddedWidth / 2\n                      ? d.x0 - cloneAdjustment\n                      : d.x1 + cloneAdjustment\n                    : d.x0 < this.innerPaddedWidth / 2\n                    ? d.x1 + cloneAdjustment\n                    : d.x0 - cloneAdjustment\n                ) // note we hacked vertical layout so still have to use width here\n                .attr(\n                  'data-y',\n                  this.layout === 'vertical'\n                    ? collisionPlacement === 'all'\n                      ? d.y0\n                      : collisionPlacement === 'outside'\n                      ? d.y0 < this.innerPaddedWidth / 2\n                        ? d.y0 - cloneAdjustment\n                        : d.y1 + cloneAdjustment\n                      : d.y0 < this.innerPaddedWidth / 2\n                      ? d.y1 + cloneAdjustment\n                      : d.y0 - cloneAdjustment\n                    : d.y0\n                )\n                .attr(\n                  'data-width',\n                  this.layout === 'vertical' ? d.x1 - d.x0 : collisionPlacement === 'all' ? d.x1 - d.x0 : 1\n                )\n                .attr(\n                  'data-height',\n                  this.layout === 'vertical' ? (collisionPlacement === 'all' ? d.y1 - d.y0 : 1) : d.y1 - d.y0\n                );\n              // temporarily append these to the parent\n              parent.appendChild(sourceCopy);\n            }\n          });\n        const clonedRects = this.updateNodes.select('.alluvial-node-collision-clone');\n        this.bitmaps = resolveLabelCollision({\n          labelSelection: labelsAdded,\n          bitmaps: this.bitmaps,\n          avoidMarks: hideOnly ? [nodeRects] : [nodeRects, clonedRects],\n          validPositions: hideOnly ? ['middle'] : this.layout === 'vertical' ? ['top', 'bottom'] : ['left', 'right'],\n          offsets: hideOnly ? [1] : [4, 4],\n          accessors: [this.innerIDAccessor],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)], // we need the whole width for series labels\n          hideOnly: this.dataLabel.visible && hideOnly,\n          suppressMarkDraw: true\n        });\n        clonedRects.remove();\n\n        // if we are in hide only we need to add attributes back\n        if (hideOnly) {\n          this.placeNodeLabels({\n            root: labelsAdded,\n            layout: this.layout,\n            dataLabel: this.dataLabel,\n            innerPaddedWidth: this.innerPaddedWidth\n          });\n        }\n\n        // remove temporary class now\n        labelsAdded.classed('collision-added', false);\n      }\n    }\n  }\n\n  updateInteractionState() {\n    // we created an \"opacity\" transition namespace in update's transition\n    // we override it here to instantly display opacity state (below)\n    this.removeTemporaryClickedLinks(this.svg.node());\n    this.updateLinks.interrupt('opacity');\n\n    // we use this.update and this.labelCurrent from setGlobalSelection here\n    // the lifecycle state does not matter (enter/update/exit)\n    // since interaction state can happen at any time\n    const linkOpacity = this.linkConfig.visible ? this.linkConfig.opacity : 0;\n    this.updateLinks\n      .attr('stroke-opacity', d => {\n        return checkInteraction(\n          d.data,\n          linkOpacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n          // this.nodeIDAccessor\n        );\n      })\n      .attr('stroke', d =>\n        this.clickHighlight.length > 0 &&\n        checkClicked(d.data, this.clickHighlight, this.innerInteractionKeys) &&\n        this.clickStyle.color\n          ? visaColors[this.clickStyle.color] || this.clickStyle.color\n          : this.hoverHighlight &&\n            checkHovered(d.data, this.hoverHighlight, this.innerInteractionKeys) &&\n            this.hoverStyle.color\n          ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n          : this.innerLinkFillMode === 'group'\n          ? this.colorArr[this.groupKeys.indexOf(d[this.groupAccessor])]\n          : this.innerLinkFillMode === 'none'\n          ? this.colorArr[0] || '#E4E4E4'\n          : this.innerLinkFillMode === 'link'\n          ? this.colorArr[d.index]\n          : this.innerLinkFillMode === 'source'\n          ? this.colorArr[d.source.index]\n          : this.colorArr[d.target.index]\n      );\n\n    this.updateLinks.each((d, i, n) => {\n      const clicked =\n        this.clickHighlight &&\n        this.clickHighlight.length > 0 &&\n        checkClicked(d.data, this.clickHighlight, this.innerInteractionKeys);\n      if (clicked) {\n        // this will add a non-interactive duplicate of each clicked link above the existing ones\n        // so that the link visually appears above all other links, but the keyboard nav order does not change\n        this.drawDuplicateClickedLink(n[i], d);\n      }\n    });\n  }\n\n  bindInteractivity() {\n    this.updateLinks\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  // positions are broken when dealing with vertical sankey\n  drawAnnotations() {\n    const positionData = this.preppedData;\n    const preppedAnnotations = [];\n    this.annotations.forEach((datum: any) => {\n      const d = { ...datum };\n      let internalData = datum.data;\n      if (positionData && internalData) {\n        if (d.positionType === 'node' && d.data.hasOwnProperty(this.innerIDAccessor)) {\n          const index = positionData.nodes.findIndex(x => x[this.innerIDAccessor] === d.data[this.innerIDAccessor]);\n          internalData = positionData.nodes[index];\n        } else if (\n          d.positionType === 'source' ||\n          (d.positionType === 'target' &&\n            d.data.hasOwnProperty(this.sourceAccessor) &&\n            d.data.hasOwnProperty(this.targetAccessor))\n        ) {\n          const index = positionData.links.findIndex(\n            x =>\n              x.data[this.sourceAccessor] === d.data[this.sourceAccessor] &&\n              x.data[this.targetAccessor] === d.data[this.targetAccessor]\n          );\n          internalData = positionData.links[index];\n        }\n      }\n      if (d.positionType && internalData) {\n        if (d.positionType === 'target' && internalData.target) {\n          d.x = internalData.target.x0;\n          d.y = internalData.y1;\n        } else if (d.positionType === 'source' && internalData.source) {\n          d.x = internalData.source.x1;\n          d.y = internalData.y0;\n        } else if (d.positionType === 'node') {\n          d.x = internalData.x1;\n          d.y = (internalData.y1 + internalData.y0) / 2;\n        }\n      }\n      // we need to wipe the data before we pass it in, so that the x and y are used instead!\n      delete d.data;\n      preppedAnnotations.push(d);\n    });\n    annotate({\n      source: this.rootG.node(),\n      data: preppedAnnotations,\n      ignoreScales: true,\n      // xScale: this.x,\n      // xAccessor: this.layout !== 'horizontal' ? this.ordinalAccessor : this.valueAccessor,\n      // yScale: this.y,\n      // yAccessor: this.layout !== 'horizontal' ? this.valueAccessor : this.ordinalAccessor,\n      width: this.width,\n      height: this.height,\n      padding: this.padding,\n      margin: this.margin,\n      bitmaps: this.bitmaps\n    });\n  }\n\n  setSubTitleElements() {\n    setSubTitle({\n      root: this.subTitleG,\n      subTitle: this.subTitle\n    });\n  }\n\n  setColors() {\n    this.colorArr = this.colors ? convertVisaColor(this.colors) : getColors(this.colorPalette, this.nodeList.length);\n  }\n\n  setTagLevels() {\n    this.topLevel = findTagLevel(this.highestHeadingLevel);\n    this.bottomLevel = findTagLevel(this.highestHeadingLevel, 3);\n  }\n\n  setChartDescriptionWrapper() {\n    // this initializes the accessibility description section of the chart\n    initializeDescriptionRoot({\n      language: this.getLanguageString(),\n      rootEle: this.alluvialDiagramEl, // this.lineChartEl,\n      title: this.accessibility.title || this.mainTitle,\n      chartTag: 'alluvial-diagram',\n      uniqueID: this.chartID,\n      highestHeadingLevel: this.highestHeadingLevel,\n      redraw: this.shouldRedrawWrapper,\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      hideDataTable: this.accessibility.hideDataTableButton\n    });\n    this.shouldRedrawWrapper = false;\n  }\n\n  setParentSVGAccessibility() {\n    // this sets the accessibility features of the root SVG element\n    const keys = scopeDataKeys(this, chartAccessors, 'alluvial-diagram');\n    setAccessibilityController({\n      language: this.getLanguageString(),\n      node: this.svg.node(),\n      chartTag: 'alluvial-diagram',\n      title: this.accessibility.title || this.mainTitle,\n      description: this.subTitle,\n      uniqueID: this.chartID,\n      geomType: 'link',\n      includeKeyNames: this.accessibility.includeDataKeyNames,\n      dataKeys: keys,\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.innerIDAccessor,\n      groupKeys: ['value'],\n      groupName: 'node',\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled\n    });\n  }\n\n  setGeometryAccessibilityAttributes() {\n    // this makes sure every geom element has correct event handlers + semantics (role, tabindex, etc)\n    this.updateLinks.each((_d, i, n) => {\n      initializeElementAccess(n[i]);\n    });\n  }\n\n  setGeometryAriaLabels() {\n    // this adds an ARIA label to each geom (a description read by screen readers)\n    const keys = scopeDataKeys(this, chartAccessors, 'alluvial-diagram');\n    this.updateLinks.each((_d, i, n) => {\n      setElementFocusHandler({\n        node: n[i],\n        geomType: 'link',\n        includeKeyNames: this.accessibility.includeDataKeyNames,\n        dataKeys: keys,\n        dataKeyNames: this.dataKeyNames,\n        groupName: 'node',\n        uniqueID: this.chartID,\n        disableKeyNav:\n          this.suppressEvents &&\n          this.accessibility.elementsAreInterface === false &&\n          this.accessibility.keyboardNavConfig &&\n          this.accessibility.keyboardNavConfig.disabled\n      });\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setGroupAccessibilityID() {\n    // this sets an ARIA label on all the g elements in the chart\n    this.updateNodes.each((_, i, n) => {\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setChartCountAccessibility() {\n    // this is our automated section that describes the chart contents\n    // (like geometry and gorup counts, etc)\n    setAccessChartCounts({\n      rootEle: this.alluvialDiagramEl, // this.lineChartEl,\n      parentGNode: this.linkG.node(), // this.dotG.node(), // pass the wrapper to <g> or geometries here, should be single node selection\n      chartTag: 'alluvial-diagram',\n      geomType: 'link',\n      groupName: 'node'\n      // recursive: true\n    });\n  }\n\n  setSelectedClass() {\n    this.updateLinks\n      .classed('highlight', d => {\n        const selected = checkInteraction(d.data, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n        return this.clickHighlight && this.clickHighlight.length ? selected : false;\n      })\n      .each((d, i, n) => {\n        let selected = checkInteraction(d.data, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n        selected = this.clickHighlight && this.clickHighlight.length ? selected : false;\n        const selectable = this.accessibility.elementsAreInterface;\n        setElementInteractionAccessState(n[i], selected, selectable);\n      });\n  }\n\n  setChartAccessibilityTitle() {\n    setAccessTitle(this.getLanguageString(), this.alluvialDiagramEl, this.accessibility.title || this.mainTitle);\n  }\n\n  setChartAccessibilitySubtitle() {\n    setAccessSubtitle(this.getLanguageString(), this.alluvialDiagramEl, this.subTitle);\n  }\n\n  setChartAccessibilityLongDescription() {\n    setAccessLongDescription(this.getLanguageString(), this.alluvialDiagramEl, this.accessibility.longDescription);\n  }\n\n  setChartAccessibilityExecutiveSummary() {\n    setAccessExecutiveSummary(this.getLanguageString(), this.alluvialDiagramEl, this.accessibility.executiveSummary);\n  }\n\n  setChartAccessibilityPurpose() {\n    setAccessPurpose(this.getLanguageString(), this.alluvialDiagramEl, this.accessibility.purpose);\n  }\n\n  setChartAccessibilityContext() {\n    setAccessContext(this.getLanguageString(), this.alluvialDiagramEl, this.accessibility.contextExplanation);\n  }\n\n  setChartAccessibilityStatisticalNotes() {\n    setAccessStatistics(this.getLanguageString(), this.alluvialDiagramEl, this.accessibility.statisticalNotes);\n  }\n\n  setChartAccessibilityStructureNotes() {\n    setAccessStructure(this.getLanguageString(), this.alluvialDiagramEl, this.accessibility.structureNotes);\n  }\n\n  setAnnotationAccessibility() {\n    setAccessAnnotation(this.getLanguageString(), this.alluvialDiagramEl, this.annotations, undefined);\n  }\n\n  onChangeHandler() {\n    if (this.accessibility && typeof this.accessibility.onChangeFunc === 'function') {\n      const d = {\n        updated: this.updated,\n        added: this.enterSize,\n        removed: this.exitSize\n      };\n      this.accessibility.onChangeFunc(d);\n    }\n    this.updated = false;\n    this.enterSize = 0;\n    this.exitSize = 0;\n  }\n\n  onClickHandler(d, n) {\n    this.clickEvent.emit({ data: d.data, target: n });\n  }\n\n  onHoverHandler(d, n) {\n    overrideTitleTooltip(this.chartID, true);\n    this.hoverEvent.emit({ data: d.data, target: n });\n    if (this.showTooltip) {\n      this.eventsTooltip({ data: d.data, evt: event, isToShow: true });\n    }\n  }\n\n  onMouseOutHandler() {\n    overrideTitleTooltip(this.chartID, false);\n    this.mouseOutEvent.emit();\n    if (this.showTooltip) {\n      this.eventsTooltip({ isToShow: false });\n    }\n  }\n\n  // set initial style (instead of copying css class across the lib)\n  setTooltipInitialStyle() {\n    initTooltipStyle(this.tooltipG);\n  }\n\n  // tooltip\n  eventsTooltip({ data, evt, isToShow }: { data?: any; evt?: any; isToShow: boolean }) {\n    drawTooltip({\n      root: this.tooltipG,\n      data,\n      event: evt,\n      isToShow,\n      tooltipLabel: this.tooltipLabel,\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.groupAccessor,\n      xAccessor: this.sourceAccessor, // map source to x for default tooltip logic\n      yAccessor: this.targetAccessor, // map source to y for default tooltip logic\n      valueAccessor: this.valueAccessor,\n      ordinalAccessor: this.innerIDAccessor,\n      chartType: 'alluvial-diagram'\n    });\n  }\n\n  render() {\n    this.drawStartEvent.emit({ chartID: this.chartID });\n    // everything between this comment and the third should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n    this.init();\n    if (this.shouldSetLocalizationConfig) {\n      this.setLocalizationConfig();\n      this.shouldSetLocalizationConfig = false;\n    }\n    if (this.shouldSetTagLevels) {\n      this.setTagLevels();\n      this.shouldSetTagLevels = false;\n    }\n    if (this.shouldUpdateData) {\n      this.prepareData();\n      this.shouldUpdateData = false;\n    }\n    if (this.shouldSetDimensions) {\n      this.setDimensions();\n      this.shouldSetDimensions = false;\n    }\n    if (this.shouldValidateLabelText) {\n      this.validateLabelText();\n      this.shouldValidateLabelText = false;\n    }\n    if (this.shouldValidateLinkFillMode) {\n      this.validateLinkFillMode();\n      this.shouldValidateLinkFillMode = false;\n    }\n    if (this.shouldValidateNodeAlignment) {\n      this.validateNodeAlignment();\n      this.shouldValidateNodeAlignment = false;\n    }\n    if (this.shouldValidateInteractionKeys) {\n      this.validateInteractionKeys();\n      this.shouldValidateInteractionKeys = false;\n    }\n    if (this.shouldValidateLinkGroups) {\n      this.validateLinkGroups();\n      this.shouldValidateLinkGroups = true;\n    }\n    if (this.shouldValidateLocalization) {\n      this.shouldValidateLocalizationProps();\n      this.shouldValidateLocalization = false;\n    }\n    if (this.shouldValidateAccessibility) {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateAccessibility = false;\n    }\n    if (this.shouldSetColors) {\n      this.setColors();\n      this.shouldSetColors = false;\n    }\n    if (this.shouldValidateIdAccessor) {\n      this.validateIdAccessor();\n      this.shouldValidateIdAccessor = false;\n    }\n    if (this.shouldSetNodeDimensions) {\n      this.setNodeDimensions();\n      this.shouldSetNodeDimensions = false;\n    }\n    if (this.shouldCallSankeyGenerator) {\n      this.callSankeyGenerator();\n      this.shouldCallSankeyGenerator = false;\n    }\n    if (this.shouldUpdateTableData) {\n      this.setTableData();\n      this.shouldUpdateTableData = false;\n    }\n\n    return (\n      // <div class=\"alluvial-diagram\">alluvial-diagram</div>;\n      <div>\n        <div class=\"o-layout\">\n          <div class=\"o-layout--chart\">\n            <this.topLevel class=\"alluvial-main-title vcl-main-title\">{this.mainTitle}</this.topLevel>\n            <this.bottomLevel class=\"visa-ui-text--instructions alluvial-sub-title vcl-sub-title\" />\n            <keyboard-instructions\n              uniqueID={this.chartID}\n              geomType={'node'}\n              groupName={'node collection'} // taken from initializeDescriptionRoot, on bar this should be \"bar group\", stacked bar is \"stack\", and clustered is \"cluster\"\n              language={this.getLanguageString()}\n              chartTag={'alluvial-diagram'}\n              width={this.width - (this.margin ? this.margin.right || 0 : 0)}\n              isInteractive={this.accessibility.elementsAreInterface}\n              hasCousinNavigation={this.innerLinkFillMode === 'source' || this.innerLinkFillMode === 'target'}\n              disabled={\n                this.suppressEvents &&\n                this.accessibility.elementsAreInterface === false &&\n                this.accessibility.keyboardNavConfig &&\n                this.accessibility.keyboardNavConfig.disabled\n              } // the chart is \"simple\"\n            />\n            <div class=\"visa-viz-d3-alluvial-container\" />\n            <div class=\"alluvial-tooltip vcl-tooltip\" style={{ display: this.showTooltip ? 'block' : 'none' }} />\n            <data-table\n              uniqueID={this.chartID}\n              isCompact\n              language={this.getLanguageString()}\n              tableColumns={this.tableColumns}\n              dataKeyNames={this.dataKeyNames}\n              data={this.tableData}\n              secondaryData={this.secondaryTableData}\n              secondaryTableColumns={this.secondaryTableColumns}\n              padding={this.padding}\n              margin={this.margin}\n              hideDataTable={this.accessibility.hideDataTableButton}\n              unitTest={this.unitTest}\n            />\n          </div>\n        </div>\n        {/* <canvas id=\"bitmap-render\" /> */}\n      </div>\n    );\n  }\n  private init() {\n    // reading properties\n    const keys = Object.keys(AlluvialDiagramDefaultValues);\n    let i = 0;\n    const exceptions = {\n      hoverOpacity: {\n        exception: 0\n      },\n      showTooltip: {\n        exception: false\n      },\n      mainTitle: {\n        exception: ''\n      },\n      subTitle: {\n        exception: ''\n      },\n      linkConfig: {\n        ...{\n          exception: false\n        }\n      }\n    };\n    for (i = 0; i < keys.length; i++) {\n      const exception = !exceptions[keys[i]] ? false : this[keys[i]] === exceptions[keys[i]].exception;\n      this[keys[i]] = this[keys[i]] || exception ? this[keys[i]] : AlluvialDiagramDefaultValues[keys[i]];\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}