{"version":3,"names":["propDefaultValues","Utils","ParallelPlotDefaultValues","mainTitle","subTitle","text","height","width","margin","top","bottom","right","left","padding","localization","ordinalAccessor","valueAccessor","seriesAccessor","accessibility","animationConfig","highestHeadingLevel","xAxis","yAxis","showBaselineX","showBaselineFalse","wrapLabel","colorPalette","colorPaletteCategorical","hoverStyle","clickStyle","strokeWidth","strokeWidth1","showDots","dotRadius","dotRadius4","lineCurve","hoverOpacity","cursor","dataLabel","dataLabelBottomRight","seriesLabel","legend","hiddenLegend","tooltipLabel","secondaryLines","showTooltip","suppressEvents","annotations","clickHighlight","parallelPlotCss","ParallelPlotStyle0","getGlobalInstances","configLocalization","getActiveLanguageString","getAccessibleStrokes","ensureTextContrast","createTextStrokeFilter","findTagLevel","prepareRenderChange","initializeDescriptionRoot","initializeElementAccess","setElementFocusHandler","setElementAccessID","setAccessibilityController","hideNonessentialGroups","setAccessTitle","setAccessSubtitle","setAccessLongDescription","setAccessExecutiveSummary","setAccessPurpose","setAccessContext","setAccessStatistics","setAccessChartCounts","setAccessXAxis","setAccessYAxis","setAccessStructure","setAccessAnnotation","retainAccessFocus","checkAccessFocus","setElementInteractionAccessState","setAccessibilityDescriptionWidth","annotate","chartAccessors","checkInteraction","checkClicked","checkHovered","convertVisaColor","drawAxis","drawGrid","drawLegend","setLegendInteractionState","drawTooltip","formatDataLabel","getColors","getLicenses","getPadding","getScopedData","initTooltipStyle","overrideTitleTooltip","placeDataLabels","resolveLines","scopeDataKeys","transitionEndAll","visaColors","validateAccessibilityProps","validateLocalizationProps","roundTo","getTextWidth","resolveLabelCollision","setSubTitle","ParallelPlot","this","shouldValidateAccessibility","shouldValidateLocalization","updated","enterSize","exitSize","time","timehour","timeHour","timeday","timeDay","timeweek","timeWeek","timemonth","timeMonth","timeyear","timeYear","curveOptions","linear","curveLinear","bumpX","curveBumpX","bumpY","curveBumpY","catmullRom","curveCatmullRom","shouldUpdateXAxis","shouldUpdateYAxis","shouldUpdateXGrid","shouldUpdateYGrid","shouldValidate","shouldUpdateData","shouldSetDimensions","shouldUpdateScales","shouldUpdateTableData","shouldUpdateLabels","shouldUpdateAnnotations","shouldDrawInteractionState","shouldSetSelectionClass","shouldUpdateCursor","shouldSetColors","shouldSetSubTitle","shouldUpdateLines","shouldUpdatePoints","shouldUpdateLegend","shouldBindInteractivity","shouldUpdateLegendInteractivity","shouldResetRoot","shouldUpdateBaseline","shouldValidateInteractionKeys","shouldEnterUpdateExit","shouldSetGlobalSelections","shouldSetTestingAttributes","shouldSetLabelOpacity","shouldSetSeriesLabelOpacity","shouldSetLegendCursor","shouldAddStrokeUnder","shouldValidateSeriesLabels","shouldUpdateSeriesLabels","shouldUpdateColors","shouldUpdateStrokeWidth","shouldUpdateInterpolationData","shouldSetScaleUsed","shouldUpdateDotRadius","shouldUpdateDescriptionWrapper","shouldSetChartAccessibilityTitle","shouldSetChartAccessibilitySubtitle","shouldSetChartAccessibilityLongDescription","shouldSetChartAccessibilityExecutiveSummary","shouldSetChartAccessibilityStatisticalNotes","shouldSetChartAccessibilityStructureNotes","shouldSetParentSVGAccessibility","shouldSetGeometryAccessibilityAttributes","shouldSetGeometryAriaLabels","shouldSetGroupAccessibilityLabel","shouldSetChartAccessibilityPurpose","shouldSetChartAccessibilityContext","shouldRedrawWrapper","shouldSetTagLevels","shouldSetChartAccessibilityCount","shouldSetYAxisAccessibility","shouldSetXAxisAccessibility","shouldSetAnnotationAccessibility","shouldUpdateDashPatterns","shouldValidateDataLabelAccessor","shouldSetLocalizationConfig","topLevel","bottomLevel","strokes","b","short","med","long","dashPatterns","hiddenHash","collisionSettings","all","validPositions","offsets","middle","dynamicY","d","scales","multiYScale","y","interpolateDynamicY","interpolating","handleDotStroke","i","n","hideStrokes","clicked","length","innerInteractionKeys","hovered","hoverHighlight","baseColor","select","parentNode","attr","color","calculateStrokeWidth","toLowerCase","handleLineStroke","data","colorArr","values","seriesInteraction","handleSeriesTextFill","rawColors","textColors","handleTextFill","useChildData","keys","includes","handleStrokeDasharray","key","hideTextures","dataWatcher","_newData","_oldData","idWatcher","newID","_oldID","console","error","headingWatcher","_newVal","_oldVal","titleWatcher","subtitleWatcher","dimensionWatcher","seriesAccessorWatcher","interactionKeys","ordinalAccessorWatcher","valueAccessorWatcher","xAxisWatcher","newGridVal","gridVisible","oldGridVal","newTickInterval","tickInterval","oldTickInterval","yAxisWatcher","newScaleVal","oldScaleVal","wrapLabelWatcher","showBaselineXWatcher","paletteWatcher","colorsWatcher","clickStyleWatcher","hoverStyleWatcher","cursorWatcher","strokeWidthWatcher","showDotsWatcher","dotRadiusWatcher","lineCurveWatcher","_newLineCurve","_oldLineCurve","warn","hoverOpacityWatcher","dataLabelWatcher","newVisibleVal","visible","oldVisibleVal","newPlacementVal","placement","oldPlacementVal","newAccessor","labelAccessor","oldAccessor","seriesLabelWatcher","tooltipLabelWatcher","showTooltipWatcher","accessibilityWatcher","newTitle","title","oldTitle","newExecutiveSummary","executiveSummary","oldExecutiveSummary","newPurpose","purpose","oldPurpose","newLongDescription","longDescription","oldLongDescription","newContext","contextExplanation","oldContext","newStatisticalNotes","statisticalNotes","oldStatisticalNotes","newStructureNotes","structureNotes","oldStructureNotes","newincludeDataKeyNames","includeDataKeyNames","oldincludeDataKeyNames","newElementDescriptionAccessor","elementDescriptionAccessor","oldElementDescriptionAccessor","newSmallValue","showSmallLabels","oldSmallValue","newStrokes","oldStrokes","newTextures","oldTextures","newKeyNav","keyboardNavConfig","disabled","oldKeyNav","newInterface","elementsAreInterface","oldInterface","localizationWatcher","newLanguage","language","oldLanguage","newNumeralLocale","numeralLocale","oldNumeralLocale","legendWatcher","newInteractiveVal","interactive","oldInteractiveVal","annotationsWatcher","valueOverrideWatcher","secondaryLinesWatcher","newDataLabelVal","showDataLabel","oldDataLabelVal","newSeriesLabelVal","showSeriesLabel","oldSeriesLabelVal","newKeysVal","oldKeysVal","newOpacityVal","opacity","oldOpacityVal","clickWatcher","hoverWatcher","interactionWatcher","dataKeyNamesWatcher","suppressWatcher","unitTestWatcher","componentWillLoad","chartID","uniqueID","uuid","initialLoadEvent","emit","Promise","resolve","duration","defaults","parallelChartEl","id","setLocalizationConfig","setTagLevels","setDimensions","setScaleUsed","prepareScales","prepareData","updateInterpolationData","validateInteractionKeys","validateSeriesLabels","validateDataLabelAccessor","setTableData","shouldValidateAccessibilityProps","shouldValidateLocalizationProps","setColors","componentWillUpdate","componentDidLoad","renderRootElements","renderChartRootElemets","setChartDescriptionWrapper","setChartAccessibilityTitle","setChartAccessibilitySubtitle","setChartAccessibilityLongDescription","setChartAccessibilityExecutiveSummary","setChartAccessibilityPurpose","setChartAccessibilityContext","setChartAccessibilityStatisticalNotes","setChartAccessibilityStructureNotes","setParentSVGAccessibility","reSetRoot","setSubTitleElements","drawXGrid","drawYGrid","setGlobalSelections","setTestingAttributes","drawXAxis","setXAxisAccessibility","enterYAxis","exitYAxis","drawYAxis","setYAxisAccessibility","enterChartLines","updateChartLines","exitChartLines","enterPoints","updatePoints","exitPoints","drawChartLines","drawPoints","enterSeriesLabels","updateSeriesLabels","exitSeriesLabels","enterDataLabels","updateDataLabels","exitDataLabels","setChartCountAccessibility","setGeometryAccessibilityAttributes","setGeometryAriaLabels","drawLegendElements","drawDataLabels","drawSeriesLabels","addStrokeUnder","setSelectedClass","updateCursor","bindInteractivity","setLegendCursor","bindLegendInteractivity","drawBaseline","drawAnnotations","setAnnotationAccessibility","root","node","dotG","setGroupAccessibilityID","onChangeHandler","then","initialLoadEndEvent","componentDidUpdate","updateColors","updateStrokeWidth","updateDotRadius","updateInteractionState","updateStrokePattern","setLabelOpacity","setSeriesLabelOpacity","drawEndEvent","windowInstances","languageString","i18Next","languageObject","getResourceBundle","numeralObject","numeral","localeData","skipValidation","Object","assign","disableValidation","context","onClickEvent","undefined","clickEvent","innerHeight","innerWidth","innerPaddedHeight","innerPaddedWidth","getLanguageString","subTitleG","colors","nest","adjustedColors","forEach","adjusted","push","innerScopeDataKeys","innerChartSingleAccessors","singleAccessors","accessor","min","innerChartAccessors","tableData","tableColumns","map","hashObject","collisionHideOnly","x","Infinity","max","entries","scale","rangePadding","scaleLinear","domain","minValueOverride","maxValueOverride","range","ticks","invert","change","parent","interpolate","get","start","end","resolved","oldXDomain","oldXRange","oldYDomain","oldYRange","scalesUsed","line","curve","extent","minValue","parseFloat","maxValue","paddedMin","paddedMax","scalePoint","innerLabelAccessor","labelDetails","label","isRight","svg","append","rootG","gridG","yGroup","parallelLineG","seriesLabelG","labels","legendG","tooltipG","setTooltipInitialStyle","changeSvg","selection","namespace","easing","easeCircleIn","changeRoot","changeRootG","dataBoundToAxes","selectAll","yEnter","enter","yExit","exit","yUpdate","merge","dataBoundToLines","enterLines","exitLines","updateLines","size","dataBoundToDotWrappers","enterDotWrappers","exitDotWrappers","updateDotWrappers","dataBountToSeriesLabels","seriesLabelEnter","seriesLabelExit","seriesLabelUpdate","dataBoundToLabels","enteringLabelGroups","exitingLabelGroups","updatingLabelGroups","remove","dataBoundToDots","enterDots","exitDots","updateDots","dataBoundToLabelChildren","enteringLabels","updatingLabels","exitingLabels","unitTest","axisLabel","dataKeyNames","bandWidth","axisScale","format","hide","hidePath","transition","ease","each","onlyTickExtents","hideMe","rootEle","hasXAxis","xAxisLabel","axisLabelX","hasYAxis","yAxisLabel","markOffset","interrupt","on","onClickHandler","onHoverHandler","onMouseOutHandler","linelength","getTotalLength","call","lineOpacity","Math","classed","_","onSeriesHoverHandler","_d","order","dotOpacity","index","lineDotOpacity","enterWholeGroup","delay","exitWholeGroup","focusDidExist","parentGNode","updateTransition","transitionEndEvent","seriesLabelOpacity","Number","EPSILON","hideOnly","seriesUpdate","style","textElement","getComputedStyle","fontSize","textHeight","bitmaps","labelSelection","avoidMarks","accessors","childrenEnter","xScale","yScale","chartType","fullEnter","hidden","labelOpacity","targetOpacity","parentOpacity","updateChildren","axisRules","yAxisTexts","filter","textWidth","textContent","fontFamily","collisionPlacement","avoidCollision","runOccupancyBitmap","groupAccessor","addCollisionClass","me","prevOpacity","styleVisibility","labelsAdded","labelsRemoved","removeOnly","suppressMarkDraw","selected","selectable","source","xAccessor","yAccessor","chartTag","redraw","disableKeyNav","hideDataTable","hideDataTableButton","description","geomType","includeKeyNames","dataKeys","groupName","onChangeFunc","added","removed","target","hoverEvent","eventsTooltip","evt","event","isToShow","mouseOutEvent","noSeriesAccessor","type","secondary","render","drawStartEvent","init","h","class","display","isInteractive","hasCousinNavigation","isCompact","exceptions","exception","window"],"sources":["src/components/parallel-plot/parallel-plot-default-values.ts","src/components/parallel-plot/parallel-plot.scss?tag=parallel-plot","src/components/parallel-plot/parallel-plot.tsx"],"sourcesContent":["/**\n * Copyright (c) 2020, 2021, 2022, 2023 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport Utils from '@visa/visa-charts-utils';\n\nconst { propDefaultValues } = Utils;\nexport class ParallelPlotDefaultValues {\n  static readonly mainTitle = 'Parallel Plot Title';\n  static readonly subTitle = propDefaultValues.subTitle.text;\n  static readonly height = 300;\n  static readonly width = 500;\n  static readonly margin = {\n    top: 300 * 0.01,\n    bottom: 300 * 0.01,\n    right: 500 * 0.01,\n    left: 500 * 0.01\n  };\n  static readonly padding = {\n    top: 20,\n    bottom: 50,\n    right: 100,\n    left: 75\n  };\n\n  static readonly localization = propDefaultValues.localization;\n\n  static readonly ordinalAccessor = 'label';\n  static readonly valueAccessor = 'value';\n  static readonly seriesAccessor = 'series';\n\n  static readonly accessibility = propDefaultValues.accessibility;\n  static readonly animationConfig = propDefaultValues.animationConfig;\n  static readonly highestHeadingLevel = propDefaultValues.highestHeadingLevel;\n  static readonly xAxis = propDefaultValues.xAxis;\n  static readonly yAxis = propDefaultValues.yAxis;\n  static readonly showBaselineX = propDefaultValues.showBaselineFalse;\n  static readonly wrapLabel = propDefaultValues.wrapLabel;\n  static readonly colorPalette = propDefaultValues.colorPaletteCategorical;\n\n  static readonly hoverStyle = propDefaultValues.hoverStyle;\n  static readonly clickStyle = propDefaultValues.clickStyle;\n\n  static readonly strokeWidth = propDefaultValues.strokeWidth1;\n  static readonly showDots = propDefaultValues.showDots;\n  static readonly dotRadius = propDefaultValues.dotRadius4;\n  static readonly lineCurve = propDefaultValues.lineCurve;\n  static readonly hoverOpacity = propDefaultValues.hoverOpacity;\n  static readonly cursor = propDefaultValues.cursor;\n\n  static readonly dataLabel = propDefaultValues.dataLabelBottomRight;\n  static readonly dataKeyNames;\n  static readonly seriesLabel = propDefaultValues.seriesLabel;\n  static readonly legend = propDefaultValues.hiddenLegend;\n  static readonly tooltipLabel = propDefaultValues.tooltipLabel;\n  static readonly secondaryLines = propDefaultValues.secondaryLines;\n\n  static readonly showTooltip = propDefaultValues.showTooltip;\n  static readonly suppressEvents = propDefaultValues.suppressEvents;\n  static readonly annotations = propDefaultValues.annotations;\n\n  static readonly hoverHighlight;\n  static readonly clickHighlight = propDefaultValues.clickHighlight;\n}\n","/**\n * Copyright (c) 2020, 2021, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nparallel-plot {\n  .annotations {\n    pointer-events: none;\n    .handle {\n      pointer-events: all;\n    }\n  }\n\n  .screen-reader-info {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n\n  .data-table-link {\n    color: #767676;\n    text-decoration: none;\n    font-size: 12px;\n    margin-left: 5%;\n  }\n\n  .hidden {\n    display: none;\n  }\n\n  cursor: default;\n  .axis {\n    font-size: 12px;\n    text {\n      //font: 0.65rem;\n      fill: #767676;\n    }\n\n    &-label {\n      text-anchor: middle;\n      font: 1rem sans-serif;\n    }\n    path {\n      stroke: #767676;\n    }\n  }\n\n  .grid {\n    line {\n      stroke: #767676;\n      shape-rendering: crispEdges;\n    }\n\n    path {\n      stroke-width: 0;\n      stroke: #767676;\n    }\n    &.left {\n      line {\n        stroke-dasharray: 4, 4;\n        stroke-opacity: 0.6;\n      }\n    }\n  }\n\n  .parallel-group {\n    transition: opacity 0.5s linear;\n\n    &__inactive {\n      opacity: 0;\n    }\n\n    .parallel-plot {\n      fill: none;\n    }\n\n    .dot {\n      stroke: #ffffff;\n    }\n    .parallel-series-label {\n      font-size: 1em;\n    }\n  }\n\n  .parallel-dataLabel-group {\n    text {\n      //font-size: 12px;\n    }\n  }\n\n  .parallel-legend {\n    font-size: 1em;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n\n    .legend {\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n    }\n  }\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport { Component, Element, Prop, Watch, h, Event, EventEmitter } from '@stencil/core';\n\nimport { select, event } from 'd3-selection';\nimport { max, min } from 'd3-array';\nimport { timeHour, timeDay, timeWeek, timeMonth, timeYear } from 'd3-time';\nimport { scalePoint, scaleLinear } from 'd3-scale';\nimport { line, curveLinear, curveBumpX, curveBumpY, curveCatmullRom } from 'd3-shape';\nimport { nest } from 'd3-collection';\nimport {\n  IBoxModelType,\n  ILocalizationType,\n  IHoverStyleType,\n  IClickStyleType,\n  IAxisType,\n  IDataLabelType,\n  ITooltipLabelType,\n  IAccessibilityType,\n  IAnimationConfig,\n  ILegendType,\n  ISeriesLabelType,\n  ISecondaryLinesType,\n  ISubTitleType\n} from '@visa/charts-types';\nimport { ParallelPlotDefaultValues } from './parallel-plot-default-values';\nimport { easeCircleIn } from 'd3-ease';\nimport 'd3-transition';\nimport Utils from '@visa/visa-charts-utils';\nimport { v4 as uuid } from 'uuid';\nconst {\n  getGlobalInstances,\n  configLocalization,\n  getActiveLanguageString,\n  getAccessibleStrokes,\n  ensureTextContrast,\n  createTextStrokeFilter,\n  findTagLevel,\n  prepareRenderChange,\n  initializeDescriptionRoot,\n  initializeElementAccess,\n  setElementFocusHandler,\n  setElementAccessID,\n  setAccessibilityController,\n  hideNonessentialGroups,\n  setAccessTitle,\n  setAccessSubtitle,\n  setAccessLongDescription,\n  setAccessExecutiveSummary,\n  setAccessPurpose,\n  setAccessContext,\n  setAccessStatistics,\n  setAccessChartCounts,\n  setAccessXAxis,\n  setAccessYAxis,\n  setAccessStructure,\n  setAccessAnnotation,\n  retainAccessFocus,\n  checkAccessFocus,\n  setElementInteractionAccessState,\n  setAccessibilityDescriptionWidth,\n  annotate,\n  chartAccessors,\n  checkInteraction,\n  checkClicked,\n  checkHovered,\n  convertVisaColor,\n  drawAxis,\n  drawGrid,\n  drawLegend,\n  setLegendInteractionState,\n  drawTooltip,\n  formatDataLabel,\n  getColors,\n  getLicenses,\n  getPadding,\n  getScopedData,\n  initTooltipStyle,\n  overrideTitleTooltip,\n  placeDataLabels,\n  resolveLines,\n  scopeDataKeys,\n  transitionEndAll,\n  visaColors,\n  validateAccessibilityProps,\n  validateLocalizationProps,\n  roundTo,\n  getTextWidth,\n  resolveLabelCollision,\n  setSubTitle\n} = Utils;\n\n@Component({\n  tag: 'parallel-plot',\n  styleUrl: 'parallel-plot.scss'\n})\nexport class ParallelPlot {\n  @Event() clickEvent: EventEmitter;\n  @Event() hoverEvent: EventEmitter;\n  @Event() mouseOutEvent: EventEmitter;\n  @Event() initialLoadEvent: EventEmitter;\n  @Event() initialLoadEndEvent: EventEmitter;\n  @Event() drawStartEvent: EventEmitter;\n  @Event() drawEndEvent: EventEmitter;\n  @Event() transitionEndEvent: EventEmitter;\n\n  // Chart Attributes (1/7)\n  @Prop({ mutable: true }) mainTitle: string = ParallelPlotDefaultValues.mainTitle;\n  @Prop({ mutable: true }) subTitle: string | ISubTitleType = ParallelPlotDefaultValues.subTitle;\n  @Prop({ mutable: true }) height: number = ParallelPlotDefaultValues.height;\n  @Prop({ mutable: true }) width: number = ParallelPlotDefaultValues.width;\n  @Prop({ mutable: true }) highestHeadingLevel: string | number = ParallelPlotDefaultValues.highestHeadingLevel;\n  @Prop({ mutable: true }) margin: IBoxModelType = ParallelPlotDefaultValues.margin;\n  @Prop({ mutable: true }) padding: IBoxModelType = ParallelPlotDefaultValues.padding;\n\n  // Data (2/7)\n  @Prop() data: object[];\n  @Prop() uniqueID: string;\n  @Prop({ mutable: true }) localization: ILocalizationType = ParallelPlotDefaultValues.localization;\n  @Prop({ mutable: true }) ordinalAccessor: string = ParallelPlotDefaultValues.ordinalAccessor;\n  @Prop({ mutable: true }) valueAccessor: string = ParallelPlotDefaultValues.valueAccessor;\n  @Prop({ mutable: true }) seriesAccessor: string = ParallelPlotDefaultValues.seriesAccessor;\n\n  // Axis (3/7)\n  @Prop({ mutable: true }) xAxis: IAxisType = ParallelPlotDefaultValues.xAxis;\n  @Prop({ mutable: true }) yAxis: IAxisType = ParallelPlotDefaultValues.yAxis;\n  @Prop({ mutable: true }) wrapLabel: boolean = ParallelPlotDefaultValues.wrapLabel;\n  @Prop({ mutable: true }) showBaselineX: boolean = ParallelPlotDefaultValues.showBaselineX;\n\n  // Color & Shape (4/7)\n  @Prop({ mutable: true }) colorPalette: string = ParallelPlotDefaultValues.colorPalette;\n  @Prop({ mutable: true }) colors: string[];\n  @Prop({ mutable: true }) hoverStyle: IHoverStyleType = ParallelPlotDefaultValues.hoverStyle;\n  @Prop({ mutable: true }) clickStyle: IClickStyleType = ParallelPlotDefaultValues.clickStyle;\n  @Prop({ mutable: true }) cursor: string = ParallelPlotDefaultValues.cursor;\n  @Prop({ mutable: true }) hoverOpacity: number = ParallelPlotDefaultValues.hoverOpacity;\n  @Prop({ mutable: true }) animationConfig: IAnimationConfig = ParallelPlotDefaultValues.animationConfig;\n  @Prop({ mutable: true }) strokeWidth: number = ParallelPlotDefaultValues.strokeWidth;\n  @Prop({ mutable: true }) showDots: boolean = ParallelPlotDefaultValues.showDots;\n  @Prop({ mutable: true }) dotRadius: number = ParallelPlotDefaultValues.dotRadius;\n  @Prop({ mutable: true }) lineCurve: string = ParallelPlotDefaultValues.lineCurve;\n\n  // Data label (5/7)\n  @Prop({ mutable: true }) dataLabel: IDataLabelType = ParallelPlotDefaultValues.dataLabel;\n  @Prop({ mutable: true }) dataKeyNames: object;\n  @Prop({ mutable: true }) showTooltip: boolean = ParallelPlotDefaultValues.showTooltip;\n  @Prop({ mutable: true }) tooltipLabel: ITooltipLabelType = ParallelPlotDefaultValues.tooltipLabel;\n  @Prop({ mutable: true }) accessibility: IAccessibilityType = ParallelPlotDefaultValues.accessibility;\n  @Prop({ mutable: true }) legend: ILegendType = ParallelPlotDefaultValues.legend;\n  @Prop({ mutable: true }) annotations: object[] = ParallelPlotDefaultValues.annotations;\n  @Prop({ mutable: true }) seriesLabel: ISeriesLabelType = ParallelPlotDefaultValues.seriesLabel;\n\n  // Calculation (6/7)\n  @Prop() maxValueOverride: number;\n  @Prop() minValueOverride: number;\n  @Prop({ mutable: true }) secondaryLines: ISecondaryLinesType = ParallelPlotDefaultValues.secondaryLines;\n\n  // Interactivity (7/7)\n  @Prop({ mutable: true }) suppressEvents: boolean = ParallelPlotDefaultValues.suppressEvents;\n  @Prop({ mutable: true }) hoverHighlight: object;\n  @Prop({ mutable: true }) clickHighlight: object[] = ParallelPlotDefaultValues.clickHighlight;\n  @Prop({ mutable: true }) interactionKeys: string[];\n\n  // Testing (8/7)\n  @Prop() unitTest: boolean = false;\n  //  @Prop() debugMode: boolean = false;\n\n  @Element()\n  parallelChartEl: HTMLElement;\n  shouldValidateAccessibility: boolean = true;\n  shouldValidateLocalization: boolean = true;\n  svg: any;\n  root: any;\n  rootG: any;\n  gridG: any;\n  parallelLineG: any;\n  dotG: any;\n  yEnter: any;\n  yUpdate: any;\n  yExit: any;\n  line: any;\n  seriesLabelG: any;\n  x: any;\n  y: any;\n  nest: any;\n  map: any;\n  interpolating: any;\n  innerHeight: number;\n  innerWidth: number;\n  innerPaddedHeight: number;\n  innerPaddedWidth: number;\n  innerXAxis: any;\n  innerYAxis: any;\n  innerLabelAccessor: any;\n  defaults: boolean;\n  duration: number;\n  legendG: any;\n  tooltipG: any;\n  subTitleG: any;\n  labels: any;\n  colorArr: any;\n  rawColors: any;\n  textColors: any;\n  multiYScale: any;\n  scalesUsed: any;\n  yGroup: any;\n  extent: any;\n  seriesInteraction: any;\n  updated: boolean = true;\n  enterSize: number = 0;\n  exitSize: number = 0;\n  enterLines: any;\n  exitLines: any;\n  updateLines: any;\n  enterDotWrappers: any;\n  updateDotWrappers: any;\n  exitDotWrappers: any;\n  enterDots: any;\n  updateDots: any;\n  exitDots: any;\n  enteringLabelGroups: any;\n  exitingLabelGroups: any;\n  updatingLabelGroups: any;\n  enteringLabels: any;\n  exitingLabels: any;\n  updatingLabels: any;\n  seriesLabelEnter: any;\n  seriesLabelUpdate: any;\n  seriesLabelExit: any;\n  tableData: any;\n  tableColumns: any;\n  time = {\n    timehour: timeHour,\n    timeday: timeDay,\n    timeweek: timeWeek,\n    timemonth: timeMonth,\n    timeyear: timeYear\n  };\n  curveOptions = {\n    linear: curveLinear,\n    bumpX: curveBumpX,\n    bumpY: curveBumpY,\n    catmullRom: curveCatmullRom\n  };\n  chartID: string;\n  innerInteractionKeys: any;\n  labelDetails: any;\n  seriesLabelCurrent: any;\n  isRight: any;\n  shouldUpdateXAxis: boolean = false;\n  shouldUpdateYAxis: boolean = false;\n  shouldUpdateXGrid: boolean = false;\n  shouldUpdateYGrid: boolean = false;\n  shouldValidate: boolean = false;\n  shouldUpdateData: boolean = false;\n  shouldSetDimensions: boolean = false;\n  shouldUpdateScales: boolean = false;\n  shouldUpdateTableData: boolean = false;\n  shouldUpdateLabels: boolean = false;\n  shouldUpdateAnnotations: boolean = false;\n  shouldDrawInteractionState: boolean = false;\n  shouldSetSelectionClass: boolean = false;\n  shouldUpdateCursor: boolean = false;\n  shouldSetColors: boolean = false;\n  shouldSetSubTitle: boolean = false;\n  shouldUpdateLines: boolean = false;\n  shouldUpdatePoints: boolean = false;\n  shouldUpdateLegend: boolean = false;\n  shouldBindInteractivity: boolean = false;\n  shouldUpdateLegendInteractivity: boolean = false;\n  shouldResetRoot: boolean = false;\n  shouldUpdateBaseline: boolean = false;\n  shouldValidateInteractionKeys: boolean = false;\n  shouldEnterUpdateExit: boolean = false;\n  shouldSetGlobalSelections: boolean = false;\n  shouldSetTestingAttributes: boolean = false;\n  shouldSetLabelOpacity: boolean = false;\n  shouldSetSeriesLabelOpacity: boolean = false;\n  shouldSetLegendCursor: boolean = false;\n  shouldAddStrokeUnder: boolean = false;\n  shouldValidateSeriesLabels: boolean = false;\n  shouldUpdateSeriesLabels: boolean = false;\n  shouldUpdateColors: boolean = false;\n  shouldUpdateStrokeWidth: boolean = false;\n  shouldUpdateInterpolationData: boolean = false;\n  shouldSetScaleUsed: boolean = false;\n  shouldUpdateDotRadius: boolean = false;\n  shouldUpdateDescriptionWrapper: boolean = false;\n  shouldSetChartAccessibilityTitle: boolean = false;\n  shouldSetChartAccessibilitySubtitle: boolean = false;\n  shouldSetChartAccessibilityLongDescription: boolean = false;\n  shouldSetChartAccessibilityExecutiveSummary: boolean = false;\n  shouldSetChartAccessibilityStatisticalNotes: boolean = false;\n  shouldSetChartAccessibilityStructureNotes: boolean = false;\n  shouldSetParentSVGAccessibility: boolean = false;\n  shouldSetGeometryAccessibilityAttributes: boolean = false;\n  shouldSetGeometryAriaLabels: boolean = false;\n  shouldSetGroupAccessibilityLabel: boolean = false;\n  shouldSetChartAccessibilityPurpose: boolean = false;\n  shouldSetChartAccessibilityContext: boolean = false;\n  shouldRedrawWrapper: boolean = false;\n  shouldSetTagLevels: boolean = false;\n  shouldSetChartAccessibilityCount: boolean = false;\n  shouldSetYAxisAccessibility: boolean = false;\n  shouldSetXAxisAccessibility: boolean = false;\n  shouldSetAnnotationAccessibility: boolean = false;\n  shouldUpdateDashPatterns: boolean = false;\n  shouldValidateDataLabelAccessor: boolean = false;\n  shouldSetLocalizationConfig: boolean = false;\n  topLevel: string = 'h2';\n  bottomLevel: string = 'p';\n  strokes: any = {};\n  b: string = ',';\n  short: string = '2,2';\n  med: string = '4,2';\n  long: string = '8,2';\n  dashPatterns: any = [\n    '',\n    this.long,\n    this.long + this.b + this.med,\n    this.short + this.b + this.long + this.b + this.long,\n    this.short + this.b + this.short + this.b + this.long\n  ];\n  bitmaps: any;\n  hiddenHash: object = {};\n  collisionSettings: object = {\n    all: {\n      validPositions: ['top', 'bottom', 'left', 'right', 'bottom-right', 'bottom-left', 'top-left', 'top-right'],\n      offsets: [3, 2, 4, 4, 1, 1, 1, 1]\n    },\n    top: {\n      validPositions: ['top', 'top-left', 'top-right'],\n      offsets: [3, 1, 1]\n    },\n    middle: {\n      validPositions: ['left', 'right'],\n      offsets: [4, 4]\n    },\n    bottom: {\n      validPositions: ['bottom', 'bottom-left', 'bottom-right'],\n      offsets: [2, 1, 1]\n    },\n    right: {\n      validPositions: ['right', 'top-right', 'bottom-right'],\n      offsets: [4, 1, 1]\n    },\n    left: {\n      validPositions: ['left', 'top-left', 'bottom-left'],\n      offsets: [4, 1, 1]\n    }\n  };\n\n  @Watch('data')\n  dataWatcher(_newData, _oldData) {\n    this.updated = true;\n    this.shouldSetScaleUsed = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateData = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldSetColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateTableData = true;\n    this.shouldValidate = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('uniqueID')\n  idWatcher(newID, _oldID) {\n    console.error(\n      'Change detected in prop uniqueID from value ' +\n        _oldID +\n        ' to value ' +\n        newID +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.chartID = newID;\n    // this.parallelChartEl.id = this.chartID;\n    // this.shouldValidate = true;\n    // this.shouldUpdateDescriptionWrapper = true;\n    // this.shouldSetParentSVGAccessibility = true;\n    // this.shouldUpdateLegend = true;\n    // this.shouldUpdateLegend = true;\n    // this.shouldAddStrokeUnder = true;\n  }\n\n  @Watch('highestHeadingLevel')\n  headingWatcher(_newVal, _oldVal) {\n    this.shouldRedrawWrapper = true;\n    this.shouldSetTagLevels = true;\n    this.shouldSetChartAccessibilityCount = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('mainTitle')\n  titleWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('subTitle')\n  subtitleWatcher(_newVal, _oldVal) {\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('height')\n  @Watch('width')\n  @Watch('padding')\n  @Watch('margin')\n  dimensionWatcher(_newVal, _oldVal) {\n    this.shouldSetDimensions = true;\n    this.shouldResetRoot = true;\n    this.shouldSetScaleUsed = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('seriesAccessor')\n  seriesAccessorWatcher(_newVal, _oldVal) {\n    this.shouldSetScaleUsed = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateData = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldSetColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldValidate = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n    this.shouldUpdateLabels = true;\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n  }\n\n  @Watch('ordinalAccessor')\n  ordinalAccessorWatcher(_newVal, _oldVal) {\n    this.shouldSetGlobalSelections = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetScaleUsed = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateAnnotations = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateStrokeWidth = true;\n  }\n\n  @Watch('valueAccessor')\n  valueAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldSetScaleUsed = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldSetColors = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldValidateDataLabelAccessor = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGlobalSelections = true;\n  }\n\n  @Watch('xAxis')\n  xAxisWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateXGrid = true;\n    }\n    this.shouldSetXAxisAccessibility = true;\n  }\n\n  @Watch('yAxis')\n  yAxisWatcher(_newVal, _oldVal) {\n    const newScaleVal = _newVal && _newVal.scales ? _newVal.scales : false;\n    const oldScaleVal = _oldVal && _oldVal.scales ? _oldVal.scales : false;\n    if (newScaleVal !== oldScaleVal) {\n      this.shouldSetScaleUsed = true;\n      this.shouldUpdateScales = true;\n      this.shouldUpdateData = true;\n      this.shouldUpdateInterpolationData = true;\n      this.shouldUpdateLines = true;\n      this.shouldUpdatePoints = true;\n      this.shouldUpdateYGrid = true;\n      this.shouldUpdateSeriesLabels = true;\n      this.shouldUpdateLabels = true;\n    }\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateYGrid = true;\n    }\n  }\n\n  @Watch('wrapLabel')\n  wrapLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n  }\n\n  @Watch('showBaselineX')\n  showBaselineXWatcher(_newVal, _oldVal) {\n    this.shouldUpdateBaseline = true;\n  }\n\n  @Watch('colorPalette')\n  paletteWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldUpdateColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n  }\n\n  @Watch('colors')\n  colorsWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldUpdateColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n  }\n\n  @Watch('clickStyle')\n  clickStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n    this.shouldSetColors = true;\n  }\n\n  @Watch('hoverStyle')\n  hoverStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n    this.shouldSetColors = true;\n  }\n\n  @Watch('cursor')\n  cursorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCursor = true;\n    this.shouldSetLegendCursor = true;\n  }\n\n  @Watch('strokeWidth')\n  strokeWidthWatcher(_newVal, _oldVal) {\n    this.shouldUpdateStrokeWidth = true;\n  }\n\n  @Watch('showDots')\n  showDotsWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('dotRadius')\n  dotRadiusWatcher(_newVal, _oldVal) {\n    this.shouldUpdateDotRadius = true;\n  }\n\n  @Watch('lineCurve')\n  lineCurveWatcher(_newLineCurve, _oldLineCurve) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    console.warn(\n      'Change detected in prop lineCurve from value ' +\n        _newLineCurve +\n        ' to value ' +\n        _oldLineCurve +\n        '. Transition effects for this prop have not been implemented.'\n    );\n  }\n\n  @Watch('hoverOpacity')\n  hoverOpacityWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n  }\n\n  @Watch('dataLabel')\n  dataLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTableData = true;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    const newPlacementVal = _newVal && _newVal.placement ? _newVal.placement : false;\n    const oldPlacementVal = _oldVal && _oldVal.placement ? _oldVal.placement : false;\n    const newAccessor = _newVal && _newVal.labelAccessor ? _newVal.labelAccessor : false;\n    const oldAccessor = _oldVal && _oldVal.labelAccessor ? _oldVal.labelAccessor : false;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetLabelOpacity = true;\n    }\n    if (newPlacementVal !== oldPlacementVal) {\n      this.shouldUpdateSeriesLabels = true;\n    }\n    if (newAccessor !== oldAccessor) {\n      this.shouldValidateDataLabelAccessor = true;\n    }\n  }\n\n  @Watch('seriesLabel')\n  seriesLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateTableData = true;\n    this.shouldValidateSeriesLabels = true;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetSeriesLabelOpacity = true;\n    }\n  }\n\n  @Watch('tooltipLabel')\n  tooltipLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('showTooltip')\n  showTooltipWatcher(_newVal, _oldVal) {\n    // this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('accessibility')\n  accessibilityWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    const newTitle = _newVal && _newVal.title ? _newVal.title : false;\n    const oldTitle = _oldVal && _oldVal.title ? _oldVal.title : false;\n    if (newTitle !== oldTitle) {\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newExecutiveSummary = _newVal && _newVal.executiveSummary ? _newVal.executiveSummary : false;\n    const oldExecutiveSummary = _oldVal && _oldVal.executiveSummary ? _oldVal.executiveSummary : false;\n    if (newExecutiveSummary !== oldExecutiveSummary) {\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n    }\n    const newPurpose = _newVal && _newVal.purpose ? _newVal.purpose : false;\n    const oldPurpose = _oldVal && _oldVal.purpose ? _oldVal.purpose : false;\n    if (newPurpose !== oldPurpose) {\n      this.shouldSetChartAccessibilityPurpose = true;\n    }\n    const newLongDescription = _newVal && _newVal.longDescription ? _newVal.longDescription : false;\n    const oldLongDescription = _oldVal && _oldVal.longDescription ? _oldVal.longDescription : false;\n    if (newLongDescription !== oldLongDescription) {\n      this.shouldSetChartAccessibilityLongDescription = true;\n    }\n    const newContext = _newVal && _newVal.contextExplanation ? _newVal.contextExplanation : false;\n    const oldContext = _oldVal && _oldVal.contextExplanation ? _oldVal.contextExplanation : false;\n    if (newContext !== oldContext) {\n      this.shouldSetChartAccessibilityContext = true;\n    }\n    const newStatisticalNotes = _newVal && _newVal.statisticalNotes ? _newVal.statisticalNotes : false;\n    const oldStatisticalNotes = _oldVal && _oldVal.statisticalNotes ? _oldVal.statisticalNotes : false;\n    if (newStatisticalNotes !== oldStatisticalNotes) {\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n    }\n    const newStructureNotes = _newVal && _newVal.structureNotes ? _newVal.structureNotes : false;\n    const oldStructureNotes = _oldVal && _oldVal.structureNotes ? _oldVal.structureNotes : false;\n    if (newStructureNotes !== oldStructureNotes) {\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    const newincludeDataKeyNames = _newVal && _newVal.includeDataKeyNames;\n    const oldincludeDataKeyNames = _oldVal && _oldVal.includeDataKeyNames;\n    const newElementDescriptionAccessor =\n      _newVal && _newVal.elementDescriptionAccessor ? _newVal.elementDescriptionAccessor : false;\n    const oldElementDescriptionAccessor =\n      _oldVal && _oldVal.elementDescriptionAccessor ? _oldVal.elementDescriptionAccessor : false;\n    if (\n      newincludeDataKeyNames !== oldincludeDataKeyNames ||\n      newElementDescriptionAccessor !== oldElementDescriptionAccessor\n    ) {\n      if (newincludeDataKeyNames !== oldincludeDataKeyNames) {\n        // this one is tricky because it needs to run after the lifecycle\n        // AND it could run in the off-chance this prop is changed\n        this.shouldSetGroupAccessibilityLabel = true;\n      }\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newSmallValue = _newVal && _newVal.showSmallLabels ? _newVal.showSmallLabels : false;\n    const oldSmallValue = _oldVal && _oldVal.showSmallLabels ? _oldVal.showSmallLabels : false;\n    if (newSmallValue !== oldSmallValue) {\n      this.shouldSetLabelOpacity = true;\n    }\n    const newStrokes = _newVal && _newVal.hideStrokes ? _newVal.hideStrokes : false;\n    const oldStrokes = _oldVal && _oldVal.hideStrokes ? _oldVal.hideStrokes : false;\n    if (newStrokes !== oldStrokes) {\n      this.shouldUpdateStrokeWidth = true;\n      this.shouldSetColors = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newTextures = _newVal && _newVal.hideTextures ? _newVal.hideTextures : false;\n    const oldTextures = _oldVal && _oldVal.hideTextures ? _oldVal.hideTextures : false;\n    if (newTextures !== oldTextures) {\n      this.shouldUpdateDashPatterns = true;\n      this.shouldUpdateLegend = true;\n    }\n    const newKeyNav =\n      _newVal && _newVal.keyboardNavConfig && _newVal.keyboardNavConfig.disabled\n        ? _newVal.keyboardNavConfig.disabled\n        : false;\n    const oldKeyNav =\n      _oldVal && _oldVal.keyboardNavConfig && _oldVal.keyboardNavConfig.disabled\n        ? _oldVal.keyboardNavConfig.disabled\n        : false;\n    const newInterface = _newVal && _newVal.elementsAreInterface ? _newVal.elementsAreInterface : false;\n    const oldInterface = _oldVal && _oldVal.elementsAreInterface ? _oldVal.elementsAreInterface : false;\n    if (newKeyNav !== oldKeyNav || newInterface !== oldInterface) {\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetChartAccessibilitySubtitle = true;\n      this.shouldSetChartAccessibilityLongDescription = true;\n      this.shouldSetChartAccessibilityContext = true;\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n      this.shouldSetChartAccessibilityPurpose = true;\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    if (newInterface !== oldInterface) {\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('localization')\n  localizationWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n\n    // language\n    const newLanguage = _newVal && _newVal.language ? _newVal.language : false;\n    const oldLanguage = _oldVal && _oldVal.language ? _oldVal.language : false;\n    if (newLanguage !== oldLanguage) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n\n    // numeralLocale\n    const newNumeralLocale = _newVal && _newVal.numeralLocale ? _newVal.numeralLocale : false;\n    const oldNumeralLocale = _oldVal && _oldVal.numeralLocale ? _oldVal.numeralLocale : false;\n    if (newNumeralLocale !== oldNumeralLocale) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n  }\n\n  @Watch('legend')\n  legendWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLegend = true;\n    const newInteractiveVal = _newVal && _newVal.interactive;\n    const oldInteractiveVal = _oldVal && _oldVal.interactive;\n    if (newInteractiveVal !== oldInteractiveVal) {\n      this.shouldSetLegendCursor = true;\n      this.shouldUpdateLegendInteractivity = true;\n    }\n  }\n\n  @Watch('annotations')\n  annotationsWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetAnnotationAccessibility = true;\n  }\n\n  @Watch('maxValueOverride')\n  @Watch('minValueOverride')\n  valueOverrideWatcher(_newVal, _oldVal) {\n    this.shouldSetScaleUsed = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('secondaryLines')\n  secondaryLinesWatcher(_newVal, _oldVal) {\n    const newDataLabelVal = _newVal && _newVal.showDataLabel;\n    const oldDataLabelVal = _oldVal && _oldVal.showDataLabel;\n    const newSeriesLabelVal = _newVal && _newVal.showSeriesLabel;\n    const oldSeriesLabelVal = _oldVal && _oldVal.showSeriesLabel;\n    const newKeysVal = _newVal && _newVal.keys ? _newVal.keys : false;\n    const oldKeysVal = _oldVal && _oldVal.keys ? _oldVal.keys : false;\n    const newOpacityVal = _newVal && _newVal.opacity ? _newVal.opacity : 0;\n    const oldOpacityVal = _oldVal && _oldVal.opacity ? _oldVal.opacity : 0;\n    if (newKeysVal !== oldKeysVal) {\n      this.shouldUpdateLines = true;\n      this.shouldSetLabelOpacity = true;\n      this.shouldSetSeriesLabelOpacity = true;\n    }\n    if (newDataLabelVal !== oldDataLabelVal) {\n      this.shouldSetLabelOpacity = true;\n    }\n    if (newSeriesLabelVal !== oldSeriesLabelVal) {\n      this.shouldUpdateLabels = true;\n    }\n    if (newOpacityVal !== oldOpacityVal) {\n      this.shouldDrawInteractionState = true;\n      this.shouldSetSeriesLabelOpacity = true;\n    }\n  }\n\n  @Watch('clickHighlight')\n  clickWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n  }\n\n  @Watch('hoverHighlight')\n  hoverWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n  }\n\n  @Watch('interactionKeys')\n  interactionWatcher(_newVal, _oldVal) {\n    this.shouldValidateInteractionKeys = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n  }\n\n  @Watch('dataKeyNames')\n  dataKeyNamesWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('suppressEvents')\n  suppressWatcher(_newVal, _oldVal) {\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldSetLegendCursor = true;\n    this.shouldUpdateLegendInteractivity = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldRedrawWrapper = true;\n    this.shouldValidate = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('unitTest')\n  unitTestWatcher(_newVal, _oldVal) {\n    this.shouldSetTestingAttributes = true;\n  }\n\n  componentWillLoad() {\n    const chartID = this.uniqueID || 'parallel-plot-' + uuid();\n    this.initialLoadEvent.emit({ chartID: chartID });\n    // contrary to componentWillUpdate, this method appears safe to use for\n    // any calculations we need. Keeping them here reduces future refactor,\n    // since componentWillUpdate should eventually mirror this method\n    return new Promise(resolve => {\n      this.duration = 0;\n      this.defaults = true;\n      this.chartID = chartID;\n      this.parallelChartEl.id = this.chartID;\n      this.setLocalizationConfig();\n      this.setTagLevels();\n      this.setDimensions();\n      this.setScaleUsed();\n      this.prepareScales();\n      this.prepareData();\n      this.updateInterpolationData();\n      this.validateInteractionKeys();\n      this.validateSeriesLabels();\n      this.validateDataLabelAccessor();\n      this.setTableData();\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.setColors();\n      resolve('component will load');\n    });\n  }\n\n  componentWillUpdate() {\n    // NEVER put items in this method that rely on props (until stencil bug is resolved)\n    // All items that belong here are currently at the top of render\n    // see: https://github.com/ionic-team/stencil/issues/2061#issuecomment-578282178\n    return new Promise(resolve => {\n      resolve('component will update');\n    });\n  }\n\n  componentDidLoad() {\n    return new Promise(resolve => {\n      this.renderRootElements();\n      this.renderChartRootElemets();\n      this.setChartDescriptionWrapper();\n      this.setChartAccessibilityTitle();\n      this.setChartAccessibilitySubtitle();\n      this.setChartAccessibilityLongDescription();\n      this.setChartAccessibilityExecutiveSummary();\n      this.setChartAccessibilityPurpose();\n      this.setChartAccessibilityContext();\n      this.setChartAccessibilityStatisticalNotes();\n      this.setChartAccessibilityStructureNotes();\n      this.setParentSVGAccessibility();\n      this.reSetRoot();\n      this.setSubTitleElements();\n      this.drawXGrid();\n      this.drawYGrid();\n      this.setGlobalSelections();\n      this.setTestingAttributes();\n      this.drawXAxis();\n      this.setXAxisAccessibility();\n      this.enterYAxis();\n      this.exitYAxis();\n      this.drawYAxis();\n      this.setYAxisAccessibility();\n      this.enterChartLines();\n      this.updateChartLines();\n      this.exitChartLines();\n      this.enterPoints();\n      this.updatePoints();\n      this.exitPoints();\n      this.drawChartLines();\n      this.drawPoints();\n      this.enterSeriesLabels();\n      this.updateSeriesLabels();\n      this.exitSeriesLabels();\n      this.enterDataLabels();\n      this.updateDataLabels();\n      this.exitDataLabels();\n      this.setChartCountAccessibility();\n      this.setGeometryAccessibilityAttributes();\n      this.setGeometryAriaLabels();\n      this.drawLegendElements();\n      this.drawDataLabels();\n      this.drawSeriesLabels();\n      this.addStrokeUnder();\n      this.setSelectedClass();\n      // this.updateInteractionState();\n      // this.setLabelOpacity();\n      // this.setSeriesLabelOpacity();\n      this.updateCursor();\n      this.bindInteractivity();\n      this.setLegendCursor();\n      this.bindLegendInteractivity();\n      this.drawBaseline();\n      this.drawAnnotations();\n      this.setAnnotationAccessibility();\n      hideNonessentialGroups(this.root.node(), this.dotG.node());\n      this.setGroupAccessibilityID();\n      this.onChangeHandler();\n      this.defaults = false;\n      resolve('component did load');\n    }).then(() => this.initialLoadEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  componentDidUpdate() {\n    return new Promise(resolve => {\n      this.duration = !this.animationConfig || !this.animationConfig.disabled ? 750 : 0;\n      if (this.shouldUpdateDescriptionWrapper) {\n        this.setChartDescriptionWrapper();\n        this.shouldUpdateDescriptionWrapper = false;\n      }\n      if (this.shouldSetChartAccessibilityCount) {\n        this.setChartCountAccessibility();\n        this.shouldSetChartAccessibilityCount = false;\n      }\n      if (this.shouldSetChartAccessibilityTitle) {\n        this.setChartAccessibilityTitle();\n        this.shouldSetChartAccessibilityTitle = false;\n      }\n      if (this.shouldSetChartAccessibilitySubtitle) {\n        this.setChartAccessibilitySubtitle();\n        this.shouldSetChartAccessibilitySubtitle = false;\n      }\n      if (this.shouldSetChartAccessibilityLongDescription) {\n        this.setChartAccessibilityLongDescription();\n        this.shouldSetChartAccessibilityLongDescription = false;\n      }\n      if (this.shouldSetChartAccessibilityExecutiveSummary) {\n        this.setChartAccessibilityExecutiveSummary();\n        this.shouldSetChartAccessibilityExecutiveSummary = false;\n      }\n      if (this.shouldSetChartAccessibilityPurpose) {\n        this.setChartAccessibilityPurpose();\n        this.shouldSetChartAccessibilityPurpose = false;\n      }\n      if (this.shouldSetChartAccessibilityContext) {\n        this.setChartAccessibilityContext();\n        this.shouldSetChartAccessibilityContext = false;\n      }\n      if (this.shouldSetChartAccessibilityStatisticalNotes) {\n        this.setChartAccessibilityStatisticalNotes();\n        this.shouldSetChartAccessibilityStatisticalNotes = false;\n      }\n      if (this.shouldSetChartAccessibilityStructureNotes) {\n        this.setChartAccessibilityStructureNotes();\n        this.shouldSetChartAccessibilityStructureNotes = false;\n      }\n      if (this.shouldSetParentSVGAccessibility) {\n        this.setParentSVGAccessibility();\n        this.shouldSetParentSVGAccessibility = false;\n      }\n      if (this.shouldResetRoot) {\n        this.reSetRoot();\n        this.shouldResetRoot = false;\n      }\n      if (this.shouldUpdateXGrid) {\n        this.drawXGrid();\n        this.shouldUpdateXGrid = false;\n      }\n      if (this.shouldUpdateYGrid) {\n        this.drawYGrid();\n        this.shouldUpdateYGrid = false;\n      }\n      if (this.shouldSetGlobalSelections) {\n        this.setGlobalSelections();\n        this.shouldSetGlobalSelections = false;\n      }\n      if (this.shouldSetTestingAttributes) {\n        this.setTestingAttributes();\n        this.shouldSetTestingAttributes = false;\n      }\n      if (this.shouldSetSubTitle) {\n        this.setSubTitleElements();\n        this.shouldSetSubTitle = false;\n      }\n      if (this.shouldEnterUpdateExit) {\n        this.enterYAxis();\n        this.exitYAxis();\n        this.enterChartLines();\n        this.updateChartLines();\n        this.exitChartLines();\n        this.enterPoints();\n        this.updatePoints();\n        this.exitPoints();\n        this.enterSeriesLabels();\n        this.updateSeriesLabels();\n        this.exitSeriesLabels();\n        this.enterDataLabels();\n        this.updateDataLabels();\n        this.exitDataLabels();\n        this.shouldEnterUpdateExit = false;\n      }\n      if (this.shouldUpdateXAxis) {\n        this.drawXAxis();\n        this.shouldUpdateXAxis = false;\n      }\n      if (this.shouldUpdateYAxis) {\n        this.drawYAxis();\n        this.shouldUpdateYAxis = false;\n      }\n      if (this.shouldSetXAxisAccessibility) {\n        this.setXAxisAccessibility();\n        this.shouldSetXAxisAccessibility = false;\n      }\n      if (this.shouldSetYAxisAccessibility) {\n        this.setYAxisAccessibility();\n        this.shouldSetYAxisAccessibility = false;\n      }\n      if (this.shouldUpdateLines) {\n        this.drawChartLines();\n        this.shouldUpdateLines = false;\n      }\n      if (this.shouldUpdatePoints) {\n        this.drawPoints();\n        this.shouldUpdatePoints = false;\n      }\n      if (this.shouldSetGeometryAccessibilityAttributes) {\n        this.setGeometryAccessibilityAttributes();\n        this.shouldSetGeometryAccessibilityAttributes = false;\n      }\n      if (this.shouldSetGeometryAriaLabels) {\n        this.setGeometryAriaLabels();\n        this.shouldSetGeometryAriaLabels = false;\n      }\n      if (this.shouldSetGroupAccessibilityLabel) {\n        this.setGroupAccessibilityID();\n        this.shouldSetGroupAccessibilityLabel = false;\n      }\n      if (this.shouldUpdateColors) {\n        this.updateColors();\n        this.shouldUpdateColors = false;\n      }\n      if (this.shouldUpdateLegend) {\n        this.drawLegendElements();\n        this.shouldUpdateLegend = false;\n      }\n      if (this.shouldUpdateLabels) {\n        this.drawDataLabels();\n        this.shouldUpdateLabels = false;\n      }\n      if (this.shouldUpdateSeriesLabels) {\n        this.drawSeriesLabels();\n        this.shouldUpdateSeriesLabels = false;\n      }\n      if (this.addStrokeUnder) {\n        this.addStrokeUnder();\n        this.shouldAddStrokeUnder = false;\n      }\n      if (this.shouldUpdateStrokeWidth) {\n        this.updateStrokeWidth();\n        this.shouldUpdateStrokeWidth = false;\n      }\n      if (this.shouldUpdateDotRadius) {\n        this.updateDotRadius();\n        this.shouldUpdateDotRadius = false;\n      }\n      if (this.shouldDrawInteractionState) {\n        this.updateInteractionState();\n        this.shouldDrawInteractionState = false;\n      }\n      if (this.shouldUpdateDashPatterns) {\n        this.updateStrokePattern();\n        this.shouldUpdateDashPatterns = false;\n      }\n      if (this.shouldSetLabelOpacity) {\n        this.setLabelOpacity();\n        this.shouldSetLabelOpacity = false;\n      }\n      if (this.shouldSetSeriesLabelOpacity) {\n        this.setSeriesLabelOpacity();\n        this.shouldSetSeriesLabelOpacity = false;\n      }\n      if (this.shouldSetSelectionClass) {\n        this.setSelectedClass();\n        this.shouldSetSelectionClass = false;\n      }\n      if (this.shouldUpdateLegendInteractivity) {\n        this.bindLegendInteractivity();\n        this.shouldUpdateLegendInteractivity = false;\n      }\n      if (this.shouldSetLegendCursor) {\n        this.setLegendCursor();\n        this.shouldSetLegendCursor = false;\n      }\n      if (this.shouldUpdateCursor) {\n        this.updateCursor();\n        this.shouldUpdateCursor = false;\n      }\n      if (this.shouldBindInteractivity) {\n        this.bindInteractivity();\n        this.shouldBindInteractivity = false;\n      }\n      if (this.shouldUpdateAnnotations) {\n        this.drawAnnotations();\n        this.shouldUpdateAnnotations = false;\n      }\n      if (this.shouldSetAnnotationAccessibility) {\n        this.setAnnotationAccessibility();\n        this.shouldSetAnnotationAccessibility = false;\n      }\n      if (this.shouldUpdateBaseline) {\n        this.drawBaseline();\n        this.shouldUpdateBaseline = false;\n      }\n      this.onChangeHandler();\n      resolve('component did update');\n    }).then(() => this.drawEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  shouldValidateLocalizationProps() {\n    const windowInstances = getGlobalInstances();\n    const languageString = windowInstances.i18Next.language;\n    const languageObject = windowInstances.i18Next.getResourceBundle(languageString);\n    const numeralObject = windowInstances.numeral.localeData();\n    if (this.shouldValidateLocalization && !this.localization.skipValidation) {\n      this.shouldValidateLocalization = false;\n      validateLocalizationProps(this.chartID, {\n        ...this.localization,\n        language: languageObject,\n        numeralLocale: numeralObject\n      });\n    }\n  }\n\n  shouldValidateAccessibilityProps() {\n    if (this.shouldValidateAccessibility && !this.accessibility.disableValidation) {\n      this.shouldValidateAccessibility = false;\n      validateAccessibilityProps(\n        this.chartID,\n        { ...this.accessibility },\n        {\n          annotations: this.annotations,\n          data: this.data,\n          uniqueID: this.uniqueID,\n          context: {\n            mainTitle: this.mainTitle,\n            onClickEvent: this.suppressEvents ? undefined : this.clickEvent.emit\n          }\n        }\n      );\n    }\n  }\n\n  setDimensions() {\n    this.padding = typeof this.padding === 'string' ? getPadding(this.padding) : this.padding;\n    this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n    this.innerWidth = this.width - this.margin.left - this.margin.right;\n\n    this.innerPaddedHeight = this.innerHeight - this.padding.top - this.padding.bottom;\n    this.innerPaddedWidth = this.innerWidth - this.padding.left - this.padding.right;\n  }\n\n  validateInteractionKeys() {\n    this.innerInteractionKeys =\n      this.interactionKeys && this.interactionKeys.length ? this.interactionKeys : [this.seriesAccessor];\n\n    this.seriesInteraction =\n      this.innerInteractionKeys.length === 1 && this.innerInteractionKeys[0] === this.seriesAccessor;\n  }\n\n  getLanguageString() {\n    return getActiveLanguageString(this.localization);\n  }\n\n  setLocalizationConfig() {\n    configLocalization(this.localization);\n  }\n\n  setSubTitleElements() {\n    setSubTitle({\n      root: this.subTitleG,\n      subTitle: this.subTitle\n    });\n  }\n\n  setColors() {\n    this.rawColors = this.colors ? convertVisaColor(this.colors) : getColors(this.colorPalette, this.nest.length);\n    this.textColors = {};\n    let adjustedColors = this.rawColors;\n    this.strokes = {};\n    if (!this.accessibility.hideStrokes) {\n      adjustedColors = [];\n    }\n    this.rawColors.forEach(color => {\n      if (!this.accessibility.hideStrokes) {\n        const strokes = getAccessibleStrokes(color);\n        const adjusted = strokes.length === 2 ? strokes[1] : strokes[0];\n        this.strokes[color.toLowerCase()] = adjusted;\n        adjustedColors.push(adjusted);\n      }\n      this.textColors[color.toLowerCase()] = ensureTextContrast(color, '#ffffff', 4.5);\n    });\n    if (this.hoverStyle && this.hoverStyle.color) {\n      if (!this.accessibility.hideStrokes) {\n        const strokes = getAccessibleStrokes(this.hoverStyle.color);\n        const adjusted = strokes.length === 2 ? strokes[1] : strokes[0];\n        this.strokes[this.hoverStyle.color.toLowerCase()] = adjusted;\n      }\n      this.textColors[this.hoverStyle.color.toLowerCase()] = ensureTextContrast(this.hoverStyle.color, '#ffffff', 4.5);\n    }\n    if (this.clickStyle && this.clickStyle.color) {\n      if (!this.accessibility.hideStrokes) {\n        const strokes = getAccessibleStrokes(this.clickStyle.color);\n        const adjusted = strokes.length === 2 ? strokes[1] : strokes[0];\n        this.strokes[this.clickStyle.color.toLowerCase()] = adjusted;\n      }\n      this.textColors[this.clickStyle.color.toLowerCase()] = ensureTextContrast(this.clickStyle.color, '#ffffff', 4.5);\n    }\n    this.colorArr = adjustedColors;\n  }\n\n  innerScopeDataKeys() {\n    // generate scoped and formatted data for data-table component\n    // we also scope singleAccessor array in chartAccessors based on what is actually in the data\n    const innerChartSingleAccessors = [];\n    chartAccessors.singleAccessors.forEach(accessor => {\n      if (this[accessor] && min(this.data, d => d[this[accessor]]) !== undefined) {\n        innerChartSingleAccessors.push(accessor);\n      }\n    });\n    const innerChartAccessors = { ...chartAccessors, singleAccessors: innerChartSingleAccessors };\n    return scopeDataKeys(this, innerChartAccessors, 'parallel-plot');\n  }\n\n  setTableData() {\n    // generate scoped and formatted data for data-table component\n    const keys = this.innerScopeDataKeys();\n    this.tableData = getScopedData(this.data, keys);\n    this.tableColumns = Object.keys(keys);\n  }\n\n  prepareData() {\n    this.multiYScale = {};\n\n    this.data.map(d => {\n      const hashObject = this.hiddenHash[`${d[this.ordinalAccessor]}-${d[this.seriesAccessor] || 'b'}`];\n      if (\n        hashObject &&\n        (this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly) &&\n        !d['enter'] &&\n        !d['exit']\n      ) {\n        d['hidden'] = hashObject['data-label-hidden'];\n        d['auto-x'] = hashObject.x;\n        d['auto-y'] = hashObject.y;\n        d['auto-text-anchor'] = hashObject['text-anchor'];\n      }\n    });\n\n    this.nest = nest()\n      .key(d => {\n        if (!this.multiYScale[d[this.ordinalAccessor]]) {\n          this.multiYScale[d[this.ordinalAccessor]] = {\n            min: Infinity,\n            max: 0\n          };\n        }\n        if (this.multiYScale[d[this.ordinalAccessor]].min > d[this.valueAccessor]) {\n          this.multiYScale[d[this.ordinalAccessor]].min = d[this.valueAccessor];\n        }\n        if (this.multiYScale[d[this.ordinalAccessor]].max < d[this.valueAccessor]) {\n          this.multiYScale[d[this.ordinalAccessor]].max = d[this.valueAccessor];\n        }\n        return d[this.seriesAccessor];\n      })\n      .entries(this.data);\n\n    this.map = nest()\n      .key(d => d[this.seriesAccessor])\n      .map(this.data);\n\n    const keys = Object.keys(this.multiYScale);\n\n    keys.forEach(key => {\n      const scale = this.multiYScale[key];\n      const rangePadding = this.innerPaddedHeight * 0.05;\n      scale.y = scaleLinear()\n        .domain([\n          this.minValueOverride || this.minValueOverride === 0 ? this.minValueOverride : scale.min,\n          this.maxValueOverride || this.maxValueOverride === 0 ? this.maxValueOverride : scale.max\n        ])\n        .range([this.innerPaddedHeight - rangePadding, 0 + rangePadding]);\n      scale.ticks = [scale.y.invert(this.innerPaddedHeight), scale.y.invert(0)];\n    });\n  }\n\n  updateInterpolationData() {\n    if (this.interpolating) {\n      let change = this.nest.length;\n      this.nest.forEach(parent => {\n        parent.interpolate = {};\n\n        const left = this.interpolating.map.get(parent.key);\n        const right = parent.values;\n\n        if (!left) {\n          parent.interpolate.start = right;\n          parent.interpolate.end = right;\n        } else {\n          const resolved = resolveLines(left, right, this.ordinalAccessor);\n          if (!resolved.length) {\n            parent.interpolate.start = left;\n            parent.interpolate.end = right;\n            change--;\n          } else {\n            parent.interpolate.start = resolved[0];\n            parent.interpolate.end = resolved[1];\n          }\n        }\n      });\n      if (!change && this.nest.length === this.interpolating.length) {\n        this.interpolating = false;\n      }\n    }\n  }\n\n  prepareScales() {\n    if (this.nest) {\n      this.interpolating = this.nest;\n      const oldXDomain = this.x.domain();\n      const oldXRange = this.x.range();\n      const oldYDomain = this.y.domain();\n      const oldYRange = this.y.range();\n      this.interpolating.scales = this.scalesUsed;\n      this.interpolating.multiYScale = { ...this.multiYScale };\n      this.interpolating.x = this.x.domain(oldXDomain).range(oldXRange);\n      this.interpolating.y = scaleLinear()\n        .domain(oldYDomain)\n        .range(oldYRange);\n      this.interpolating.line = line()\n        .x(d => this.interpolating.x(d[this.ordinalAccessor]))\n        .y(d => {\n          if (this.interpolating.scales === 'individual') {\n            return this.interpolating.multiYScale[d[this.ordinalAccessor]].y(d[this.valueAccessor]);\n          }\n          return this.interpolating.y(d[this.valueAccessor]);\n        })\n        .curve(this.curveOptions[this.lineCurve] || this.curveOptions['linear']);\n      this.interpolating.map = this.map;\n    }\n\n    this.extent = {};\n    this.extent.minValue = min(this.data, d => parseFloat(d[this.valueAccessor]));\n    this.extent.maxValue = max(this.data, d => parseFloat(d[this.valueAccessor]));\n    // const extentPadding = Math.abs(this.extent.maxValue * 0.1 || this.extent.minValue * 0.1);\n    let paddedMin = 0 + this.innerPaddedHeight * 0.05;\n    let paddedMax = this.innerPaddedHeight - this.innerPaddedHeight * 0.05;\n\n    if (this.yAxis.scales === 'preNormalized') {\n      this.extent.minValue = 0;\n      this.extent.maxValue = 1;\n      paddedMin = 0;\n      paddedMax = this.innerPaddedHeight;\n    }\n\n    this.extent.minValue =\n      this.minValueOverride || this.minValueOverride === 0 ? this.minValueOverride : this.extent.minValue;\n    this.extent.maxValue =\n      this.maxValueOverride || this.maxValueOverride === 0 ? this.maxValueOverride : this.extent.maxValue;\n    paddedMin = this.minValueOverride || this.minValueOverride === 0 ? this.minValueOverride : paddedMin;\n    paddedMax = this.maxValueOverride || this.maxValueOverride === 0 ? this.maxValueOverride : paddedMax;\n    this.y = scaleLinear()\n      .domain([this.extent.minValue, this.extent.maxValue])\n      .range([paddedMax, paddedMin]);\n\n    // set xAxis scale : ordinal value\n    this.x = scalePoint()\n      .domain(this.data.map(d => d[this.ordinalAccessor]))\n      .range([0, this.innerPaddedWidth]);\n\n    this.line = line()\n      .x(d => this.x(d[this.ordinalAccessor]))\n      .y(d => {\n        if (this.yAxis.scales === 'individual') {\n          return this.multiYScale[d[this.ordinalAccessor]].y(d[this.valueAccessor]);\n        }\n        return this.y(d[this.valueAccessor]);\n      })\n      .curve(this.curveOptions[this.lineCurve] || this.curveOptions['linear']);\n  }\n\n  validateDataLabelAccessor() {\n    this.innerLabelAccessor =\n      this.dataLabel && this.dataLabel.labelAccessor ? this.dataLabel.labelAccessor : this.valueAccessor;\n  }\n\n  validateSeriesLabels() {\n    this.labelDetails = { ...this.seriesLabel };\n    if (!this.labelDetails.placement) {\n      this.labelDetails.placement = '';\n    }\n    if (!this.labelDetails.label || !this.labelDetails.label.length) {\n      this.labelDetails.label = '';\n    }\n\n    this.isRight = this.labelDetails.placement !== 'left';\n  }\n\n  setScaleUsed() {\n    this.scalesUsed = this.yAxis.scales;\n  }\n\n  renderRootElements() {\n    this.svg = select(this.parallelChartEl)\n      .select('.visa-viz-d3-parallel-container')\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    this.root = this.svg.append('g').attr('id', 'visa-viz-margin-container-g-' + this.chartID);\n    this.rootG = this.root.append('g').attr('id', 'visa-viz-padding-container-g-' + this.chartID);\n\n    this.gridG = this.rootG.append('g').attr('class', 'grid-group');\n  }\n\n  renderChartRootElemets() {\n    this.yGroup = this.rootG.append('g').attr('class', 'y-scales-group');\n    this.parallelLineG = this.rootG.append('g').attr('class', 'parallel-group parallel-line-group');\n    this.dotG = this.rootG.append('g').attr('class', 'parallel-group');\n    this.seriesLabelG = this.rootG.append('g').attr('class', 'parallel-series-wrapper');\n    this.labels = this.rootG.append('g').attr('class', 'parallel-dataLabel-group');\n    this.legendG = select(this.parallelChartEl)\n      .select('.parallel-legend')\n      .append('svg');\n\n    this.subTitleG = select(this.parallelChartEl).select('.parallel-sub-title');\n    this.tooltipG = select(this.parallelChartEl).select('.parallel-tooltip');\n\n    this.setTooltipInitialStyle();\n  }\n\n  // reset graph size based on window size\n  reSetRoot() {\n    const changeSvg = prepareRenderChange({\n      selection: this.svg,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeSvg\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    const changeRoot = prepareRenderChange({\n      selection: this.root,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRoot.attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n\n    const changeRootG = prepareRenderChange({\n      selection: this.rootG,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRootG.attr('transform', `translate(${this.padding.left}, ${this.padding.top})`);\n\n    setAccessibilityDescriptionWidth(this.chartID, this.width);\n  }\n\n  setGlobalSelections() {\n    const keys = Object.keys(this.multiYScale);\n    const dataBoundToAxes = this.yGroup.selectAll('.y-wrapper').data(keys, d => d);\n    this.yEnter = dataBoundToAxes.enter().append('g');\n    this.yExit = dataBoundToAxes.exit();\n    this.yUpdate = dataBoundToAxes.merge(this.yEnter);\n\n    const dataBoundToLines = this.parallelLineG.selectAll('.parallel-plot').data(this.nest, d => d.key);\n    this.enterLines = dataBoundToLines.enter().append('path');\n    this.exitLines = dataBoundToLines.exit();\n    this.updateLines = dataBoundToLines.merge(this.enterLines);\n    this.enterSize = this.enterLines.size();\n\n    const dataBoundToDotWrappers = this.dotG.selectAll('.parallel-dot-wrapper').data(this.nest, d => d.key);\n    this.enterDotWrappers = dataBoundToDotWrappers.enter().append('g');\n    this.exitDotWrappers = dataBoundToDotWrappers.exit();\n    this.updateDotWrappers = dataBoundToDotWrappers.merge(this.enterDotWrappers);\n\n    const dataBountToSeriesLabels = this.seriesLabelG.selectAll('.parallel-series-label').data(this.nest, d => d.key);\n    this.seriesLabelEnter = dataBountToSeriesLabels.enter().append('text');\n    this.seriesLabelExit = dataBountToSeriesLabels.exit();\n    this.seriesLabelUpdate = dataBountToSeriesLabels.merge(this.seriesLabelEnter);\n\n    const dataBoundToLabels = this.labels.selectAll('g').data(this.nest, d => d.key);\n    this.enteringLabelGroups = dataBoundToLabels.enter().append('g');\n    this.exitingLabelGroups = dataBoundToLabels.exit();\n    this.updatingLabelGroups = dataBoundToLabels.merge(this.enteringLabelGroups);\n\n    if (this.interpolating) {\n      this.updateDotWrappers.selectAll('circle').remove();\n\n      const dataBoundToDots = this.updateDotWrappers.selectAll('circle').data(d => d.interpolate.start);\n      this.enterDots = dataBoundToDots.enter().append('circle');\n      this.exitDots = dataBoundToDots.exit();\n      this.updateDots = dataBoundToDots.merge(this.enterDots);\n\n      this.updatingLabelGroups.selectAll('.parallel-dataLabel').remove();\n      const dataBoundToLabelChildren = this.updatingLabelGroups\n        .selectAll('.parallel-dataLabel')\n        .data(d => d.interpolate.start);\n      this.enteringLabels = dataBoundToLabelChildren.enter().append('text');\n      this.updatingLabels = dataBoundToLabelChildren.merge(this.enteringLabels);\n      //   // this.updatingLabels = this.updatingLabelGroups.selectAll('.line-dataLabel').data(d => d.interpolate.end);\n    } else {\n      const dataBoundToDots = this.updateDotWrappers\n        .selectAll('circle')\n        .data(d => d.values, d => d[this.ordinalAccessor]);\n\n      this.enterDots = dataBoundToDots.enter().append('circle');\n      this.exitDots = dataBoundToDots.exit();\n      this.updateDots = dataBoundToDots.merge(this.enterDots);\n\n      this.enterSize = this.enterDots.size();\n      this.exitSize = this.exitDots.size();\n\n      const dataBoundToLabelChildren = this.updatingLabelGroups\n        .selectAll('.parallel-dataLabel')\n        .data(d => d.values, d => d[this.ordinalAccessor]);\n\n      this.enteringLabels = dataBoundToLabelChildren.enter().append('text');\n      this.exitingLabels = dataBoundToLabelChildren.exit();\n      this.updatingLabels = dataBoundToLabelChildren.merge(this.enteringLabels);\n    }\n  }\n\n  setTestingAttributes() {\n    if (this.unitTest) {\n      select(this.parallelChartEl)\n        .select('.visa-viz-d3-parallel-container')\n        .attr('data-testid', 'chart-container');\n      select(this.parallelChartEl)\n        .select('.parallel-main-title')\n        .attr('data-testid', 'main-title');\n      select(this.parallelChartEl)\n        .select('.parallel-sub-title')\n        .attr('data-testid', 'sub-title');\n      this.svg.attr('data-testid', 'root-svg');\n      this.root.attr('data-testid', 'margin-container');\n      this.rootG.attr('data-testid', 'padding-container');\n      this.legendG.attr('data-testid', 'legend-container');\n      this.tooltipG.attr('data-testid', 'tooltip-container');\n      this.gridG.attr('data-testid', 'grid-group');\n\n      // y axes for parallel (different from any other chart)\n      this.yGroup.attr('data-testid', 'y-scales-group');\n      this.yUpdate.attr('data-testid', 'y-scale-wrapper'); // may need to add data-id to this?\n\n      // add test attributes to lines and series labels\n      this.parallelLineG.attr('data-testid', 'parallel-line-group');\n      this.updateLines.attr('data-testid', 'parallel-line').attr('data-id', d => `parallel-line-${d.key}`);\n      this.seriesLabelG.attr('data-testid', 'parallel-series-label-container');\n      this.seriesLabelUpdate\n        .attr('data-testid', 'parallel-series-label')\n        .attr('data-id', d => `parallel-series-label-${d.key}`);\n\n      // add test atttributes to line colors\n      this.dotG.attr('data-testid', 'marker-group');\n      this.updateDotWrappers.attr('data-testid', 'marker-series-group').attr('data-id', d => `marker-series-${d.key}`);\n      this.updateDots\n        .attr('data-testid', 'marker')\n        .attr('data-id', d => `marker-${d[this.seriesAccessor]}-${d[this.ordinalAccessor]}`);\n\n      // add test attributes to labels\n      this.labels.attr('data-testid', 'dataLabel-group-container');\n      this.updatingLabelGroups.attr('data-testid', 'dataLabel-group').attr('data-id', d => `dataLabel-group-${d.key}`);\n      this.updatingLabels\n        .attr('data-testid', 'dataLabel')\n        .attr('data-id', d => `dataLabel-${d[this.seriesAccessor]}-${d[this.ordinalAccessor]}`);\n\n      this.svg.select('defs').attr('data-testid', 'pattern-defs');\n    } else {\n      select(this.parallelChartEl)\n        .select('.visa-viz-d3-parallel-container')\n        .attr('data-testid', null);\n      select(this.parallelChartEl)\n        .select('.parallel-main-title')\n        .attr('data-testid', null);\n      select(this.parallelChartEl)\n        .select('.parallel-sub-title')\n        .attr('data-testid', null);\n      this.svg.attr('data-testid', null);\n      this.root.attr('data-testid', null);\n      this.rootG.attr('data-testid', null);\n      this.legendG.attr('data-testid', null);\n      this.tooltipG.attr('data-testid', null);\n      this.gridG.attr('data-testid', null);\n\n      this.yGroup.attr('data-testid', null);\n      this.yUpdate.attr('data-testid', null); // may need to add data-id to this?\n\n      // add test attributes to lines and series labels\n      this.parallelLineG.attr('data-testid', null);\n      this.updateLines.attr('data-testid', null).attr('data-id', null);\n      this.seriesLabelG.attr('data-testid', null);\n      this.seriesLabelUpdate.attr('data-testid', null).attr('data-id', null);\n\n      // add test atttributes to line colors\n      this.dotG.attr('data-testid', null);\n      this.updateDotWrappers.attr('data-testid', null).attr('data-id', null);\n      this.updateDots.attr('data-testid', null).attr('data-id', null);\n\n      // add test attributes to labels\n      this.labels.attr('data-testid', null);\n      this.updatingLabelGroups.attr('data-testid', null).attr('data-id', null);\n      this.updatingLabels.attr('data-testid', null).attr('data-id', null);\n\n      this.svg.select('defs').attr('data-testid', null);\n    }\n  }\n\n  // draw axis line\n  drawXAxis() {\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.ordinalAccessor]\n        ? this.dataKeyNames[this.ordinalAccessor]\n        : this.xAxis.label;\n\n    const bandWidth = (this.innerPaddedWidth / this.nest[0].values.length) * 0.7;\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.x,\n      left: false,\n      wrapLabel: this.wrapLabel ? bandWidth : '',\n      format: this.xAxis.format,\n      tickInterval: this.xAxis.tickInterval,\n      label: axisLabel, // this.xAxis.label,\n      padding: this.padding,\n      hide: !this.xAxis.visible,\n      duration: this.duration,\n      hidePath: true\n    });\n  }\n\n  enterYAxis() {\n    this.yEnter\n      .attr('class', 'y-wrapper')\n      .attr('transform', d => 'translate(' + this.x(d) + ',0)')\n      .attr('opacity', 0);\n  }\n\n  exitYAxis() {\n    this.yExit\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  drawYAxis() {\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.valueAccessor]\n        ? this.dataKeyNames[this.valueAccessor]\n        : this.yAxis.label;\n\n    this.yUpdate\n      .each((d, i, n) => {\n        const ticks =\n          this.yAxis.scales === 'individual'\n            ? this.multiYScale[d].ticks\n            : !this.yAxis.onlyTickExtents\n            ? this.yAxis.onlyTickExtents\n            : [this.extent.minValue, this.extent.maxValue];\n        const domain = this.multiYScale[d].y.domain();\n        const hideMe =\n          domain[0] === domain[1] ? true : i === 0 || this.yAxis.scales === 'individual' ? !this.yAxis.visible : true;\n        drawAxis({\n          root: select(n[i]),\n          height: this.innerPaddedHeight,\n          width: this.innerPaddedWidth,\n          axisScale: this.yAxis.scales === 'individual' ? this.multiYScale[d].y : this.y,\n          left: true,\n          wrapLabel: this.wrapLabel ? this.padding.left : '',\n          format: this.yAxis.format,\n          tickInterval: ticks ? 1 : this.yAxis.tickInterval,\n          label: this.yAxis.scales === 'individual' || hideMe ? '' : axisLabel, // this.yAxis.label,\n          padding: this.padding,\n          hide: hideMe,\n          hidePath: true,\n          duration: this.duration,\n          ticks\n        });\n      })\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('transform', d => 'translate(' + this.x(d) + ',0)')\n      .attr('opacity', 1);\n  }\n\n  setXAxisAccessibility() {\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.ordinalAccessor]\n        ? this.dataKeyNames[this.ordinalAccessor]\n        : this.xAxis.label;\n\n    setAccessXAxis({\n      rootEle: this.parallelChartEl,\n      hasXAxis: this.xAxis ? this.xAxis.visible : false,\n      xAxis: this.x ? this.x : false, // this is optional for some charts, if hasXAxis is always false\n      xAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasXAxis is always false\n    });\n  }\n\n  setYAxisAccessibility() {\n    const axisLabelX =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.ordinalAccessor]\n        ? this.dataKeyNames[this.ordinalAccessor]\n        : this.xAxis.label;\n\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.valueAccessor]\n        ? this.dataKeyNames[this.valueAccessor]\n        : this.yAxis.label;\n\n    setAccessYAxis({\n      rootEle: this.parallelChartEl,\n      hasYAxis: this.yAxis ? this.yAxis.visible : false,\n      yAxis: this.y ? this.y : false, // this is optional for some charts, if hasXAxis is always false\n      yAxisLabel: axisLabel ? axisLabel : '', // this is optional for some charts, if hasXAxis is always false\n      xAxisLabel: axisLabelX ? axisLabelX : '' // parallel uses this to label all the y axes\n    });\n  }\n\n  drawBaseline() {\n    drawAxis({\n      root: this.gridG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.x,\n      left: false,\n      padding: this.padding,\n      markOffset: this.y(0),\n      hide: !this.showBaselineX,\n      duration: this.duration\n    });\n  }\n  // dashed line grid for chart\n  drawXGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.x,\n      false,\n      false,\n      this.xAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  drawYGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.y,\n      true,\n      !this.yAxis.gridVisible,\n      this.yAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  // lines based on data\n  enterChartLines() {\n    this.enterLines.interrupt();\n\n    this.enterLines\n      .attr('class', 'parallel-plot entering')\n      .attr('d', d => this.line(d.values))\n      .attr('data-d', d => this.line(d.values))\n      .attr('data-translate-x', this.margin.left + this.padding.left)\n      .attr('data-translate-y', this.margin.top + this.padding.top);\n\n    this.enterLines\n      .attr('cursor', !this.suppressEvents && this.seriesInteraction ? this.cursor : null)\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onHoverHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .attr('stroke-dasharray', (d, i, n) => {\n        d.linelength = n[i].getTotalLength();\n        return d.linelength + ' ' + d.linelength;\n      })\n      .attr('stroke', this.handleLineStroke)\n      .attr('fill', 'none')\n      .attr('stroke-width', 0.1);\n  }\n\n  updateChartLines() {\n    this.updateLines.interrupt();\n\n    this.updateLines\n      .transition()\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('stroke-dashoffset', 0)\n      .attr('stroke-width', d => this.calculateStrokeWidth(d, true))\n      .call(transitionEndAll, () => {\n        this.updateLines.attr('stroke-dasharray', this.handleStrokeDasharray);\n      });\n\n    this.updateLines\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', d => {\n        const lineOpacity = this.secondaryLines.keys.includes(d.key) ? this.secondaryLines.opacity : 1;\n        if (!this.seriesInteraction) {\n          return lineOpacity;\n        } else if (this.secondaryLines.keys.includes(d.key)) {\n          return checkInteraction(\n            d.values[0],\n            this.secondaryLines.opacity,\n            Math.min(this.secondaryLines.opacity, this.hoverOpacity),\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        } else {\n          return checkInteraction(\n            d.values[0], // use first data point of each line to decide interaction highlight\n            lineOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        }\n      });\n  }\n\n  exitChartLines() {\n    this.exitLines.interrupt();\n\n    this.exitLines\n      .attr('stroke-dasharray', (d, i, n) => {\n        d.linelength = n[i].getTotalLength();\n        return d.linelength + ' ' + d.linelength;\n      })\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', 0)\n      .attr('stroke-dashoffset', d => d.linelength)\n      .attr('stroke-width', 0.1)\n      .remove();\n  }\n\n  drawChartLines() {\n    if (this.interpolating) {\n      this.updateLines.attr('d', (d, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          return this.line(d.values);\n        }\n        return this.interpolating.line(d.interpolate.start);\n      });\n    }\n\n    this.updateLines\n      .attr('stroke-width', d => this.calculateStrokeWidth(d, true))\n      .attr('stroke-dashoffset', d => d.linelength)\n      .attr('data-d', d => (this.interpolating ? this.line(d.interpolate.end) : this.line(d.values)))\n      .attr('data-translate-x', this.margin.left + this.padding.left)\n      .attr('data-translate-y', this.margin.top + this.padding.top)\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('d', d => (this.interpolating ? this.line(d.interpolate.end) : this.line(d.values)))\n      .call(transitionEndAll, () => {\n        this.updateLines\n          .classed('entering', false)\n          .attr('data-d', d => this.line(d.values))\n          .attr('d', d => this.line(d.values))\n          .attr('stroke-dasharray', this.handleStrokeDasharray);\n      });\n  }\n\n  dynamicY = d => {\n    if (this.yAxis.scales === 'individual') {\n      return this.multiYScale[d[this.ordinalAccessor]].y(d[this.valueAccessor]);\n    }\n    return this.y(d[this.valueAccessor]);\n  };\n\n  interpolateDynamicY = d => {\n    if (this.yAxis.scales === 'individual') {\n      return this.interpolating.multiYScale[d[this.ordinalAccessor]].y(d[this.valueAccessor]);\n    }\n    return this.interpolating.y(d[this.valueAccessor]);\n  };\n\n  enterPoints() {\n    this.enterDots.interrupt();\n\n    this.enterDotWrappers\n      .attr('class', 'parallel-dot-wrapper')\n      .attr('opacity', 0)\n      .attr('fill', (_, i) => this.rawColors[i] || this.rawColors[0])\n      // bind interactivity for keyboard nav if series interactivity is enabled\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onSeriesHoverHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .each((_, i, n) => {\n        // we bind accessible interactivity and semantics here (role, tabindex, etc)\n        initializeElementAccess(n[i]);\n      });\n\n    this.enterDots\n      .each((_d, i, n) => {\n        initializeElementAccess(n[i]);\n      })\n      .attr('stroke', this.handleDotStroke)\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .attr('data-fill', true)\n      .attr('data-translate-x', this.margin.left + this.padding.left)\n      .attr('data-translate-y', this.margin.top + this.padding.top)\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    if (this.interpolating) {\n      this.enterDots\n        .attr('cx', d => this.interpolating.x(d[this.ordinalAccessor]))\n        .attr('cy', this.interpolateDynamicY)\n        .attr('r', d =>\n          d.enter\n            ? 0\n            : checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        )\n        .attr('stroke-width', d => this.calculateStrokeWidth(d));\n\n      this.enterDotWrappers\n        .selectAll('circle')\n        .attr('r', 0)\n        .attr('cx', d => this.x(d[this.ordinalAccessor]))\n        .attr('cy', this.dynamicY)\n        .attr('opacity', 0);\n    }\n    this.updateDotWrappers.order();\n    this.updateDots.order();\n  }\n\n  updatePoints() {\n    // this.updateDotWrappers.interrupt();\n    this.updateDots.interrupt();\n    const dotOpacity = this.showDots ? 1 : 0;\n\n    this.updateDots.attr('tabindex', (_, index) => (index === 0 ? '0' : '-1'));\n\n    this.updateDotWrappers.attr('opacity', d => {\n      const lineDotOpacity = this.secondaryLines.keys.includes(d.key) ? this.secondaryLines.opacity : dotOpacity;\n      return lineDotOpacity;\n    });\n\n    if (this.interpolating) {\n      this.updateDots.attr('opacity', d => {\n        this.exitSize += d.exit ? 1 : 0;\n        this.enterSize += d.enter ? 1 : 0;\n        return d.enter ? 0 : 1;\n      });\n      this.updateDots = this.updateDotWrappers\n        .selectAll('circle')\n        .data(d => d.interpolate.end)\n        .classed('exiting', d => d.exit);\n\n      this.enterDotWrappers.selectAll('circle').each(d => {\n        d.enterWholeGroup = true;\n      });\n\n      this.updateDots\n        .transition('opacity')\n        .ease(easeCircleIn)\n        .duration(d => {\n          if (d.enterWholeGroup) {\n            return this.duration / 2;\n          }\n          return this.duration;\n        })\n        .delay((d, i, n) => {\n          if (d.enterWholeGroup) {\n            return this.duration * 0.75 * (i / (n.length - 1));\n          }\n          return 0;\n        })\n        .attr('opacity', d => {\n          return checkInteraction(\n            d,\n            dotOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        });\n    } else {\n      this.updateDots\n        .transition('opacity')\n        .ease(easeCircleIn)\n        .duration(this.duration)\n        .attr('opacity', d => {\n          return checkInteraction(\n            d,\n            dotOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        });\n    }\n  }\n\n  exitPoints() {\n    this.exitDots.interrupt();\n\n    this.exitDots\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', 0)\n      .attr('r', 0);\n\n    this.exitDotWrappers\n      .selectAll('circle')\n      .each(d => {\n        d.exitWholeGroup = true;\n      })\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .delay((_, i, n) => {\n        return this.duration - this.duration * (i / (n.length - 1));\n      })\n      .attr('opacity', 0)\n      .attr('r', 0);\n\n    // this new transtition ensures that the chart counts and all labels\n    // correctly reflect the newest information\n    this.updateDots\n      .transition('accessibilityAfterExit')\n      .duration(this.duration / 2)\n      .delay((_, i, n) => {\n        return this.duration - this.duration * (i / (n.length - 1));\n      })\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        // before we exit geometries, we need to check if a focus exists or not\n        const focusDidExist = checkAccessFocus(this.rootG.node());\n        // then we must remove the exiting elements\n        this.exitDots.remove();\n        this.exitDotWrappers.remove();\n        this.svg.selectAll('.exiting').remove();\n        // updateDots/labels will keep references to the removed elements unless we reassign\n        this.updateDots = this.updateDotWrappers.selectAll('circle');\n        this.updatingLabels = this.updatingLabelGroups.selectAll('.parallel-dataLabel');\n        // then our util can count geometries\n        this.setChartCountAccessibility();\n        // our group's label should update with new counts too\n        this.setGroupAccessibilityID();\n        // since items exited, labels must receive updated values\n        this.setGeometryAriaLabels();\n        // and also make sure the user's focus isn't lost\n        retainAccessFocus({\n          parentGNode: this.rootG.node(),\n          focusDidExist\n          // recursive: true\n        });\n      });\n  }\n\n  // draw dots\n  drawPoints() {\n    let updateTransition;\n\n    if (this.interpolating) {\n      updateTransition = this.updateDots\n        .attr('data-cx', d => this.x(d[this.ordinalAccessor]))\n        .attr('data-cy', this.dynamicY)\n        .attr('data-translate-x', this.margin.left + this.padding.left)\n        .attr('data-translate-y', this.margin.top + this.padding.top)\n        .attr('data-r', d =>\n          d.exit\n            ? 0\n            : checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        )\n        .transition('update')\n        .ease(easeCircleIn)\n        .duration(d => {\n          if (d.enterWholeGroup) {\n            return this.duration / 2;\n          }\n          return this.duration;\n        })\n        .delay((d, i, n) => {\n          if (d.enterWholeGroup) {\n            return this.duration * 0.75 * (i / (n.length - 1));\n          }\n          return 0;\n        })\n        .attr('r', d =>\n          d.exit\n            ? 0\n            : checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        )\n        .attr('stroke-width', d => this.calculateStrokeWidth(d));\n    } else {\n      updateTransition = this.updateDots\n        .attr('data-cx', d => this.x(d[this.ordinalAccessor]))\n        .attr('data-cy', this.dynamicY)\n        .attr('data-translate-x', this.margin.left + this.padding.left)\n        .attr('data-translate-y', this.margin.top + this.padding.top)\n        .attr('data-r', d =>\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        )\n        .attr('r', d =>\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        )\n        .attr('stroke-width', d => this.calculateStrokeWidth(d))\n        .transition('update')\n        .ease(easeCircleIn)\n        .duration(this.duration);\n    }\n    this.updateDots.attr('stroke', this.handleDotStroke);\n    updateTransition\n      .attr('cx', d => this.x(d[this.ordinalAccessor]))\n      .attr('cy', this.dynamicY)\n      .call(transitionEndAll, () => {\n        this.updateDots.each(d => {\n          d.enterWholeGroup = false;\n          d.enter = false;\n        });\n        // we must make sure if geometries move, that our focus indicator does too\n        retainAccessFocus({\n          parentGNode: this.rootG.node()\n        });\n\n        // now we can emit the event that transitions are complete\n        this.transitionEndEvent.emit({ chartID: this.chartID });\n      });\n  }\n\n  enterSeriesLabels() {\n    this.seriesLabelEnter.interrupt();\n\n    this.seriesLabelEnter\n      .attr('class', 'parallel-series-label')\n      .attr('cursor', !this.suppressEvents && this.seriesInteraction ? this.cursor : null)\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onSeriesHoverHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .attr('fill', this.handleSeriesTextFill)\n      .attr('x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n      .attr('y', d => {\n        if (this.yAxis.scales === 'individual') {\n          return this.isRight\n            ? this.multiYScale[d.values[d.values.length - 1][this.ordinalAccessor]].y(\n                d.values[d.values.length - 1][this.valueAccessor]\n              )\n            : this.multiYScale[d.values[0][this.ordinalAccessor]].y(d.values[0][this.valueAccessor]);\n        }\n        return this.isRight\n          ? this.y(d.values[d.values.length - 1][this.valueAccessor])\n          : this.y(d.values[0][this.valueAccessor]);\n      })\n      // .attr('dx', (_, i, n) => {\n      //   const textElement = n[i];\n      //   const style = getComputedStyle(textElement);\n      //   const fontSize = parseFloat(style.fontSize);\n      //   const textWidth = getTextWidth(textElement.textContent, fontSize, true, style.fontFamily);\n      //   return this.isRight ? 0 : -(textWidth + 5);\n      // })\n      .attr('dx', this.isRight ? '0.3em' : '-0.3em')\n      .attr('dy', this.dataLabel && this.dataLabel.placement === 'top-right' ? '0.9em' : '-0.5em')\n      .attr('text-anchor', this.isRight ? 'start' : 'end')\n      .attr('opacity', d => {\n        const seriesLabelOpacity = !this.seriesLabel.visible\n          ? 0\n          : this.secondaryLines.keys.includes(d.key)\n          ? this.secondaryLines.opacity\n          : 1;\n\n        return checkInteraction(\n          d.values[0],\n          seriesLabelOpacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        ) < 1\n          ? 0\n          : Number.EPSILON;\n      });\n  }\n\n  updateSeriesLabels() {\n    this.seriesLabelUpdate.interrupt();\n\n    this.seriesLabelUpdate\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', d => {\n        const seriesLabelOpacity = !this.seriesLabel.visible\n          ? 0\n          : this.secondaryLines.keys.includes(d.key)\n          ? this.secondaryLines.opacity\n          : 1;\n        // check if innerInteractionKeys includes seriesAccessor, if not then don't check seriesLabel for interaction\n        if (!this.seriesInteraction) {\n          return seriesLabelOpacity;\n        } else if (this.secondaryLines.keys.includes(d.key)) {\n          return checkInteraction(\n            d.values[0],\n            seriesLabelOpacity,\n            Math.min(this.secondaryLines.opacity, this.hoverOpacity),\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        } else {\n          return checkInteraction(\n            d.values[0],\n            seriesLabelOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        }\n      });\n  }\n\n  exitSeriesLabels() {\n    this.seriesLabelExit.interrupt();\n\n    this.seriesLabelExit\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  drawSeriesLabels() {\n    const hideOnly = this.labelDetails.placement !== 'auto' && this.labelDetails.collisionHideOnly;\n    const seriesUpdate = this.seriesLabelUpdate\n      .attr('fill', this.handleSeriesTextFill)\n      .text((d, i) =>\n        this.secondaryLines.keys.includes(d.key) && !this.secondaryLines.showSeriesLabel\n          ? ''\n          : this.labelDetails.label\n          ? this.labelDetails.label[i]\n          : !d.key || d.key === 'undefined'\n          ? ''\n          : d.key\n      )\n      .style('visibility', (_, i, n) =>\n        this.labelDetails.placement === 'auto' || this.labelDetails.collisionHideOnly\n          ? select(n[i]).style('visibility')\n          : null\n      )\n      .attr('data-x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n      .attr('data-y', (d, i, n) => {\n        const textElement = n[i];\n        const style = getComputedStyle(textElement);\n        const fontSize = parseFloat(style.fontSize);\n        const textHeight = Math.max(fontSize - 1, 1); // clone.getBBox().height;\n\n        if (this.yAxis.scales === 'individual') {\n          return this.isRight\n            ? this.multiYScale[d.values[d.values.length - 1][this.ordinalAccessor]].y(\n                d.values[d.values.length - 1][this.valueAccessor]\n              )\n            : this.multiYScale[d.values[0][this.ordinalAccessor]].y(d.values[0][this.valueAccessor]);\n        }\n        return this.isRight\n          ? this.y(d.values[d.values.length - 1][this.valueAccessor]) + 0.4 * textHeight\n          : this.y(d.values[0][this.valueAccessor]) + 0.4 * textHeight;\n      })\n      .attr('dx', this.isRight ? '0.3em' : '-0.3em')\n      .attr('dy', this.dataLabel && this.dataLabel.placement === 'top-right' ? '0.9em' : '-0.5em')\n      .attr('data-use-dx', hideOnly)\n      .attr('data-use-dy', hideOnly)\n      .attr('data-translate-x', this.margin.left + this.padding.left)\n      .attr('data-translate-y', this.margin.top + this.padding.top)\n      .attr('data-text-anchor', this.isRight ? 'start' : 'end')\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration);\n\n    if (this.labelDetails.visible && (this.labelDetails.placement === 'auto' || this.labelDetails.collisionHideOnly)) {\n      this.bitmaps = resolveLabelCollision({\n        bitmaps: this.bitmaps,\n        labelSelection: seriesUpdate,\n        avoidMarks: [this.updateDots], // this will link the series label to the last point in the line\n        validPositions: hideOnly ? ['middle'] : ['middle', 'top', 'bottom'],\n        offsets: hideOnly ? [1] : [1, 4, 4],\n        accessors: ['key'],\n        size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n        hideOnly: this.labelDetails.visible && hideOnly\n      });\n\n      // if we are in hide only we still need to place the labels\n      if (hideOnly) {\n        seriesUpdate\n          .attr('text-anchor', this.isRight ? 'start' : 'end')\n          .attr('x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n          .attr('y', d => {\n            if (this.yAxis.scales === 'individual') {\n              return this.isRight\n                ? this.multiYScale[d.values[d.values.length - 1][this.ordinalAccessor]].y(\n                    d.values[d.values.length - 1][this.valueAccessor]\n                  )\n                : this.multiYScale[d.values[0][this.ordinalAccessor]].y(d.values[0][this.valueAccessor]);\n            }\n            return this.isRight\n              ? this.y(d.values[d.values.length - 1][this.valueAccessor])\n              : this.y(d.values[0][this.valueAccessor]);\n          })\n          .attr('dx', this.isRight ? '0.3em' : '-0.3em')\n          .attr('dy', this.dataLabel && this.dataLabel.placement === 'top-right' ? '0.9em' : '-0.5em');\n      }\n    } else {\n      seriesUpdate\n        .attr('text-anchor', this.isRight ? 'start' : 'end')\n        .attr('x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n        .attr('y', d => {\n          if (this.yAxis.scales === 'individual') {\n            return this.isRight\n              ? this.multiYScale[d.values[d.values.length - 1][this.ordinalAccessor]].y(\n                  d.values[d.values.length - 1][this.valueAccessor]\n                )\n              : this.multiYScale[d.values[0][this.ordinalAccessor]].y(d.values[0][this.valueAccessor]);\n          }\n          return this.isRight\n            ? this.y(d.values[d.values.length - 1][this.valueAccessor])\n            : this.y(d.values[0][this.valueAccessor]);\n        })\n        .attr('dx', this.isRight ? '0.3em' : '-0.3em')\n        .attr('dy', this.dataLabel && this.dataLabel.placement === 'top-right' ? '0.9em' : '-0.5em');\n    }\n  }\n\n  enterDataLabels() {\n    this.enteringLabels.interrupt();\n\n    this.enteringLabelGroups\n      .attr('class', 'parallel-label-wrapper')\n      .attr('opacity', 0)\n      .attr('fill', (_, i) => this.rawColors[i] || this.rawColors[0]);\n\n    this.enteringLabels\n      .attr('opacity', 0)\n      .attr('fill', this.handleTextFill)\n      .attr('class', 'parallel-dataLabel')\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    if (this.interpolating) {\n      const childrenEnter = this.enteringLabels.attr('class', 'parallel-dataLabel').attr('opacity', Number.EPSILON);\n\n      placeDataLabels({\n        root: childrenEnter,\n        xScale: this.interpolating.x,\n        yScale: this.interpolateDynamicY,\n        ordinalAccessor: this.ordinalAccessor,\n        valueAccessor: this.valueAccessor,\n        placement: this.dataLabel.placement,\n        chartType: 'parallel'\n      });\n\n      this.updatingLabels.attr('opacity', d => (d.enter ? Number.EPSILON : 1));\n\n      const fullEnter = this.enteringLabelGroups.selectAll('.parallel-dataLabel').attr('opacity', Number.EPSILON);\n\n      placeDataLabels({\n        root: fullEnter,\n        xScale: this.x,\n        yScale: this.dynamicY,\n        ordinalAccessor: this.ordinalAccessor,\n        valueAccessor: this.valueAccessor,\n        placement: this.dataLabel.placement,\n        chartType: 'parallel'\n      });\n    } else {\n      const childrenEnter = this.enteringLabels.attr('opacity', Number.EPSILON).attr('class', 'parallel-dataLabel');\n\n      placeDataLabels({\n        root: childrenEnter,\n        xScale: this.x,\n        yScale: this.dynamicY,\n        ordinalAccessor: this.ordinalAccessor,\n        valueAccessor: this.valueAccessor,\n        placement: this.dataLabel.placement,\n        chartType: 'parallel'\n      });\n    }\n    // now we check whether we have auto collision to consider\n    if (this.dataLabel.placement === 'auto') {\n      this.updatingLabels.each((d, i, n) => {\n        // we check hash for each updated label, don't touch enter/exit/hidden stuff at all\n        if (\n          !d.enter &&\n          !d.exit &&\n          !d.hidden &&\n          (d['auto-x'] || d['auto-x'] === 0) &&\n          (d['auto-y'] || d['auto-y'] === 0)\n        ) {\n          select(n[i])\n            .attr('x', +select(n[i]).attr('x') + (+d['auto-x'] || 0))\n            .attr('y', +select(n[i]).attr('y') + (+d['auto-y'] || 0))\n            .attr('text-anchor', d['auto-text-anchor']);\n        }\n      });\n    }\n  }\n\n  updateDataLabels() {\n    this.updatingLabelGroups.interrupt();\n\n    this.updatingLabelGroups.attr('opacity', d => {\n      const labelOpacity = !this.dataLabel.visible\n        ? 0\n        : this.secondaryLines.keys.includes(d.key) && this.secondaryLines.showDataLabel\n        ? this.secondaryLines.opacity\n        : this.secondaryLines.keys.includes(d.key) && !this.secondaryLines.showDataLabel\n        ? 0\n        : 1;\n      return labelOpacity;\n    });\n\n    if (this.interpolating) {\n      this.updatingLabels = this.updatingLabelGroups\n        .selectAll('.parallel-dataLabel')\n        .data(d => d.interpolate.end)\n        .classed('exiting', d => d.exit);\n\n      this.enteringLabelGroups.each(d => (d.enterWholeGroup = true));\n\n      this.updatingLabels\n        .transition('opacity')\n        .ease(easeCircleIn)\n        .duration(d => {\n          if (d.enterWholeGroup) {\n            return this.duration / 2;\n          }\n          return this.duration;\n        })\n        .delay((d, i, n) => {\n          if (d.enterWholeGroup) {\n            return this.duration * 0.75 * (i / (n.length - 1));\n          }\n          return 0;\n        })\n        .attr('opacity', (d, i, n) => {\n          const targetOpacity = d.exit\n            ? 0\n            : checkInteraction(\n                d,\n                1,\n                this.hoverOpacity,\n                this.hoverHighlight,\n                this.clickHighlight,\n                this.innerInteractionKeys\n              ) < 1\n            ? 0\n            : 1;\n          const parentOpacity = +select(n[i].parentNode).attr('opacity');\n          select(n[i]).attr('data-hidden', parentOpacity === 0 || targetOpacity === 0 ? 'true' : null);\n          return targetOpacity;\n        });\n    } else {\n      this.updatingLabels.attr('opacity', (d, i, n) => {\n        const targetOpacity = d.exit\n          ? 0\n          : checkInteraction(\n              d,\n              1,\n              this.hoverOpacity,\n              this.hoverHighlight,\n              this.clickHighlight,\n              this.innerInteractionKeys\n            ) < 1\n          ? 0\n          : 1;\n        const parentOpacity = +select(n[i].parentNode).attr('opacity');\n        select(n[i]).attr('data-hidden', parentOpacity === 0 || targetOpacity === 0 ? 'true' : null);\n        return targetOpacity;\n      });\n    }\n  }\n\n  exitDataLabels() {\n    this.exitingLabels.interrupt();\n\n    this.exitingLabels\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', 0)\n      .remove();\n\n    this.exitingLabelGroups\n      .selectAll('.parallel-dataLabel')\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .delay((_, i, n) => {\n        return this.duration - this.duration * (i / (n.length - 1));\n      })\n      .attr('opacity', 0)\n      .call(transitionEndAll, () => {\n        this.exitingLabelGroups.remove();\n      });\n  }\n\n  drawDataLabels() {\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n\n    let updateChildren = this.updatingLabels.text(d => {\n      return formatDataLabel(d, this.innerLabelAccessor, this.dataLabel.format);\n    });\n    if (this.interpolating) {\n      updateChildren = this.updatingLabels\n        .style('visibility', (d, i, n) =>\n          this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly\n            ? d.hidden\n              ? 'hidden'\n              : select(n[i]).style('visibility')\n            : null\n        )\n        .attr('data-x', d => this.interpolating.x(d[this.ordinalAccessor]))\n        .attr('data-y', this.interpolateDynamicY)\n        .attr('data-translate-x', this.margin.left + this.padding.left)\n        .attr('data-translate-y', this.margin.top + this.padding.top)\n        .transition('update')\n        .ease(easeCircleIn)\n        .duration(d => {\n          if (d.enterWholeGroup) {\n            return this.duration / 2;\n          }\n          return this.duration;\n        })\n        .delay((d, i, n) => {\n          if (d.enterWholeGroup) {\n            return this.duration * 0.75 * (i / (n.length - 1));\n          }\n          return 0;\n        });\n    } else {\n      updateChildren = this.updatingLabels\n        .style('visibility', (d, i, n) =>\n          this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly\n            ? d.hidden\n              ? 'hidden'\n              : select(n[i]).style('visibility')\n            : null\n        )\n        .attr('data-x', d => this.x(d[this.ordinalAccessor]))\n        .attr('data-y', this.dynamicY)\n        .attr('data-translate-x', this.margin.left + this.padding.left)\n        .attr('data-translate-y', this.margin.top + this.padding.top)\n        .transition('update')\n        .ease(easeCircleIn)\n        .duration(this.duration);\n    }\n\n    const axisRules = this.gridG\n      .selectAll('line')\n      .attr('data-y2', this.innerPaddedHeight)\n      .attr('data-y1', 0)\n      .attr('data-translate-x', this.margin.left + this.padding.left)\n      .attr('data-translate-y', this.margin.top + this.padding.top)\n      .attr('data-x1', d => this.x(d))\n      .attr('data-x2', d => this.x(d));\n\n    const yAxisTexts = this.yUpdate\n      .selectAll('.y.axis')\n      .filter((_, i, n) => +select(n[i]).attr('opacity') >= 0.0001) // this filter has an issue with transitions\n      .selectAll('text')\n      .attr('data-fill', true)\n      .attr('data-y', d => this.y(d))\n      .attr('data-width', (_, i, n) => {\n        const textElement = n[i];\n        const style = getComputedStyle(textElement);\n        const fontSize = parseFloat(style.fontSize);\n        const textHeight = Math.max(fontSize - 1, 1); // clone.getBBox().height;\n        const textWidth = getTextWidth(textElement.textContent, fontSize, true, style.fontFamily);\n        select(textElement)\n          .attr('data-x', +select(textElement).attr('x'))\n          .attr('data-translate-x', this.margin.left + this.padding.left - textWidth)\n          .attr('data-translate-y', this.margin.top + this.padding.top - textHeight / 2)\n          .attr('data-height', textHeight);\n        return textWidth;\n      });\n\n    const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n    const validPositions = hideOnly\n      ? ['middle']\n      : collisionPlacement && this.collisionSettings[collisionPlacement] // check whether placement provided maps correctly\n      ? this.collisionSettings[collisionPlacement].validPositions\n      : this.collisionSettings['all'].validPositions;\n    const offsets = hideOnly\n      ? [1]\n      : collisionPlacement && this.collisionSettings[collisionPlacement] // check whether placement provided maps correctly\n      ? this.collisionSettings[collisionPlacement].offsets\n      : this.collisionSettings['all'].offsets;\n\n    this.bitmaps = placeDataLabels({\n      root: updateChildren,\n      xScale: this.x,\n      yScale: this.dynamicY,\n      ordinalAccessor: this.ordinalAccessor,\n      valueAccessor: this.valueAccessor,\n      placement: this.dataLabel.placement,\n      chartType: 'parallel',\n      avoidCollision: {\n        runOccupancyBitmap: this.dataLabel.visible && this.dataLabel.placement === 'auto',\n        labelSelection: updateChildren,\n        avoidMarks: [yAxisTexts, axisRules, this.updateLines, this.updateDots],\n        validPositions,\n        offsets,\n        accessors: [this.ordinalAccessor, this.seriesAccessor, 'key'], // key is created for lines by nesting done in line,\n        size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n        hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly\n      }\n    });\n\n    // we need to maintain some values since parallel has customized lifecycle setup\n    updateChildren.call(transitionEndAll, () => {\n      this.hiddenHash = {}; // empty out hash each time to be safe\n      this.updatingLabels.each((d, i, n) => {\n        // store results to hash so we can use them in lifecycle (specific to line/parallel lifecycle only)\n        this.hiddenHash[`${d[this.ordinalAccessor]}-${d[this.seriesAccessor] || 'b'}`] = {\n          'data-label-hidden': select(n[i]).attr('data-label-hidden') === 'true',\n          x: +select(n[i]).attr('x') - +select(n[i]).attr('data-x'),\n          y: +select(n[i]).attr('y') - +select(n[i]).attr('data-y'),\n          'text-anchor': select(n[i]).attr('text-anchor')\n        };\n      });\n    });\n  }\n\n  updateInteractionState() {\n    // we created an \"opacity\" transition namespace in update's transition\n    // we override it here to instantly display opacity state (below)\n    this.updateLines.interrupt('opacity');\n\n    // the lifecycle state does not matter (enter/update/exit)\n    // since interaction state can happen at any time\n    this.updateLines.attr('opacity', d => {\n      const lineOpacity = this.secondaryLines.keys.includes(d.key) ? this.secondaryLines.opacity : 1;\n      if (!this.seriesInteraction) {\n        return lineOpacity;\n      } else if (this.secondaryLines.keys.includes(d.key)) {\n        return checkInteraction(\n          d.values[0],\n          this.secondaryLines.opacity,\n          Math.min(this.secondaryLines.opacity, this.hoverOpacity),\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        );\n      } else {\n        return checkInteraction(\n          d.values[0], // use first data point of each line to decide interaction highlight\n          lineOpacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        );\n      }\n    });\n\n    const dotOpacity = this.showDots ? 1 : 0;\n    this.updateDotWrappers.attr('opacity', d => {\n      const lineDotOpacity = this.secondaryLines.keys.includes(d.key) ? this.secondaryLines.opacity : dotOpacity;\n      return lineDotOpacity;\n    });\n\n    this.updateDots.each((d, i, n) => {\n      if (!d.enter && !d.enterWholeGroup && !d.exit && !d.exitWholeGroup) {\n        select(n[i]).attr('opacity', () => {\n          return checkInteraction(\n            d,\n            dotOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        });\n      }\n    });\n\n    retainAccessFocus({\n      parentGNode: this.rootG.node()\n    });\n\n    setLegendInteractionState({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.seriesAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.hoverStyle,\n      clickStyle: this.clickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  setSeriesLabelOpacity() {\n    const hideOnly = this.labelDetails.placement !== 'auto' && this.labelDetails.collisionHideOnly;\n    const addCollisionClass = this.labelDetails.placement === 'auto' || hideOnly;\n\n    this.seriesLabelUpdate.each((d, i, n) => {\n      const me = select(n[i]);\n      const prevOpacity = +me.attr('opacity');\n      const styleVisibility = me.style('visibility');\n      if (!me.classed('entering')) {\n        me.attr('opacity', () => {\n          const seriesLabelOpacity =\n            (!this.seriesLabel.visible\n              ? 0\n              : this.secondaryLines.keys.includes(d.key)\n              ? this.secondaryLines.opacity\n              : 1) < 1\n              ? 0\n              : 1;\n          const parentOpacity = +select(n[i].parentNode).attr('opacity');\n          me.attr('data-hidden', parentOpacity === 0 || seriesLabelOpacity === 0 ? 'true' : null);\n          // check if innerInteractionKeys includes seriesAccessor, if not then don't check seriesLabel for interaction\n          if (!this.seriesInteraction) {\n            select(n[i]).attr('data-hidden', seriesLabelOpacity === 0 ? 'true' : null);\n            if (prevOpacity !== seriesLabelOpacity && (this.labelDetails.placement === 'auto' || hideOnly)) {\n              if (seriesLabelOpacity === 1) {\n                select(n[i])\n                  .classed('collision-added', true)\n                  .style('visibility', null);\n              } else {\n                select(n[i]).classed('collision-removed', true);\n              }\n            }\n            return seriesLabelOpacity;\n          } else if (this.secondaryLines.keys.includes(d.key)) {\n            const targetOpacity =\n              checkInteraction(\n                d.values[0],\n                seriesLabelOpacity,\n                Math.min(this.secondaryLines.opacity, this.hoverOpacity),\n                this.hoverHighlight,\n                this.clickHighlight,\n                this.innerInteractionKeys\n              ) < 1\n                ? 0\n                : 1;\n            select(n[i]).attr('data-hidden', targetOpacity === 0 ? 'true' : null);\n            if (\n              ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n              (this.labelDetails.placement === 'auto' || hideOnly)\n            ) {\n              if (targetOpacity === 1) {\n                select(n[i])\n                  .classed('collision-added', true)\n                  .style('visibility', null);\n              } else {\n                select(n[i]).classed('collision-removed', true);\n              }\n            }\n            return targetOpacity;\n          } else {\n            const targetOpacity =\n              checkInteraction(\n                d.values[0],\n                seriesLabelOpacity,\n                this.hoverOpacity,\n                this.hoverHighlight,\n                this.clickHighlight,\n                this.innerInteractionKeys\n              ) < 1\n                ? 0\n                : 1;\n            select(n[i]).attr('data-hidden', targetOpacity === 0 ? 'true' : null);\n            if (\n              ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n              (this.labelDetails.placement === 'auto' || hideOnly)\n            ) {\n              if (targetOpacity === 1) {\n                select(n[i])\n                  .classed('collision-added', true)\n                  .style('visibility', null);\n              } else {\n                select(n[i]).classed('collision-removed', true);\n              }\n            }\n            return targetOpacity;\n          }\n        });\n      }\n    });\n\n    if (addCollisionClass) {\n      const labelsAdded = this.seriesLabelUpdate\n        .filter((_, i, n) => select(n[i]).classed('collision-added'))\n        .attr(\n          'data-text-anchor',\n          (_, i, n) => select(n[i]).attr('collision-text-anchor') || select(n[i]).attr('data-text-anchor')\n        )\n        .attr('collision-text-anchor', null);\n      const labelsRemoved = this.seriesLabelUpdate\n        .filter((_, i, n) => select(n[i]).classed('collision-removed'))\n        .attr('data-use-dx', hideOnly)\n        .attr('data-use-dy', hideOnly)\n        .attr('keep-data-y', hideOnly)\n        .attr('collision-text-anchor', (_, i, n) => select(n[i]).attr('data-text-anchor'))\n        .attr('data-text-anchor', null); // need this for remove only\n\n      // we can now remove labels as well if we need to...\n      if (labelsRemoved.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsRemoved,\n          avoidMarks: [], // [this.updateDots], // this will link the series label to the last point in the line\n          validPositions: ['middle'],\n          offsets: [1],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n          hideOnly: false,\n          removeOnly: true\n        });\n\n        // remove temporary class now\n        labelsRemoved.classed('collision-removed', false).attr('keep-data-y', null);\n      }\n\n      // we can now add labels as well if we need to...\n      if (labelsAdded.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsAdded,\n          avoidMarks: [this.updateDots], // this will link the series label to the last point in the line\n          validPositions: hideOnly ? ['middle'] : ['middle', 'top', 'bottom'],\n          offsets: hideOnly ? [1] : [1, 4, 4],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n          hideOnly: this.labelDetails.visible && hideOnly\n        });\n\n        // if we are in hide only we still need to place the labels\n        if (hideOnly) {\n          labelsAdded\n            .attr('text-anchor', this.isRight ? 'start' : 'end')\n            .attr('x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n            .attr('y', d => {\n              if (this.yAxis.scales === 'individual') {\n                return this.isRight\n                  ? this.multiYScale[d.values[d.values.length - 1][this.ordinalAccessor]].y(\n                      d.values[d.values.length - 1][this.valueAccessor]\n                    )\n                  : this.multiYScale[d.values[0][this.ordinalAccessor]].y(d.values[0][this.valueAccessor]);\n              }\n              return this.isRight\n                ? this.y(d.values[d.values.length - 1][this.valueAccessor])\n                : this.y(d.values[0][this.valueAccessor]);\n            })\n            .attr('dx', this.isRight ? '0.3em' : '-0.3em')\n            .attr('dy', this.dataLabel && this.dataLabel.placement === 'top-right' ? '0.9em' : '-0.5em');\n        }\n        // remove temporary class now\n        labelsAdded.classed('collision-added', false);\n      }\n    }\n  }\n\n  setLabelOpacity() {\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n    const addCollisionClass = this.dataLabel.placement === 'auto' || hideOnly;\n    const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n\n    this.updatingLabelGroups.attr('opacity', d => {\n      return (!this.dataLabel.visible\n        ? 0\n        : this.secondaryLines.keys.includes(d.key) && this.secondaryLines.showDataLabel\n        ? this.secondaryLines.opacity\n        : this.secondaryLines.keys.includes(d.key) && !this.secondaryLines.showDataLabel\n        ? 0\n        : 1) < 1\n        ? 0\n        : 1;\n    });\n    this.updatingLabels.each((d, i, n) => {\n      const prevOpacity = +select(n[i]).attr('opacity');\n      const styleVisibility = select(n[i]).style('visibility');\n      if (!d.enter && !d.enterWholeGroup && !d.exit && !d.exitWholeGroup) {\n        select(n[i]).attr('opacity', () => {\n          const targetOpacity =\n            checkInteraction(\n              d,\n              1,\n              this.hoverOpacity,\n              this.hoverHighlight,\n              this.clickHighlight,\n              this.innerInteractionKeys\n            ) < 1\n              ? 0\n              : 1;\n          const parentOpacity = +select(n[i].parentNode).attr('opacity');\n          select(n[i]).attr('data-hidden', parentOpacity === 0 || targetOpacity === 0 ? 'true' : null);\n          if (\n            ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n            (this.dataLabel.placement === 'auto' || hideOnly)\n          ) {\n            if (targetOpacity === 1) {\n              select(n[i])\n                .classed('collision-added', true)\n                .style('visibility', null);\n            } else {\n              select(n[i]).classed('collision-removed', true);\n            }\n          }\n          return targetOpacity;\n        });\n      }\n    });\n\n    if (addCollisionClass) {\n      const labelsAdded = this.updatingLabels\n        .filter((_, i, n) => select(n[i]).classed('collision-added'))\n        .transition()\n        .duration(0);\n      const labelsRemoved = this.updatingLabels\n        .filter((_, i, n) => select(n[i]).classed('collision-removed'))\n        .attr('data-use-dx', hideOnly)\n        .attr('data-use-dy', hideOnly);\n\n      const validPositions = hideOnly\n        ? ['middle']\n        : collisionPlacement && this.collisionSettings[collisionPlacement] // check whether placement provided maps correctly\n        ? this.collisionSettings[collisionPlacement].validPositions\n        : this.collisionSettings['all'].validPositions;\n      const offsets = hideOnly\n        ? [1]\n        : collisionPlacement && this.collisionSettings[collisionPlacement] // check whether placement provided maps correctly\n        ? this.collisionSettings[collisionPlacement].offsets\n        : this.collisionSettings['all'].offsets;\n\n      // we can now remove labels as well if we need to...\n      if (labelsRemoved.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsRemoved,\n          avoidMarks: [], // [this.updateDots], // this will link the series label to the last point in the line\n          validPositions: ['middle'],\n          offsets: [1],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n          hideOnly: false,\n          removeOnly: true\n        });\n\n        // remove temporary class now\n        labelsRemoved.classed('collision-removed', false);\n      }\n\n      // we can now add labels as well if we need to...\n      if (labelsAdded.size() > 0) {\n        this.bitmaps = placeDataLabels({\n          root: labelsAdded,\n          xScale: this.x,\n          yScale: this.dynamicY,\n          ordinalAccessor: this.ordinalAccessor,\n          valueAccessor: this.valueAccessor,\n          placement: this.dataLabel.placement,\n          chartType: 'parallel',\n          avoidCollision: {\n            runOccupancyBitmap: this.dataLabel.visible && this.dataLabel.placement === 'auto',\n            bitmaps: this.bitmaps,\n            labelSelection: labelsAdded,\n            avoidMarks: [this.updateLines, this.updateDots],\n            validPositions,\n            offsets,\n            accessors: [this.ordinalAccessor, this.seriesAccessor, 'key'], // key is created for lines by nesting done in line,\n            size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n            hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly,\n            suppressMarkDraw: true\n          }\n        });\n\n        // we need to maintain some values since line has customized lifecycle setup\n        labelsAdded.call(transitionEndAll, () => {\n          this.updatingLabels.each((d, i, n) => {\n            select(n[i]).classed('collision-added', false);\n            // store results to hash so we can use them in lifecycle (specific to line/parallel lifecycle only)\n            this.hiddenHash[`${d[this.ordinalAccessor]}-${d[this.seriesAccessor] || 'b'}`] = {\n              'data-label-hidden': select(n[i]).attr('data-label-hidden') === 'true',\n              x: +select(n[i]).attr('x') - +select(n[i]).attr('data-x'),\n              y: +select(n[i]).attr('y') - +select(n[i]).attr('data-y'),\n              'text-anchor': select(n[i]).attr('text-anchor')\n            };\n          });\n        });\n      }\n    }\n  }\n\n  bindInteractivity() {\n    this.updateLines\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onHoverHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    this.updateDots\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    // we bind the G for keyboard interactivity\n    // this does not effect mouse, but enables keyboard series selection to\n    // tap into series interactivity, if enabled\n    this.dotG\n      .selectAll('.parallel-dot-wrapper')\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onSeriesHoverHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    this.seriesLabelUpdate\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onSeriesHoverHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    this.updatingLabels\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  addStrokeUnder() {\n    const filter = createTextStrokeFilter({\n      root: this.svg.node(),\n      id: this.chartID,\n      color: '#ffffff'\n    });\n    this.labels.attr('filter', filter);\n    this.seriesLabelG.attr('filter', filter);\n  }\n\n  handleDotStroke = (d, i, n) => {\n    if (!this.accessibility.hideStrokes) {\n      const clicked =\n        this.clickHighlight &&\n        this.clickHighlight.length > 0 &&\n        checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n      const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n      const baseColor = select(n[i].parentNode).attr('fill');\n      const color =\n        clicked && this.clickStyle.color\n          ? visaColors[this.clickStyle.color] || this.clickStyle.color\n          : clicked\n          ? baseColor\n          : hovered && this.hoverStyle.color\n          ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n          : baseColor;\n      select(n[i]).attr('stroke-width', this.calculateStrokeWidth(d));\n      select(n[i]).attr('fill', color);\n      return this.strokes[color.toLowerCase()];\n    }\n    return null;\n  };\n\n  handleLineStroke = (data, i) => {\n    const baseColor = this.colorArr[i] || this.colorArr[0];\n    const d = data.values[0];\n    const clicked = checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n    const hovered = checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n    return this.seriesInteraction\n      ? clicked && this.clickStyle.color\n        ? this.strokes[(visaColors[this.clickStyle.color] || this.clickStyle.color).toLowerCase()]\n        : clicked\n        ? baseColor\n        : hovered && this.hoverStyle.color\n        ? this.strokes[(visaColors[this.hoverStyle.color] || this.hoverStyle.color).toLowerCase()]\n        : baseColor\n      : baseColor;\n  };\n\n  handleSeriesTextFill = (data, i) => {\n    const baseColor = this.rawColors[i] || this.rawColors[0];\n    const d = data.values[0];\n    const clicked = checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n    const hovered = checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n    const color = this.seriesInteraction\n      ? clicked && this.clickStyle.color\n        ? visaColors[this.clickStyle.color] || this.clickStyle.color\n        : clicked\n        ? baseColor\n        : hovered && this.hoverStyle.color\n        ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n        : baseColor\n      : baseColor;\n    return this.textColors[color.toLowerCase()];\n  };\n\n  handleTextFill = (d, i, n) => {\n    const clicked =\n      this.clickHighlight &&\n      this.clickHighlight.length > 0 &&\n      checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n    const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n    const baseColor = select(n[i].parentNode).attr('fill');\n    const color =\n      clicked && this.clickStyle.color\n        ? visaColors[this.clickStyle.color] || this.clickStyle.color\n        : clicked\n        ? baseColor\n        : hovered && this.hoverStyle.color\n        ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n        : baseColor;\n    return this.textColors[color.toLowerCase()];\n  };\n\n  updateColors() {\n    this.updateDotWrappers.attr('fill', (_, i) => this.rawColors[i] || this.rawColors[0]);\n    this.updateDots.attr('stroke', this.handleDotStroke);\n    this.updateLines.attr('stroke', this.handleLineStroke);\n    this.seriesLabelUpdate.attr('fill', this.handleSeriesTextFill);\n    this.updatingLabelGroups.attr('fill', (_, i) => this.rawColors[i] || this.rawColors[0]);\n    this.updatingLabels.attr('fill', this.handleTextFill);\n  }\n\n  updateCursor() {\n    this.updateLines.attr('cursor', !this.suppressEvents && this.seriesInteraction ? this.cursor : null);\n    this.updateDots.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    this.seriesLabelUpdate.attr('cursor', !this.suppressEvents && this.seriesInteraction ? this.cursor : null);\n    this.updatingLabels.attr('cursor', !this.suppressEvents ? this.cursor : null);\n  }\n\n  updateStrokeWidth() {\n    this.updateLines.attr('stroke-width', d => this.calculateStrokeWidth(d, true));\n    this.updateDots.attr('stroke', this.handleDotStroke);\n  }\n\n  calculateStrokeWidth = (data, useChildData?) => {\n    const d = !useChildData ? data : data.values[0];\n    return !useChildData || this.seriesInteraction\n      ? checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n        ? this.clickStyle.strokeWidth || this.strokeWidth\n        : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n        ? this.hoverStyle.strokeWidth || this.strokeWidth\n        : !this.secondaryLines.keys.includes(d[this.seriesAccessor])\n        ? this.strokeWidth\n        : 1\n      : !this.secondaryLines.keys.includes(d[this.seriesAccessor])\n      ? this.strokeWidth\n      : 1;\n  };\n\n  updateStrokePattern() {\n    this.updateLines.attr('stroke-dasharray', this.handleStrokeDasharray);\n  }\n\n  handleStrokeDasharray = (d, i) => {\n    return this.secondaryLines.keys.includes(d.key)\n      ? this.short\n      : !this.accessibility.hideTextures\n      ? this.dashPatterns[i]\n      : '';\n  };\n\n  updateDotRadius() {\n    this.updateDots\n      .each((d, i, n) => {\n        const me = select(n[i]);\n        if (!d.enter && !d.enterWholeGroup && !me.classed('entering') && !d.exit) {\n          me.attr('r', () =>\n            checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n              ? this.dotRadius +\n                (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n              : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n              ? this.dotRadius +\n                (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n              : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n              ? this.dotRadius + 0.5\n              : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n          );\n        }\n      })\n      .attr('stroke', this.handleDotStroke);\n  }\n\n  setSelectedClass() {\n    this.updateDots.classed('highlight', (d, i, n) => {\n      let selected = checkInteraction(d, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n      selected = this.clickHighlight && this.clickHighlight.length ? selected : false;\n      const selectable = this.accessibility.elementsAreInterface;\n      setElementInteractionAccessState(n[i], selected, selectable);\n      return selected;\n    });\n  }\n\n  drawAnnotations() {\n    annotate({\n      source: this.rootG.node(),\n      data: this.annotations,\n      xScale: this.x,\n      xAccessor: this.ordinalAccessor,\n      yScale: this.y,\n      yAccessor: this.valueAccessor,\n      width: this.width,\n      height: this.height,\n      padding: this.padding,\n      margin: this.margin,\n      bitmaps: this.bitmaps\n    });\n  }\n\n  setAnnotationAccessibility() {\n    setAccessAnnotation(this.getLanguageString(), this.parallelChartEl, this.annotations, undefined);\n  }\n\n  // new accessibility functions added here\n  setTagLevels() {\n    this.topLevel = findTagLevel(this.highestHeadingLevel);\n    this.bottomLevel = findTagLevel(this.highestHeadingLevel, 3);\n  }\n\n  setChartDescriptionWrapper() {\n    // this initializes the accessibility description section of the chart\n    initializeDescriptionRoot({\n      language: this.getLanguageString(),\n      rootEle: this.parallelChartEl,\n      title: this.accessibility.title || this.mainTitle,\n      chartTag: 'parallel-plot',\n      uniqueID: this.chartID,\n      highestHeadingLevel: this.highestHeadingLevel,\n      redraw: this.shouldRedrawWrapper,\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      hideDataTable: this.accessibility.hideDataTableButton\n    });\n    this.shouldRedrawWrapper = false;\n  }\n\n  setParentSVGAccessibility() {\n    // this sets the accessibility features of the root SVG element\n    setAccessibilityController({\n      chartTag: 'parallel-plot',\n      language: this.getLanguageString(),\n      node: this.svg.node(),\n      title: this.accessibility.title || this.mainTitle,\n      description: this.subTitle,\n      uniqueID: this.chartID,\n      geomType: 'point',\n      includeKeyNames: this.accessibility.includeDataKeyNames,\n      dataKeys: this.innerScopeDataKeys(),\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.seriesAccessor,\n      groupName: 'line',\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled\n    });\n  }\n\n  setGeometryAccessibilityAttributes() {\n    // this makes sure every geom element has correct event handlers + semantics (role, tabindex, etc)\n    this.updateDots.each((_d, i, n) => {\n      initializeElementAccess(n[i]);\n    });\n  }\n\n  setGeometryAriaLabels() {\n    // this adds an ARIA label to each geom (a description read by screen readers)\n    const keys = this.innerScopeDataKeys();\n    this.updateDots.each((_d, i, n) => {\n      setElementFocusHandler({\n        chartTag: 'parallel-plot',\n        language: this.getLanguageString(),\n        node: n[i],\n        geomType: 'point',\n        includeKeyNames: this.accessibility.includeDataKeyNames,\n        dataKeys: keys,\n        dataKeyNames: this.dataKeyNames,\n        groupName: 'line',\n        uniqueID: this.chartID,\n        disableKeyNav:\n          this.suppressEvents &&\n          this.accessibility.elementsAreInterface === false &&\n          this.accessibility.keyboardNavConfig &&\n          this.accessibility.keyboardNavConfig.disabled\n      });\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setGroupAccessibilityID() {\n    // this sets an ARIA label on all the g elements in the chart\n    this.updateDotWrappers.each((_, i, n) => {\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setChartAccessibilityTitle() {\n    setAccessTitle(this.getLanguageString(), this.parallelChartEl, this.accessibility.title || this.mainTitle);\n  }\n\n  setChartAccessibilitySubtitle() {\n    setAccessSubtitle(this.getLanguageString(), this.parallelChartEl, this.subTitle);\n  }\n\n  setChartAccessibilityLongDescription() {\n    setAccessLongDescription(this.getLanguageString(), this.parallelChartEl, this.accessibility.longDescription);\n  }\n\n  setChartAccessibilityExecutiveSummary() {\n    setAccessExecutiveSummary(this.getLanguageString(), this.parallelChartEl, this.accessibility.executiveSummary);\n  }\n\n  setChartAccessibilityPurpose() {\n    setAccessPurpose(this.getLanguageString(), this.parallelChartEl, this.accessibility.purpose);\n  }\n\n  setChartAccessibilityContext() {\n    setAccessContext(this.getLanguageString(), this.parallelChartEl, this.accessibility.contextExplanation);\n  }\n\n  setChartAccessibilityStatisticalNotes() {\n    setAccessStatistics(this.getLanguageString(), this.parallelChartEl, this.accessibility.statisticalNotes);\n  }\n\n  setChartCountAccessibility() {\n    // this is our automated section that describes the chart contents\n    // (like geometry and gorup counts, etc)\n    setAccessChartCounts({\n      rootEle: this.parallelChartEl,\n      parentGNode: this.dotG.node(), // pass the wrapper to <g> or geometries here, should be single node selection\n      chartTag: 'parallel-plot',\n      geomType: 'point',\n      groupName: 'line'\n      // recursive: true\n    });\n  }\n\n  setChartAccessibilityStructureNotes() {\n    setAccessStructure(this.getLanguageString(), this.parallelChartEl, this.accessibility.structureNotes);\n  }\n  // new accessibility stuff ends here\n\n  onChangeHandler() {\n    if (this.accessibility && typeof this.accessibility.onChangeFunc === 'function') {\n      const d = {\n        updated: this.updated,\n        added: this.enterSize,\n        removed: this.exitSize\n      };\n      this.accessibility.onChangeFunc(d);\n    }\n    this.interpolating = false;\n    this.updated = false;\n    this.enterSize = 0;\n    this.exitSize = 0;\n  }\n\n  onClickHandler(d, n) {\n    this.clickEvent.emit({ data: d, target: n });\n  }\n\n  onHoverHandler(d, n) {\n    overrideTitleTooltip(this.chartID, true);\n    this.hoverEvent.emit({ data: d, target: n });\n    if (this.showTooltip && d[this.ordinalAccessor]) {\n      this.eventsTooltip({ data: d, evt: event, isToShow: true });\n    }\n  }\n\n  onSeriesHoverHandler(d, n) {\n    this.hoverEvent.emit({ data: d, target: n });\n  }\n\n  onMouseOutHandler() {\n    overrideTitleTooltip(this.chartID, false);\n    this.mouseOutEvent.emit();\n    if (this.showTooltip) {\n      this.eventsTooltip({ isToShow: false });\n    }\n  }\n\n  // set initial style (instead of copying css class across the lib)\n  setTooltipInitialStyle() {\n    initTooltipStyle(this.tooltipG);\n  }\n\n  // tooltip\n  eventsTooltip({ data, evt, isToShow }: { data?: any; evt?: any; isToShow: boolean }) {\n    drawTooltip({\n      root: this.tooltipG,\n      data,\n      event: evt,\n      isToShow,\n      tooltipLabel: this.tooltipLabel,\n      xAxis: this.xAxis,\n      yAxis: this.yAxis,\n      dataLabel: this.dataLabel,\n      dataKeyNames: this.dataKeyNames,\n      ordinalAccessor: this.ordinalAccessor,\n      valueAccessor: this.valueAccessor,\n      groupAccessor: this.seriesAccessor,\n      chartType: 'parallel'\n    });\n  }\n\n  bindLegendInteractivity() {\n    select(this.parallelChartEl)\n      .selectAll('.legend')\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction && this.legend.interactive\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction && this.legend.interactive\n          ? (d, i, n) => {\n              if (d.values) {\n                this.hoverEvent.emit({ data: d.values[0], target: n[i] });\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents && this.legend.interactive ? () => this.onMouseOutHandler() : null);\n  }\n\n  setLegendCursor() {\n    select(this.parallelChartEl)\n      .selectAll('.legend')\n      .style('cursor', !this.suppressEvents && this.legend.interactive && this.seriesInteraction ? this.cursor : null);\n  }\n\n  drawLegendElements() {\n    // if we have default series access and it is not in the data don't show legend\n    const noSeriesAccessor =\n      this.seriesAccessor === ParallelPlotDefaultValues.seriesAccessor &&\n      this.nest &&\n      this.nest.length === 1 &&\n      this.nest[0].key === 'undefined';\n\n    drawLegend({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      width: this.innerPaddedWidth,\n      height: this.margin.top + 20,\n      colorArr: this.colorArr,\n      dashPatterns: !this.accessibility.hideTextures ? this.dashPatterns : null,\n      margin: this.margin,\n      padding: this.padding,\n      duration: this.duration,\n      type: 'parallel',\n      secondary: this.secondaryLines.keys,\n      fontSize: 16,\n      data: this.nest,\n      label: this.legend.labels,\n      hide: !((this.legend.visible && !noSeriesAccessor) || !this.legend || !this.seriesAccessor),\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.seriesAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.hoverStyle,\n      clickStyle: this.clickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  render() {\n    this.drawStartEvent.emit({ chartID: this.chartID });\n    // everything between this comment and the third should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n    this.init();\n    if (this.shouldSetLocalizationConfig) {\n      this.setLocalizationConfig();\n      this.shouldSetLocalizationConfig = false;\n    }\n    if (this.shouldSetTagLevels) {\n      this.setTagLevels();\n      this.shouldSetTagLevels = false;\n    }\n    if (this.shouldSetDimensions) {\n      this.setDimensions();\n      this.shouldSetDimensions = false;\n    }\n    if (this.shouldSetScaleUsed) {\n      this.setScaleUsed();\n      this.shouldSetScaleUsed = false;\n    }\n    if (this.shouldUpdateScales) {\n      this.prepareScales();\n      this.shouldUpdateScales = false;\n    }\n    if (this.shouldUpdateData) {\n      this.prepareData();\n      this.shouldUpdateData = false;\n    }\n    if (this.shouldUpdateInterpolationData) {\n      this.updateInterpolationData();\n      this.shouldUpdateInterpolationData = false;\n    }\n    if (this.shouldValidateInteractionKeys) {\n      this.validateInteractionKeys();\n      this.shouldValidateInteractionKeys = false;\n    }\n    if (this.shouldUpdateTableData) {\n      this.setTableData();\n      this.shouldUpdateTableData = false;\n    }\n    if (this.shouldValidate) {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.shouldValidate = false;\n    }\n    if (this.shouldValidateDataLabelAccessor) {\n      this.validateDataLabelAccessor();\n      this.shouldValidateDataLabelAccessor = false;\n    }\n    if (this.shouldSetColors) {\n      this.setColors();\n      this.shouldSetColors = false;\n    }\n    if (this.shouldValidateSeriesLabels) {\n      this.validateSeriesLabels();\n      this.shouldValidateSeriesLabels = false;\n    }\n    // // Everything between this comment and the first should eventually\n    // // be moved into componentWillUpdate (if the Stencil bug is fixed)\n\n    return (\n      <div class=\"o-layout\">\n        <div class=\"o-layout--chart\">\n          <this.topLevel class=\"parallel-main-title vcl-main-title\">{this.mainTitle}</this.topLevel>\n          <this.bottomLevel class=\"visa-ui-text--instructions parallel-sub-title vcl-sub-title\" />\n          <div class=\"parallel-legend vcl-legend\" style={{ display: this.legend.visible ? 'block' : 'none' }} />\n          <keyboard-instructions\n            uniqueID={this.chartID}\n            geomType={'point'}\n            groupName={'line'} // taken from initializeDescriptionRoot, on bar this should be \"bar group\", stacked bar is \"stack\", and clustered is \"cluster\"\n            language={this.getLanguageString()}\n            chartTag={'parallel-plot'}\n            width={this.width - (this.margin ? this.margin.right || 0 : 0)}\n            isInteractive={this.accessibility.elementsAreInterface}\n            hasCousinNavigation\n            disabled={\n              this.suppressEvents &&\n              this.accessibility.elementsAreInterface === false &&\n              this.accessibility.keyboardNavConfig &&\n              this.accessibility.keyboardNavConfig.disabled\n            } // the chart is \"simple\"\n          />\n          <div class=\"visa-viz-d3-parallel-container\" />\n          <div class=\"parallel-tooltip vcl-tooltip\" style={{ display: this.showTooltip ? 'block' : 'none' }} />\n          <data-table\n            uniqueID={this.chartID}\n            isCompact\n            language={this.getLanguageString()}\n            tableColumns={this.tableColumns}\n            dataKeyNames={this.dataKeyNames}\n            data={this.tableData}\n            padding={this.padding}\n            margin={this.margin}\n            hideDataTable={this.accessibility.hideDataTableButton}\n            unitTest={this.unitTest}\n          />\n        </div>\n        {/* <canvas id=\"bitmap-render\" /> */}\n      </div>\n    );\n  }\n  private init() {\n    // reading properties\n    const keys = Object.keys(ParallelPlotDefaultValues);\n    let i = 0;\n    const exceptions = {\n      wrapLabel: {\n        exception: false\n      },\n      strokeWidth: {\n        exception: 0\n      },\n      showDots: {\n        exception: false\n      },\n      hoverOpacity: {\n        exception: 0\n      },\n      dotRadius: {\n        exception: 0\n      },\n      showTooltip: {\n        exception: false\n      },\n      mainTitle: {\n        exception: ''\n      },\n      subTitle: {\n        exception: ''\n      },\n      showBaselineX: {\n        exception: false\n      }\n    };\n    for (i = 0; i < keys.length; i++) {\n      const exception = !exceptions[keys[i]] ? false : this[keys[i]] === exceptions[keys[i]].exception;\n      this[keys[i]] = this[keys[i]] || exception ? this[keys[i]] : ParallelPlotDefaultValues[keys[i]];\n    }\n  }\n}\n\n// incorporate OSS licenses into build\nwindow['VisaChartsLibOSSLicenses'] = getLicenses(); // tslint:disable-line no-string-literal\n"],"mappings":"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","ignoreList":[]}