{"version":3,"names":["propDefaultValues","Utils","HeatMapDefaultValues","mainTitle","subTitle","text","height","width","margin","top","bottom","right","left","padding","localization","xAccessor","yAccessor","valueAccessor","shape","hideAxisPath","showBaselineFalse","accessibility","animationConfig","highestHeadingLevel","xAxis","yAxis","wrapLabel","strokeWidth","strokeWidth2","colorPalette","colorPaletteSequential","colorSteps","colorSteps5","hoverStyle","clickStyle","cursor","hoverOpacity","dataLabel","legend","tooltipLabel","showTooltip","suppressEvents","referenceLines","annotations","clickHighlight","heatMapCss","HeatMapStyle0","getGlobalInstances","configLocalization","getActiveLanguageString","calculateLuminance","prepareStrokeColorsFromScheme","verifyTextHasSpace","checkAttributeTransitions","createTextStrokeFilter","drawHoverStrokes","removeHoverStrokes","buildStrokes","convertColorsToTextures","findTagLevel","prepareRenderChange","initializeDescriptionRoot","initializeElementAccess","setElementFocusHandler","setElementAccessID","setAccessibilityController","hideNonessentialGroups","setAccessTitle","setAccessSubtitle","setAccessLongDescription","setAccessExecutiveSummary","setAccessPurpose","setAccessContext","setAccessStatistics","setAccessChartCounts","setAccessXAxis","setAccessYAxis","setAccessStructure","setAccessAnnotation","retainAccessFocus","checkAccessFocus","setElementInteractionAccessState","setAccessibilityDescriptionWidth","autoTextColor","annotate","chartAccessors","checkInteraction","checkClicked","checkHovered","convertVisaColor","drawAxis","drawLegend","drawTooltip","formatStats","formatDate","getColors","getLicenses","getPadding","getScopedData","initTooltipStyle","overrideTitleTooltip","placeDataLabels","scopeDataKeys","transitionEndAll","validateAccessibilityProps","validateLocalizationProps","setSubTitle","HeatMap","exports","this","shouldValidateAccessibility","shouldValidateLocalization","nest","datakeys","updated","shouldValidate","shouldUpdateData","shouldSetDimensions","shouldUpdateTableData","shouldUpdateScales","shouldResetRoot","shouldSetColors","shouldSetSubTitle","shouldValidateInteractionKeys","shouldFormatClickHighlight","shouldFormatHoverHighlight","shouldUpdateAnnotations","shouldUpdateXAxis","shouldUpdateYAxis","shouldSetGlobalSelections","shouldSetTestingAttributes","shouldEnterUpdateExit","shouldUpdateGeometries","shouldSetSelectionClass","shouldDrawInteractionState","shouldUpdateLegend","shouldUpdateCursor","shouldBindInteractivity","shouldUpdateLabels","shouldSetLabelOpacity","shouldSwapXAxis","shouldSwapYAxis","shouldUpdateDescriptionWrapper","shouldSetChartAccessibilityTitle","shouldSetChartAccessibilitySubtitle","shouldSetChartAccessibilityLongDescription","shouldSetChartAccessibilityExecutiveSummary","shouldSetChartAccessibilityStatisticalNotes","shouldSetChartAccessibilityStructureNotes","shouldSetParentSVGAccessibility","shouldSetGeometryAccessibilityAttributes","shouldSetGeometryAriaLabels","shouldSetGroupAccessibilityLabel","shouldSetChartAccessibilityPurpose","shouldSetChartAccessibilityContext","shouldRedrawWrapper","shouldSetTagLevels","shouldSetChartAccessibilityCount","shouldSetYAxisAccessibility","shouldSetXAxisAccessibility","shouldSetAnnotationAccessibility","shouldSetTextures","shouldSetStrokes","shouldSetLocalizationConfig","strokes","topLevel","bottomLevel","textTreatmentHandler","d","i","n","bgColor","_this","hideTextures","showExperimentalTextures","fillColors","rawHeat","color","me","select","attr","classed","root","svg","node","id","chartID","class_1","prototype","dataWatcher","_newData","_oldData","idWatcher","newID","_oldID","console","error","headingWatcher","_newVal","_oldVal","titleWatcher","subtitleWatcher","layoutWatcher","xAccessorWatcher","yAccessorWatcher","groupAccessorWatcher","interactionKeys","length","xKeyOrderWatcher","yKeyOrderWatcher","xAxisWatcher","newFormatVal","format","oldFormatVal","newPlacementVal","placement","oldPlacementVal","yAxisWatcher","wrapLabelWatcher","hideAxisPathWatcher","colorsWatcher","hoverStyleWatcher","clickStyleWatcher","shapeWatcher","cursorWatcher","strokeWidthWatcher","hoverOpacityWatcher","labelWatcher","newVisibleVal","visible","oldVisibleVal","showTooltipWatcher","tooltipLabelWatcher","legendWatcher","suppressWatcher","annotationsWatcher","accessibilityWatcher","newTitle","title","oldTitle","newExecutiveSummary","executiveSummary","oldExecutiveSummary","newPurpose","purpose","oldPurpose","newLongDescription","longDescription","oldLongDescription","newContext","contextExplanation","oldContext","newStatisticalNotes","statisticalNotes","oldStatisticalNotes","newStructureNotes","structureNotes","oldStructureNotes","newincludeDataKeyNames","includeDataKeyNames","oldincludeDataKeyNames","newElementDescriptionAccessor","elementDescriptionAccessor","oldElementDescriptionAccessor","newTextures","oldTextures","newExTextures","oldExTextures","newSmallValue","showSmallLabels","oldSmallValue","newStrokes","hideStrokes","oldStrokes","newKeyNav","keyboardNavConfig","disabled","oldKeyNav","newInterface","elementsAreInterface","oldInterface","localizationWatcher","newLanguage","language","oldLanguage","newNumeralLocale","numeralLocale","oldNumeralLocale","valueOverrideWatcher","clickWatcher","hoverWatcher","interactionWatcher","dataKeyNamesWatcher","unitTestWatcher","componentWillLoad","uniqueID","uuid","initialLoadEvent","emit","Promise","resolve","duration","defaults","heatMapEl","setLocalizationConfig","setTagLevels","prepareData","setDimensions","setColors","prepareScales","validateInteractionKeys","setTableData","shouldValidateAccessibilityProps","shouldValidateLocalizationProps","formatClickHighlight","formatHoverHighlight","componentWillUpdate","componentDidLoad","renderRootElements","setTooltipInitialStyle","setChartDescriptionWrapper","setChartAccessibilityTitle","setChartAccessibilitySubtitle","setChartAccessibilityLongDescription","setChartAccessibilityExecutiveSummary","setChartAccessibilityPurpose","setChartAccessibilityContext","setChartAccessibilityStatisticalNotes","setChartAccessibilityStructureNotes","setParentSVGAccessibility","reSetRoot","setTextures","setStrokes","setSubTitleElements","setGlobalSelections","setTestingAttributes","enterGeometries","updateGeometries","exitGeometries","enterDataLabels","updateDataLabels","exitDataLabels","drawGeometries","setChartCountAccessibility","setGeometryAccessibilityAttributes","setGeometryAriaLabels","drawDataLabels","drawLegendElements","setSelectedClass","updateInteractionState","bindInteractivity","drawAnnotations","setAnnotationAccessibility","drawXAxis","setXAxisAccessibility","drawYAxis","setYAxisAccessibility","map","setGroupAccessibilityID","onChangeHandler","then","initialLoadEndEvent","componentDidUpdate","setLabelOpacity","updateCursor","drawEndEvent","windowInstances","languageString","i18Next","languageObject","getResourceBundle","numeralObject","numeral","localeData","skipValidation","Object","assign","disableValidation","data","context","onClickEvent","undefined","clickEvent","Date","date","offsetTimezone","hoverHighlight","getLanguageString","innerHeight","innerWidth","innerPaddedHeight","innerPaddedWidth","includes","checkInteractionKeys_1","k","newKey","push","innerInteractionKeys","minMapValue","minValueOverride","min","preppedData","maxMapValue","maxValueOverride","max","x","scaleBand","domain","xKeyOrder","range","bandwidth","y","yKeyOrder","heat","scaleQuantize","strokeColors","backgroundColors","half","Math","ceil","preparedColors","isDiverging","isDark","forEach","colorsMatchingScheme","fillLuminance","fillColor","strokeLuminance","textureColor","darkerColor","lighterColor","updateCheck","subTitleG","colors","scheme","limit","colorArr","textures","rootSVG","disableTransitions","strokeOverride","keys","tableData","tableColumns","interpolating","oldXDomain","oldXRange","oldYDomain","oldYRange","newRow","parseFloat","key","entries","changeSvg","selection","namespace","easing","easeCircleIn","changeRoot","concat","changeRootG","rootG","swapping","axisLabel","label","dataKeyNames","axisScale","tickInterval","hide","hidePath","rootEle","hasXAxis","xAxisLabel","hasYAxis","yAxisLabel","append","labelG","legendG","tooltipG","xAxisElement","selectAll","dataBoundToGroups","enterRowWrappers","enter","exitRowWrappers","exit","updateRowWrappers","merge","dataBoundToGeometries","values","update","exitSize","size","enterSize","dataBoundToLabelGroups","enteringLabelGroups","exitingLabelGroups","updatingLabelGroups","dataBoundToLabels","enterLabels","exitLabels","updateLabels","unitTest","interrupt","each","_","_d","on","onClickHandler","onHoverHandler","onMouseOutHandler","shift","order","transition","ease","self","call","focusDidExist","remove","parentGNode","updateTransition","geometryIsUpdating","numeric","newValue","transitionEndEvent","clicked","hovered","baseColor","state","inputElement","fill","processLabelOpacity","isATransition","opacity","dimensions","parseText","labelAccessor","hasRoom","fontSize","selected","selectable","xScale","yScale","ordinalAccessor","chartType","delay","placeLabels","type","baseColorArr","scale","steps","labels","source","chartTag","redraw","disableKeyNav","hideDataTable","hideDataTableButton","description","geomType","includeKeyNames","dataKeys","groupAccessor","groupName","onChangeFunc","added","removed","target","hoverEvent","eventsTooltip","evt","event","isToShow","mouseOutEvent","_a","render","drawStartEvent","init","h","class","style","display","isInteractive","hasCousinNavigation","isCompact","exceptions","exception","window"],"sources":["src/components/heat-map/heat-map-default-values.ts","src/components/heat-map/heat-map.scss?tag=heat-map","src/components/heat-map/heat-map.tsx"],"sourcesContent":["/**\n * Copyright (c) 2020, 2021, 2022, 2023 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport Utils from '@visa/visa-charts-utils';\n\nconst { propDefaultValues } = Utils;\n\nexport class HeatMapDefaultValues {\n  static readonly mainTitle = 'Heat Map Title';\n  static readonly subTitle = propDefaultValues.subTitle.text;\n  static readonly height = 250;\n  static readonly width = 500;\n  static readonly margin = {\n    top: 250 * 0.01,\n    bottom: 250 * 0.01,\n    right: 500 * 0.01,\n    left: 500 * 0.01\n  };\n  static readonly padding = {\n    top: 20,\n    bottom: 30,\n    right: 60,\n    left: 80\n  };\n\n  static readonly localization = propDefaultValues.localization;\n\n  static readonly xAccessor = 'date';\n  static readonly yAccessor = 'category';\n  static readonly valueAccessor = 'value';\n\n  static readonly shape = 'rect';\n  static readonly hideAxisPath = propDefaultValues.showBaselineFalse;\n\n  static readonly accessibility = propDefaultValues.accessibility;\n  static readonly animationConfig = propDefaultValues.animationConfig;\n  static readonly highestHeadingLevel = propDefaultValues.highestHeadingLevel;\n\n  static readonly xAxis = propDefaultValues.xAxis;\n  static readonly yAxis = propDefaultValues.yAxis;\n  static readonly wrapLabel = propDefaultValues.wrapLabel;\n  static readonly strokeWidth = propDefaultValues.strokeWidth2;\n\n  static readonly colorPalette = propDefaultValues.colorPaletteSequential;\n  static readonly colorSteps = propDefaultValues.colorSteps5;\n\n  static readonly hoverStyle = propDefaultValues.hoverStyle;\n  static readonly clickStyle = propDefaultValues.clickStyle;\n\n  static readonly cursor = propDefaultValues.cursor;\n  static readonly hoverOpacity = propDefaultValues.hoverOpacity;\n\n  static readonly dataLabel = propDefaultValues.dataLabel;\n  static readonly dataKeyNames;\n  static readonly legend = propDefaultValues.legend;\n  static readonly tooltipLabel = propDefaultValues.tooltipLabel;\n\n  static readonly showTooltip = propDefaultValues.showTooltip;\n  static readonly suppressEvents = propDefaultValues.suppressEvents;\n  static readonly referenceLines = propDefaultValues.referenceLines;\n  static readonly annotations = propDefaultValues.annotations;\n\n  static readonly hoverHighlight;\n  static readonly clickHighlight = propDefaultValues.clickHighlight;\n}\n","/**\n * Copyright (c) 2020, 2021, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nheat-map {\n  .annotations {\n    pointer-events: none;\n    .handle {\n      pointer-events: all;\n    }\n  }\n\n  .screen-reader-info {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n\n  .data-table-link {\n    color: #767676;\n    text-decoration: none;\n    font-size: 12px;\n    margin-left: 5%;\n  }\n\n  .hidden {\n    display: none;\n  }\n\n  cursor: default;\n  .axis {\n    font-size: 12px;\n    text {\n      //font: 0.65rem;\n      fill: #767676;\n    }\n\n    &-label {\n      text-anchor: middle;\n      font: 1rem sans-serif;\n    }\n    path {\n      stroke: #767676;\n    }\n    .hidden {\n      visibility: hidden;\n    }\n  }\n  .heat-map-legend {\n    font-size: 1em;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n\n    .legend {\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n    }\n  }\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport { Component, Element, Prop, Watch, Event, EventEmitter, h } from '@stencil/core';\nimport { select, event } from 'd3-selection';\nimport { min, max } from 'd3-array';\nimport { scaleBand, scaleQuantize } from 'd3-scale';\nimport { easeCircleIn } from 'd3-ease';\nimport { nest } from 'd3-collection';\nimport {\n  IBoxModelType,\n  ILocalizationType,\n  IHoverStyleType,\n  IClickStyleType,\n  IAxisType,\n  IDataLabelType,\n  ITooltipLabelType,\n  IAccessibilityType,\n  IAnimationConfig,\n  ILegendType,\n  ISubTitleType\n} from '@visa/charts-types';\nimport { HeatMapDefaultValues } from './heat-map-default-values';\nimport 'd3-transition';\nimport { v4 as uuid } from 'uuid';\nimport Utils from '@visa/visa-charts-utils';\n\nconst {\n  getGlobalInstances,\n  configLocalization,\n  getActiveLanguageString,\n  calculateLuminance,\n  prepareStrokeColorsFromScheme,\n  verifyTextHasSpace,\n  checkAttributeTransitions,\n  createTextStrokeFilter,\n  drawHoverStrokes,\n  removeHoverStrokes,\n  buildStrokes,\n  convertColorsToTextures,\n  findTagLevel,\n  prepareRenderChange,\n  initializeDescriptionRoot,\n  initializeElementAccess,\n  setElementFocusHandler,\n  setElementAccessID,\n  setAccessibilityController,\n  hideNonessentialGroups,\n  setAccessTitle,\n  setAccessSubtitle,\n  setAccessLongDescription,\n  setAccessExecutiveSummary,\n  setAccessPurpose,\n  setAccessContext,\n  setAccessStatistics,\n  setAccessChartCounts,\n  setAccessXAxis,\n  setAccessYAxis,\n  setAccessStructure,\n  setAccessAnnotation,\n  retainAccessFocus,\n  checkAccessFocus,\n  setElementInteractionAccessState,\n  setAccessibilityDescriptionWidth,\n  autoTextColor,\n  annotate,\n  chartAccessors,\n  checkInteraction,\n  checkClicked,\n  checkHovered,\n  convertVisaColor,\n  drawAxis,\n  drawLegend,\n  drawTooltip,\n  formatStats,\n  formatDate,\n  getColors,\n  getLicenses,\n  getPadding,\n  getScopedData,\n  initTooltipStyle,\n  overrideTitleTooltip,\n  placeDataLabels,\n  scopeDataKeys,\n  transitionEndAll,\n  validateAccessibilityProps,\n  validateLocalizationProps,\n  setSubTitle\n} = Utils;\n\n@Component({\n  tag: 'heat-map',\n  styleUrl: 'heat-map.scss'\n})\nexport class HeatMap {\n  @Event() clickEvent: EventEmitter;\n  @Event() hoverEvent: EventEmitter;\n  @Event() mouseOutEvent: EventEmitter;\n  @Event() initialLoadEvent: EventEmitter;\n  @Event() initialLoadEndEvent: EventEmitter;\n  @Event() drawStartEvent: EventEmitter;\n  @Event() drawEndEvent: EventEmitter;\n  @Event() transitionEndEvent: EventEmitter;\n\n  // Chart Attributes (1/7)\n  @Prop({ mutable: true }) localization: ILocalizationType = HeatMapDefaultValues.localization;\n  @Prop({ mutable: true }) mainTitle: string = HeatMapDefaultValues.mainTitle;\n  @Prop({ mutable: true }) subTitle: string | ISubTitleType = HeatMapDefaultValues.subTitle;\n  @Prop({ mutable: true }) height: number = HeatMapDefaultValues.height;\n  @Prop({ mutable: true }) width: number = HeatMapDefaultValues.width;\n  @Prop({ mutable: true }) highestHeadingLevel: string | number = HeatMapDefaultValues.highestHeadingLevel;\n  @Prop({ mutable: true }) margin: IBoxModelType = HeatMapDefaultValues.margin;\n  @Prop({ mutable: true }) padding: IBoxModelType = HeatMapDefaultValues.padding;\n\n  // Data (2/7)\n  @Prop() data: object[];\n  @Prop() uniqueID: string;\n  @Prop({ mutable: true }) xAccessor: string = HeatMapDefaultValues.xAccessor;\n  @Prop({ mutable: true }) yAccessor: string = HeatMapDefaultValues.yAccessor;\n  @Prop({ mutable: true }) valueAccessor: string = HeatMapDefaultValues.valueAccessor;\n  @Prop({ mutable: true }) xKeyOrder: string[];\n  @Prop({ mutable: true }) yKeyOrder: string[];\n\n  // Axis (3/7)\n  @Prop({ mutable: true }) xAxis: IAxisType = HeatMapDefaultValues.xAxis;\n  @Prop({ mutable: true }) yAxis: IAxisType = HeatMapDefaultValues.yAxis;\n  @Prop({ mutable: true }) wrapLabel: boolean = HeatMapDefaultValues.wrapLabel;\n  @Prop({ mutable: true }) hideAxisPath: boolean = HeatMapDefaultValues.hideAxisPath;\n\n  // Color & Shape (4/7)\n  @Prop({ mutable: true }) colorPalette: string = HeatMapDefaultValues.colorPalette;\n  @Prop({ mutable: true }) colors: string[];\n  @Prop({ mutable: true }) colorSteps: number = HeatMapDefaultValues.colorSteps;\n  @Prop({ mutable: true }) hoverStyle: IHoverStyleType = HeatMapDefaultValues.hoverStyle;\n  @Prop({ mutable: true }) clickStyle: IClickStyleType = HeatMapDefaultValues.clickStyle;\n  @Prop({ mutable: true }) cursor: string = HeatMapDefaultValues.cursor;\n  @Prop({ mutable: true }) shape: string = HeatMapDefaultValues.shape;\n  @Prop({ mutable: true }) hoverOpacity: number = HeatMapDefaultValues.hoverOpacity;\n  @Prop({ mutable: true }) animationConfig: IAnimationConfig = HeatMapDefaultValues.animationConfig;\n  @Prop({ mutable: true }) strokeWidth: number = HeatMapDefaultValues.strokeWidth;\n\n  // Data label (5/7)\n  @Prop({ mutable: true }) dataLabel: IDataLabelType = HeatMapDefaultValues.dataLabel;\n  @Prop({ mutable: true }) dataKeyNames: object;\n  @Prop({ mutable: true }) showTooltip: boolean = HeatMapDefaultValues.showTooltip;\n  @Prop({ mutable: true }) tooltipLabel: ITooltipLabelType = HeatMapDefaultValues.tooltipLabel;\n  @Prop({ mutable: true }) accessibility: IAccessibilityType = HeatMapDefaultValues.accessibility;\n  @Prop({ mutable: true }) legend: ILegendType = HeatMapDefaultValues.legend;\n  @Prop({ mutable: true }) annotations: object[] = HeatMapDefaultValues.annotations;\n\n  // Calculation (6/7)\n  @Prop({ mutable: true }) maxValueOverride: number;\n  @Prop({ mutable: true }) minValueOverride: number;\n\n  // Interactivity (7/7)\n  @Prop({ mutable: true }) hoverHighlight: object;\n  @Prop({ mutable: true }) clickHighlight: object[] = HeatMapDefaultValues.clickHighlight;\n  @Prop({ mutable: true }) interactionKeys: string[];\n  @Prop({ mutable: true }) suppressEvents: boolean = HeatMapDefaultValues.suppressEvents;\n\n  // Testing (8/7)\n  @Prop() unitTest: boolean = false;\n  //  @Prop() debugMode: boolean = false;\n\n  // Element\n  @Element()\n  heatMapEl: HTMLElement;\n  shouldValidateAccessibility: boolean = true;\n  shouldValidateLocalization: boolean = true;\n  svg: any;\n  root: any;\n  rootG: any;\n  tooltipG: any;\n  subTitleG: any;\n  map: any;\n  row: any;\n  labelG: any;\n  labels: any;\n  defaults: boolean;\n  current: any;\n  enter: any;\n  exit: any;\n  update: any;\n  enterRowWrappers: any;\n  updateRowWrappers: any;\n  exitRowWrappers: any;\n  enteringLabelGroups: any;\n  exitingLabelGroups: any;\n  updatingLabelGroups: any;\n  enterLabels: any;\n  updateLabels: any;\n  exitLabels: any;\n  heat: any;\n  rawHeat: any;\n  fillColors: any;\n  strokeColors: any;\n  y: any;\n  x: any;\n  innerHeight: number;\n  innerWidth: number;\n  innerPaddedHeight: number;\n  innerPaddedWidth: number;\n  nest: any = [];\n  datakeys: any = [];\n  colorArr: any;\n  preparedColors: any;\n  duration: number;\n  legendG: any;\n  preppedData: any;\n  interpolating: any;\n  tableData: any;\n  tableColumns: any;\n  updateCheck: any;\n  // these are added for accessibility\n  updated: boolean = true;\n  enterSize: number;\n  exitSize: number;\n  chartID: string;\n  xAxisElement: any;\n  innerInteractionKeys: any;\n  shouldValidate: boolean = false;\n  shouldUpdateData: boolean = false;\n  shouldSetDimensions: boolean = false;\n  shouldUpdateTableData: boolean = false;\n  shouldUpdateScales: boolean = false;\n  shouldResetRoot: boolean = false;\n  shouldSetColors: boolean = false;\n  shouldSetSubTitle: boolean = false;\n  shouldValidateInteractionKeys: boolean = false;\n  shouldFormatClickHighlight: boolean = false;\n  shouldFormatHoverHighlight: boolean = false;\n  shouldUpdateAnnotations: boolean = false;\n  shouldUpdateXAxis: boolean = false;\n  shouldUpdateYAxis: boolean = false;\n  shouldSetGlobalSelections: boolean = false;\n  shouldSetTestingAttributes: boolean = false;\n  shouldEnterUpdateExit: boolean = false;\n  shouldUpdateGeometries: boolean = false;\n  shouldSetSelectionClass: boolean = false;\n  shouldDrawInteractionState: boolean = false;\n  shouldUpdateLegend: boolean = false;\n  shouldUpdateCursor: boolean = false;\n  shouldBindInteractivity: boolean = false;\n  shouldUpdateLabels: boolean = false;\n  shouldSetLabelOpacity: boolean = false;\n  shouldSwapXAxis: boolean = false;\n  shouldSwapYAxis: boolean = false;\n  shouldUpdateDescriptionWrapper: boolean = false;\n  shouldSetChartAccessibilityTitle: boolean = false;\n  shouldSetChartAccessibilitySubtitle: boolean = false;\n  shouldSetChartAccessibilityLongDescription: boolean = false;\n  shouldSetChartAccessibilityExecutiveSummary: boolean = false;\n  shouldSetChartAccessibilityStatisticalNotes: boolean = false;\n  shouldSetChartAccessibilityStructureNotes: boolean = false;\n  shouldSetParentSVGAccessibility: boolean = false;\n  shouldSetGeometryAccessibilityAttributes: boolean = false;\n  shouldSetGeometryAriaLabels: boolean = false;\n  shouldSetGroupAccessibilityLabel: boolean = false;\n  shouldSetChartAccessibilityPurpose: boolean = false;\n  shouldSetChartAccessibilityContext: boolean = false;\n  shouldRedrawWrapper: boolean = false;\n  shouldSetTagLevels: boolean = false;\n  shouldSetChartAccessibilityCount: boolean = false;\n  shouldSetYAxisAccessibility: boolean = false;\n  shouldSetXAxisAccessibility: boolean = false;\n  shouldSetAnnotationAccessibility: boolean = false;\n  shouldSetTextures: boolean = false;\n  shouldSetStrokes: boolean = false;\n  shouldSetLocalizationConfig: boolean = false;\n  strokes: any = {};\n  topLevel: string = 'h2';\n  bottomLevel: string = 'p';\n\n  @Watch('data')\n  dataWatcher(_newData, _oldData) {\n    this.updated = true;\n    this.shouldUpdateData = true;\n    this.shouldSetColors = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldUpdateScales = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateTableData = true;\n    this.shouldValidate = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetTextures = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('uniqueID')\n  idWatcher(newID, _oldID) {\n    console.error(\n      'Change detected in prop uniqueID from value ' +\n        _oldID +\n        ' to value ' +\n        newID +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.chartID = newID;\n    // this.heatMapEl.id = this.chartID;\n    // this.shouldValidate = true;\n    // this.shouldUpdateDescriptionWrapper = true;\n    // this.shouldSetParentSVGAccessibility = true;\n    // this.shouldUpdateLegend = true;\n    // this.shouldSetTextures = true;\n    // this.shouldDrawInteractionState = true;\n    // this.shouldSetStrokes = true;\n  }\n\n  @Watch('highestHeadingLevel')\n  headingWatcher(_newVal, _oldVal) {\n    this.shouldRedrawWrapper = true;\n    this.shouldSetTagLevels = true;\n    this.shouldSetChartAccessibilityCount = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('mainTitle')\n  titleWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('subTitle')\n  subtitleWatcher(_newVal, _oldVal) {\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('height')\n  @Watch('width')\n  @Watch('padding')\n  @Watch('margin')\n  layoutWatcher(_newVal, _oldVal) {\n    this.shouldSetDimensions = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetTextures = true;\n    this.shouldResetRoot = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('xAccessor')\n  xAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldSetColors = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldFormatClickHighlight = true;\n    this.shouldFormatHoverHighlight = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldSetTextures = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('yAccessor')\n  yAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldSetColors = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldFormatClickHighlight = true;\n    this.shouldFormatHoverHighlight = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetTextures = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('valueAccessor')\n  groupAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetColors = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldUpdateLabels = true;\n    this.shouldSetGeometryAriaLabels = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n    this.shouldSetTextures = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('xKeyOrder')\n  xKeyOrderWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldSetTextures = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('yKeyOrder')\n  yKeyOrderWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetTextures = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('xAxis')\n  xAxisWatcher(_newVal, _oldVal) {\n    const newFormatVal = _newVal && _newVal.format ? _newVal.format : false;\n    const oldFormatVal = _oldVal && _oldVal.format ? _oldVal.format : false;\n    const newPlacementVal = _newVal && _newVal.placement ? _newVal.placement : false;\n    const oldPlacementVal = _oldVal && _oldVal.placement ? _oldVal.placement : false;\n    if (newFormatVal !== oldFormatVal) {\n      this.shouldUpdateData = true;\n      this.shouldSetColors = true;\n      this.shouldUpdateScales = true;\n      this.shouldSetTextures = true;\n      this.shouldSetGlobalSelections = true;\n      this.shouldFormatClickHighlight = true;\n      this.shouldFormatHoverHighlight = true;\n      this.shouldDrawInteractionState = true;\n      this.shouldEnterUpdateExit = true;\n      this.shouldUpdateTableData = true;\n      this.shouldUpdateGeometries = true;\n      this.shouldUpdateLabels = true;\n      this.shouldUpdateLegend = true;\n      this.shouldUpdateAnnotations = true;\n    }\n    if (newPlacementVal !== oldPlacementVal) {\n      this.shouldSwapXAxis = true;\n    }\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n  }\n\n  @Watch('yAxis')\n  yAxisWatcher(_newVal, _oldVal) {\n    const newFormatVal = _newVal && _newVal.format ? _newVal.format : false;\n    const oldFormatVal = _oldVal && _oldVal.format ? _oldVal.format : false;\n    const newPlacementVal = _newVal && _newVal.placement ? _newVal.placement : false;\n    const oldPlacementVal = _oldVal && _oldVal.placement ? _oldVal.placement : false;\n    if (newFormatVal !== oldFormatVal) {\n      this.shouldUpdateData = true;\n      this.shouldSetColors = true;\n      this.shouldUpdateScales = true;\n      this.shouldSetTextures = true;\n      this.shouldSetGlobalSelections = true;\n      this.shouldFormatClickHighlight = true;\n      this.shouldFormatHoverHighlight = true;\n      this.shouldDrawInteractionState = true;\n      this.shouldEnterUpdateExit = true;\n      this.shouldUpdateTableData = true;\n      this.shouldUpdateGeometries = true;\n      this.shouldUpdateLabels = true;\n      this.shouldUpdateLegend = true;\n      this.shouldUpdateAnnotations = true;\n    }\n    if (newPlacementVal !== oldPlacementVal) {\n      this.shouldSwapYAxis = true;\n    }\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n  }\n\n  @Watch('wrapLabel')\n  wrapLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n  }\n\n  @Watch('hideAxisPath')\n  hideAxisPathWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n  }\n\n  @Watch('colorPalette')\n  @Watch('colors')\n  @Watch('colorSteps')\n  colorsWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateLegend = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetTextures = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('hoverStyle')\n  hoverStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('clickStyle')\n  clickStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('shape')\n  shapeWatcher(_newVal, _oldVal) {\n    this.shouldUpdateGeometries = true;\n  }\n\n  @Watch('cursor')\n  cursorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCursor = true;\n  }\n\n  @Watch('strokeWidth')\n  strokeWidthWatcher(_newVal, _oldVal) {\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetTextures = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('hoverOpacity')\n  hoverOpacityWatcher(_newVal, _oldVal) {\n    this.shouldSetLabelOpacity = true;\n    this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('dataLabel')\n  labelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTableData = true;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetLabelOpacity = true;\n    }\n  }\n\n  @Watch('showTooltip')\n  showTooltipWatcher(_newVal, _oldVal) {\n    // this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('tooltipLabel')\n  tooltipLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('legend')\n  legendWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLegend = true;\n  }\n\n  @Watch('suppressEvents')\n  suppressWatcher(_newVal, _oldVal) {\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldRedrawWrapper = true;\n    this.shouldValidate = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('annotations')\n  annotationsWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetAnnotationAccessibility = true;\n  }\n\n  @Watch('accessibility')\n  accessibilityWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    const newTitle = _newVal && _newVal.title ? _newVal.title : false;\n    const oldTitle = _oldVal && _oldVal.title ? _oldVal.title : false;\n    if (newTitle !== oldTitle) {\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newExecutiveSummary = _newVal && _newVal.executiveSummary ? _newVal.executiveSummary : false;\n    const oldExecutiveSummary = _oldVal && _oldVal.executiveSummary ? _oldVal.executiveSummary : false;\n    if (newExecutiveSummary !== oldExecutiveSummary) {\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n    }\n    const newPurpose = _newVal && _newVal.purpose ? _newVal.purpose : false;\n    const oldPurpose = _oldVal && _oldVal.purpose ? _oldVal.purpose : false;\n    if (newPurpose !== oldPurpose) {\n      this.shouldSetChartAccessibilityPurpose = true;\n    }\n    const newLongDescription = _newVal && _newVal.longDescription ? _newVal.longDescription : false;\n    const oldLongDescription = _oldVal && _oldVal.longDescription ? _oldVal.longDescription : false;\n    if (newLongDescription !== oldLongDescription) {\n      this.shouldSetChartAccessibilityLongDescription = true;\n    }\n    const newContext = _newVal && _newVal.contextExplanation ? _newVal.contextExplanation : false;\n    const oldContext = _oldVal && _oldVal.contextExplanation ? _oldVal.contextExplanation : false;\n    if (newContext !== oldContext) {\n      this.shouldSetChartAccessibilityContext = true;\n    }\n    const newStatisticalNotes = _newVal && _newVal.statisticalNotes ? _newVal.statisticalNotes : false;\n    const oldStatisticalNotes = _oldVal && _oldVal.statisticalNotes ? _oldVal.statisticalNotes : false;\n    if (newStatisticalNotes !== oldStatisticalNotes) {\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n    }\n    const newStructureNotes = _newVal && _newVal.structureNotes ? _newVal.structureNotes : false;\n    const oldStructureNotes = _oldVal && _oldVal.structureNotes ? _oldVal.structureNotes : false;\n    if (newStructureNotes !== oldStructureNotes) {\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    const newincludeDataKeyNames = _newVal && _newVal.includeDataKeyNames;\n    const oldincludeDataKeyNames = _oldVal && _oldVal.includeDataKeyNames;\n    const newElementDescriptionAccessor =\n      _newVal && _newVal.elementDescriptionAccessor ? _newVal.elementDescriptionAccessor : false;\n    const oldElementDescriptionAccessor =\n      _oldVal && _oldVal.elementDescriptionAccessor ? _oldVal.elementDescriptionAccessor : false;\n    if (\n      newincludeDataKeyNames !== oldincludeDataKeyNames ||\n      newElementDescriptionAccessor !== oldElementDescriptionAccessor\n    ) {\n      if (newincludeDataKeyNames !== oldincludeDataKeyNames) {\n        // this one is tricky because it needs to run after the lifecycle\n        // AND it could run in the off-chance this prop is changed\n        this.shouldSetGroupAccessibilityLabel = true;\n      }\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newTextures = _newVal && _newVal.hideTextures ? _newVal.hideTextures : false;\n    const oldTextures = _oldVal && _oldVal.hideTextures ? _oldVal.hideTextures : false;\n    const newExTextures = _newVal && _newVal.showExperimentalTextures ? _newVal.showExperimentalTextures : false;\n    const oldExTextures = _oldVal && _oldVal.showExperimentalTextures ? _oldVal.showExperimentalTextures : false;\n    if (newTextures !== oldTextures || newExTextures !== oldExTextures) {\n      this.shouldSetTextures = true;\n      this.shouldUpdateLegend = true;\n      this.shouldSetStrokes = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newSmallValue = _newVal && _newVal.showSmallLabels ? _newVal.showSmallLabels : false;\n    const oldSmallValue = _oldVal && _oldVal.showSmallLabels ? _oldVal.showSmallLabels : false;\n    if (newSmallValue !== oldSmallValue) {\n      this.shouldSetLabelOpacity = true;\n    }\n    const newStrokes = _newVal && _newVal.hideStrokes ? _newVal.hideStrokes : false;\n    const oldStrokes = _oldVal && _oldVal.hideStrokes ? _oldVal.hideStrokes : false;\n    if (newStrokes !== oldStrokes) {\n      this.shouldUpdateLegend = true;\n      this.shouldSetStrokes = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newKeyNav =\n      _newVal && _newVal.keyboardNavConfig && _newVal.keyboardNavConfig.disabled\n        ? _newVal.keyboardNavConfig.disabled\n        : false;\n    const oldKeyNav =\n      _oldVal && _oldVal.keyboardNavConfig && _oldVal.keyboardNavConfig.disabled\n        ? _oldVal.keyboardNavConfig.disabled\n        : false;\n    const newInterface = _newVal && _newVal.elementsAreInterface ? _newVal.elementsAreInterface : false;\n    const oldInterface = _oldVal && _oldVal.elementsAreInterface ? _oldVal.elementsAreInterface : false;\n    if (newKeyNav !== oldKeyNav || newInterface !== oldInterface) {\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetChartAccessibilitySubtitle = true;\n      this.shouldSetChartAccessibilityLongDescription = true;\n      this.shouldSetChartAccessibilityContext = true;\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n      this.shouldSetChartAccessibilityPurpose = true;\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    if (newInterface !== oldInterface) {\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('localization')\n  localizationWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n\n    // language\n    const newLanguage = _newVal && _newVal.language ? _newVal.language : false;\n    const oldLanguage = _oldVal && _oldVal.language ? _oldVal.language : false;\n    if (newLanguage !== oldLanguage) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n\n    // numeralLocale\n    const newNumeralLocale = _newVal && _newVal.numeralLocale ? _newVal.numeralLocale : false;\n    const oldNumeralLocale = _oldVal && _oldVal.numeralLocale ? _oldVal.numeralLocale : false;\n    if (newNumeralLocale !== oldNumeralLocale) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n  }\n\n  @Watch('maxValueOverride')\n  @Watch('minValueOverride')\n  valueOverrideWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetTextures = true;\n  }\n\n  @Watch('clickHighlight')\n  clickWatcher(_newVal, _oldVal) {\n    this.shouldFormatClickHighlight = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n  }\n\n  @Watch('hoverHighlight')\n  hoverWatcher(_newVal, _oldVal) {\n    this.shouldFormatHoverHighlight = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('interactionKeys')\n  interactionWatcher(_newVal, _oldVal) {\n    this.shouldValidateInteractionKeys = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('dataKeyNames')\n  dataKeyNamesWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('unitTest')\n  unitTestWatcher(_newVal, _oldVal) {\n    this.shouldSetTestingAttributes = true;\n  }\n\n  componentWillLoad() {\n    const chartID = this.uniqueID || 'heat-map-' + uuid();\n    this.initialLoadEvent.emit({ chartID: chartID });\n    // contrary to componentWillUpdate, this method appears safe to use for\n    // any calculations we need. Keeping them here reduces future refactor,\n    // since componentWillUpdate should eventually mirror this method\n    return new Promise(resolve => {\n      this.duration = 0;\n      this.defaults = true;\n      this.chartID = chartID;\n      this.heatMapEl.id = this.chartID;\n      this.setLocalizationConfig();\n      this.setTagLevels();\n      this.prepareData();\n      this.setDimensions();\n      this.setColors();\n      this.prepareScales();\n      this.validateInteractionKeys();\n      this.setTableData();\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.formatClickHighlight();\n      this.formatHoverHighlight();\n      resolve('component will load');\n    });\n  }\n\n  componentWillUpdate() {\n    // NEVER put items in this method that rely on props (until stencil bug is resolved)\n    // All items that belong here are currently at the top of render\n    // see: https://github.com/ionic-team/stencil/issues/2061#issuecomment-578282178\n    return new Promise(resolve => {\n      resolve('component will update');\n    });\n  }\n\n  componentDidLoad() {\n    return new Promise(resolve => {\n      this.renderRootElements();\n      this.setTooltipInitialStyle();\n      this.setChartDescriptionWrapper();\n      this.setChartAccessibilityTitle();\n      this.setChartAccessibilitySubtitle();\n      this.setChartAccessibilityLongDescription();\n      this.setChartAccessibilityExecutiveSummary();\n      this.setChartAccessibilityPurpose();\n      this.setChartAccessibilityContext();\n      this.setChartAccessibilityStatisticalNotes();\n      this.setChartAccessibilityStructureNotes();\n      this.setParentSVGAccessibility();\n      this.reSetRoot();\n      this.setTextures();\n      this.setStrokes();\n      this.setSubTitleElements();\n      this.setGlobalSelections();\n      this.setTestingAttributes();\n      this.enterGeometries();\n      this.updateGeometries();\n      this.exitGeometries();\n      this.enterDataLabels();\n      this.updateDataLabels();\n      this.exitDataLabels();\n      this.drawGeometries();\n      this.setChartCountAccessibility();\n      this.setGeometryAccessibilityAttributes();\n      this.setGeometryAriaLabels();\n      this.drawDataLabels();\n      this.drawLegendElements();\n      this.setSelectedClass();\n      this.updateInteractionState();\n      this.bindInteractivity();\n      this.drawAnnotations();\n      this.setAnnotationAccessibility();\n      this.drawXAxis();\n      this.setXAxisAccessibility();\n      this.drawYAxis();\n      this.setYAxisAccessibility();\n      // we want to hide all child <g> of this.root BUT we want to make sure not to hide the\n      // parent<g> that contains our geometries! In a subGroup chart (like stacked bars),\n      // we want to pass the PARENT of all the <g>s that contain bars\n      hideNonessentialGroups(this.root.node(), this.map.node());\n      this.setGroupAccessibilityID();\n      this.onChangeHandler();\n      this.defaults = false;\n      resolve('component did load');\n    }).then(() => this.initialLoadEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  componentDidUpdate() {\n    return new Promise(resolve => {\n      this.duration = !this.animationConfig || !this.animationConfig.disabled ? 750 : 0;\n      if (this.shouldUpdateDescriptionWrapper) {\n        this.setChartDescriptionWrapper();\n        this.shouldUpdateDescriptionWrapper = false;\n      }\n      if (this.shouldSetChartAccessibilityCount) {\n        this.setChartCountAccessibility();\n        this.shouldSetChartAccessibilityCount = false;\n      }\n      if (this.shouldSetChartAccessibilityTitle) {\n        this.setChartAccessibilityTitle();\n        this.shouldSetChartAccessibilityTitle = false;\n      }\n      if (this.shouldSetChartAccessibilitySubtitle) {\n        this.setChartAccessibilitySubtitle();\n        this.shouldSetChartAccessibilitySubtitle = false;\n      }\n      if (this.shouldSetChartAccessibilityLongDescription) {\n        this.setChartAccessibilityLongDescription();\n        this.shouldSetChartAccessibilityLongDescription = false;\n      }\n      if (this.shouldSetChartAccessibilityExecutiveSummary) {\n        this.setChartAccessibilityExecutiveSummary();\n        this.shouldSetChartAccessibilityExecutiveSummary = false;\n      }\n      if (this.shouldSetChartAccessibilityPurpose) {\n        this.setChartAccessibilityPurpose();\n        this.shouldSetChartAccessibilityPurpose = false;\n      }\n      if (this.shouldSetChartAccessibilityContext) {\n        this.setChartAccessibilityContext();\n        this.shouldSetChartAccessibilityContext = false;\n      }\n      if (this.shouldSetChartAccessibilityStatisticalNotes) {\n        this.setChartAccessibilityStatisticalNotes();\n        this.shouldSetChartAccessibilityStatisticalNotes = false;\n      }\n      if (this.shouldSetChartAccessibilityStructureNotes) {\n        this.setChartAccessibilityStructureNotes();\n        this.shouldSetChartAccessibilityStructureNotes = false;\n      }\n      if (this.shouldSetParentSVGAccessibility) {\n        this.setParentSVGAccessibility();\n        this.shouldSetParentSVGAccessibility = false;\n      }\n      if (this.shouldResetRoot) {\n        this.reSetRoot();\n        this.shouldResetRoot = false;\n      }\n      if (this.shouldSetTextures) {\n        this.setTextures();\n        this.shouldSetTextures = false;\n      }\n      if (this.shouldSetStrokes) {\n        this.setStrokes();\n        this.shouldSetStrokes = false;\n      }\n      if (this.shouldSetGlobalSelections) {\n        this.setGlobalSelections();\n        this.shouldSetGlobalSelections = false;\n      }\n      if (this.shouldSetTestingAttributes) {\n        this.setTestingAttributes();\n        this.shouldSetTestingAttributes = false;\n      }\n      if (this.shouldSetSubTitle) {\n        this.setSubTitleElements();\n        this.shouldSetSubTitle = false;\n      }\n      if (this.shouldEnterUpdateExit) {\n        this.enterGeometries();\n        this.updateGeometries();\n        this.exitGeometries();\n        this.enterDataLabels();\n        this.updateDataLabels();\n        this.exitDataLabels();\n        this.shouldEnterUpdateExit = false;\n      }\n      if (this.shouldUpdateGeometries) {\n        this.drawGeometries();\n        this.shouldUpdateGeometries = false;\n      }\n      if (this.shouldSetGeometryAccessibilityAttributes) {\n        this.setGeometryAccessibilityAttributes();\n        this.shouldSetGeometryAccessibilityAttributes = false;\n      }\n      if (this.shouldSetGeometryAriaLabels) {\n        this.setGeometryAriaLabels();\n        this.shouldSetGeometryAriaLabels = false;\n      }\n      if (this.shouldSetGroupAccessibilityLabel) {\n        this.setGroupAccessibilityID();\n        this.shouldSetGroupAccessibilityLabel = false;\n      }\n      if (this.shouldUpdateLegend) {\n        this.drawLegendElements();\n        this.shouldUpdateLegend = false;\n      }\n      if (this.shouldUpdateLabels) {\n        this.drawDataLabels();\n        this.shouldUpdateLabels = false;\n      }\n      if (this.shouldDrawInteractionState) {\n        this.updateInteractionState();\n        this.shouldDrawInteractionState = false;\n      }\n      if (this.shouldSetLabelOpacity) {\n        this.setLabelOpacity();\n        this.shouldSetLabelOpacity = false;\n      }\n      if (this.shouldSetSelectionClass) {\n        this.setSelectedClass();\n        this.shouldSetSelectionClass = false;\n      }\n      if (this.shouldUpdateCursor) {\n        this.updateCursor();\n        this.shouldUpdateCursor = false;\n      }\n      if (this.shouldBindInteractivity) {\n        this.bindInteractivity();\n        this.shouldBindInteractivity = false;\n      }\n      if (this.shouldUpdateAnnotations) {\n        this.drawAnnotations();\n        this.shouldUpdateAnnotations = false;\n      }\n      if (this.shouldSetAnnotationAccessibility) {\n        this.setAnnotationAccessibility();\n        this.shouldSetAnnotationAccessibility = false;\n      }\n      if (this.shouldSwapXAxis) {\n        this.drawXAxis(true);\n        this.shouldSwapXAxis = false;\n      }\n      if (this.shouldSwapYAxis) {\n        this.drawYAxis(true);\n        this.shouldSwapYAxis = false;\n      }\n      if (this.shouldUpdateXAxis) {\n        this.drawXAxis();\n        this.shouldUpdateXAxis = false;\n      }\n      if (this.shouldSetXAxisAccessibility) {\n        this.setXAxisAccessibility();\n        this.shouldSetXAxisAccessibility = false;\n      }\n      if (this.shouldUpdateYAxis) {\n        this.drawYAxis();\n        this.shouldUpdateYAxis = false;\n      }\n      if (this.shouldSetYAxisAccessibility) {\n        this.setYAxisAccessibility();\n        this.shouldSetYAxisAccessibility = false;\n      }\n      this.onChangeHandler();\n      resolve('component did update');\n    }).then(() => this.drawEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  shouldValidateLocalizationProps() {\n    const windowInstances = getGlobalInstances();\n    const languageString = windowInstances.i18Next.language;\n    const languageObject = windowInstances.i18Next.getResourceBundle(languageString);\n    const numeralObject = windowInstances.numeral.localeData();\n    if (this.shouldValidateLocalization && !this.localization.skipValidation) {\n      this.shouldValidateLocalization = false;\n      validateLocalizationProps(this.chartID, {\n        ...this.localization,\n        language: languageObject,\n        numeralLocale: numeralObject\n      });\n    }\n  }\n\n  shouldValidateAccessibilityProps() {\n    if (this.shouldValidateAccessibility && !this.accessibility.disableValidation) {\n      this.shouldValidateAccessibility = false;\n      validateAccessibilityProps(\n        this.chartID,\n        { ...this.accessibility },\n        {\n          annotations: this.annotations,\n          data: this.data,\n          uniqueID: this.uniqueID,\n          context: {\n            mainTitle: this.mainTitle,\n            onClickEvent: this.suppressEvents ? undefined : this.clickEvent.emit\n          }\n        }\n      );\n    }\n  }\n\n  formatClickHighlight() {\n    if (this.clickHighlight) {\n      this.clickHighlight.map(d => {\n        if (!d['xAccessor'] || !d['yAccessor']) {\n          d['xAccessor'] =\n            d[this.xAccessor] instanceof Date\n              ? formatDate({\n                  date: d[this.xAccessor],\n                  format: this.xAxis.format,\n                  offsetTimezone: true\n                })\n              : d[this.xAccessor];\n\n          d['yAccessor'] =\n            d[this.yAccessor] instanceof Date\n              ? formatDate({\n                  date: d[this.yAccessor],\n                  format: this.yAxis.format,\n                  offsetTimezone: true\n                })\n              : d[this.yAccessor];\n        }\n      });\n    }\n  }\n\n  formatHoverHighlight() {\n    if (this.hoverHighlight) {\n      if (!this.hoverHighlight['xAccessor'] || !this.hoverHighlight['yAccessor']) {\n        this.hoverHighlight['xAccessor'] =\n          this.hoverHighlight[this.xAccessor] instanceof Date\n            ? formatDate({\n                date: this.hoverHighlight[this.xAccessor],\n                format: this.xAxis.format,\n                offsetTimezone: true\n              })\n            : this.hoverHighlight[this.xAccessor];\n        this.hoverHighlight['yAccessor'] =\n          this.hoverHighlight[this.yAccessor] instanceof Date\n            ? formatDate({\n                date: this.hoverHighlight[this.yAccessor],\n                format: this.yAxis.format,\n                offsetTimezone: true\n              })\n            : this.hoverHighlight[this.yAccessor];\n      }\n    }\n  }\n\n  getLanguageString() {\n    return getActiveLanguageString(this.localization);\n  }\n\n  setLocalizationConfig() {\n    configLocalization(this.localization);\n  }\n\n  setDimensions() {\n    this.padding = typeof this.padding === 'string' ? getPadding(this.padding) : this.padding;\n\n    // before we render/load we need to set our height and width based on props\n    this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n    this.innerWidth = this.width - this.margin.left - this.margin.right;\n\n    this.innerPaddedHeight = this.innerHeight - this.padding.top - this.padding.bottom;\n    this.innerPaddedWidth = this.innerWidth - this.padding.left - this.padding.right;\n  }\n\n  validateInteractionKeys() {\n    if (this.interactionKeys && this.interactionKeys.length) {\n      if (this.interactionKeys.includes(this.xAccessor) || this.interactionKeys.includes(this.yAccessor)) {\n        const checkInteractionKeys = [];\n        this.interactionKeys.map(k => {\n          const newKey = k === this.xAccessor ? 'xAccessor' : k === this.yAccessor ? 'yAccessor' : k;\n          checkInteractionKeys.push(newKey);\n        });\n        this.innerInteractionKeys = checkInteractionKeys;\n      }\n    } else {\n      // initialize interacrtionKeys prop\n      this.innerInteractionKeys = ['xAccessor', 'yAccessor'];\n    }\n  }\n\n  prepareScales() {\n    const minMapValue =\n      (this.minValueOverride || this.minValueOverride === 0) &&\n      this.minValueOverride < min(this.preppedData, d => d.valueAccessor)\n        ? this.minValueOverride\n        : min(this.preppedData, d => d.valueAccessor);\n    const maxMapValue =\n      (this.maxValueOverride || this.maxValueOverride === 0) &&\n      this.maxValueOverride > max(this.preppedData, d => d.valueAccessor)\n        ? this.maxValueOverride\n        : max(this.preppedData, d => d.valueAccessor);\n\n    this.x = scaleBand()\n      .domain(this.xKeyOrder ? this.xKeyOrder : this.preppedData.map(d => d.xAccessor))\n      .range([0, this.innerPaddedWidth]);\n    this.x.padding(this.strokeWidth ? this.strokeWidth / this.x.bandwidth() : 0);\n    this.y = scaleBand()\n      .domain(this.yKeyOrder ? this.yKeyOrder : this.preppedData.map(d => d.yAccessor))\n      .range([0, this.innerPaddedHeight]);\n\n    this.y.padding(this.strokeWidth ? this.strokeWidth / this.y.bandwidth() : 0);\n\n    this.heat = scaleQuantize().domain([minMapValue, maxMapValue]);\n\n    const strokeColors = [];\n    const backgroundColors = [];\n    let i = 0;\n    const half = Math.ceil(this.preparedColors.length / 2);\n    const isDiverging = this.colorPalette && this.colorPalette.includes('diverging');\n    const isDark = this.colorPalette && this.colorPalette.includes('dark');\n    this.preparedColors.forEach(color => {\n      const colorsMatchingScheme = prepareStrokeColorsFromScheme(\n        color,\n        i,\n        this.preparedColors,\n        isDiverging ? 'diverging' : 'sequential'\n      );\n      if (isDiverging) {\n        const fillLuminance = calculateLuminance(colorsMatchingScheme.fillColor);\n        const strokeLuminance = calculateLuminance(colorsMatchingScheme.textureColor);\n        const darkerColor =\n          fillLuminance > strokeLuminance ? colorsMatchingScheme.textureColor : colorsMatchingScheme.fillColor;\n        const lighterColor =\n          fillLuminance < strokeLuminance ? colorsMatchingScheme.textureColor : colorsMatchingScheme.fillColor;\n        if (this.preparedColors.length % 2 && i === (this.preparedColors.length - 1) / 2) {\n          backgroundColors.push(isDark ? darkerColor : lighterColor);\n          strokeColors.push(isDark ? lighterColor : darkerColor);\n        } else {\n          strokeColors.push(isDark ? darkerColor : lighterColor);\n          backgroundColors.push(isDark ? lighterColor : darkerColor);\n        }\n      } else {\n        if (i + 1 < half) {\n          backgroundColors.push(this.preparedColors[0]);\n          strokeColors.push(this.preparedColors[this.preparedColors.length - 1]);\n        } else {\n          strokeColors.push(this.preparedColors[0]);\n          backgroundColors.push(this.preparedColors[this.preparedColors.length - 1]);\n        }\n      }\n      i++;\n    });\n\n    this.fillColors = scaleQuantize()\n      .domain([minMapValue, maxMapValue])\n      .range(backgroundColors);\n\n    this.strokeColors = scaleQuantize()\n      .domain([minMapValue, maxMapValue])\n      .range(strokeColors);\n\n    this.rawHeat = scaleQuantize()\n      .domain([minMapValue, maxMapValue])\n      .range(this.preparedColors);\n\n    this.updateCheck = true;\n  }\n\n  setSubTitleElements() {\n    setSubTitle({\n      root: this.subTitleG,\n      subTitle: this.subTitle\n    });\n  }\n\n  setColors() {\n    this.preparedColors = this.colors ? convertVisaColor(this.colors) : getColors(this.colorPalette, this.colorSteps);\n  }\n\n  setTextures() {\n    const scheme = this.colorPalette && this.colorPalette.includes('diverging') ? 'diverging' : 'sequential';\n    const limit = scheme === 'diverging' ? 11 : 9;\n    if (this.accessibility.hideTextures || this.colorSteps > limit || !this.accessibility.showExperimentalTextures) {\n      this.colorArr = this.preparedColors;\n    } else {\n      const textures = convertColorsToTextures({\n        colors: this.preparedColors,\n        rootSVG: this.svg.node(),\n        id: this.chartID,\n        scheme,\n        disableTransitions: !this.duration\n      });\n      this.colorArr = textures;\n    }\n    this.heat.range(this.colorArr);\n  }\n\n  setStrokes() {\n    // technically the user could pass hoverstyle/clickstyle.color and we want to make sure that we intercept that\n    // heatmap does not use this prop, since color is bound intrinsically to value in the data\n    const clickStyle = { ...this.clickStyle, color: undefined };\n    const hoverStyle = { ...this.hoverStyle, color: undefined };\n    this.strokes = buildStrokes({\n      root: this.svg.node(),\n      id: this.chartID,\n      colors:\n        !this.accessibility.hideTextures && this.accessibility.showExperimentalTextures\n          ? this.fillColors.range()\n          : this.preparedColors, // this.fillColors.range(), // this.divergingColors && this.divergingColors.fills.length && !this.accessibility.hideTextures ? this.divergingColors.fills : this.preparedColors,\n      clickStyle,\n      hoverStyle,\n      strokeOverride:\n        !this.accessibility.hideTextures && this.accessibility.showExperimentalTextures\n          ? this.strokeColors.range()\n          : undefined\n    });\n  }\n\n  setTableData() {\n    // generate scoped and formatted data for data-table component\n    const keys = scopeDataKeys(this, chartAccessors, 'heat-map');\n    this.tableData = getScopedData(this.data, keys);\n    this.tableColumns = Object.keys(keys);\n  }\n\n  prepareData() {\n    // copy data to preppedData for data manipulation\n    // check data format & offset time object, create new keys for modified xAccessor, yAccessor, valueAccessor values\n    // this allows heatmap to share same data entries across different dimensions\n    if (this.updateCheck) {\n      this.interpolating = this.preppedData;\n      const oldXDomain = this.x.domain();\n      const oldXRange = this.x.range();\n      const oldYDomain = this.y.domain();\n      const oldYRange = this.y.range();\n      this.interpolating.x = scaleBand()\n        .domain(oldXDomain)\n        .range(oldXRange);\n      this.interpolating.y = scaleBand()\n        .domain(oldYDomain)\n        .range(oldYRange);\n    }\n    this.preppedData = this.data.map(d => {\n      const newRow = { ...d };\n      newRow['valueAccessor'] = parseFloat(d[this.valueAccessor]);\n      newRow['xAccessor'] =\n        d[this.xAccessor] instanceof Date\n          ? formatDate({\n              date: d[this.xAccessor],\n              format: this.xAxis.format,\n              offsetTimezone: true\n            })\n          : d[this.xAccessor];\n      newRow['yAccessor'] =\n        d[this.yAccessor] instanceof Date\n          ? formatDate({\n              date: d[this.yAccessor],\n              format: this.yAxis.format,\n              offsetTimezone: true\n            })\n          : d[this.yAccessor];\n\n      return newRow;\n    });\n\n    // groups each row of the heatmap to make keyboard navigation easier for accessibility\n    this.nest = nest()\n      .key(d => d[this.yAccessor])\n      .entries(this.preppedData);\n\n    // Get all item categories\n    this.datakeys = this.nest.map(d => d.key);\n  }\n\n  // reset graph size based on window size\n  reSetRoot() {\n    const changeSvg = prepareRenderChange({\n      selection: this.svg,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeSvg\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    const changeRoot = prepareRenderChange({\n      selection: this.root,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRoot.attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n\n    const changeRootG = prepareRenderChange({\n      selection: this.rootG,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRootG.attr('transform', `translate(${this.padding.left}, ${this.padding.top})`);\n\n    setAccessibilityDescriptionWidth(this.chartID, this.width);\n  }\n\n  drawXAxis(swapping?: boolean) {\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.xAccessor]\n        ? this.dataKeyNames[this.xAccessor]\n        : this.xAxis.label;\n    // draw axes\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.x,\n      top: this.xAxis.placement === 'top',\n      wrapLabel: this.wrapLabel ? this.x.bandwidth() : '',\n      format: this.xAxis.format,\n      tickInterval: this.xAxis.tickInterval,\n      label: axisLabel, // this.xAxis.label,\n      padding: this.padding,\n      hide: swapping || !this.xAxis.visible,\n      duration: this.duration,\n      hidePath: this.hideAxisPath\n    });\n  }\n\n  drawYAxis(swapping?: boolean) {\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.yAccessor]\n        ? this.dataKeyNames[this.yAccessor]\n        : this.yAxis.label;\n\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.y,\n      left: this.yAxis.placement !== 'right',\n      right: this.yAxis.placement === 'right',\n      format: this.yAxis.format,\n      wrapLabel: this.wrapLabel ? this.padding.left || 100 : '',\n      tickInterval: this.yAxis.tickInterval,\n      label: axisLabel, // this.yAxis.label,\n      padding: this.padding,\n      hide: swapping || !this.yAxis.visible,\n      duration: this.duration,\n      hidePath: this.hideAxisPath\n    });\n  }\n\n  setXAxisAccessibility() {\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.xAccessor]\n        ? this.dataKeyNames[this.xAccessor]\n        : this.xAxis.label;\n\n    setAccessXAxis({\n      rootEle: this.heatMapEl,\n      hasXAxis: this.xAxis ? this.xAxis.visible : false,\n      xAxis: this.x || false, // this is optional for some charts, if hasXAxis is always false\n      xAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasXAxis is always false\n    });\n  }\n\n  setYAxisAccessibility() {\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.yAccessor]\n        ? this.dataKeyNames[this.yAccessor]\n        : this.yAxis.label;\n\n    setAccessYAxis({\n      rootEle: this.heatMapEl,\n      hasYAxis: this.yAxis ? this.yAxis.visible : false,\n      yAxis: this.y || false, // this is optional for some charts, if hasXAxis is always false\n      yAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasYAxis is always false\n    });\n  }\n\n  renderRootElements() {\n    this.svg = select(this.heatMapEl)\n      .select('.visa-viz-d3-heat-map-container')\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    this.root = this.svg.append('g').attr('id', 'visa-viz-margin-container-g-' + this.chartID);\n    this.rootG = this.root.append('g').attr('id', 'visa-viz-padding-container-g-' + this.chartID);\n    this.map = this.rootG.append('g').attr('class', 'map-group');\n    this.labelG = this.rootG.append('g').attr('class', 'heat-map-dataLabel-group');\n    this.legendG = select(this.heatMapEl)\n      .select('.heat-map-legend')\n      .append('svg');\n    this.subTitleG = select(this.heatMapEl).select('.heat-sub-title');\n    this.tooltipG = select(this.heatMapEl).select('.heat-map-tooltip');\n  }\n\n  setGlobalSelections() {\n    this.xAxisElement = this.rootG.selectAll('.bottom');\n    const dataBoundToGroups = this.map.selectAll('.row').data(this.nest, d => d.key);\n\n    this.enterRowWrappers = dataBoundToGroups.enter().append('g');\n    this.exitRowWrappers = dataBoundToGroups.exit();\n    this.updateRowWrappers = dataBoundToGroups.merge(this.enterRowWrappers);\n\n    const dataBoundToGeometries = this.updateRowWrappers\n      .selectAll('.grid')\n      .data(d => d.values, d => d.xAccessor + d.yAccessor);\n\n    this.enter = dataBoundToGeometries.enter().append('rect');\n    this.exit = dataBoundToGeometries.exit();\n    this.update = dataBoundToGeometries.merge(this.enter);\n\n    this.exitSize = this.exit.size();\n    this.enterSize = this.enter.size();\n\n    this.exitSize += this.exitRowWrappers.selectAll('.grid').size();\n\n    const dataBoundToLabelGroups = this.labelG.selectAll('g').data(this.nest, d => d.key);\n\n    this.enteringLabelGroups = dataBoundToLabelGroups.enter().append('g');\n    this.exitingLabelGroups = dataBoundToLabelGroups.exit();\n    this.updatingLabelGroups = dataBoundToLabelGroups.merge(this.enteringLabelGroups);\n\n    const dataBoundToLabels = this.updatingLabelGroups\n      .selectAll('text')\n      .data(d => d.values, d => d.xAccessor + d.yAccessor);\n    this.enterLabels = dataBoundToLabels.enter().append('text');\n    this.exitLabels = dataBoundToLabels.exit();\n    this.updateLabels = dataBoundToLabels.merge(this.enterLabels);\n  }\n\n  setTestingAttributes() {\n    if (this.unitTest) {\n      select(this.heatMapEl)\n        .select('.visa-viz-d3-heat-map-container')\n        .attr('data-testid', 'chart-container');\n      select(this.heatMapEl)\n        .select('.heat-main-title')\n        .attr('data-testid', 'main-title');\n      select(this.heatMapEl)\n        .select('.heat-sub-title')\n        .attr('data-testid', 'sub-title');\n      this.svg.attr('data-testid', 'root-svg');\n      this.root.attr('data-testid', 'margin-container');\n      this.rootG.attr('data-testid', 'padding-container');\n      this.legendG.attr('data-testid', 'legend-container');\n      this.tooltipG.attr('data-testid', 'tooltip-container');\n      this.map.attr('data-testid', 'map-group');\n      this.labelG.attr('data-testid', 'dataLabel-group');\n      this.svg.select('defs').attr('data-testid', 'pattern-defs');\n\n      this.updateRowWrappers.attr('data-testid', 'map-row').attr('data-id', d => `row-${d.key}`);\n      this.updateLabels\n        .attr('data-testid', 'dataLabel')\n        .attr('data-id', d => `label-${d[this.xAccessor]}-${d[this.yAccessor]}`);\n      this.update\n        .attr('data-testid', 'marker')\n        .attr('data-id', d => `marker-${d[this.xAccessor]}-${d[this.yAccessor]}`);\n    } else {\n      select(this.heatMapEl)\n        .select('.visa-viz-d3-heat-map-container')\n        .attr('data-testid', null);\n      select(this.heatMapEl)\n        .select('.heat-main-title')\n        .attr('data-testid', null);\n      select(this.heatMapEl)\n        .select('.heat-sub-title')\n        .attr('data-testid', null);\n      this.svg.attr('data-testid', null);\n      this.root.attr('data-testid', null);\n      this.rootG.attr('data-testid', null);\n      this.legendG.attr('data-testid', null);\n      this.tooltipG.attr('data-testid', null);\n      this.map.attr('data-testid', null);\n      this.labelG.attr('data-testid', null);\n      this.svg.select('defs').attr('data-testid', null);\n\n      this.updateRowWrappers.attr('data-testid', null).attr('data-id', null);\n      this.updateLabels.attr('data-testid', null).attr('data-id', null);\n      this.update.attr('data-testid', null).attr('data-id', null);\n    }\n  }\n\n  // draw heat map\n  enterGeometries() {\n    this.enter.interrupt();\n\n    this.enterRowWrappers\n      .attr('class', 'row')\n      .classed('entering', true)\n      .each((_, i, n) => {\n        // we bind accessible interactivity and semantics here (role, tabindex, etc)\n        initializeElementAccess(n[i]);\n      });\n\n    this.enter\n      .attr('class', 'grid')\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .each((_d, i, n) => {\n        initializeElementAccess(n[i]);\n      })\n      .on(\n        'click',\n        !this.suppressEvents\n          ? (d, i, n) => {\n              this.onClickHandler(d, n[i]);\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents\n          ? (d, i, n) => {\n              this.onHoverHandler(d, n[i]);\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .attr('opacity', 0)\n      .attr('y', d => {\n        if (this.interpolating && this.interpolating.y(d.yAccessor) === undefined) {\n          let shift = this.y(d.yAccessor);\n          shift = shift + this.y.bandwidth() * (shift / this.y(this.y.domain()[0]));\n          return shift;\n        } else if (this.interpolating) {\n          return this.interpolating.y(d.yAccessor);\n        }\n        return this.y(d.yAccessor);\n      })\n      .attr('height', d => {\n        if (this.interpolating && this.interpolating.y(d.yAccessor) === undefined) {\n          return 0;\n        } else if (this.interpolating) {\n          return this.interpolating.y.bandwidth();\n        }\n        return this.y.bandwidth();\n      })\n      .attr('x', d => {\n        if (this.interpolating && this.interpolating.x(d.xAccessor) === undefined) {\n          let shift = this.x(d.xAccessor);\n          shift = shift + this.x.bandwidth() * (shift / this.x(this.x.domain()[this.x.domain().length - 1]));\n          return shift;\n        } else if (this.interpolating) {\n          return this.interpolating.x(d.xAccessor);\n        }\n        return this.x(d.xAccessor);\n      })\n      .attr('width', d => {\n        if (this.interpolating && this.interpolating.x(d.xAccessor) === undefined) {\n          return 0;\n        } else if (this.interpolating) {\n          return this.interpolating.x.bandwidth();\n        }\n        return this.x.bandwidth();\n      })\n      .attr('rx', this.shape === 'circle' ? this.x.bandwidth() : 0)\n      .attr('ry', this.shape === 'circle' ? this.y.bandwidth() : 0);\n\n    this.update.order();\n    this.enterRowWrappers.order();\n  }\n\n  updateGeometries() {\n    this.update.interrupt();\n\n    this.update\n      .transition('opacity')\n      .duration((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          select(n[i]).classed('entering', false);\n          return this.duration;\n        }\n        return 0;\n      })\n      .ease(easeCircleIn)\n      .attr('opacity', d => {\n        return checkInteraction(\n          d,\n          1,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        );\n      });\n  }\n\n  exitGeometries() {\n    this.exit.interrupt();\n\n    this.exit\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .attr('y', (d, i, n) => {\n        if (this.y(d.yAccessor) === undefined) {\n          const self = select(n[i]);\n          let shift = +self.attr('y');\n          shift = shift + +self.attr('height') * (shift / this.y(this.y.domain()[0]));\n          return shift;\n        }\n        return this.y(d.yAccessor);\n      })\n      .attr('height', d => {\n        if (this.y(d.yAccessor) === undefined) {\n          return 0;\n        }\n        return this.y.bandwidth();\n      })\n      .attr('x', (d, i, n) => {\n        if (this.x(d.xAccessor) === undefined) {\n          const self = select(n[i]);\n          let shift = +self.attr('x');\n          shift = shift + +self.attr('width') * (shift / this.x(this.x.domain()[this.x.domain().length - 1]));\n          return shift;\n        }\n        return this.x(d.xAccessor);\n      })\n      .attr('width', d => {\n        if (this.x(d.xAccessor) === undefined) {\n          return 0;\n        }\n        return this.x.bandwidth();\n      });\n\n    this.exitRowWrappers\n      .selectAll('.grid')\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .attr('y', (_, i, n) => {\n        const self = select(n[i]);\n        let shift = +self.attr('y');\n        shift = shift + +self.attr('height') * (shift / this.y(this.y.domain()[0]));\n        return shift;\n      })\n      .attr('height', 0)\n      .attr('x', (d, i, n) => {\n        if (this.x(d.xAccessor) === undefined) {\n          const self = select(n[i]);\n          let shift = +self.attr('x');\n          shift = shift + +self.attr('width') * (shift / this.x(this.x.domain()[this.x.domain().length - 1]));\n          return shift;\n        }\n        return this.x(d.xAccessor);\n      })\n      .attr('width', d => {\n        if (this.x(d.xAccessor) === undefined) {\n          return 0;\n        }\n        return this.x.bandwidth();\n      });\n\n    // this new transtition ensures that the chart counts and all labels\n    // correctly reflect the newest information\n    this.update\n      .transition('accessibilityAfterExit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        // before we exit geometries, we need to check if a focus exists or not\n        const focusDidExist = checkAccessFocus(this.rootG.node());\n        // then we must remove the exiting elements\n        this.exit.remove();\n        this.exitRowWrappers.remove();\n        // then our util can count geometries\n        this.setChartCountAccessibility();\n        // our group's label should update with new counts too\n        this.setGroupAccessibilityID();\n        // since items exited, labels must receive updated values\n        this.setGeometryAriaLabels();\n        // and also make sure the user's focus isn't lost\n        retainAccessFocus({\n          parentGNode: this.rootG.node(),\n          focusDidExist\n        });\n      });\n  }\n\n  drawGeometries() {\n    this.updateRowWrappers\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        this.updateRowWrappers.classed('entering', false);\n      });\n\n    const updateTransition = this.update\n      .classed('geometryIsMoving', (d, i, n) => {\n        const geometryIsUpdating = checkAttributeTransitions(select(n[i]), [\n          {\n            attr: 'y',\n            numeric: true,\n            newValue: this.y(d.yAccessor)\n          },\n          {\n            attr: 'height',\n            numeric: true,\n            newValue: this.y.bandwidth()\n          },\n          {\n            attr: 'x',\n            numeric: true,\n            newValue: this.x(d.xAccessor)\n          },\n          {\n            attr: 'width',\n            numeric: true,\n            newValue: this.x.bandwidth()\n          },\n          {\n            attr: 'rx',\n            numeric: true,\n            newValue: this.shape === 'circle' ? this.x.bandwidth() : 0\n          },\n          {\n            attr: 'ry',\n            numeric: true,\n            newValue: this.shape === 'circle' ? this.y.bandwidth() : 0\n          }\n        ]);\n        return geometryIsUpdating;\n      })\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('y', d => this.y(d.yAccessor))\n      .attr('height', this.y.bandwidth())\n      .attr('x', d => this.x(d.xAccessor))\n      .attr('width', this.x.bandwidth())\n      .attr('rx', this.shape === 'circle' ? this.x.bandwidth() : 0)\n      .attr('ry', this.shape === 'circle' ? this.y.bandwidth() : 0);\n\n    if (this.accessibility.hideTextures || !this.accessibility.showExperimentalTextures) {\n      updateTransition.attr('fill', d => {\n        return this.heat(d[this.valueAccessor]);\n      });\n    }\n\n    updateTransition.call(transitionEndAll, () => {\n      this.update.classed('geometryIsMoving', false);\n\n      this.updateInteractionState();\n\n      // we must make sure if geometries move, that our focus indicator does too\n      retainAccessFocus({\n        parentGNode: this.rootG.node()\n      });\n\n      // now we can emit the event that transitions are complete\n      this.transitionEndEvent.emit({ chartID: this.chartID });\n    });\n  }\n\n  updateInteractionState() {\n    removeHoverStrokes(this.svg.node());\n\n    // we use this.update and this.labelCurrent from setGlobalSelection here\n    // the lifecycle state does not matter (enter/update/exit)\n    // since interaction state can happen at any time\n\n    this.update\n      .attr('fill', d => {\n        return this.heat(d[this.valueAccessor]);\n      })\n      .attr('opacity', d => {\n        return checkInteraction(\n          d,\n          1,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        );\n      })\n      .attr('filter', (d, i, n) => {\n        if (!this.accessibility.hideStrokes && !select(n[i]).classed('geometryIsMoving')) {\n          const clicked =\n            this.clickHighlight &&\n            this.clickHighlight.length > 0 &&\n            checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n          const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n          const baseColor =\n            !this.accessibility.hideTextures && this.accessibility.showExperimentalTextures\n              ? this.fillColors(d[this.valueAccessor])\n              : this.rawHeat(d[this.valueAccessor]);\n          const strokeOverride =\n            !this.accessibility.hideTextures && this.accessibility.showExperimentalTextures\n              ? this.strokeColors(d[this.valueAccessor])\n              : undefined;\n          const state = clicked ? 'click' : hovered && !select(n[i]).classed('geometryIsMoving') ? 'hover' : 'rest';\n          if (state === 'hover') {\n            drawHoverStrokes({\n              inputElement: n[i],\n              id: this.chartID,\n              key: d[this.xAccessor] + d[this.yAccessor],\n              strokeWidth: this.hoverStyle.strokeWidth,\n              fill: baseColor,\n              strokeOverride\n            });\n          }\n          return this.strokes[state + baseColor];\n        }\n        return null;\n      });\n\n    // in case the fill/stroke contents change, we want to update our focus indicator to match\n    // (the focus indicator copies the whole element being focused to place it on top)\n    retainAccessFocus({\n      parentGNode: this.rootG.node()\n    });\n\n    // since elements may have changed fill, we update labels to match\n    this.updateLabels.attr('fill', this.textTreatmentHandler);\n  }\n\n  setLabelOpacity() {\n    this.processLabelOpacity(this.updateLabels);\n  }\n\n  processLabelOpacity(selection, isATransition?) {\n    const opacity = this.dataLabel.visible ? 1 : 0;\n    const dimensions = {\n      width: this.x.bandwidth(),\n      height: this.y.bandwidth()\n    };\n    const parseText = d => {\n      let text = this.dataLabel.labelAccessor ? d[this.dataLabel.labelAccessor] : d.valueAccessor;\n      text =\n        text instanceof Date\n          ? formatDate({\n              date: text,\n              format: this.dataLabel.format,\n              offsetTimezone: true\n            })\n          : formatStats(text, this.dataLabel.format);\n      const hasRoom =\n        this.accessibility.showSmallLabels ||\n        verifyTextHasSpace({\n          text,\n          dimensions,\n          fontSize: 14\n        });\n      return hasRoom\n        ? checkInteraction(\n            d,\n            opacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n          ? 0\n          : 1\n        : 0;\n    };\n    if (isATransition) {\n      selection.attr('opacity', parseText);\n    } else {\n      selection.each((d, i, n) => {\n        if (!select(n[i]).classed('entering')) {\n          select(n[i]).attr('opacity', () => parseText(d));\n        }\n      });\n    }\n  }\n\n  textTreatmentHandler = (d, i, n) => {\n    const bgColor =\n      !this.accessibility.hideTextures && this.accessibility.showExperimentalTextures\n        ? this.fillColors(d.valueAccessor)\n        : this.rawHeat(d.valueAccessor);\n    const color = autoTextColor(bgColor);\n    const me = select(n[i]);\n    me.attr(\n      'filter',\n      !me.classed('textIsMoving')\n        ? createTextStrokeFilter({\n            root: this.svg.node(),\n            id: this.chartID,\n            color: bgColor\n          })\n        : null\n    );\n    return color;\n  };\n\n  setSelectedClass() {\n    this.update.classed('highlight', (d, i, n) => {\n      let selected = checkInteraction(d, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n      selected = this.clickHighlight && this.clickHighlight.length ? selected : false;\n      const selectable = this.accessibility.elementsAreInterface;\n      setElementInteractionAccessState(n[i], selected, selectable);\n      return selected;\n    });\n  }\n\n  updateCursor() {\n    this.update.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    this.updateLabels.attr('cursor', !this.suppressEvents ? this.cursor : null);\n  }\n\n  bindInteractivity() {\n    this.update\n      .on(\n        'click',\n        !this.suppressEvents\n          ? (d, i, n) => {\n              this.onClickHandler(d, n[i]);\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents\n          ? (d, i, n) => {\n              this.onHoverHandler(d, n[i]);\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    this.updateLabels\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  enterDataLabels() {\n    this.enteringLabelGroups.attr('class', 'heat-map-label-wrapper');\n\n    this.enterLabels\n      .attr('class', 'heat-map-dataLabel entering')\n      .attr('opacity', 0)\n      .attr('fill', this.textTreatmentHandler)\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    placeDataLabels({\n      root: this.enterLabels,\n      xScale: this.x,\n      yScale: this.y,\n      ordinalAccessor: 'xAccessor',\n      valueAccessor: 'yAccessor',\n      chartType: 'heat-map'\n    });\n  }\n\n  updateDataLabels() {\n    const updateTransition = this.updateLabels\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          return this.duration / 2;\n        }\n        return 0;\n      })\n      .delay((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          return this.duration / 2;\n        }\n        return 0;\n      });\n\n    this.processLabelOpacity(updateTransition, true);\n    updateTransition.call(transitionEndAll, () => {\n      this.updateLabels.classed('entering', false);\n    });\n    // this.updatingLabelGroups\n    //   .transition('opacity')\n    //   .duration(this.duration)\n    //   .ease(easeCircleIn)\n    //   .attr('opacity', d => {\n    //     return checkInteraction(\n    //       d,\n    //       this.dataLabel.visible ? 1 : 0,\n    //       this.hoverOpacity,\n    //       this.hoverHighlight,\n    //       this.clickHighlight,\n    //       this.innerInteractionKeys\n    //     ) < 1\n    //       ? 0\n    //       : 1;\n    //   })\n    //   .call(transitionEndAll, () => {\n    //     this.updatingLabelGroups.classed('entering', false);\n    //   });\n  }\n\n  exitDataLabels() {\n    this.exitLabels\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .attr('opacity', 0)\n      .remove();\n\n    this.exitingLabelGroups\n      .selectAll('text')\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .attr('opacity', 0)\n      .call(transitionEndAll, () => {\n        this.exitingLabelGroups.remove();\n      });\n  }\n\n  drawDataLabels() {\n    this.updateLabels.attr('fill', this.textTreatmentHandler).text(d => {\n      const text = this.dataLabel.labelAccessor ? d[this.dataLabel.labelAccessor] : d.valueAccessor;\n      return text instanceof Date\n        ? formatDate({\n            date: text,\n            format: this.dataLabel.format,\n            offsetTimezone: true\n          })\n        : formatStats(text, this.dataLabel.format);\n    });\n\n    const placeLabels = this.updateLabels\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration);\n\n    placeDataLabels({\n      root: placeLabels,\n      xScale: this.x,\n      yScale: this.y,\n      ordinalAccessor: 'xAccessor',\n      valueAccessor: 'yAccessor',\n      chartType: 'heat-map'\n    });\n  }\n\n  drawLegendElements() {\n    drawLegend({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      width: this.innerPaddedWidth,\n      height: this.margin.bottom + 60,\n      colorArr: this.legend && this.legend.type !== 'gradient' ? this.colorArr : this.preparedColors,\n      baseColorArr: !(this.colorPalette && this.colorPalette.includes('diverging'))\n        ? [this.preparedColors[this.preparedColors.length - 1]]\n        : this.strokeColors.range(),\n      hideStrokes: this.accessibility.hideStrokes,\n      scale: this.heat,\n      steps: this.colorSteps,\n      margin: this.margin,\n      padding: this.padding,\n      duration: this.duration,\n      type: this.legend.type,\n      fontSize: 12,\n      label: this.legend.labels,\n      format: this.legend.format,\n      hide: !this.legend.visible\n    });\n  }\n\n  drawAnnotations() {\n    annotate({\n      source: this.rootG.node(),\n      data: this.annotations,\n      xScale: this.x,\n      xAccessor: this.xAccessor,\n      yScale: this.y,\n      yAccessor: this.yAccessor\n    });\n  }\n\n  setAnnotationAccessibility() {\n    setAccessAnnotation(this.getLanguageString(), this.heatMapEl, this.annotations, undefined);\n  }\n  // new accessibility functions added here\n  setTagLevels() {\n    this.topLevel = findTagLevel(this.highestHeadingLevel);\n    this.bottomLevel = findTagLevel(this.highestHeadingLevel, 3);\n  }\n\n  setChartDescriptionWrapper() {\n    // this initializes the accessibility description section of the chart\n    initializeDescriptionRoot({\n      language: this.getLanguageString(),\n      rootEle: this.heatMapEl,\n      title: this.accessibility.title || this.mainTitle,\n      chartTag: 'heat-map',\n      uniqueID: this.chartID,\n      highestHeadingLevel: this.highestHeadingLevel,\n      redraw: this.shouldRedrawWrapper,\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      hideDataTable: this.accessibility.hideDataTableButton\n    });\n    this.shouldRedrawWrapper = false;\n  }\n\n  setParentSVGAccessibility() {\n    // this sets the accessibility features of the root SVG element\n    setAccessibilityController({\n      chartTag: 'heat-map',\n      language: this.getLanguageString(),\n      node: this.svg.node(),\n      title: this.accessibility.title || this.mainTitle,\n      description: this.subTitle,\n      uniqueID: this.chartID,\n      geomType: 'cell',\n      includeKeyNames: this.accessibility.includeDataKeyNames,\n      dataKeys: scopeDataKeys(this, chartAccessors, 'heat-map'),\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.yAccessor,\n      groupName: 'row',\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled\n    });\n  }\n\n  setGeometryAccessibilityAttributes() {\n    // this makes sure every geom element has correct event handlers + semantics (role, tabindex, etc)\n    this.update.each((_d, i, n) => {\n      initializeElementAccess(n[i]);\n    });\n  }\n\n  setGeometryAriaLabels() {\n    // this adds an ARIA label to each geom (a description read by screen readers)\n    const keys = scopeDataKeys(this, chartAccessors, 'heat-map');\n    this.update.each((_d, i, n) => {\n      setElementFocusHandler({\n        chartTag: 'heat-map',\n        language: this.getLanguageString(),\n        node: n[i],\n        geomType: 'cell',\n        includeKeyNames: this.accessibility.includeDataKeyNames,\n        dataKeys: keys,\n        dataKeyNames: this.dataKeyNames,\n        groupName: 'row',\n        uniqueID: this.chartID,\n        disableKeyNav:\n          this.suppressEvents &&\n          this.accessibility.elementsAreInterface === false &&\n          this.accessibility.keyboardNavConfig &&\n          this.accessibility.keyboardNavConfig.disabled\n      });\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setGroupAccessibilityID() {\n    // this sets an ARIA label on all the g elements in the chart\n    this.updateRowWrappers.each((_, i, n) => {\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setChartAccessibilityTitle() {\n    setAccessTitle(this.getLanguageString(), this.heatMapEl, this.accessibility.title || this.mainTitle);\n  }\n\n  setChartAccessibilitySubtitle() {\n    setAccessSubtitle(this.getLanguageString(), this.heatMapEl, this.subTitle);\n  }\n\n  setChartAccessibilityLongDescription() {\n    setAccessLongDescription(this.getLanguageString(), this.heatMapEl, this.accessibility.longDescription);\n  }\n\n  setChartAccessibilityExecutiveSummary() {\n    setAccessExecutiveSummary(this.getLanguageString(), this.heatMapEl, this.accessibility.executiveSummary);\n  }\n\n  setChartAccessibilityPurpose() {\n    setAccessPurpose(this.getLanguageString(), this.heatMapEl, this.accessibility.purpose);\n  }\n\n  setChartAccessibilityContext() {\n    setAccessContext(this.getLanguageString(), this.heatMapEl, this.accessibility.contextExplanation);\n  }\n\n  setChartAccessibilityStatisticalNotes() {\n    setAccessStatistics(this.getLanguageString(), this.heatMapEl, this.accessibility.statisticalNotes);\n  }\n\n  setChartCountAccessibility() {\n    // this is our automated section that describes the chart contents\n    // (like geometry and group counts, etc)\n    setAccessChartCounts({\n      rootEle: this.heatMapEl,\n      parentGNode: this.map.node(), // pass the wrapper to <g> or geometries here, should be single node selection\n      chartTag: 'heat-map',\n      geomType: 'cell',\n      groupName: 'row'\n    });\n  }\n\n  setChartAccessibilityStructureNotes() {\n    setAccessStructure(this.getLanguageString(), this.heatMapEl, this.accessibility.structureNotes);\n  }\n  // new accessibility stuff ends here\n\n  onChangeHandler() {\n    if (this.accessibility && typeof this.accessibility.onChangeFunc === 'function') {\n      const d = {\n        updated: this.updated,\n        added: this.enterSize,\n        removed: this.exitSize\n      };\n      this.accessibility.onChangeFunc(d);\n    }\n    this.updated = false;\n    this.enterSize = 0;\n    this.exitSize = 0;\n  }\n\n  onClickHandler(d, n) {\n    this.clickEvent.emit({ data: d, target: n });\n  }\n\n  onHoverHandler(d, n) {\n    overrideTitleTooltip(this.chartID, true);\n    this.hoverEvent.emit({ data: d, target: n });\n    if (this.showTooltip) {\n      this.eventsTooltip({ data: d, evt: event, isToShow: true });\n    }\n  }\n\n  onMouseOutHandler() {\n    overrideTitleTooltip(this.chartID, false);\n    this.mouseOutEvent.emit();\n    if (this.showTooltip) {\n      this.eventsTooltip({ isToShow: false });\n    }\n  }\n\n  // set initial style (instead of copying css class across the lib)\n  setTooltipInitialStyle() {\n    initTooltipStyle(this.tooltipG);\n  }\n\n  // tooltip\n  eventsTooltip({ data, evt, isToShow }: { data?: any; evt?: any; isToShow: boolean }) {\n    drawTooltip({\n      root: this.tooltipG,\n      data,\n      event: evt,\n      isToShow,\n      tooltipLabel: this.tooltipLabel,\n      xAxis: this.xAxis,\n      yAxis: this.yAxis,\n      dataLabel: this.dataLabel,\n      dataKeyNames: this.dataKeyNames,\n      valueAccessor: this.valueAccessor,\n      xAccessor: this.xAccessor,\n      yAccessor: this.yAccessor,\n      chartType: 'heat-map'\n    });\n  }\n\n  render() {\n    this.drawStartEvent.emit({ chartID: this.chartID });\n    // everything between this comment and the third should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n    this.init();\n    if (this.shouldSetLocalizationConfig) {\n      this.setLocalizationConfig();\n      this.shouldSetLocalizationConfig = false;\n    }\n    if (this.shouldSetTagLevels) {\n      this.setTagLevels();\n      this.shouldSetTagLevels = false;\n    }\n    if (this.shouldUpdateData) {\n      this.prepareData();\n      this.shouldUpdateData = false;\n    }\n    if (this.shouldSetDimensions) {\n      this.setDimensions();\n      this.shouldSetDimensions = false;\n    }\n    if (this.shouldSetColors) {\n      this.setColors();\n      this.shouldSetColors = false;\n    }\n    if (this.shouldUpdateScales) {\n      this.prepareScales();\n      this.shouldUpdateScales = false;\n    }\n    if (this.shouldFormatClickHighlight) {\n      this.formatClickHighlight();\n      this.shouldFormatClickHighlight = false;\n    }\n    if (this.shouldFormatHoverHighlight) {\n      this.formatHoverHighlight();\n      this.shouldFormatHoverHighlight = false;\n    }\n    if (this.shouldValidateInteractionKeys) {\n      this.validateInteractionKeys();\n      this.shouldValidateInteractionKeys = false;\n    }\n    if (this.shouldUpdateTableData) {\n      this.setTableData();\n      this.shouldUpdateTableData = false;\n    }\n    if (this.shouldValidate) {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.shouldValidate = false;\n    }\n    // Everything between this comment and the first should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n\n    return (\n      <div class={`o-layout`}>\n        <div class=\"o-layout--chart\">\n          <this.topLevel class=\"heat-main-title vcl-main-title\">{this.mainTitle}</this.topLevel>\n          <this.bottomLevel class=\"visa-ui-text--instructions heat-sub-title vcl-sub-title\" />\n          <div class=\"heat-map-legend vcl-legend\" style={{ display: this.legend.visible ? 'block' : 'none' }} />\n          <keyboard-instructions\n            uniqueID={this.chartID}\n            geomType={'cell'}\n            groupName={'row'} // taken from initializeDescriptionRoot, on bar this should be \"bar group\", stacked bar is \"stack\", and clustered is \"cluster\"\n            language={this.getLanguageString()}\n            chartTag={'heat-map'}\n            width={this.width - (this.margin ? this.margin.right || 0 : 0)}\n            isInteractive={this.accessibility.elementsAreInterface}\n            hasCousinNavigation\n            disabled={\n              this.suppressEvents &&\n              this.accessibility.elementsAreInterface === false &&\n              this.accessibility.keyboardNavConfig &&\n              this.accessibility.keyboardNavConfig.disabled\n            } // the chart is \"simple\"\n          />\n          <div class=\"visa-viz-d3-heat-map-container\" />\n          <div class=\"heat-map-tooltip vcl-tooltip\" style={{ display: this.showTooltip ? 'block' : 'none' }} />\n          <data-table\n            uniqueID={this.chartID}\n            isCompact\n            language={this.getLanguageString()}\n            tableColumns={this.tableColumns}\n            data={this.tableData}\n            dataKeyNames={this.dataKeyNames}\n            padding={this.padding}\n            margin={this.margin}\n            hideDataTable={this.accessibility.hideDataTableButton}\n            unitTest={this.unitTest}\n          />\n        </div>\n      </div>\n    );\n  }\n  private init() {\n    // reading properties\n    const keys = Object.keys(HeatMapDefaultValues);\n    let i = 0;\n    // accept 0 or false as default value\n    const exceptions = {\n      strokeWidth: {\n        exception: 0\n      },\n      showTooltip: {\n        exception: false\n      },\n      mainTitle: {\n        exception: ''\n      },\n      subTitle: {\n        exception: ''\n      },\n      wrapLabel: {\n        exception: false\n      },\n      hoverOpacity: {\n        exception: 0\n      }\n    };\n    for (i = 0; i < keys.length; i++) {\n      const exception = !exceptions[keys[i]] ? false : this[keys[i]] === exceptions[keys[i]].exception;\n      this[keys[i]] = this[keys[i]] || exception ? this[keys[i]] : HeatMapDefaultValues[keys[i]];\n    }\n  }\n}\n\n// incorporate OSS licenses into build\nwindow['VisaChartsLibOSSLicenses'] = getLicenses(); // tslint:disable-line no-string-literal\n"],"mappings":"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","ignoreList":[]}