{"version":3,"names":["propDefaultValues","Utils","HeatMapDefaultValues","mainTitle","subTitle","text","height","width","margin","top","bottom","right","left","padding","localization","xAccessor","yAccessor","valueAccessor","shape","hideAxisPath","showBaselineFalse","accessibility","animationConfig","highestHeadingLevel","xAxis","yAxis","wrapLabel","strokeWidth","strokeWidth2","colorPalette","colorPaletteSequential","colorSteps","colorSteps5","hoverStyle","clickStyle","cursor","hoverOpacity","dataLabel","legend","tooltipLabel","showTooltip","suppressEvents","referenceLines","annotations","clickHighlight","heatMapCss","HeatMapStyle0","getGlobalInstances","configLocalization","getActiveLanguageString","calculateLuminance","prepareStrokeColorsFromScheme","verifyTextHasSpace","checkAttributeTransitions","createTextStrokeFilter","drawHoverStrokes","removeHoverStrokes","buildStrokes","convertColorsToTextures","findTagLevel","prepareRenderChange","initializeDescriptionRoot","initializeElementAccess","setElementFocusHandler","setElementAccessID","setAccessibilityController","hideNonessentialGroups","setAccessTitle","setAccessSubtitle","setAccessLongDescription","setAccessExecutiveSummary","setAccessPurpose","setAccessContext","setAccessStatistics","setAccessChartCounts","setAccessXAxis","setAccessYAxis","setAccessStructure","setAccessAnnotation","retainAccessFocus","checkAccessFocus","setElementInteractionAccessState","setAccessibilityDescriptionWidth","autoTextColor","annotate","chartAccessors","checkInteraction","checkClicked","checkHovered","convertVisaColor","drawAxis","drawLegend","drawTooltip","formatStats","formatDate","getColors","getLicenses","getPadding","getScopedData","initTooltipStyle","overrideTitleTooltip","placeDataLabels","scopeDataKeys","transitionEndAll","validateAccessibilityProps","validateLocalizationProps","setSubTitle","HeatMap","this","shouldValidateAccessibility","shouldValidateLocalization","nest","datakeys","updated","shouldValidate","shouldUpdateData","shouldSetDimensions","shouldUpdateTableData","shouldUpdateScales","shouldResetRoot","shouldSetColors","shouldSetSubTitle","shouldValidateInteractionKeys","shouldFormatClickHighlight","shouldFormatHoverHighlight","shouldUpdateAnnotations","shouldUpdateXAxis","shouldUpdateYAxis","shouldSetGlobalSelections","shouldSetTestingAttributes","shouldEnterUpdateExit","shouldUpdateGeometries","shouldSetSelectionClass","shouldDrawInteractionState","shouldUpdateLegend","shouldUpdateCursor","shouldBindInteractivity","shouldUpdateLabels","shouldSetLabelOpacity","shouldSwapXAxis","shouldSwapYAxis","shouldUpdateDescriptionWrapper","shouldSetChartAccessibilityTitle","shouldSetChartAccessibilitySubtitle","shouldSetChartAccessibilityLongDescription","shouldSetChartAccessibilityExecutiveSummary","shouldSetChartAccessibilityStatisticalNotes","shouldSetChartAccessibilityStructureNotes","shouldSetParentSVGAccessibility","shouldSetGeometryAccessibilityAttributes","shouldSetGeometryAriaLabels","shouldSetGroupAccessibilityLabel","shouldSetChartAccessibilityPurpose","shouldSetChartAccessibilityContext","shouldRedrawWrapper","shouldSetTagLevels","shouldSetChartAccessibilityCount","shouldSetYAxisAccessibility","shouldSetXAxisAccessibility","shouldSetAnnotationAccessibility","shouldSetTextures","shouldSetStrokes","shouldSetLocalizationConfig","strokes","topLevel","bottomLevel","textTreatmentHandler","d","i","n","bgColor","hideTextures","showExperimentalTextures","fillColors","rawHeat","color","me","select","attr","classed","root","svg","node","id","chartID","dataWatcher","_newData","_oldData","idWatcher","newID","_oldID","console","error","headingWatcher","_newVal","_oldVal","titleWatcher","subtitleWatcher","layoutWatcher","xAccessorWatcher","yAccessorWatcher","groupAccessorWatcher","interactionKeys","length","xKeyOrderWatcher","yKeyOrderWatcher","xAxisWatcher","newFormatVal","format","oldFormatVal","newPlacementVal","placement","oldPlacementVal","yAxisWatcher","wrapLabelWatcher","hideAxisPathWatcher","colorsWatcher","hoverStyleWatcher","clickStyleWatcher","shapeWatcher","cursorWatcher","strokeWidthWatcher","hoverOpacityWatcher","labelWatcher","newVisibleVal","visible","oldVisibleVal","showTooltipWatcher","tooltipLabelWatcher","legendWatcher","suppressWatcher","annotationsWatcher","accessibilityWatcher","newTitle","title","oldTitle","newExecutiveSummary","executiveSummary","oldExecutiveSummary","newPurpose","purpose","oldPurpose","newLongDescription","longDescription","oldLongDescription","newContext","contextExplanation","oldContext","newStatisticalNotes","statisticalNotes","oldStatisticalNotes","newStructureNotes","structureNotes","oldStructureNotes","newincludeDataKeyNames","includeDataKeyNames","oldincludeDataKeyNames","newElementDescriptionAccessor","elementDescriptionAccessor","oldElementDescriptionAccessor","newTextures","oldTextures","newExTextures","oldExTextures","newSmallValue","showSmallLabels","oldSmallValue","newStrokes","hideStrokes","oldStrokes","newKeyNav","keyboardNavConfig","disabled","oldKeyNav","newInterface","elementsAreInterface","oldInterface","localizationWatcher","newLanguage","language","oldLanguage","newNumeralLocale","numeralLocale","oldNumeralLocale","valueOverrideWatcher","clickWatcher","hoverWatcher","interactionWatcher","dataKeyNamesWatcher","unitTestWatcher","componentWillLoad","uniqueID","uuid","initialLoadEvent","emit","Promise","resolve","duration","defaults","heatMapEl","setLocalizationConfig","setTagLevels","prepareData","setDimensions","setColors","prepareScales","validateInteractionKeys","setTableData","shouldValidateAccessibilityProps","shouldValidateLocalizationProps","formatClickHighlight","formatHoverHighlight","componentWillUpdate","componentDidLoad","renderRootElements","setTooltipInitialStyle","setChartDescriptionWrapper","setChartAccessibilityTitle","setChartAccessibilitySubtitle","setChartAccessibilityLongDescription","setChartAccessibilityExecutiveSummary","setChartAccessibilityPurpose","setChartAccessibilityContext","setChartAccessibilityStatisticalNotes","setChartAccessibilityStructureNotes","setParentSVGAccessibility","reSetRoot","setTextures","setStrokes","setSubTitleElements","setGlobalSelections","setTestingAttributes","enterGeometries","updateGeometries","exitGeometries","enterDataLabels","updateDataLabels","exitDataLabels","drawGeometries","setChartCountAccessibility","setGeometryAccessibilityAttributes","setGeometryAriaLabels","drawDataLabels","drawLegendElements","setSelectedClass","updateInteractionState","bindInteractivity","drawAnnotations","setAnnotationAccessibility","drawXAxis","setXAxisAccessibility","drawYAxis","setYAxisAccessibility","map","setGroupAccessibilityID","onChangeHandler","then","initialLoadEndEvent","componentDidUpdate","setLabelOpacity","updateCursor","drawEndEvent","windowInstances","languageString","i18Next","languageObject","getResourceBundle","numeralObject","numeral","localeData","skipValidation","Object","assign","disableValidation","data","context","onClickEvent","undefined","clickEvent","Date","date","offsetTimezone","hoverHighlight","getLanguageString","innerHeight","innerWidth","innerPaddedHeight","innerPaddedWidth","includes","checkInteractionKeys","k","newKey","push","innerInteractionKeys","minMapValue","minValueOverride","min","preppedData","maxMapValue","maxValueOverride","max","x","scaleBand","domain","xKeyOrder","range","bandwidth","y","yKeyOrder","heat","scaleQuantize","strokeColors","backgroundColors","half","Math","ceil","preparedColors","isDiverging","isDark","forEach","colorsMatchingScheme","fillLuminance","fillColor","strokeLuminance","textureColor","darkerColor","lighterColor","updateCheck","subTitleG","colors","scheme","limit","colorArr","textures","rootSVG","disableTransitions","strokeOverride","keys","tableData","tableColumns","interpolating","oldXDomain","oldXRange","oldYDomain","oldYRange","newRow","parseFloat","key","entries","changeSvg","selection","namespace","easing","easeCircleIn","changeRoot","changeRootG","rootG","swapping","axisLabel","label","dataKeyNames","axisScale","tickInterval","hide","hidePath","rootEle","hasXAxis","xAxisLabel","hasYAxis","yAxisLabel","append","labelG","legendG","tooltipG","xAxisElement","selectAll","dataBoundToGroups","enterRowWrappers","enter","exitRowWrappers","exit","updateRowWrappers","merge","dataBoundToGeometries","values","update","exitSize","size","enterSize","dataBoundToLabelGroups","enteringLabelGroups","exitingLabelGroups","updatingLabelGroups","dataBoundToLabels","enterLabels","exitLabels","updateLabels","unitTest","interrupt","each","_","_d","on","onClickHandler","onHoverHandler","onMouseOutHandler","shift","order","transition","ease","self","call","focusDidExist","remove","parentGNode","updateTransition","geometryIsUpdating","numeric","newValue","transitionEndEvent","clicked","hovered","baseColor","state","inputElement","fill","processLabelOpacity","isATransition","opacity","dimensions","parseText","labelAccessor","hasRoom","fontSize","selected","selectable","xScale","yScale","ordinalAccessor","chartType","delay","placeLabels","type","baseColorArr","scale","steps","labels","source","chartTag","redraw","disableKeyNav","hideDataTable","hideDataTableButton","description","geomType","includeKeyNames","dataKeys","groupAccessor","groupName","onChangeFunc","added","removed","target","hoverEvent","eventsTooltip","evt","event","isToShow","mouseOutEvent","render","drawStartEvent","init","h","class","style","display","isInteractive","hasCousinNavigation","isCompact","exceptions","exception","window"],"sources":["src/components/heat-map/heat-map-default-values.ts","src/components/heat-map/heat-map.scss?tag=heat-map","src/components/heat-map/heat-map.tsx"],"sourcesContent":["/**\n * Copyright (c) 2020, 2021, 2022, 2023 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport Utils from '@visa/visa-charts-utils';\n\nconst { propDefaultValues } = Utils;\n\nexport class HeatMapDefaultValues {\n  static readonly mainTitle = 'Heat Map Title';\n  static readonly subTitle = propDefaultValues.subTitle.text;\n  static readonly height = 250;\n  static readonly width = 500;\n  static readonly margin = {\n    top: 250 * 0.01,\n    bottom: 250 * 0.01,\n    right: 500 * 0.01,\n    left: 500 * 0.01\n  };\n  static readonly padding = {\n    top: 20,\n    bottom: 30,\n    right: 60,\n    left: 80\n  };\n\n  static readonly localization = propDefaultValues.localization;\n\n  static readonly xAccessor = 'date';\n  static readonly yAccessor = 'category';\n  static readonly valueAccessor = 'value';\n\n  static readonly shape = 'rect';\n  static readonly hideAxisPath = propDefaultValues.showBaselineFalse;\n\n  static readonly accessibility = propDefaultValues.accessibility;\n  static readonly animationConfig = propDefaultValues.animationConfig;\n  static readonly highestHeadingLevel = propDefaultValues.highestHeadingLevel;\n\n  static readonly xAxis = propDefaultValues.xAxis;\n  static readonly yAxis = propDefaultValues.yAxis;\n  static readonly wrapLabel = propDefaultValues.wrapLabel;\n  static readonly strokeWidth = propDefaultValues.strokeWidth2;\n\n  static readonly colorPalette = propDefaultValues.colorPaletteSequential;\n  static readonly colorSteps = propDefaultValues.colorSteps5;\n\n  static readonly hoverStyle = propDefaultValues.hoverStyle;\n  static readonly clickStyle = propDefaultValues.clickStyle;\n\n  static readonly cursor = propDefaultValues.cursor;\n  static readonly hoverOpacity = propDefaultValues.hoverOpacity;\n\n  static readonly dataLabel = propDefaultValues.dataLabel;\n  static readonly dataKeyNames;\n  static readonly legend = propDefaultValues.legend;\n  static readonly tooltipLabel = propDefaultValues.tooltipLabel;\n\n  static readonly showTooltip = propDefaultValues.showTooltip;\n  static readonly suppressEvents = propDefaultValues.suppressEvents;\n  static readonly referenceLines = propDefaultValues.referenceLines;\n  static readonly annotations = propDefaultValues.annotations;\n\n  static readonly hoverHighlight;\n  static readonly clickHighlight = propDefaultValues.clickHighlight;\n}\n","/**\n * Copyright (c) 2020, 2021, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nheat-map {\n  .annotations {\n    pointer-events: none;\n    .handle {\n      pointer-events: all;\n    }\n  }\n\n  .screen-reader-info {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n\n  .data-table-link {\n    color: #767676;\n    text-decoration: none;\n    font-size: 12px;\n    margin-left: 5%;\n  }\n\n  .hidden {\n    display: none;\n  }\n\n  cursor: default;\n  .axis {\n    font-size: 12px;\n    text {\n      //font: 0.65rem;\n      fill: #767676;\n    }\n\n    &-label {\n      text-anchor: middle;\n      font: 1rem sans-serif;\n    }\n    path {\n      stroke: #767676;\n    }\n    .hidden {\n      visibility: hidden;\n    }\n  }\n  .heat-map-legend {\n    font-size: 1em;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n\n    .legend {\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n    }\n  }\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport { Component, Element, Prop, Watch, Event, EventEmitter, h } from '@stencil/core';\nimport { select, event } from 'd3-selection';\nimport { min, max } from 'd3-array';\nimport { scaleBand, scaleQuantize } from 'd3-scale';\nimport { easeCircleIn } from 'd3-ease';\nimport { nest } from 'd3-collection';\nimport {\n  IBoxModelType,\n  ILocalizationType,\n  IHoverStyleType,\n  IClickStyleType,\n  IAxisType,\n  IDataLabelType,\n  ITooltipLabelType,\n  IAccessibilityType,\n  IAnimationConfig,\n  ILegendType,\n  ISubTitleType\n} from '@visa/charts-types';\nimport { HeatMapDefaultValues } from './heat-map-default-values';\nimport 'd3-transition';\nimport { v4 as uuid } from 'uuid';\nimport Utils from '@visa/visa-charts-utils';\n\nconst {\n  getGlobalInstances,\n  configLocalization,\n  getActiveLanguageString,\n  calculateLuminance,\n  prepareStrokeColorsFromScheme,\n  verifyTextHasSpace,\n  checkAttributeTransitions,\n  createTextStrokeFilter,\n  drawHoverStrokes,\n  removeHoverStrokes,\n  buildStrokes,\n  convertColorsToTextures,\n  findTagLevel,\n  prepareRenderChange,\n  initializeDescriptionRoot,\n  initializeElementAccess,\n  setElementFocusHandler,\n  setElementAccessID,\n  setAccessibilityController,\n  hideNonessentialGroups,\n  setAccessTitle,\n  setAccessSubtitle,\n  setAccessLongDescription,\n  setAccessExecutiveSummary,\n  setAccessPurpose,\n  setAccessContext,\n  setAccessStatistics,\n  setAccessChartCounts,\n  setAccessXAxis,\n  setAccessYAxis,\n  setAccessStructure,\n  setAccessAnnotation,\n  retainAccessFocus,\n  checkAccessFocus,\n  setElementInteractionAccessState,\n  setAccessibilityDescriptionWidth,\n  autoTextColor,\n  annotate,\n  chartAccessors,\n  checkInteraction,\n  checkClicked,\n  checkHovered,\n  convertVisaColor,\n  drawAxis,\n  drawLegend,\n  drawTooltip,\n  formatStats,\n  formatDate,\n  getColors,\n  getLicenses,\n  getPadding,\n  getScopedData,\n  initTooltipStyle,\n  overrideTitleTooltip,\n  placeDataLabels,\n  scopeDataKeys,\n  transitionEndAll,\n  validateAccessibilityProps,\n  validateLocalizationProps,\n  setSubTitle\n} = Utils;\n\n@Component({\n  tag: 'heat-map',\n  styleUrl: 'heat-map.scss'\n})\nexport class HeatMap {\n  @Event() clickEvent: EventEmitter;\n  @Event() hoverEvent: EventEmitter;\n  @Event() mouseOutEvent: EventEmitter;\n  @Event() initialLoadEvent: EventEmitter;\n  @Event() initialLoadEndEvent: EventEmitter;\n  @Event() drawStartEvent: EventEmitter;\n  @Event() drawEndEvent: EventEmitter;\n  @Event() transitionEndEvent: EventEmitter;\n\n  // Chart Attributes (1/7)\n  @Prop({ mutable: true }) localization: ILocalizationType = HeatMapDefaultValues.localization;\n  @Prop({ mutable: true }) mainTitle: string = HeatMapDefaultValues.mainTitle;\n  @Prop({ mutable: true }) subTitle: string | ISubTitleType = HeatMapDefaultValues.subTitle;\n  @Prop({ mutable: true }) height: number = HeatMapDefaultValues.height;\n  @Prop({ mutable: true }) width: number = HeatMapDefaultValues.width;\n  @Prop({ mutable: true }) highestHeadingLevel: string | number = HeatMapDefaultValues.highestHeadingLevel;\n  @Prop({ mutable: true }) margin: IBoxModelType = HeatMapDefaultValues.margin;\n  @Prop({ mutable: true }) padding: IBoxModelType = HeatMapDefaultValues.padding;\n\n  // Data (2/7)\n  @Prop() data: object[];\n  @Prop() uniqueID: string;\n  @Prop({ mutable: true }) xAccessor: string = HeatMapDefaultValues.xAccessor;\n  @Prop({ mutable: true }) yAccessor: string = HeatMapDefaultValues.yAccessor;\n  @Prop({ mutable: true }) valueAccessor: string = HeatMapDefaultValues.valueAccessor;\n  @Prop({ mutable: true }) xKeyOrder: string[];\n  @Prop({ mutable: true }) yKeyOrder: string[];\n\n  // Axis (3/7)\n  @Prop({ mutable: true }) xAxis: IAxisType = HeatMapDefaultValues.xAxis;\n  @Prop({ mutable: true }) yAxis: IAxisType = HeatMapDefaultValues.yAxis;\n  @Prop({ mutable: true }) wrapLabel: boolean = HeatMapDefaultValues.wrapLabel;\n  @Prop({ mutable: true }) hideAxisPath: boolean = HeatMapDefaultValues.hideAxisPath;\n\n  // Color & Shape (4/7)\n  @Prop({ mutable: true }) colorPalette: string = HeatMapDefaultValues.colorPalette;\n  @Prop({ mutable: true }) colors: string[];\n  @Prop({ mutable: true }) colorSteps: number = HeatMapDefaultValues.colorSteps;\n  @Prop({ mutable: true }) hoverStyle: IHoverStyleType = HeatMapDefaultValues.hoverStyle;\n  @Prop({ mutable: true }) clickStyle: IClickStyleType = HeatMapDefaultValues.clickStyle;\n  @Prop({ mutable: true }) cursor: string = HeatMapDefaultValues.cursor;\n  @Prop({ mutable: true }) shape: string = HeatMapDefaultValues.shape;\n  @Prop({ mutable: true }) hoverOpacity: number = HeatMapDefaultValues.hoverOpacity;\n  @Prop({ mutable: true }) animationConfig: IAnimationConfig = HeatMapDefaultValues.animationConfig;\n  @Prop({ mutable: true }) strokeWidth: number = HeatMapDefaultValues.strokeWidth;\n\n  // Data label (5/7)\n  @Prop({ mutable: true }) dataLabel: IDataLabelType = HeatMapDefaultValues.dataLabel;\n  @Prop({ mutable: true }) dataKeyNames: object;\n  @Prop({ mutable: true }) showTooltip: boolean = HeatMapDefaultValues.showTooltip;\n  @Prop({ mutable: true }) tooltipLabel: ITooltipLabelType = HeatMapDefaultValues.tooltipLabel;\n  @Prop({ mutable: true }) accessibility: IAccessibilityType = HeatMapDefaultValues.accessibility;\n  @Prop({ mutable: true }) legend: ILegendType = HeatMapDefaultValues.legend;\n  @Prop({ mutable: true }) annotations: object[] = HeatMapDefaultValues.annotations;\n\n  // Calculation (6/7)\n  @Prop({ mutable: true }) maxValueOverride: number;\n  @Prop({ mutable: true }) minValueOverride: number;\n\n  // Interactivity (7/7)\n  @Prop({ mutable: true }) hoverHighlight: object;\n  @Prop({ mutable: true }) clickHighlight: object[] = HeatMapDefaultValues.clickHighlight;\n  @Prop({ mutable: true }) interactionKeys: string[];\n  @Prop({ mutable: true }) suppressEvents: boolean = HeatMapDefaultValues.suppressEvents;\n\n  // Testing (8/7)\n  @Prop() unitTest: boolean = false;\n  //  @Prop() debugMode: boolean = false;\n\n  // Element\n  @Element()\n  heatMapEl: HTMLElement;\n  shouldValidateAccessibility: boolean = true;\n  shouldValidateLocalization: boolean = true;\n  svg: any;\n  root: any;\n  rootG: any;\n  tooltipG: any;\n  subTitleG: any;\n  map: any;\n  row: any;\n  labelG: any;\n  labels: any;\n  defaults: boolean;\n  current: any;\n  enter: any;\n  exit: any;\n  update: any;\n  enterRowWrappers: any;\n  updateRowWrappers: any;\n  exitRowWrappers: any;\n  enteringLabelGroups: any;\n  exitingLabelGroups: any;\n  updatingLabelGroups: any;\n  enterLabels: any;\n  updateLabels: any;\n  exitLabels: any;\n  heat: any;\n  rawHeat: any;\n  fillColors: any;\n  strokeColors: any;\n  y: any;\n  x: any;\n  innerHeight: number;\n  innerWidth: number;\n  innerPaddedHeight: number;\n  innerPaddedWidth: number;\n  nest: any = [];\n  datakeys: any = [];\n  colorArr: any;\n  preparedColors: any;\n  duration: number;\n  legendG: any;\n  preppedData: any;\n  interpolating: any;\n  tableData: any;\n  tableColumns: any;\n  updateCheck: any;\n  // these are added for accessibility\n  updated: boolean = true;\n  enterSize: number;\n  exitSize: number;\n  chartID: string;\n  xAxisElement: any;\n  innerInteractionKeys: any;\n  shouldValidate: boolean = false;\n  shouldUpdateData: boolean = false;\n  shouldSetDimensions: boolean = false;\n  shouldUpdateTableData: boolean = false;\n  shouldUpdateScales: boolean = false;\n  shouldResetRoot: boolean = false;\n  shouldSetColors: boolean = false;\n  shouldSetSubTitle: boolean = false;\n  shouldValidateInteractionKeys: boolean = false;\n  shouldFormatClickHighlight: boolean = false;\n  shouldFormatHoverHighlight: boolean = false;\n  shouldUpdateAnnotations: boolean = false;\n  shouldUpdateXAxis: boolean = false;\n  shouldUpdateYAxis: boolean = false;\n  shouldSetGlobalSelections: boolean = false;\n  shouldSetTestingAttributes: boolean = false;\n  shouldEnterUpdateExit: boolean = false;\n  shouldUpdateGeometries: boolean = false;\n  shouldSetSelectionClass: boolean = false;\n  shouldDrawInteractionState: boolean = false;\n  shouldUpdateLegend: boolean = false;\n  shouldUpdateCursor: boolean = false;\n  shouldBindInteractivity: boolean = false;\n  shouldUpdateLabels: boolean = false;\n  shouldSetLabelOpacity: boolean = false;\n  shouldSwapXAxis: boolean = false;\n  shouldSwapYAxis: boolean = false;\n  shouldUpdateDescriptionWrapper: boolean = false;\n  shouldSetChartAccessibilityTitle: boolean = false;\n  shouldSetChartAccessibilitySubtitle: boolean = false;\n  shouldSetChartAccessibilityLongDescription: boolean = false;\n  shouldSetChartAccessibilityExecutiveSummary: boolean = false;\n  shouldSetChartAccessibilityStatisticalNotes: boolean = false;\n  shouldSetChartAccessibilityStructureNotes: boolean = false;\n  shouldSetParentSVGAccessibility: boolean = false;\n  shouldSetGeometryAccessibilityAttributes: boolean = false;\n  shouldSetGeometryAriaLabels: boolean = false;\n  shouldSetGroupAccessibilityLabel: boolean = false;\n  shouldSetChartAccessibilityPurpose: boolean = false;\n  shouldSetChartAccessibilityContext: boolean = false;\n  shouldRedrawWrapper: boolean = false;\n  shouldSetTagLevels: boolean = false;\n  shouldSetChartAccessibilityCount: boolean = false;\n  shouldSetYAxisAccessibility: boolean = false;\n  shouldSetXAxisAccessibility: boolean = false;\n  shouldSetAnnotationAccessibility: boolean = false;\n  shouldSetTextures: boolean = false;\n  shouldSetStrokes: boolean = false;\n  shouldSetLocalizationConfig: boolean = false;\n  strokes: any = {};\n  topLevel: string = 'h2';\n  bottomLevel: string = 'p';\n\n  @Watch('data')\n  dataWatcher(_newData, _oldData) {\n    this.updated = true;\n    this.shouldUpdateData = true;\n    this.shouldSetColors = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldUpdateScales = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateTableData = true;\n    this.shouldValidate = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetTextures = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('uniqueID')\n  idWatcher(newID, _oldID) {\n    console.error(\n      'Change detected in prop uniqueID from value ' +\n        _oldID +\n        ' to value ' +\n        newID +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.chartID = newID;\n    // this.heatMapEl.id = this.chartID;\n    // this.shouldValidate = true;\n    // this.shouldUpdateDescriptionWrapper = true;\n    // this.shouldSetParentSVGAccessibility = true;\n    // this.shouldUpdateLegend = true;\n    // this.shouldSetTextures = true;\n    // this.shouldDrawInteractionState = true;\n    // this.shouldSetStrokes = true;\n  }\n\n  @Watch('highestHeadingLevel')\n  headingWatcher(_newVal, _oldVal) {\n    this.shouldRedrawWrapper = true;\n    this.shouldSetTagLevels = true;\n    this.shouldSetChartAccessibilityCount = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('mainTitle')\n  titleWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('subTitle')\n  subtitleWatcher(_newVal, _oldVal) {\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('height')\n  @Watch('width')\n  @Watch('padding')\n  @Watch('margin')\n  layoutWatcher(_newVal, _oldVal) {\n    this.shouldSetDimensions = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetTextures = true;\n    this.shouldResetRoot = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('xAccessor')\n  xAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldSetColors = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldFormatClickHighlight = true;\n    this.shouldFormatHoverHighlight = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldSetTextures = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('yAccessor')\n  yAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldSetColors = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldFormatClickHighlight = true;\n    this.shouldFormatHoverHighlight = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetTextures = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('valueAccessor')\n  groupAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetColors = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldUpdateLabels = true;\n    this.shouldSetGeometryAriaLabels = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n    this.shouldSetTextures = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('xKeyOrder')\n  xKeyOrderWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldSetTextures = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('yKeyOrder')\n  yKeyOrderWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetTextures = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('xAxis')\n  xAxisWatcher(_newVal, _oldVal) {\n    const newFormatVal = _newVal && _newVal.format ? _newVal.format : false;\n    const oldFormatVal = _oldVal && _oldVal.format ? _oldVal.format : false;\n    const newPlacementVal = _newVal && _newVal.placement ? _newVal.placement : false;\n    const oldPlacementVal = _oldVal && _oldVal.placement ? _oldVal.placement : false;\n    if (newFormatVal !== oldFormatVal) {\n      this.shouldUpdateData = true;\n      this.shouldSetColors = true;\n      this.shouldUpdateScales = true;\n      this.shouldSetTextures = true;\n      this.shouldSetGlobalSelections = true;\n      this.shouldFormatClickHighlight = true;\n      this.shouldFormatHoverHighlight = true;\n      this.shouldDrawInteractionState = true;\n      this.shouldEnterUpdateExit = true;\n      this.shouldUpdateTableData = true;\n      this.shouldUpdateGeometries = true;\n      this.shouldUpdateLabels = true;\n      this.shouldUpdateLegend = true;\n      this.shouldUpdateAnnotations = true;\n    }\n    if (newPlacementVal !== oldPlacementVal) {\n      this.shouldSwapXAxis = true;\n    }\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n  }\n\n  @Watch('yAxis')\n  yAxisWatcher(_newVal, _oldVal) {\n    const newFormatVal = _newVal && _newVal.format ? _newVal.format : false;\n    const oldFormatVal = _oldVal && _oldVal.format ? _oldVal.format : false;\n    const newPlacementVal = _newVal && _newVal.placement ? _newVal.placement : false;\n    const oldPlacementVal = _oldVal && _oldVal.placement ? _oldVal.placement : false;\n    if (newFormatVal !== oldFormatVal) {\n      this.shouldUpdateData = true;\n      this.shouldSetColors = true;\n      this.shouldUpdateScales = true;\n      this.shouldSetTextures = true;\n      this.shouldSetGlobalSelections = true;\n      this.shouldFormatClickHighlight = true;\n      this.shouldFormatHoverHighlight = true;\n      this.shouldDrawInteractionState = true;\n      this.shouldEnterUpdateExit = true;\n      this.shouldUpdateTableData = true;\n      this.shouldUpdateGeometries = true;\n      this.shouldUpdateLabels = true;\n      this.shouldUpdateLegend = true;\n      this.shouldUpdateAnnotations = true;\n    }\n    if (newPlacementVal !== oldPlacementVal) {\n      this.shouldSwapYAxis = true;\n    }\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n  }\n\n  @Watch('wrapLabel')\n  wrapLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n  }\n\n  @Watch('hideAxisPath')\n  hideAxisPathWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n  }\n\n  @Watch('colorPalette')\n  @Watch('colors')\n  @Watch('colorSteps')\n  colorsWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateLegend = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetTextures = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('hoverStyle')\n  hoverStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('clickStyle')\n  clickStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('shape')\n  shapeWatcher(_newVal, _oldVal) {\n    this.shouldUpdateGeometries = true;\n  }\n\n  @Watch('cursor')\n  cursorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCursor = true;\n  }\n\n  @Watch('strokeWidth')\n  strokeWidthWatcher(_newVal, _oldVal) {\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetTextures = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('hoverOpacity')\n  hoverOpacityWatcher(_newVal, _oldVal) {\n    this.shouldSetLabelOpacity = true;\n    this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('dataLabel')\n  labelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTableData = true;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetLabelOpacity = true;\n    }\n  }\n\n  @Watch('showTooltip')\n  showTooltipWatcher(_newVal, _oldVal) {\n    // this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('tooltipLabel')\n  tooltipLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('legend')\n  legendWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLegend = true;\n  }\n\n  @Watch('suppressEvents')\n  suppressWatcher(_newVal, _oldVal) {\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldRedrawWrapper = true;\n    this.shouldValidate = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('annotations')\n  annotationsWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetAnnotationAccessibility = true;\n  }\n\n  @Watch('accessibility')\n  accessibilityWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    const newTitle = _newVal && _newVal.title ? _newVal.title : false;\n    const oldTitle = _oldVal && _oldVal.title ? _oldVal.title : false;\n    if (newTitle !== oldTitle) {\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newExecutiveSummary = _newVal && _newVal.executiveSummary ? _newVal.executiveSummary : false;\n    const oldExecutiveSummary = _oldVal && _oldVal.executiveSummary ? _oldVal.executiveSummary : false;\n    if (newExecutiveSummary !== oldExecutiveSummary) {\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n    }\n    const newPurpose = _newVal && _newVal.purpose ? _newVal.purpose : false;\n    const oldPurpose = _oldVal && _oldVal.purpose ? _oldVal.purpose : false;\n    if (newPurpose !== oldPurpose) {\n      this.shouldSetChartAccessibilityPurpose = true;\n    }\n    const newLongDescription = _newVal && _newVal.longDescription ? _newVal.longDescription : false;\n    const oldLongDescription = _oldVal && _oldVal.longDescription ? _oldVal.longDescription : false;\n    if (newLongDescription !== oldLongDescription) {\n      this.shouldSetChartAccessibilityLongDescription = true;\n    }\n    const newContext = _newVal && _newVal.contextExplanation ? _newVal.contextExplanation : false;\n    const oldContext = _oldVal && _oldVal.contextExplanation ? _oldVal.contextExplanation : false;\n    if (newContext !== oldContext) {\n      this.shouldSetChartAccessibilityContext = true;\n    }\n    const newStatisticalNotes = _newVal && _newVal.statisticalNotes ? _newVal.statisticalNotes : false;\n    const oldStatisticalNotes = _oldVal && _oldVal.statisticalNotes ? _oldVal.statisticalNotes : false;\n    if (newStatisticalNotes !== oldStatisticalNotes) {\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n    }\n    const newStructureNotes = _newVal && _newVal.structureNotes ? _newVal.structureNotes : false;\n    const oldStructureNotes = _oldVal && _oldVal.structureNotes ? _oldVal.structureNotes : false;\n    if (newStructureNotes !== oldStructureNotes) {\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    const newincludeDataKeyNames = _newVal && _newVal.includeDataKeyNames;\n    const oldincludeDataKeyNames = _oldVal && _oldVal.includeDataKeyNames;\n    const newElementDescriptionAccessor =\n      _newVal && _newVal.elementDescriptionAccessor ? _newVal.elementDescriptionAccessor : false;\n    const oldElementDescriptionAccessor =\n      _oldVal && _oldVal.elementDescriptionAccessor ? _oldVal.elementDescriptionAccessor : false;\n    if (\n      newincludeDataKeyNames !== oldincludeDataKeyNames ||\n      newElementDescriptionAccessor !== oldElementDescriptionAccessor\n    ) {\n      if (newincludeDataKeyNames !== oldincludeDataKeyNames) {\n        // this one is tricky because it needs to run after the lifecycle\n        // AND it could run in the off-chance this prop is changed\n        this.shouldSetGroupAccessibilityLabel = true;\n      }\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newTextures = _newVal && _newVal.hideTextures ? _newVal.hideTextures : false;\n    const oldTextures = _oldVal && _oldVal.hideTextures ? _oldVal.hideTextures : false;\n    const newExTextures = _newVal && _newVal.showExperimentalTextures ? _newVal.showExperimentalTextures : false;\n    const oldExTextures = _oldVal && _oldVal.showExperimentalTextures ? _oldVal.showExperimentalTextures : false;\n    if (newTextures !== oldTextures || newExTextures !== oldExTextures) {\n      this.shouldSetTextures = true;\n      this.shouldUpdateLegend = true;\n      this.shouldSetStrokes = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newSmallValue = _newVal && _newVal.showSmallLabels ? _newVal.showSmallLabels : false;\n    const oldSmallValue = _oldVal && _oldVal.showSmallLabels ? _oldVal.showSmallLabels : false;\n    if (newSmallValue !== oldSmallValue) {\n      this.shouldSetLabelOpacity = true;\n    }\n    const newStrokes = _newVal && _newVal.hideStrokes ? _newVal.hideStrokes : false;\n    const oldStrokes = _oldVal && _oldVal.hideStrokes ? _oldVal.hideStrokes : false;\n    if (newStrokes !== oldStrokes) {\n      this.shouldUpdateLegend = true;\n      this.shouldSetStrokes = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newKeyNav =\n      _newVal && _newVal.keyboardNavConfig && _newVal.keyboardNavConfig.disabled\n        ? _newVal.keyboardNavConfig.disabled\n        : false;\n    const oldKeyNav =\n      _oldVal && _oldVal.keyboardNavConfig && _oldVal.keyboardNavConfig.disabled\n        ? _oldVal.keyboardNavConfig.disabled\n        : false;\n    const newInterface = _newVal && _newVal.elementsAreInterface ? _newVal.elementsAreInterface : false;\n    const oldInterface = _oldVal && _oldVal.elementsAreInterface ? _oldVal.elementsAreInterface : false;\n    if (newKeyNav !== oldKeyNav || newInterface !== oldInterface) {\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetChartAccessibilitySubtitle = true;\n      this.shouldSetChartAccessibilityLongDescription = true;\n      this.shouldSetChartAccessibilityContext = true;\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n      this.shouldSetChartAccessibilityPurpose = true;\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    if (newInterface !== oldInterface) {\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('localization')\n  localizationWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n\n    // language\n    const newLanguage = _newVal && _newVal.language ? _newVal.language : false;\n    const oldLanguage = _oldVal && _oldVal.language ? _oldVal.language : false;\n    if (newLanguage !== oldLanguage) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n\n    // numeralLocale\n    const newNumeralLocale = _newVal && _newVal.numeralLocale ? _newVal.numeralLocale : false;\n    const oldNumeralLocale = _oldVal && _oldVal.numeralLocale ? _oldVal.numeralLocale : false;\n    if (newNumeralLocale !== oldNumeralLocale) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n  }\n\n  @Watch('maxValueOverride')\n  @Watch('minValueOverride')\n  valueOverrideWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetTextures = true;\n  }\n\n  @Watch('clickHighlight')\n  clickWatcher(_newVal, _oldVal) {\n    this.shouldFormatClickHighlight = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n  }\n\n  @Watch('hoverHighlight')\n  hoverWatcher(_newVal, _oldVal) {\n    this.shouldFormatHoverHighlight = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('interactionKeys')\n  interactionWatcher(_newVal, _oldVal) {\n    this.shouldValidateInteractionKeys = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('dataKeyNames')\n  dataKeyNamesWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('unitTest')\n  unitTestWatcher(_newVal, _oldVal) {\n    this.shouldSetTestingAttributes = true;\n  }\n\n  componentWillLoad() {\n    const chartID = this.uniqueID || 'heat-map-' + uuid();\n    this.initialLoadEvent.emit({ chartID: chartID });\n    // contrary to componentWillUpdate, this method appears safe to use for\n    // any calculations we need. Keeping them here reduces future refactor,\n    // since componentWillUpdate should eventually mirror this method\n    return new Promise(resolve => {\n      this.duration = 0;\n      this.defaults = true;\n      this.chartID = chartID;\n      this.heatMapEl.id = this.chartID;\n      this.setLocalizationConfig();\n      this.setTagLevels();\n      this.prepareData();\n      this.setDimensions();\n      this.setColors();\n      this.prepareScales();\n      this.validateInteractionKeys();\n      this.setTableData();\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.formatClickHighlight();\n      this.formatHoverHighlight();\n      resolve('component will load');\n    });\n  }\n\n  componentWillUpdate() {\n    // NEVER put items in this method that rely on props (until stencil bug is resolved)\n    // All items that belong here are currently at the top of render\n    // see: https://github.com/ionic-team/stencil/issues/2061#issuecomment-578282178\n    return new Promise(resolve => {\n      resolve('component will update');\n    });\n  }\n\n  componentDidLoad() {\n    return new Promise(resolve => {\n      this.renderRootElements();\n      this.setTooltipInitialStyle();\n      this.setChartDescriptionWrapper();\n      this.setChartAccessibilityTitle();\n      this.setChartAccessibilitySubtitle();\n      this.setChartAccessibilityLongDescription();\n      this.setChartAccessibilityExecutiveSummary();\n      this.setChartAccessibilityPurpose();\n      this.setChartAccessibilityContext();\n      this.setChartAccessibilityStatisticalNotes();\n      this.setChartAccessibilityStructureNotes();\n      this.setParentSVGAccessibility();\n      this.reSetRoot();\n      this.setTextures();\n      this.setStrokes();\n      this.setSubTitleElements();\n      this.setGlobalSelections();\n      this.setTestingAttributes();\n      this.enterGeometries();\n      this.updateGeometries();\n      this.exitGeometries();\n      this.enterDataLabels();\n      this.updateDataLabels();\n      this.exitDataLabels();\n      this.drawGeometries();\n      this.setChartCountAccessibility();\n      this.setGeometryAccessibilityAttributes();\n      this.setGeometryAriaLabels();\n      this.drawDataLabels();\n      this.drawLegendElements();\n      this.setSelectedClass();\n      this.updateInteractionState();\n      this.bindInteractivity();\n      this.drawAnnotations();\n      this.setAnnotationAccessibility();\n      this.drawXAxis();\n      this.setXAxisAccessibility();\n      this.drawYAxis();\n      this.setYAxisAccessibility();\n      // we want to hide all child <g> of this.root BUT we want to make sure not to hide the\n      // parent<g> that contains our geometries! In a subGroup chart (like stacked bars),\n      // we want to pass the PARENT of all the <g>s that contain bars\n      hideNonessentialGroups(this.root.node(), this.map.node());\n      this.setGroupAccessibilityID();\n      this.onChangeHandler();\n      this.defaults = false;\n      resolve('component did load');\n    }).then(() => this.initialLoadEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  componentDidUpdate() {\n    return new Promise(resolve => {\n      this.duration = !this.animationConfig || !this.animationConfig.disabled ? 750 : 0;\n      if (this.shouldUpdateDescriptionWrapper) {\n        this.setChartDescriptionWrapper();\n        this.shouldUpdateDescriptionWrapper = false;\n      }\n      if (this.shouldSetChartAccessibilityCount) {\n        this.setChartCountAccessibility();\n        this.shouldSetChartAccessibilityCount = false;\n      }\n      if (this.shouldSetChartAccessibilityTitle) {\n        this.setChartAccessibilityTitle();\n        this.shouldSetChartAccessibilityTitle = false;\n      }\n      if (this.shouldSetChartAccessibilitySubtitle) {\n        this.setChartAccessibilitySubtitle();\n        this.shouldSetChartAccessibilitySubtitle = false;\n      }\n      if (this.shouldSetChartAccessibilityLongDescription) {\n        this.setChartAccessibilityLongDescription();\n        this.shouldSetChartAccessibilityLongDescription = false;\n      }\n      if (this.shouldSetChartAccessibilityExecutiveSummary) {\n        this.setChartAccessibilityExecutiveSummary();\n        this.shouldSetChartAccessibilityExecutiveSummary = false;\n      }\n      if (this.shouldSetChartAccessibilityPurpose) {\n        this.setChartAccessibilityPurpose();\n        this.shouldSetChartAccessibilityPurpose = false;\n      }\n      if (this.shouldSetChartAccessibilityContext) {\n        this.setChartAccessibilityContext();\n        this.shouldSetChartAccessibilityContext = false;\n      }\n      if (this.shouldSetChartAccessibilityStatisticalNotes) {\n        this.setChartAccessibilityStatisticalNotes();\n        this.shouldSetChartAccessibilityStatisticalNotes = false;\n      }\n      if (this.shouldSetChartAccessibilityStructureNotes) {\n        this.setChartAccessibilityStructureNotes();\n        this.shouldSetChartAccessibilityStructureNotes = false;\n      }\n      if (this.shouldSetParentSVGAccessibility) {\n        this.setParentSVGAccessibility();\n        this.shouldSetParentSVGAccessibility = false;\n      }\n      if (this.shouldResetRoot) {\n        this.reSetRoot();\n        this.shouldResetRoot = false;\n      }\n      if (this.shouldSetTextures) {\n        this.setTextures();\n        this.shouldSetTextures = false;\n      }\n      if (this.shouldSetStrokes) {\n        this.setStrokes();\n        this.shouldSetStrokes = false;\n      }\n      if (this.shouldSetGlobalSelections) {\n        this.setGlobalSelections();\n        this.shouldSetGlobalSelections = false;\n      }\n      if (this.shouldSetTestingAttributes) {\n        this.setTestingAttributes();\n        this.shouldSetTestingAttributes = false;\n      }\n      if (this.shouldSetSubTitle) {\n        this.setSubTitleElements();\n        this.shouldSetSubTitle = false;\n      }\n      if (this.shouldEnterUpdateExit) {\n        this.enterGeometries();\n        this.updateGeometries();\n        this.exitGeometries();\n        this.enterDataLabels();\n        this.updateDataLabels();\n        this.exitDataLabels();\n        this.shouldEnterUpdateExit = false;\n      }\n      if (this.shouldUpdateGeometries) {\n        this.drawGeometries();\n        this.shouldUpdateGeometries = false;\n      }\n      if (this.shouldSetGeometryAccessibilityAttributes) {\n        this.setGeometryAccessibilityAttributes();\n        this.shouldSetGeometryAccessibilityAttributes = false;\n      }\n      if (this.shouldSetGeometryAriaLabels) {\n        this.setGeometryAriaLabels();\n        this.shouldSetGeometryAriaLabels = false;\n      }\n      if (this.shouldSetGroupAccessibilityLabel) {\n        this.setGroupAccessibilityID();\n        this.shouldSetGroupAccessibilityLabel = false;\n      }\n      if (this.shouldUpdateLegend) {\n        this.drawLegendElements();\n        this.shouldUpdateLegend = false;\n      }\n      if (this.shouldUpdateLabels) {\n        this.drawDataLabels();\n        this.shouldUpdateLabels = false;\n      }\n      if (this.shouldDrawInteractionState) {\n        this.updateInteractionState();\n        this.shouldDrawInteractionState = false;\n      }\n      if (this.shouldSetLabelOpacity) {\n        this.setLabelOpacity();\n        this.shouldSetLabelOpacity = false;\n      }\n      if (this.shouldSetSelectionClass) {\n        this.setSelectedClass();\n        this.shouldSetSelectionClass = false;\n      }\n      if (this.shouldUpdateCursor) {\n        this.updateCursor();\n        this.shouldUpdateCursor = false;\n      }\n      if (this.shouldBindInteractivity) {\n        this.bindInteractivity();\n        this.shouldBindInteractivity = false;\n      }\n      if (this.shouldUpdateAnnotations) {\n        this.drawAnnotations();\n        this.shouldUpdateAnnotations = false;\n      }\n      if (this.shouldSetAnnotationAccessibility) {\n        this.setAnnotationAccessibility();\n        this.shouldSetAnnotationAccessibility = false;\n      }\n      if (this.shouldSwapXAxis) {\n        this.drawXAxis(true);\n        this.shouldSwapXAxis = false;\n      }\n      if (this.shouldSwapYAxis) {\n        this.drawYAxis(true);\n        this.shouldSwapYAxis = false;\n      }\n      if (this.shouldUpdateXAxis) {\n        this.drawXAxis();\n        this.shouldUpdateXAxis = false;\n      }\n      if (this.shouldSetXAxisAccessibility) {\n        this.setXAxisAccessibility();\n        this.shouldSetXAxisAccessibility = false;\n      }\n      if (this.shouldUpdateYAxis) {\n        this.drawYAxis();\n        this.shouldUpdateYAxis = false;\n      }\n      if (this.shouldSetYAxisAccessibility) {\n        this.setYAxisAccessibility();\n        this.shouldSetYAxisAccessibility = false;\n      }\n      this.onChangeHandler();\n      resolve('component did update');\n    }).then(() => this.drawEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  shouldValidateLocalizationProps() {\n    const windowInstances = getGlobalInstances();\n    const languageString = windowInstances.i18Next.language;\n    const languageObject = windowInstances.i18Next.getResourceBundle(languageString);\n    const numeralObject = windowInstances.numeral.localeData();\n    if (this.shouldValidateLocalization && !this.localization.skipValidation) {\n      this.shouldValidateLocalization = false;\n      validateLocalizationProps(this.chartID, {\n        ...this.localization,\n        language: languageObject,\n        numeralLocale: numeralObject\n      });\n    }\n  }\n\n  shouldValidateAccessibilityProps() {\n    if (this.shouldValidateAccessibility && !this.accessibility.disableValidation) {\n      this.shouldValidateAccessibility = false;\n      validateAccessibilityProps(\n        this.chartID,\n        { ...this.accessibility },\n        {\n          annotations: this.annotations,\n          data: this.data,\n          uniqueID: this.uniqueID,\n          context: {\n            mainTitle: this.mainTitle,\n            onClickEvent: this.suppressEvents ? undefined : this.clickEvent.emit\n          }\n        }\n      );\n    }\n  }\n\n  formatClickHighlight() {\n    if (this.clickHighlight) {\n      this.clickHighlight.map(d => {\n        if (!d['xAccessor'] || !d['yAccessor']) {\n          d['xAccessor'] =\n            d[this.xAccessor] instanceof Date\n              ? formatDate({\n                  date: d[this.xAccessor],\n                  format: this.xAxis.format,\n                  offsetTimezone: true\n                })\n              : d[this.xAccessor];\n\n          d['yAccessor'] =\n            d[this.yAccessor] instanceof Date\n              ? formatDate({\n                  date: d[this.yAccessor],\n                  format: this.yAxis.format,\n                  offsetTimezone: true\n                })\n              : d[this.yAccessor];\n        }\n      });\n    }\n  }\n\n  formatHoverHighlight() {\n    if (this.hoverHighlight) {\n      if (!this.hoverHighlight['xAccessor'] || !this.hoverHighlight['yAccessor']) {\n        this.hoverHighlight['xAccessor'] =\n          this.hoverHighlight[this.xAccessor] instanceof Date\n            ? formatDate({\n                date: this.hoverHighlight[this.xAccessor],\n                format: this.xAxis.format,\n                offsetTimezone: true\n              })\n            : this.hoverHighlight[this.xAccessor];\n        this.hoverHighlight['yAccessor'] =\n          this.hoverHighlight[this.yAccessor] instanceof Date\n            ? formatDate({\n                date: this.hoverHighlight[this.yAccessor],\n                format: this.yAxis.format,\n                offsetTimezone: true\n              })\n            : this.hoverHighlight[this.yAccessor];\n      }\n    }\n  }\n\n  getLanguageString() {\n    return getActiveLanguageString(this.localization);\n  }\n\n  setLocalizationConfig() {\n    configLocalization(this.localization);\n  }\n\n  setDimensions() {\n    this.padding = typeof this.padding === 'string' ? getPadding(this.padding) : this.padding;\n\n    // before we render/load we need to set our height and width based on props\n    this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n    this.innerWidth = this.width - this.margin.left - this.margin.right;\n\n    this.innerPaddedHeight = this.innerHeight - this.padding.top - this.padding.bottom;\n    this.innerPaddedWidth = this.innerWidth - this.padding.left - this.padding.right;\n  }\n\n  validateInteractionKeys() {\n    if (this.interactionKeys && this.interactionKeys.length) {\n      if (this.interactionKeys.includes(this.xAccessor) || this.interactionKeys.includes(this.yAccessor)) {\n        const checkInteractionKeys = [];\n        this.interactionKeys.map(k => {\n          const newKey = k === this.xAccessor ? 'xAccessor' : k === this.yAccessor ? 'yAccessor' : k;\n          checkInteractionKeys.push(newKey);\n        });\n        this.innerInteractionKeys = checkInteractionKeys;\n      }\n    } else {\n      // initialize interacrtionKeys prop\n      this.innerInteractionKeys = ['xAccessor', 'yAccessor'];\n    }\n  }\n\n  prepareScales() {\n    const minMapValue =\n      (this.minValueOverride || this.minValueOverride === 0) &&\n      this.minValueOverride < min(this.preppedData, d => d.valueAccessor)\n        ? this.minValueOverride\n        : min(this.preppedData, d => d.valueAccessor);\n    const maxMapValue =\n      (this.maxValueOverride || this.maxValueOverride === 0) &&\n      this.maxValueOverride > max(this.preppedData, d => d.valueAccessor)\n        ? this.maxValueOverride\n        : max(this.preppedData, d => d.valueAccessor);\n\n    this.x = scaleBand()\n      .domain(this.xKeyOrder ? this.xKeyOrder : this.preppedData.map(d => d.xAccessor))\n      .range([0, this.innerPaddedWidth]);\n    this.x.padding(this.strokeWidth ? this.strokeWidth / this.x.bandwidth() : 0);\n    this.y = scaleBand()\n      .domain(this.yKeyOrder ? this.yKeyOrder : this.preppedData.map(d => d.yAccessor))\n      .range([0, this.innerPaddedHeight]);\n\n    this.y.padding(this.strokeWidth ? this.strokeWidth / this.y.bandwidth() : 0);\n\n    this.heat = scaleQuantize().domain([minMapValue, maxMapValue]);\n\n    const strokeColors = [];\n    const backgroundColors = [];\n    let i = 0;\n    const half = Math.ceil(this.preparedColors.length / 2);\n    const isDiverging = this.colorPalette && this.colorPalette.includes('diverging');\n    const isDark = this.colorPalette && this.colorPalette.includes('dark');\n    this.preparedColors.forEach(color => {\n      const colorsMatchingScheme = prepareStrokeColorsFromScheme(\n        color,\n        i,\n        this.preparedColors,\n        isDiverging ? 'diverging' : 'sequential'\n      );\n      if (isDiverging) {\n        const fillLuminance = calculateLuminance(colorsMatchingScheme.fillColor);\n        const strokeLuminance = calculateLuminance(colorsMatchingScheme.textureColor);\n        const darkerColor =\n          fillLuminance > strokeLuminance ? colorsMatchingScheme.textureColor : colorsMatchingScheme.fillColor;\n        const lighterColor =\n          fillLuminance < strokeLuminance ? colorsMatchingScheme.textureColor : colorsMatchingScheme.fillColor;\n        if (this.preparedColors.length % 2 && i === (this.preparedColors.length - 1) / 2) {\n          backgroundColors.push(isDark ? darkerColor : lighterColor);\n          strokeColors.push(isDark ? lighterColor : darkerColor);\n        } else {\n          strokeColors.push(isDark ? darkerColor : lighterColor);\n          backgroundColors.push(isDark ? lighterColor : darkerColor);\n        }\n      } else {\n        if (i + 1 < half) {\n          backgroundColors.push(this.preparedColors[0]);\n          strokeColors.push(this.preparedColors[this.preparedColors.length - 1]);\n        } else {\n          strokeColors.push(this.preparedColors[0]);\n          backgroundColors.push(this.preparedColors[this.preparedColors.length - 1]);\n        }\n      }\n      i++;\n    });\n\n    this.fillColors = scaleQuantize()\n      .domain([minMapValue, maxMapValue])\n      .range(backgroundColors);\n\n    this.strokeColors = scaleQuantize()\n      .domain([minMapValue, maxMapValue])\n      .range(strokeColors);\n\n    this.rawHeat = scaleQuantize()\n      .domain([minMapValue, maxMapValue])\n      .range(this.preparedColors);\n\n    this.updateCheck = true;\n  }\n\n  setSubTitleElements() {\n    setSubTitle({\n      root: this.subTitleG,\n      subTitle: this.subTitle\n    });\n  }\n\n  setColors() {\n    this.preparedColors = this.colors ? convertVisaColor(this.colors) : getColors(this.colorPalette, this.colorSteps);\n  }\n\n  setTextures() {\n    const scheme = this.colorPalette && this.colorPalette.includes('diverging') ? 'diverging' : 'sequential';\n    const limit = scheme === 'diverging' ? 11 : 9;\n    if (this.accessibility.hideTextures || this.colorSteps > limit || !this.accessibility.showExperimentalTextures) {\n      this.colorArr = this.preparedColors;\n    } else {\n      const textures = convertColorsToTextures({\n        colors: this.preparedColors,\n        rootSVG: this.svg.node(),\n        id: this.chartID,\n        scheme,\n        disableTransitions: !this.duration\n      });\n      this.colorArr = textures;\n    }\n    this.heat.range(this.colorArr);\n  }\n\n  setStrokes() {\n    // technically the user could pass hoverstyle/clickstyle.color and we want to make sure that we intercept that\n    // heatmap does not use this prop, since color is bound intrinsically to value in the data\n    const clickStyle = { ...this.clickStyle, color: undefined };\n    const hoverStyle = { ...this.hoverStyle, color: undefined };\n    this.strokes = buildStrokes({\n      root: this.svg.node(),\n      id: this.chartID,\n      colors:\n        !this.accessibility.hideTextures && this.accessibility.showExperimentalTextures\n          ? this.fillColors.range()\n          : this.preparedColors, // this.fillColors.range(), // this.divergingColors && this.divergingColors.fills.length && !this.accessibility.hideTextures ? this.divergingColors.fills : this.preparedColors,\n      clickStyle,\n      hoverStyle,\n      strokeOverride:\n        !this.accessibility.hideTextures && this.accessibility.showExperimentalTextures\n          ? this.strokeColors.range()\n          : undefined\n    });\n  }\n\n  setTableData() {\n    // generate scoped and formatted data for data-table component\n    const keys = scopeDataKeys(this, chartAccessors, 'heat-map');\n    this.tableData = getScopedData(this.data, keys);\n    this.tableColumns = Object.keys(keys);\n  }\n\n  prepareData() {\n    // copy data to preppedData for data manipulation\n    // check data format & offset time object, create new keys for modified xAccessor, yAccessor, valueAccessor values\n    // this allows heatmap to share same data entries across different dimensions\n    if (this.updateCheck) {\n      this.interpolating = this.preppedData;\n      const oldXDomain = this.x.domain();\n      const oldXRange = this.x.range();\n      const oldYDomain = this.y.domain();\n      const oldYRange = this.y.range();\n      this.interpolating.x = scaleBand()\n        .domain(oldXDomain)\n        .range(oldXRange);\n      this.interpolating.y = scaleBand()\n        .domain(oldYDomain)\n        .range(oldYRange);\n    }\n    this.preppedData = this.data.map(d => {\n      const newRow = { ...d };\n      newRow['valueAccessor'] = parseFloat(d[this.valueAccessor]);\n      newRow['xAccessor'] =\n        d[this.xAccessor] instanceof Date\n          ? formatDate({\n              date: d[this.xAccessor],\n              format: this.xAxis.format,\n              offsetTimezone: true\n            })\n          : d[this.xAccessor];\n      newRow['yAccessor'] =\n        d[this.yAccessor] instanceof Date\n          ? formatDate({\n              date: d[this.yAccessor],\n              format: this.yAxis.format,\n              offsetTimezone: true\n            })\n          : d[this.yAccessor];\n\n      return newRow;\n    });\n\n    // groups each row of the heatmap to make keyboard navigation easier for accessibility\n    this.nest = nest()\n      .key(d => d[this.yAccessor])\n      .entries(this.preppedData);\n\n    // Get all item categories\n    this.datakeys = this.nest.map(d => d.key);\n  }\n\n  // reset graph size based on window size\n  reSetRoot() {\n    const changeSvg = prepareRenderChange({\n      selection: this.svg,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeSvg\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    const changeRoot = prepareRenderChange({\n      selection: this.root,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRoot.attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n\n    const changeRootG = prepareRenderChange({\n      selection: this.rootG,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRootG.attr('transform', `translate(${this.padding.left}, ${this.padding.top})`);\n\n    setAccessibilityDescriptionWidth(this.chartID, this.width);\n  }\n\n  drawXAxis(swapping?: boolean) {\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.xAccessor]\n        ? this.dataKeyNames[this.xAccessor]\n        : this.xAxis.label;\n    // draw axes\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.x,\n      top: this.xAxis.placement === 'top',\n      wrapLabel: this.wrapLabel ? this.x.bandwidth() : '',\n      format: this.xAxis.format,\n      tickInterval: this.xAxis.tickInterval,\n      label: axisLabel, // this.xAxis.label,\n      padding: this.padding,\n      hide: swapping || !this.xAxis.visible,\n      duration: this.duration,\n      hidePath: this.hideAxisPath\n    });\n  }\n\n  drawYAxis(swapping?: boolean) {\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.yAccessor]\n        ? this.dataKeyNames[this.yAccessor]\n        : this.yAxis.label;\n\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.y,\n      left: this.yAxis.placement !== 'right',\n      right: this.yAxis.placement === 'right',\n      format: this.yAxis.format,\n      wrapLabel: this.wrapLabel ? this.padding.left || 100 : '',\n      tickInterval: this.yAxis.tickInterval,\n      label: axisLabel, // this.yAxis.label,\n      padding: this.padding,\n      hide: swapping || !this.yAxis.visible,\n      duration: this.duration,\n      hidePath: this.hideAxisPath\n    });\n  }\n\n  setXAxisAccessibility() {\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.xAccessor]\n        ? this.dataKeyNames[this.xAccessor]\n        : this.xAxis.label;\n\n    setAccessXAxis({\n      rootEle: this.heatMapEl,\n      hasXAxis: this.xAxis ? this.xAxis.visible : false,\n      xAxis: this.x || false, // this is optional for some charts, if hasXAxis is always false\n      xAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasXAxis is always false\n    });\n  }\n\n  setYAxisAccessibility() {\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.yAccessor]\n        ? this.dataKeyNames[this.yAccessor]\n        : this.yAxis.label;\n\n    setAccessYAxis({\n      rootEle: this.heatMapEl,\n      hasYAxis: this.yAxis ? this.yAxis.visible : false,\n      yAxis: this.y || false, // this is optional for some charts, if hasXAxis is always false\n      yAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasYAxis is always false\n    });\n  }\n\n  renderRootElements() {\n    this.svg = select(this.heatMapEl)\n      .select('.visa-viz-d3-heat-map-container')\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    this.root = this.svg.append('g').attr('id', 'visa-viz-margin-container-g-' + this.chartID);\n    this.rootG = this.root.append('g').attr('id', 'visa-viz-padding-container-g-' + this.chartID);\n    this.map = this.rootG.append('g').attr('class', 'map-group');\n    this.labelG = this.rootG.append('g').attr('class', 'heat-map-dataLabel-group');\n    this.legendG = select(this.heatMapEl)\n      .select('.heat-map-legend')\n      .append('svg');\n    this.subTitleG = select(this.heatMapEl).select('.heat-sub-title');\n    this.tooltipG = select(this.heatMapEl).select('.heat-map-tooltip');\n  }\n\n  setGlobalSelections() {\n    this.xAxisElement = this.rootG.selectAll('.bottom');\n    const dataBoundToGroups = this.map.selectAll('.row').data(this.nest, d => d.key);\n\n    this.enterRowWrappers = dataBoundToGroups.enter().append('g');\n    this.exitRowWrappers = dataBoundToGroups.exit();\n    this.updateRowWrappers = dataBoundToGroups.merge(this.enterRowWrappers);\n\n    const dataBoundToGeometries = this.updateRowWrappers\n      .selectAll('.grid')\n      .data(d => d.values, d => d.xAccessor + d.yAccessor);\n\n    this.enter = dataBoundToGeometries.enter().append('rect');\n    this.exit = dataBoundToGeometries.exit();\n    this.update = dataBoundToGeometries.merge(this.enter);\n\n    this.exitSize = this.exit.size();\n    this.enterSize = this.enter.size();\n\n    this.exitSize += this.exitRowWrappers.selectAll('.grid').size();\n\n    const dataBoundToLabelGroups = this.labelG.selectAll('g').data(this.nest, d => d.key);\n\n    this.enteringLabelGroups = dataBoundToLabelGroups.enter().append('g');\n    this.exitingLabelGroups = dataBoundToLabelGroups.exit();\n    this.updatingLabelGroups = dataBoundToLabelGroups.merge(this.enteringLabelGroups);\n\n    const dataBoundToLabels = this.updatingLabelGroups\n      .selectAll('text')\n      .data(d => d.values, d => d.xAccessor + d.yAccessor);\n    this.enterLabels = dataBoundToLabels.enter().append('text');\n    this.exitLabels = dataBoundToLabels.exit();\n    this.updateLabels = dataBoundToLabels.merge(this.enterLabels);\n  }\n\n  setTestingAttributes() {\n    if (this.unitTest) {\n      select(this.heatMapEl)\n        .select('.visa-viz-d3-heat-map-container')\n        .attr('data-testid', 'chart-container');\n      select(this.heatMapEl)\n        .select('.heat-main-title')\n        .attr('data-testid', 'main-title');\n      select(this.heatMapEl)\n        .select('.heat-sub-title')\n        .attr('data-testid', 'sub-title');\n      this.svg.attr('data-testid', 'root-svg');\n      this.root.attr('data-testid', 'margin-container');\n      this.rootG.attr('data-testid', 'padding-container');\n      this.legendG.attr('data-testid', 'legend-container');\n      this.tooltipG.attr('data-testid', 'tooltip-container');\n      this.map.attr('data-testid', 'map-group');\n      this.labelG.attr('data-testid', 'dataLabel-group');\n      this.svg.select('defs').attr('data-testid', 'pattern-defs');\n\n      this.updateRowWrappers.attr('data-testid', 'map-row').attr('data-id', d => `row-${d.key}`);\n      this.updateLabels\n        .attr('data-testid', 'dataLabel')\n        .attr('data-id', d => `label-${d[this.xAccessor]}-${d[this.yAccessor]}`);\n      this.update\n        .attr('data-testid', 'marker')\n        .attr('data-id', d => `marker-${d[this.xAccessor]}-${d[this.yAccessor]}`);\n    } else {\n      select(this.heatMapEl)\n        .select('.visa-viz-d3-heat-map-container')\n        .attr('data-testid', null);\n      select(this.heatMapEl)\n        .select('.heat-main-title')\n        .attr('data-testid', null);\n      select(this.heatMapEl)\n        .select('.heat-sub-title')\n        .attr('data-testid', null);\n      this.svg.attr('data-testid', null);\n      this.root.attr('data-testid', null);\n      this.rootG.attr('data-testid', null);\n      this.legendG.attr('data-testid', null);\n      this.tooltipG.attr('data-testid', null);\n      this.map.attr('data-testid', null);\n      this.labelG.attr('data-testid', null);\n      this.svg.select('defs').attr('data-testid', null);\n\n      this.updateRowWrappers.attr('data-testid', null).attr('data-id', null);\n      this.updateLabels.attr('data-testid', null).attr('data-id', null);\n      this.update.attr('data-testid', null).attr('data-id', null);\n    }\n  }\n\n  // draw heat map\n  enterGeometries() {\n    this.enter.interrupt();\n\n    this.enterRowWrappers\n      .attr('class', 'row')\n      .classed('entering', true)\n      .each((_, i, n) => {\n        // we bind accessible interactivity and semantics here (role, tabindex, etc)\n        initializeElementAccess(n[i]);\n      });\n\n    this.enter\n      .attr('class', 'grid')\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .each((_d, i, n) => {\n        initializeElementAccess(n[i]);\n      })\n      .on(\n        'click',\n        !this.suppressEvents\n          ? (d, i, n) => {\n              this.onClickHandler(d, n[i]);\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents\n          ? (d, i, n) => {\n              this.onHoverHandler(d, n[i]);\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .attr('opacity', 0)\n      .attr('y', d => {\n        if (this.interpolating && this.interpolating.y(d.yAccessor) === undefined) {\n          let shift = this.y(d.yAccessor);\n          shift = shift + this.y.bandwidth() * (shift / this.y(this.y.domain()[0]));\n          return shift;\n        } else if (this.interpolating) {\n          return this.interpolating.y(d.yAccessor);\n        }\n        return this.y(d.yAccessor);\n      })\n      .attr('height', d => {\n        if (this.interpolating && this.interpolating.y(d.yAccessor) === undefined) {\n          return 0;\n        } else if (this.interpolating) {\n          return this.interpolating.y.bandwidth();\n        }\n        return this.y.bandwidth();\n      })\n      .attr('x', d => {\n        if (this.interpolating && this.interpolating.x(d.xAccessor) === undefined) {\n          let shift = this.x(d.xAccessor);\n          shift = shift + this.x.bandwidth() * (shift / this.x(this.x.domain()[this.x.domain().length - 1]));\n          return shift;\n        } else if (this.interpolating) {\n          return this.interpolating.x(d.xAccessor);\n        }\n        return this.x(d.xAccessor);\n      })\n      .attr('width', d => {\n        if (this.interpolating && this.interpolating.x(d.xAccessor) === undefined) {\n          return 0;\n        } else if (this.interpolating) {\n          return this.interpolating.x.bandwidth();\n        }\n        return this.x.bandwidth();\n      })\n      .attr('rx', this.shape === 'circle' ? this.x.bandwidth() : 0)\n      .attr('ry', this.shape === 'circle' ? this.y.bandwidth() : 0);\n\n    this.update.order();\n    this.enterRowWrappers.order();\n  }\n\n  updateGeometries() {\n    this.update.interrupt();\n\n    this.update\n      .transition('opacity')\n      .duration((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          select(n[i]).classed('entering', false);\n          return this.duration;\n        }\n        return 0;\n      })\n      .ease(easeCircleIn)\n      .attr('opacity', d => {\n        return checkInteraction(\n          d,\n          1,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        );\n      });\n  }\n\n  exitGeometries() {\n    this.exit.interrupt();\n\n    this.exit\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .attr('y', (d, i, n) => {\n        if (this.y(d.yAccessor) === undefined) {\n          const self = select(n[i]);\n          let shift = +self.attr('y');\n          shift = shift + +self.attr('height') * (shift / this.y(this.y.domain()[0]));\n          return shift;\n        }\n        return this.y(d.yAccessor);\n      })\n      .attr('height', d => {\n        if (this.y(d.yAccessor) === undefined) {\n          return 0;\n        }\n        return this.y.bandwidth();\n      })\n      .attr('x', (d, i, n) => {\n        if (this.x(d.xAccessor) === undefined) {\n          const self = select(n[i]);\n          let shift = +self.attr('x');\n          shift = shift + +self.attr('width') * (shift / this.x(this.x.domain()[this.x.domain().length - 1]));\n          return shift;\n        }\n        return this.x(d.xAccessor);\n      })\n      .attr('width', d => {\n        if (this.x(d.xAccessor) === undefined) {\n          return 0;\n        }\n        return this.x.bandwidth();\n      });\n\n    this.exitRowWrappers\n      .selectAll('.grid')\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .attr('y', (_, i, n) => {\n        const self = select(n[i]);\n        let shift = +self.attr('y');\n        shift = shift + +self.attr('height') * (shift / this.y(this.y.domain()[0]));\n        return shift;\n      })\n      .attr('height', 0)\n      .attr('x', (d, i, n) => {\n        if (this.x(d.xAccessor) === undefined) {\n          const self = select(n[i]);\n          let shift = +self.attr('x');\n          shift = shift + +self.attr('width') * (shift / this.x(this.x.domain()[this.x.domain().length - 1]));\n          return shift;\n        }\n        return this.x(d.xAccessor);\n      })\n      .attr('width', d => {\n        if (this.x(d.xAccessor) === undefined) {\n          return 0;\n        }\n        return this.x.bandwidth();\n      });\n\n    // this new transtition ensures that the chart counts and all labels\n    // correctly reflect the newest information\n    this.update\n      .transition('accessibilityAfterExit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        // before we exit geometries, we need to check if a focus exists or not\n        const focusDidExist = checkAccessFocus(this.rootG.node());\n        // then we must remove the exiting elements\n        this.exit.remove();\n        this.exitRowWrappers.remove();\n        // then our util can count geometries\n        this.setChartCountAccessibility();\n        // our group's label should update with new counts too\n        this.setGroupAccessibilityID();\n        // since items exited, labels must receive updated values\n        this.setGeometryAriaLabels();\n        // and also make sure the user's focus isn't lost\n        retainAccessFocus({\n          parentGNode: this.rootG.node(),\n          focusDidExist\n        });\n      });\n  }\n\n  drawGeometries() {\n    this.updateRowWrappers\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        this.updateRowWrappers.classed('entering', false);\n      });\n\n    const updateTransition = this.update\n      .classed('geometryIsMoving', (d, i, n) => {\n        const geometryIsUpdating = checkAttributeTransitions(select(n[i]), [\n          {\n            attr: 'y',\n            numeric: true,\n            newValue: this.y(d.yAccessor)\n          },\n          {\n            attr: 'height',\n            numeric: true,\n            newValue: this.y.bandwidth()\n          },\n          {\n            attr: 'x',\n            numeric: true,\n            newValue: this.x(d.xAccessor)\n          },\n          {\n            attr: 'width',\n            numeric: true,\n            newValue: this.x.bandwidth()\n          },\n          {\n            attr: 'rx',\n            numeric: true,\n            newValue: this.shape === 'circle' ? this.x.bandwidth() : 0\n          },\n          {\n            attr: 'ry',\n            numeric: true,\n            newValue: this.shape === 'circle' ? this.y.bandwidth() : 0\n          }\n        ]);\n        return geometryIsUpdating;\n      })\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('y', d => this.y(d.yAccessor))\n      .attr('height', this.y.bandwidth())\n      .attr('x', d => this.x(d.xAccessor))\n      .attr('width', this.x.bandwidth())\n      .attr('rx', this.shape === 'circle' ? this.x.bandwidth() : 0)\n      .attr('ry', this.shape === 'circle' ? this.y.bandwidth() : 0);\n\n    if (this.accessibility.hideTextures || !this.accessibility.showExperimentalTextures) {\n      updateTransition.attr('fill', d => {\n        return this.heat(d[this.valueAccessor]);\n      });\n    }\n\n    updateTransition.call(transitionEndAll, () => {\n      this.update.classed('geometryIsMoving', false);\n\n      this.updateInteractionState();\n\n      // we must make sure if geometries move, that our focus indicator does too\n      retainAccessFocus({\n        parentGNode: this.rootG.node()\n      });\n\n      // now we can emit the event that transitions are complete\n      this.transitionEndEvent.emit({ chartID: this.chartID });\n    });\n  }\n\n  updateInteractionState() {\n    removeHoverStrokes(this.svg.node());\n\n    // we use this.update and this.labelCurrent from setGlobalSelection here\n    // the lifecycle state does not matter (enter/update/exit)\n    // since interaction state can happen at any time\n\n    this.update\n      .attr('fill', d => {\n        return this.heat(d[this.valueAccessor]);\n      })\n      .attr('opacity', d => {\n        return checkInteraction(\n          d,\n          1,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        );\n      })\n      .attr('filter', (d, i, n) => {\n        if (!this.accessibility.hideStrokes && !select(n[i]).classed('geometryIsMoving')) {\n          const clicked =\n            this.clickHighlight &&\n            this.clickHighlight.length > 0 &&\n            checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n          const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n          const baseColor =\n            !this.accessibility.hideTextures && this.accessibility.showExperimentalTextures\n              ? this.fillColors(d[this.valueAccessor])\n              : this.rawHeat(d[this.valueAccessor]);\n          const strokeOverride =\n            !this.accessibility.hideTextures && this.accessibility.showExperimentalTextures\n              ? this.strokeColors(d[this.valueAccessor])\n              : undefined;\n          const state = clicked ? 'click' : hovered && !select(n[i]).classed('geometryIsMoving') ? 'hover' : 'rest';\n          if (state === 'hover') {\n            drawHoverStrokes({\n              inputElement: n[i],\n              id: this.chartID,\n              key: d[this.xAccessor] + d[this.yAccessor],\n              strokeWidth: this.hoverStyle.strokeWidth,\n              fill: baseColor,\n              strokeOverride\n            });\n          }\n          return this.strokes[state + baseColor];\n        }\n        return null;\n      });\n\n    // in case the fill/stroke contents change, we want to update our focus indicator to match\n    // (the focus indicator copies the whole element being focused to place it on top)\n    retainAccessFocus({\n      parentGNode: this.rootG.node()\n    });\n\n    // since elements may have changed fill, we update labels to match\n    this.updateLabels.attr('fill', this.textTreatmentHandler);\n  }\n\n  setLabelOpacity() {\n    this.processLabelOpacity(this.updateLabels);\n  }\n\n  processLabelOpacity(selection, isATransition?) {\n    const opacity = this.dataLabel.visible ? 1 : 0;\n    const dimensions = {\n      width: this.x.bandwidth(),\n      height: this.y.bandwidth()\n    };\n    const parseText = d => {\n      let text = this.dataLabel.labelAccessor ? d[this.dataLabel.labelAccessor] : d.valueAccessor;\n      text =\n        text instanceof Date\n          ? formatDate({\n              date: text,\n              format: this.dataLabel.format,\n              offsetTimezone: true\n            })\n          : formatStats(text, this.dataLabel.format);\n      const hasRoom =\n        this.accessibility.showSmallLabels ||\n        verifyTextHasSpace({\n          text,\n          dimensions,\n          fontSize: 14\n        });\n      return hasRoom\n        ? checkInteraction(\n            d,\n            opacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n          ? 0\n          : 1\n        : 0;\n    };\n    if (isATransition) {\n      selection.attr('opacity', parseText);\n    } else {\n      selection.each((d, i, n) => {\n        if (!select(n[i]).classed('entering')) {\n          select(n[i]).attr('opacity', () => parseText(d));\n        }\n      });\n    }\n  }\n\n  textTreatmentHandler = (d, i, n) => {\n    const bgColor =\n      !this.accessibility.hideTextures && this.accessibility.showExperimentalTextures\n        ? this.fillColors(d.valueAccessor)\n        : this.rawHeat(d.valueAccessor);\n    const color = autoTextColor(bgColor);\n    const me = select(n[i]);\n    me.attr(\n      'filter',\n      !me.classed('textIsMoving')\n        ? createTextStrokeFilter({\n            root: this.svg.node(),\n            id: this.chartID,\n            color: bgColor\n          })\n        : null\n    );\n    return color;\n  };\n\n  setSelectedClass() {\n    this.update.classed('highlight', (d, i, n) => {\n      let selected = checkInteraction(d, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n      selected = this.clickHighlight && this.clickHighlight.length ? selected : false;\n      const selectable = this.accessibility.elementsAreInterface;\n      setElementInteractionAccessState(n[i], selected, selectable);\n      return selected;\n    });\n  }\n\n  updateCursor() {\n    this.update.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    this.updateLabels.attr('cursor', !this.suppressEvents ? this.cursor : null);\n  }\n\n  bindInteractivity() {\n    this.update\n      .on(\n        'click',\n        !this.suppressEvents\n          ? (d, i, n) => {\n              this.onClickHandler(d, n[i]);\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents\n          ? (d, i, n) => {\n              this.onHoverHandler(d, n[i]);\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    this.updateLabels\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  enterDataLabels() {\n    this.enteringLabelGroups.attr('class', 'heat-map-label-wrapper');\n\n    this.enterLabels\n      .attr('class', 'heat-map-dataLabel entering')\n      .attr('opacity', 0)\n      .attr('fill', this.textTreatmentHandler)\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    placeDataLabels({\n      root: this.enterLabels,\n      xScale: this.x,\n      yScale: this.y,\n      ordinalAccessor: 'xAccessor',\n      valueAccessor: 'yAccessor',\n      chartType: 'heat-map'\n    });\n  }\n\n  updateDataLabels() {\n    const updateTransition = this.updateLabels\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          return this.duration / 2;\n        }\n        return 0;\n      })\n      .delay((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          return this.duration / 2;\n        }\n        return 0;\n      });\n\n    this.processLabelOpacity(updateTransition, true);\n    updateTransition.call(transitionEndAll, () => {\n      this.updateLabels.classed('entering', false);\n    });\n    // this.updatingLabelGroups\n    //   .transition('opacity')\n    //   .duration(this.duration)\n    //   .ease(easeCircleIn)\n    //   .attr('opacity', d => {\n    //     return checkInteraction(\n    //       d,\n    //       this.dataLabel.visible ? 1 : 0,\n    //       this.hoverOpacity,\n    //       this.hoverHighlight,\n    //       this.clickHighlight,\n    //       this.innerInteractionKeys\n    //     ) < 1\n    //       ? 0\n    //       : 1;\n    //   })\n    //   .call(transitionEndAll, () => {\n    //     this.updatingLabelGroups.classed('entering', false);\n    //   });\n  }\n\n  exitDataLabels() {\n    this.exitLabels\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .attr('opacity', 0)\n      .remove();\n\n    this.exitingLabelGroups\n      .selectAll('text')\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .attr('opacity', 0)\n      .call(transitionEndAll, () => {\n        this.exitingLabelGroups.remove();\n      });\n  }\n\n  drawDataLabels() {\n    this.updateLabels.attr('fill', this.textTreatmentHandler).text(d => {\n      const text = this.dataLabel.labelAccessor ? d[this.dataLabel.labelAccessor] : d.valueAccessor;\n      return text instanceof Date\n        ? formatDate({\n            date: text,\n            format: this.dataLabel.format,\n            offsetTimezone: true\n          })\n        : formatStats(text, this.dataLabel.format);\n    });\n\n    const placeLabels = this.updateLabels\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration);\n\n    placeDataLabels({\n      root: placeLabels,\n      xScale: this.x,\n      yScale: this.y,\n      ordinalAccessor: 'xAccessor',\n      valueAccessor: 'yAccessor',\n      chartType: 'heat-map'\n    });\n  }\n\n  drawLegendElements() {\n    drawLegend({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      width: this.innerPaddedWidth,\n      height: this.margin.bottom + 60,\n      colorArr: this.legend && this.legend.type !== 'gradient' ? this.colorArr : this.preparedColors,\n      baseColorArr: !(this.colorPalette && this.colorPalette.includes('diverging'))\n        ? [this.preparedColors[this.preparedColors.length - 1]]\n        : this.strokeColors.range(),\n      hideStrokes: this.accessibility.hideStrokes,\n      scale: this.heat,\n      steps: this.colorSteps,\n      margin: this.margin,\n      padding: this.padding,\n      duration: this.duration,\n      type: this.legend.type,\n      fontSize: 12,\n      label: this.legend.labels,\n      format: this.legend.format,\n      hide: !this.legend.visible\n    });\n  }\n\n  drawAnnotations() {\n    annotate({\n      source: this.rootG.node(),\n      data: this.annotations,\n      xScale: this.x,\n      xAccessor: this.xAccessor,\n      yScale: this.y,\n      yAccessor: this.yAccessor\n    });\n  }\n\n  setAnnotationAccessibility() {\n    setAccessAnnotation(this.getLanguageString(), this.heatMapEl, this.annotations, undefined);\n  }\n  // new accessibility functions added here\n  setTagLevels() {\n    this.topLevel = findTagLevel(this.highestHeadingLevel);\n    this.bottomLevel = findTagLevel(this.highestHeadingLevel, 3);\n  }\n\n  setChartDescriptionWrapper() {\n    // this initializes the accessibility description section of the chart\n    initializeDescriptionRoot({\n      language: this.getLanguageString(),\n      rootEle: this.heatMapEl,\n      title: this.accessibility.title || this.mainTitle,\n      chartTag: 'heat-map',\n      uniqueID: this.chartID,\n      highestHeadingLevel: this.highestHeadingLevel,\n      redraw: this.shouldRedrawWrapper,\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      hideDataTable: this.accessibility.hideDataTableButton\n    });\n    this.shouldRedrawWrapper = false;\n  }\n\n  setParentSVGAccessibility() {\n    // this sets the accessibility features of the root SVG element\n    setAccessibilityController({\n      chartTag: 'heat-map',\n      language: this.getLanguageString(),\n      node: this.svg.node(),\n      title: this.accessibility.title || this.mainTitle,\n      description: this.subTitle,\n      uniqueID: this.chartID,\n      geomType: 'cell',\n      includeKeyNames: this.accessibility.includeDataKeyNames,\n      dataKeys: scopeDataKeys(this, chartAccessors, 'heat-map'),\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.yAccessor,\n      groupName: 'row',\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled\n    });\n  }\n\n  setGeometryAccessibilityAttributes() {\n    // this makes sure every geom element has correct event handlers + semantics (role, tabindex, etc)\n    this.update.each((_d, i, n) => {\n      initializeElementAccess(n[i]);\n    });\n  }\n\n  setGeometryAriaLabels() {\n    // this adds an ARIA label to each geom (a description read by screen readers)\n    const keys = scopeDataKeys(this, chartAccessors, 'heat-map');\n    this.update.each((_d, i, n) => {\n      setElementFocusHandler({\n        chartTag: 'heat-map',\n        language: this.getLanguageString(),\n        node: n[i],\n        geomType: 'cell',\n        includeKeyNames: this.accessibility.includeDataKeyNames,\n        dataKeys: keys,\n        dataKeyNames: this.dataKeyNames,\n        groupName: 'row',\n        uniqueID: this.chartID,\n        disableKeyNav:\n          this.suppressEvents &&\n          this.accessibility.elementsAreInterface === false &&\n          this.accessibility.keyboardNavConfig &&\n          this.accessibility.keyboardNavConfig.disabled\n      });\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setGroupAccessibilityID() {\n    // this sets an ARIA label on all the g elements in the chart\n    this.updateRowWrappers.each((_, i, n) => {\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setChartAccessibilityTitle() {\n    setAccessTitle(this.getLanguageString(), this.heatMapEl, this.accessibility.title || this.mainTitle);\n  }\n\n  setChartAccessibilitySubtitle() {\n    setAccessSubtitle(this.getLanguageString(), this.heatMapEl, this.subTitle);\n  }\n\n  setChartAccessibilityLongDescription() {\n    setAccessLongDescription(this.getLanguageString(), this.heatMapEl, this.accessibility.longDescription);\n  }\n\n  setChartAccessibilityExecutiveSummary() {\n    setAccessExecutiveSummary(this.getLanguageString(), this.heatMapEl, this.accessibility.executiveSummary);\n  }\n\n  setChartAccessibilityPurpose() {\n    setAccessPurpose(this.getLanguageString(), this.heatMapEl, this.accessibility.purpose);\n  }\n\n  setChartAccessibilityContext() {\n    setAccessContext(this.getLanguageString(), this.heatMapEl, this.accessibility.contextExplanation);\n  }\n\n  setChartAccessibilityStatisticalNotes() {\n    setAccessStatistics(this.getLanguageString(), this.heatMapEl, this.accessibility.statisticalNotes);\n  }\n\n  setChartCountAccessibility() {\n    // this is our automated section that describes the chart contents\n    // (like geometry and group counts, etc)\n    setAccessChartCounts({\n      rootEle: this.heatMapEl,\n      parentGNode: this.map.node(), // pass the wrapper to <g> or geometries here, should be single node selection\n      chartTag: 'heat-map',\n      geomType: 'cell',\n      groupName: 'row'\n    });\n  }\n\n  setChartAccessibilityStructureNotes() {\n    setAccessStructure(this.getLanguageString(), this.heatMapEl, this.accessibility.structureNotes);\n  }\n  // new accessibility stuff ends here\n\n  onChangeHandler() {\n    if (this.accessibility && typeof this.accessibility.onChangeFunc === 'function') {\n      const d = {\n        updated: this.updated,\n        added: this.enterSize,\n        removed: this.exitSize\n      };\n      this.accessibility.onChangeFunc(d);\n    }\n    this.updated = false;\n    this.enterSize = 0;\n    this.exitSize = 0;\n  }\n\n  onClickHandler(d, n) {\n    this.clickEvent.emit({ data: d, target: n });\n  }\n\n  onHoverHandler(d, n) {\n    overrideTitleTooltip(this.chartID, true);\n    this.hoverEvent.emit({ data: d, target: n });\n    if (this.showTooltip) {\n      this.eventsTooltip({ data: d, evt: event, isToShow: true });\n    }\n  }\n\n  onMouseOutHandler() {\n    overrideTitleTooltip(this.chartID, false);\n    this.mouseOutEvent.emit();\n    if (this.showTooltip) {\n      this.eventsTooltip({ isToShow: false });\n    }\n  }\n\n  // set initial style (instead of copying css class across the lib)\n  setTooltipInitialStyle() {\n    initTooltipStyle(this.tooltipG);\n  }\n\n  // tooltip\n  eventsTooltip({ data, evt, isToShow }: { data?: any; evt?: any; isToShow: boolean }) {\n    drawTooltip({\n      root: this.tooltipG,\n      data,\n      event: evt,\n      isToShow,\n      tooltipLabel: this.tooltipLabel,\n      xAxis: this.xAxis,\n      yAxis: this.yAxis,\n      dataLabel: this.dataLabel,\n      dataKeyNames: this.dataKeyNames,\n      valueAccessor: this.valueAccessor,\n      xAccessor: this.xAccessor,\n      yAccessor: this.yAccessor,\n      chartType: 'heat-map'\n    });\n  }\n\n  render() {\n    this.drawStartEvent.emit({ chartID: this.chartID });\n    // everything between this comment and the third should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n    this.init();\n    if (this.shouldSetLocalizationConfig) {\n      this.setLocalizationConfig();\n      this.shouldSetLocalizationConfig = false;\n    }\n    if (this.shouldSetTagLevels) {\n      this.setTagLevels();\n      this.shouldSetTagLevels = false;\n    }\n    if (this.shouldUpdateData) {\n      this.prepareData();\n      this.shouldUpdateData = false;\n    }\n    if (this.shouldSetDimensions) {\n      this.setDimensions();\n      this.shouldSetDimensions = false;\n    }\n    if (this.shouldSetColors) {\n      this.setColors();\n      this.shouldSetColors = false;\n    }\n    if (this.shouldUpdateScales) {\n      this.prepareScales();\n      this.shouldUpdateScales = false;\n    }\n    if (this.shouldFormatClickHighlight) {\n      this.formatClickHighlight();\n      this.shouldFormatClickHighlight = false;\n    }\n    if (this.shouldFormatHoverHighlight) {\n      this.formatHoverHighlight();\n      this.shouldFormatHoverHighlight = false;\n    }\n    if (this.shouldValidateInteractionKeys) {\n      this.validateInteractionKeys();\n      this.shouldValidateInteractionKeys = false;\n    }\n    if (this.shouldUpdateTableData) {\n      this.setTableData();\n      this.shouldUpdateTableData = false;\n    }\n    if (this.shouldValidate) {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.shouldValidate = false;\n    }\n    // Everything between this comment and the first should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n\n    return (\n      <div class={`o-layout`}>\n        <div class=\"o-layout--chart\">\n          <this.topLevel class=\"heat-main-title vcl-main-title\">{this.mainTitle}</this.topLevel>\n          <this.bottomLevel class=\"visa-ui-text--instructions heat-sub-title vcl-sub-title\" />\n          <div class=\"heat-map-legend vcl-legend\" style={{ display: this.legend.visible ? 'block' : 'none' }} />\n          <keyboard-instructions\n            uniqueID={this.chartID}\n            geomType={'cell'}\n            groupName={'row'} // taken from initializeDescriptionRoot, on bar this should be \"bar group\", stacked bar is \"stack\", and clustered is \"cluster\"\n            language={this.getLanguageString()}\n            chartTag={'heat-map'}\n            width={this.width - (this.margin ? this.margin.right || 0 : 0)}\n            isInteractive={this.accessibility.elementsAreInterface}\n            hasCousinNavigation\n            disabled={\n              this.suppressEvents &&\n              this.accessibility.elementsAreInterface === false &&\n              this.accessibility.keyboardNavConfig &&\n              this.accessibility.keyboardNavConfig.disabled\n            } // the chart is \"simple\"\n          />\n          <div class=\"visa-viz-d3-heat-map-container\" />\n          <div class=\"heat-map-tooltip vcl-tooltip\" style={{ display: this.showTooltip ? 'block' : 'none' }} />\n          <data-table\n            uniqueID={this.chartID}\n            isCompact\n            language={this.getLanguageString()}\n            tableColumns={this.tableColumns}\n            data={this.tableData}\n            dataKeyNames={this.dataKeyNames}\n            padding={this.padding}\n            margin={this.margin}\n            hideDataTable={this.accessibility.hideDataTableButton}\n            unitTest={this.unitTest}\n          />\n        </div>\n      </div>\n    );\n  }\n  private init() {\n    // reading properties\n    const keys = Object.keys(HeatMapDefaultValues);\n    let i = 0;\n    // accept 0 or false as default value\n    const exceptions = {\n      strokeWidth: {\n        exception: 0\n      },\n      showTooltip: {\n        exception: false\n      },\n      mainTitle: {\n        exception: ''\n      },\n      subTitle: {\n        exception: ''\n      },\n      wrapLabel: {\n        exception: false\n      },\n      hoverOpacity: {\n        exception: 0\n      }\n    };\n    for (i = 0; i < keys.length; i++) {\n      const exception = !exceptions[keys[i]] ? false : this[keys[i]] === exceptions[keys[i]].exception;\n      this[keys[i]] = this[keys[i]] || exception ? this[keys[i]] : HeatMapDefaultValues[keys[i]];\n    }\n  }\n}\n\n// incorporate OSS licenses into build\nwindow['VisaChartsLibOSSLicenses'] = getLicenses(); // tslint:disable-line no-string-literal\n"],"mappings":"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","ignoreList":[]}