{"version":3,"names":["Step","context","t","this","_context","_t","prototype","areaStart","_line","areaEnd","NaN","lineStart","_x","_y","_point","lineEnd","lineTo","closePath","point","x","y","moveTo","x1","curveStep","propDefaultValues","Utils","LineChartDefaultValues","highestHeadingLevel","mainTitle","subTitle","text","height","width","margin","top","bottom","right","left","padding","localization","ordinalAccessor","valueAccessor","seriesAccessor","accessibility","animationConfig","xAxis","xAxisDate","yAxis","showBaselineX","showBaselineTrue","wrapLabel","colorPalette","colorPaletteCategorical","hoverStyle","clickStyle","referenceStyle","strokeWidth","strokeWidth2","showDots","dotRadius","dotRadius4","lineCurve","hoverOpacity","cursor","dataLabel","dataLabelLine","seriesLabel","legend","categoryLegend","tooltipLabel","secondaryLines","showTooltip","suppressEvents","referenceLines","annotations","clickHighlight","lineChartCss","LineChartStyle0","getGlobalInstances","configLocalization","getActiveLanguageString","getAccessibleStrokes","ensureTextContrast","createTextStrokeFilter","findTagLevel","prepareRenderChange","initializeDescriptionRoot","initializeElementAccess","setElementFocusHandler","setElementAccessID","setAccessibilityController","hideNonessentialGroups","setAccessTitle","setAccessSubtitle","setAccessLongDescription","setAccessExecutiveSummary","setAccessPurpose","setAccessContext","setAccessStatistics","setAccessStructure","setAccessChartCounts","setAccessXAxis","setAccessYAxis","setAccessAnnotation","retainAccessFocus","checkAccessFocus","setElementInteractionAccessState","setAccessibilityDescriptionWidth","annotate","chartAccessors","checkInteraction","checkClicked","checkHovered","checkLabelDisplayOnly","convertVisaColor","drawAxis","drawGrid","drawLegend","setLegendInteractionState","drawTooltip","formatDataLabel","getColors","getLicenses","getPadding","getScopedData","initTooltipStyle","overrideTitleTooltip","placeDataLabels","resolveLines","scopeDataKeys","transitionEndAll","visaColors","validateAccessibilityProps","validateLocalizationProps","roundTo","resolveLabelCollision","setSubTitle","setReferenceLine","LineChart","shouldValidateAccessibility","shouldValidateLocalization","updated","time","timemillisecond","timeMillisecond","timesecond","timeSecond","timeminute","timeMinute","timehour","timeHour","timeday","timeDay","timeweek","timeWeek","timemonth","timeMonth","timeyear","timeYear","curveOptions","linear","curveLinear","step","catmullRom","curveCatmullRom","shouldUpdateXAxis","shouldUpdateYAxis","shouldUpdateXGrid","shouldUpdateYGrid","shouldValidate","shouldUpdateData","shouldSetDimensions","shouldUpdateScales","shouldUpdateTableData","shouldUpdateLabels","shouldUpdateAnnotations","shouldDrawInteractionState","shouldSetSelectionClass","shouldUpdateCursor","shouldSetColors","shouldSetSubTitle","shouldUpdateLines","shouldUpdatePoints","shouldUpdateLegend","shouldUpdateReferenceLines","shouldBindInteractivity","shouldUpdateLegendInteractivity","shouldResetRoot","shouldUpdateBaseline","shouldValidateInteractionKeys","shouldUpdateLabelData","shouldValidateDataLabelAccessor","shouldEnterUpdateExit","shouldSetGlobalSelections","shouldSetTestingAttributes","shouldSetLabelOpacity","shouldSetSeriesLabelOpacity","shouldSetLegendCursor","shouldAddStrokeUnder","shouldValidateSeriesLabels","shouldUpdateSeriesLabels","shouldUpdateColors","shouldUpdateStrokeWidth","shouldUpdateInterpolationData","shouldUpdateDotRadius","shouldUpdateDescriptionWrapper","shouldSetChartAccessibilityTitle","shouldSetChartAccessibilitySubtitle","shouldSetChartAccessibilityLongDescription","shouldSetChartAccessibilityExecutiveSummary","shouldSetChartAccessibilityStatisticalNotes","shouldSetChartAccessibilityStructureNotes","shouldSetParentSVGAccessibility","shouldSetGeometryAccessibilityAttributes","shouldSetGeometryAriaLabels","shouldSetGroupAccessibilityLabel","shouldSetChartAccessibilityPurpose","shouldSetChartAccessibilityContext","shouldRedrawWrapper","shouldSetTagLevels","shouldSetChartAccessibilityCount","shouldSetYAxisAccessibility","shouldSetXAxisAccessibility","shouldSetAnnotationAccessibility","shouldUpdateDashPatterns","shouldSetLocalizationConfig","topLevel","bottomLevel","strokes","b","short","med","long","dashPatterns","hiddenHash","collisionSettings","all","validPositions","offsets","middle","handleStrokeDasharray","d","i","keys","includes","key","hideTextures","calculateStrokeWidth","data","useChildData","values","seriesInteraction","innerInteractionKeys","hoverHighlight","handleDotStroke","n","hideStrokes","clicked","length","hovered","baseColor","select","parentNode","attr","color","toLowerCase","handleLineStroke","colorArr","handleSeriesTextFill","rawColors","textColors","handleTextFill","dataWatcher","_newData","_oldData","idWatcher","newID","_oldID","console","error","headingWatcher","_newVal","_oldVal","titleWatcher","subtitleWatcher","dimensionWatcher","seriesAccessorWatcher","interactionKeys","ordinalAccessorWatcher","valueAccessorWatcher","xAxisWatcher","newGridVal","gridVisible","oldGridVal","newTickInterval","tickInterval","oldTickInterval","newUnit","unit","oldUnit","yAxisWatcher","wrapLabelWatcher","showBaselineXWatcher","paletteWatcher","colorsWatcher","clickStyleWatcher","hoverStyleWatcher","referenceWatcher","cursorWatcher","strokeWidthWatcher","showDotsWatcher","dotRadiusWatcher","lineCurveWatcher","_newLineCurve","_oldLineCurve","warn","hoverOpacityWatcher","dataLabelWatcher","newVisibleVal","visible","oldVisibleVal","newAccessor","labelAccessor","oldAccessor","newDisplayOnlyVal","displayOnly","oldDisplayOnlyVal","seriesLabelWatcher","tooltipLabelWatcher","showTooltipWatcher","accessibilityWatcher","newTitle","title","oldTitle","newExecutiveSummary","executiveSummary","oldExecutiveSummary","newPurpose","purpose","oldPurpose","newLongDescription","longDescription","oldLongDescription","newContext","contextExplanation","oldContext","newStatisticalNotes","statisticalNotes","oldStatisticalNotes","newStructureNotes","structureNotes","oldStructureNotes","newincludeDataKeyNames","includeDataKeyNames","oldincludeDataKeyNames","newElementDescriptionAccessor","elementDescriptionAccessor","oldElementDescriptionAccessor","newSmallValue","showSmallLabels","oldSmallValue","newStrokes","oldStrokes","newTextures","oldTextures","newKeyNav","keyboardNavConfig","disabled","oldKeyNav","newInterface","elementsAreInterface","oldInterface","localizationWatcher","newLanguage","language","oldLanguage","newNumeralLocale","numeralLocale","oldNumeralLocale","legendWatcher","newInteractiveVal","interactive","oldInteractiveVal","annotationsWatcher","valueOverrideWatcher","secondaryLinesWatcher","newDataLabelVal","showDataLabel","oldDataLabelVal","newSeriesLabelVal","showSeriesLabel","oldSeriesLabelVal","newKeysVal","oldKeysVal","newOpacityVal","opacity","oldOpacityVal","clickWatcher","hoverWatcher","interactionWatcher","dataKeyNamesWatcher","suppressWatcher","unitTestWatcher","componentWillLoad","chartID","uniqueID","uuid","initialLoadEvent","emit","Promise","resolve","duration","defaults","lineChartEl","id","setLocalizationConfig","setTagLevels","setDimensions","prepareScales","prepareData","prepareLabelData","updateInterpolationData","validateInteractionKeys","validateDataLabelAccessor","validateSeriesLabels","setTableData","shouldValidateAccessibilityProps","shouldValidateLocalizationProps","setColors","componentWillUpdate","componentDidLoad","renderRootElements","setTooltipInitialStyle","setChartDescriptionWrapper","setChartAccessibilityTitle","setChartAccessibilitySubtitle","setChartAccessibilityLongDescription","setChartAccessibilityExecutiveSummary","setChartAccessibilityPurpose","setChartAccessibilityContext","setChartAccessibilityStatisticalNotes","setChartAccessibilityStructureNotes","setParentSVGAccessibility","reSetRoot","drawXGrid","drawYGrid","setSubTitleElements","setGlobalSelections","setTestingAttributes","enterLines","updateLines","exitLines","enterPoints","updatePoints","exitPoints","drawLines","drawPoints","enterSeriesLabels","updateSeriesLabels","exitSeriesLabels","enterDataLabels","updateDataLabels","exitDataLabels","setChartCountAccessibility","setGeometryAccessibilityAttributes","setGeometryAriaLabels","drawLegendElements","drawDataLabels","drawSeriesLabels","addStrokeUnder","drawReferenceLines","setSelectedClass","updateCursor","bindInteractivity","bindLegendInteractivity","setLegendCursor","drawXAxis","setXAxisAccessibility","drawYAxis","setYAxisAccessibility","drawBaseline","drawAnnotations","setAnnotationAccessibility","root","node","dotG","setGroupAccessibilityID","onChangeHandler","then","initialLoadEndEvent","componentDidUpdate","updateColors","updateStrokeWidth","updateDotRadius","updateInteractionState","updateStrokePattern","setLabelOpacity","setSeriesLabelOpacity","drawEndEvent","windowInstances","languageString","i18Next","languageObject","getResourceBundle","numeralObject","numeral","localeData","skipValidation","Object","assign","disableValidation","onClickEvent","undefined","clickEvent","innerHeight","innerWidth","innerPaddedHeight","innerPaddedWidth","innerLabelAccessor","getLanguageString","nest","interpolating","oldXDomain","domain","oldXRange","range","oldYDomain","oldYRange","scaleLinear","line","curve","map","minValue","min","parseFloat","maxValue","max","minValueOverride","maxValueOverride","xDomainUnique","Date","maxDate","minDate","timeDiffInMilliseconds","count","genericTimePadding","scaleTime","getTime","filter","a","indexOf","sort","timeTool","offset","scalePoint","xIndex","defined","isNaN","filteredData","hashObject","placement","collisionHideOnly","entries","dotNest","minArray","maxArray","firstArray","lastArray","forEach","item","minIdx","minIndex","minItem","maxIdx","maxIndex","maxItem","firstItem","find","val","lastItem","reverse","push","displayOnlyLabelData","first","last","parent","interpolate","get","start","end","resolved","change","subTitleG","colors","adjustedColors","adjusted","innerScopeDataKeys","innerChartSingleAccessors","singleAccessors","accessor","innerChartAccessors","tableData","tableColumns","svg","labels","seriesLabelG","append","rootG","gridG","lineG","legendG","tooltipG","referencesG","changeSvg","selection","namespace","easing","easeCircleIn","changeRoot","changeRootG","dataBoundToLines","selectAll","enter","exit","update","merge","enterSize","size","dataBoundToDotWrappers","enterDotWrappers","exitDotWrappers","updateDotWrappers","dataBountToSeriesLabels","seriesLabelEnter","seriesLabelExit","seriesLabelUpdate","dataBoundToLabels","enteringLabelGroups","exitingLabelGroups","updatingLabelGroups","remove","dataBoundToDots","enterDots","exitDots","updateDots","dataBoundToLabelChildren","enteringLabels","exitingLabels","updatingLabels","exitSize","unitTest","axisLabel","label","dataKeyNames","bandWidth","axisScale","dateFormat","format","hide","rootEle","hasXAxis","xAxisLabel","hasYAxis","yAxisLabel","markOffset","interrupt","on","onClickHandler","onHoverHandler","onMouseOutHandler","linelength","getTotalLength","transition","ease","call","lineOpacity","Math","classed","_","each","_d","order","dotOpacity","lineDotOpacity","delay","exitWholeGroup","focusDidExist","parentGNode","updateTransition","transitionEndEvent","me","selected","selectable","labelDetails","isRight","seriesLabelOpacity","Number","EPSILON","hideOnly","seriesUpdate","style","textElement","getComputedStyle","fontSize","textHeight","bitmaps","labelSelection","avoidMarks","accessors","childrenEnter","xScale","yScale","chartType","fullEnter","hidden","labelOpacity","targetOpacity","parentOpacity","updateChildren","collisionPlacement","avoidCollision","runOccupancyBitmap","addCollisionClass","prevOpacity","styleVisibility","labelsAdded","labelsRemoved","removeOnly","suppressMarkDraw","groupAccessor","groupName","source","xAccessor","yAccessor","noSeriesAccessor","type","secondary","hoverEvent","target","chartTag","redraw","disableKeyNav","hideDataTable","hideDataTableButton","description","geomType","includeKeyNames","dataKeys","onChangeFunc","added","removed","hasTooltip","eventsTooltip","evt","event","isToShow","mouseOutEvent","render","drawStartEvent","init","h","class","display","isInteractive","hasCousinNavigation","isCompact","exceptions","exception","window"],"sources":["node_modules/d3-shape/src/curve/step.js","src/components/line-chart/line-chart-default-values.ts","src/components/line-chart/line-chart.scss?tag=line-chart","src/components/line-chart/line-chart.tsx"],"sourcesContent":["function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport Utils from '@visa/visa-charts-utils';\n\nconst { propDefaultValues } = Utils;\nexport class LineChartDefaultValues {\n  static readonly highestHeadingLevel = propDefaultValues.highestHeadingLevel;\n  static readonly mainTitle = 'Line Chart Title';\n  static readonly subTitle = propDefaultValues.subTitle.text;\n  static readonly height = 300;\n  static readonly width = 650;\n  static readonly margin = {\n    top: 300 * 0.01,\n    bottom: 300 * 0.01,\n    right: 650 * 0.01,\n    left: 650 * 0.01\n  };\n  static readonly padding = {\n    top: 20,\n    bottom: 50,\n    right: 50,\n    left: 50\n  };\n\n  static readonly localization = propDefaultValues.localization;\n\n  static readonly ordinalAccessor = 'label';\n  static readonly valueAccessor = 'value';\n  static readonly seriesAccessor = 'series';\n\n  static readonly accessibility = propDefaultValues.accessibility;\n  static readonly animationConfig = propDefaultValues.animationConfig;\n  static readonly xAxis = propDefaultValues.xAxisDate;\n  static readonly yAxis = propDefaultValues.yAxis;\n  static readonly showBaselineX = propDefaultValues.showBaselineTrue;\n  static readonly wrapLabel = propDefaultValues.wrapLabel;\n  static readonly colorPalette = propDefaultValues.colorPaletteCategorical;\n\n  static readonly hoverStyle = propDefaultValues.hoverStyle;\n  static readonly clickStyle = propDefaultValues.clickStyle;\n\n  static readonly referenceStyle = propDefaultValues.referenceStyle;\n\n  static readonly strokeWidth = propDefaultValues.strokeWidth2;\n  static readonly showDots = propDefaultValues.showDots;\n  static readonly dotRadius = propDefaultValues.dotRadius4;\n  static readonly lineCurve = propDefaultValues.lineCurve;\n  static readonly hoverOpacity = propDefaultValues.hoverOpacity;\n  static readonly cursor = propDefaultValues.cursor;\n\n  static readonly dataLabel = propDefaultValues.dataLabelLine;\n  static readonly dataKeyNames;\n  static readonly seriesLabel = propDefaultValues.seriesLabel;\n  static readonly legend = propDefaultValues.categoryLegend;\n  static readonly tooltipLabel = propDefaultValues.tooltipLabel;\n\n  static readonly secondaryLines = propDefaultValues.secondaryLines;\n\n  static readonly showTooltip = propDefaultValues.showTooltip;\n  static readonly suppressEvents = propDefaultValues.suppressEvents;\n  static readonly referenceLines = propDefaultValues.referenceLines;\n  static readonly annotations = propDefaultValues.annotations;\n\n  static readonly hoverHighlight;\n  static readonly clickHighlight = propDefaultValues.clickHighlight;\n}\n","/**\n * Copyright (c) 2020, 2021, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nline-chart {\n  .annotations {\n    pointer-events: none;\n    .handle {\n      pointer-events: all;\n    }\n  }\n\n  .screen-reader-info {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n\n  .data-table-link {\n    color: #767676;\n    text-decoration: none;\n    font-size: 12px;\n    margin-left: 5%;\n  }\n\n  .hidden {\n    display: none;\n  }\n\n  cursor: default;\n  .axis {\n    font-size: 12px;\n    text {\n      //font: 0.65rem;\n      fill: #767676;\n    }\n\n    &-label {\n      // axis label\n      text-anchor: middle;\n      font: 1rem sans-serif;\n    }\n\n    &-mark {\n      // axis mark\n      color: #949494;\n      stroke-width: 2px;\n    }\n\n    path {\n      color: transparent;\n      stroke-width: 2px;\n    }\n  }\n\n  .grid {\n    line {\n      stroke: #c9c9c9;\n      stroke-opacity: 0.6;\n      // shape-rendering: crispEdges;\n      // stroke-dasharray: 4, 4;\n    }\n\n    path {\n      stroke-width: 0;\n      stroke: #767676;\n    }\n  }\n\n  .line-group {\n    transition: opacity 0.5s linear;\n\n    &__inactive {\n      opacity: 0;\n    }\n\n    .line-plot {\n      fill: none;\n    }\n\n    .dot {\n      stroke: #ffffff;\n    }\n    .line-series-label {\n      font-size: 1em;\n    }\n  }\n\n  .line-dataLabel-group {\n    text {\n      //font-size: 12px;\n    }\n  }\n\n  .line-legend {\n    font-size: 1em;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n\n    .legend {\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n    }\n  }\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport { Component, Element, Prop, Watch, h, Event, EventEmitter } from '@stencil/core';\n\nimport { select, event } from 'd3-selection';\nimport { max, min, minIndex, maxIndex } from 'd3-array';\nimport { timeMillisecond, timeSecond, timeMinute, timeHour, timeDay, timeWeek, timeMonth, timeYear } from 'd3-time';\nimport { scalePoint, scaleLinear, scaleTime } from 'd3-scale';\nimport { line, curveLinear, curveStep, curveCatmullRom } from 'd3-shape';\nimport { nest } from 'd3-collection';\nimport {\n  IBoxModelType,\n  ILocalizationType,\n  IHoverStyleType,\n  IClickStyleType,\n  IAxisType,\n  IReferenceStyleType,\n  IDataLabelType,\n  ITooltipLabelType,\n  IAccessibilityType,\n  IAnimationConfig,\n  ILegendType,\n  ISeriesLabelType,\n  ISecondaryLinesType,\n  ISubTitleType\n} from '@visa/charts-types';\nimport { LineChartDefaultValues } from './line-chart-default-values';\nimport { easeCircleIn } from 'd3-ease';\nimport 'd3-transition';\nimport { v4 as uuid } from 'uuid';\nimport Utils from '@visa/visa-charts-utils';\nconst {\n  getGlobalInstances,\n  configLocalization,\n  getActiveLanguageString,\n  getAccessibleStrokes,\n  ensureTextContrast,\n  createTextStrokeFilter,\n  findTagLevel,\n  prepareRenderChange,\n  initializeDescriptionRoot,\n  initializeElementAccess,\n  setElementFocusHandler,\n  setElementAccessID,\n  setAccessibilityController,\n  hideNonessentialGroups,\n  setAccessTitle,\n  setAccessSubtitle,\n  setAccessLongDescription,\n  setAccessExecutiveSummary,\n  setAccessPurpose,\n  setAccessContext,\n  setAccessStatistics,\n  setAccessStructure,\n  setAccessChartCounts,\n  setAccessXAxis,\n  setAccessYAxis,\n  setAccessAnnotation,\n  retainAccessFocus,\n  checkAccessFocus,\n  setElementInteractionAccessState,\n  setAccessibilityDescriptionWidth,\n  annotate,\n  chartAccessors,\n  checkInteraction,\n  checkClicked,\n  checkHovered,\n  checkLabelDisplayOnly,\n  convertVisaColor,\n  drawAxis,\n  drawGrid,\n  drawLegend,\n  setLegendInteractionState,\n  drawTooltip,\n  formatDataLabel,\n  getColors,\n  getLicenses,\n  getPadding,\n  getScopedData,\n  initTooltipStyle,\n  overrideTitleTooltip,\n  placeDataLabels,\n  resolveLines,\n  scopeDataKeys,\n  transitionEndAll,\n  visaColors,\n  validateAccessibilityProps,\n  validateLocalizationProps,\n  roundTo,\n  resolveLabelCollision,\n  setSubTitle,\n  setReferenceLine\n} = Utils;\n\n@Component({\n  tag: 'line-chart',\n  styleUrl: 'line-chart.scss'\n})\nexport class LineChart {\n  @Event() clickEvent: EventEmitter;\n  @Event() hoverEvent: EventEmitter;\n  @Event() mouseOutEvent: EventEmitter;\n  @Event() initialLoadEvent: EventEmitter;\n  @Event() initialLoadEndEvent: EventEmitter;\n  @Event() drawStartEvent: EventEmitter;\n  @Event() drawEndEvent: EventEmitter;\n  @Event() transitionEndEvent: EventEmitter;\n\n  // Chart Attributes (1/7)\n  @Prop({ mutable: true }) localization: ILocalizationType = LineChartDefaultValues.localization;\n  @Prop({ mutable: true }) mainTitle: string = LineChartDefaultValues.mainTitle;\n  @Prop({ mutable: true }) subTitle: string | ISubTitleType = LineChartDefaultValues.subTitle;\n  @Prop({ mutable: true }) height: number = LineChartDefaultValues.height;\n  @Prop({ mutable: true }) width: number = LineChartDefaultValues.width;\n  @Prop({ mutable: true }) highestHeadingLevel: string | number = LineChartDefaultValues.highestHeadingLevel;\n  @Prop({ mutable: true }) margin: IBoxModelType = LineChartDefaultValues.margin;\n  @Prop({ mutable: true }) padding: IBoxModelType = LineChartDefaultValues.padding;\n\n  // Data (2/7)\n  @Prop() data: object[];\n  @Prop() uniqueID: string;\n  @Prop({ mutable: true }) ordinalAccessor: string = LineChartDefaultValues.ordinalAccessor;\n  @Prop({ mutable: true }) valueAccessor: string = LineChartDefaultValues.valueAccessor;\n  @Prop({ mutable: true }) seriesAccessor: string = LineChartDefaultValues.seriesAccessor;\n\n  // Axis (3/7)\n  @Prop({ mutable: true }) xAxis: IAxisType = LineChartDefaultValues.xAxis;\n  @Prop({ mutable: true }) yAxis: IAxisType = LineChartDefaultValues.yAxis;\n  @Prop({ mutable: true }) wrapLabel: boolean = LineChartDefaultValues.wrapLabel;\n  @Prop({ mutable: true }) showBaselineX: boolean = LineChartDefaultValues.showBaselineX;\n\n  // Color & Shape (4/7)\n  @Prop({ mutable: true }) colorPalette: string = LineChartDefaultValues.colorPalette;\n  @Prop({ mutable: true }) colors: string[];\n  @Prop({ mutable: true }) hoverStyle: IHoverStyleType = LineChartDefaultValues.hoverStyle;\n  @Prop({ mutable: true }) clickStyle: IClickStyleType = LineChartDefaultValues.clickStyle;\n  @Prop({ mutable: true }) referenceStyle: IReferenceStyleType = LineChartDefaultValues.referenceStyle;\n  @Prop({ mutable: true }) cursor: string = LineChartDefaultValues.cursor;\n  @Prop({ mutable: true }) hoverOpacity: number = LineChartDefaultValues.hoverOpacity;\n  @Prop({ mutable: true }) animationConfig: IAnimationConfig = LineChartDefaultValues.animationConfig;\n  @Prop({ mutable: true }) strokeWidth: number = LineChartDefaultValues.strokeWidth;\n  @Prop({ mutable: true }) showDots: boolean = LineChartDefaultValues.showDots;\n  @Prop({ mutable: true }) dotRadius: number = LineChartDefaultValues.dotRadius;\n  @Prop({ mutable: true }) lineCurve: string = LineChartDefaultValues.lineCurve;\n\n  // Data label (5/7)\n  @Prop({ mutable: true }) dataLabel: IDataLabelType = LineChartDefaultValues.dataLabel;\n  @Prop({ mutable: true }) dataKeyNames: object;\n  @Prop({ mutable: true }) showTooltip: boolean = LineChartDefaultValues.showTooltip;\n  @Prop({ mutable: true }) tooltipLabel: ITooltipLabelType = LineChartDefaultValues.tooltipLabel;\n  @Prop({ mutable: true }) accessibility: IAccessibilityType = LineChartDefaultValues.accessibility;\n  @Prop({ mutable: true }) legend: ILegendType = LineChartDefaultValues.legend;\n  @Prop({ mutable: true }) annotations: object[] = LineChartDefaultValues.annotations;\n  @Prop({ mutable: true }) seriesLabel: ISeriesLabelType = LineChartDefaultValues.seriesLabel;\n\n  // Calculation (6/7)\n  @Prop() maxValueOverride: number;\n  @Prop() minValueOverride: number;\n  @Prop({ mutable: true }) referenceLines: object[] = LineChartDefaultValues.referenceLines;\n  @Prop({ mutable: true }) secondaryLines: ISecondaryLinesType = LineChartDefaultValues.secondaryLines;\n\n  // Interactivity (7/7)\n  @Prop({ mutable: true }) suppressEvents: boolean = LineChartDefaultValues.suppressEvents;\n  @Prop({ mutable: true }) hoverHighlight: object;\n  @Prop({ mutable: true }) clickHighlight: object[] = LineChartDefaultValues.clickHighlight;\n  @Prop({ mutable: true }) interactionKeys: string[];\n\n  // Testing (8/7)\n  @Prop() unitTest: boolean = false;\n  //  @Prop() debugMode: boolean = false;\n\n  @Element()\n  lineChartEl: HTMLElement;\n  shouldValidateAccessibility: boolean = true;\n  shouldValidateLocalization: boolean = true;\n  svg: any;\n  root: any;\n  rootG: any;\n  gridG: any;\n  lineG: any;\n  dotG: any;\n  seriesLabelG: any;\n  line: any;\n  x: any;\n  y: any;\n  xIndex: any;\n  nest: any;\n  dotNest: any;\n  map: any;\n  interpolating: any;\n  innerHeight: number;\n  innerWidth: number;\n  innerPaddedHeight: number;\n  innerPaddedWidth: number;\n  referencesG: any;\n  defaults: boolean;\n  duration: number;\n  legendG: any;\n  tooltipG: any;\n  subTitleG: any;\n  labels: any;\n  displayOnlyLabelData: any;\n  colorArr: any;\n  rawColors: any;\n  textColors: any;\n  seriesInteraction: any;\n  tableData: any;\n  tableColumns: any;\n  updated: boolean = true;\n  enterSize: number;\n  exitSize: number;\n  enter: any;\n  exit: any;\n  update: any;\n  enterDotWrappers: any;\n  updateDotWrappers: any;\n  exitDotWrappers: any;\n  enterDots: any;\n  updateDots: any;\n  exitDots: any;\n  enteringLabelGroups: any;\n  exitingLabelGroups: any;\n  updatingLabelGroups: any;\n  enteringLabels: any;\n  exitingLabels: any;\n  updatingLabels: any;\n  seriesLabelEnter: any;\n  seriesLabelUpdate: any;\n  seriesLabelExit: any;\n  labelDetails: any;\n  isRight: any;\n  time = {\n    timemillisecond: timeMillisecond,\n    timesecond: timeSecond,\n    timeminute: timeMinute,\n    timehour: timeHour,\n    timeday: timeDay,\n    timeweek: timeWeek,\n    timemonth: timeMonth,\n    timeyear: timeYear\n  };\n  curveOptions = {\n    linear: curveLinear,\n    step: curveStep,\n    catmullRom: curveCatmullRom\n  };\n  chartID: string;\n  innerInteractionKeys: any;\n  innerLabelAccessor: string;\n  shouldUpdateXAxis: boolean = false;\n  shouldUpdateYAxis: boolean = false;\n  shouldUpdateXGrid: boolean = false;\n  shouldUpdateYGrid: boolean = false;\n  shouldValidate: boolean = false;\n  shouldUpdateData: boolean = false;\n  shouldSetDimensions: boolean = false;\n  shouldUpdateScales: boolean = false;\n  shouldUpdateTableData: boolean = false;\n  shouldUpdateLabels: boolean = false;\n  shouldUpdateAnnotations: boolean = false;\n  shouldDrawInteractionState: boolean = false;\n  shouldSetSelectionClass: boolean = false;\n  shouldUpdateCursor: boolean = false;\n  shouldSetColors: boolean = false;\n  shouldSetSubTitle: boolean = false;\n  shouldUpdateLines: boolean = false;\n  shouldUpdatePoints: boolean = false;\n  shouldUpdateLegend: boolean = false;\n  shouldUpdateReferenceLines: boolean = false;\n  shouldBindInteractivity: boolean = false;\n  shouldUpdateLegendInteractivity: boolean = false;\n  shouldResetRoot: boolean = false;\n  shouldUpdateBaseline: boolean = false;\n  shouldValidateInteractionKeys: boolean = false;\n  shouldUpdateLabelData: boolean = false;\n  shouldValidateDataLabelAccessor: boolean = false;\n  shouldEnterUpdateExit: boolean = false;\n  shouldSetGlobalSelections: boolean = false;\n  shouldSetTestingAttributes: boolean = false;\n  shouldSetLabelOpacity: boolean = false;\n  shouldSetSeriesLabelOpacity: boolean = false;\n  shouldSetLegendCursor: boolean = false;\n  shouldAddStrokeUnder: boolean = false;\n  shouldValidateSeriesLabels: boolean = false;\n  shouldUpdateSeriesLabels: boolean = false;\n  shouldUpdateColors: boolean = false;\n  shouldUpdateStrokeWidth: boolean = false;\n  shouldUpdateInterpolationData: boolean = false;\n  shouldUpdateDotRadius: boolean = false;\n  shouldUpdateDescriptionWrapper: boolean = false;\n  shouldSetChartAccessibilityTitle: boolean = false;\n  shouldSetChartAccessibilitySubtitle: boolean = false;\n  shouldSetChartAccessibilityLongDescription: boolean = false;\n  shouldSetChartAccessibilityExecutiveSummary: boolean = false;\n  shouldSetChartAccessibilityStatisticalNotes: boolean = false;\n  shouldSetChartAccessibilityStructureNotes: boolean = false;\n  shouldSetParentSVGAccessibility: boolean = false;\n  shouldSetGeometryAccessibilityAttributes: boolean = false;\n  shouldSetGeometryAriaLabels: boolean = false;\n  shouldSetGroupAccessibilityLabel: boolean = false;\n  shouldSetChartAccessibilityPurpose: boolean = false;\n  shouldSetChartAccessibilityContext: boolean = false;\n  shouldRedrawWrapper: boolean = false;\n  shouldSetTagLevels: boolean = false;\n  shouldSetChartAccessibilityCount: boolean = false;\n  shouldSetYAxisAccessibility: boolean = false;\n  shouldSetXAxisAccessibility: boolean = false;\n  shouldSetAnnotationAccessibility: boolean = false;\n  shouldUpdateDashPatterns: boolean = false;\n  shouldSetLocalizationConfig: boolean = false;\n  topLevel: string = 'h2';\n  bottomLevel: string = 'p';\n  strokes: any = {};\n  b: string = ',';\n  short: string = '2,2';\n  med: string = '4,2';\n  long: string = '8,2';\n  dashPatterns: any = [\n    '',\n    this.long,\n    this.long + this.b + this.med,\n    this.short + this.b + this.long + this.b + this.long,\n    this.short + this.b + this.short + this.b + this.long\n  ];\n  bitmaps: any;\n  hiddenHash: object = {};\n  collisionSettings: object = {\n    all: {\n      validPositions: ['top', 'bottom', 'left', 'right', 'bottom-right', 'bottom-left', 'top-left', 'top-right'],\n      offsets: [3, 2, 4, 4, 1, 1, 1, 1]\n    },\n    top: {\n      validPositions: ['top', 'top-left', 'top-right'],\n      offsets: [3, 1, 1]\n    },\n    middle: {\n      validPositions: ['left', 'right'],\n      offsets: [4, 4]\n    },\n    bottom: {\n      validPositions: ['bottom', 'bottom-left', 'bottom-right'],\n      offsets: [2, 1, 1]\n    },\n    right: {\n      validPositions: ['right', 'top-right', 'bottom-right'],\n      offsets: [4, 1, 1]\n    },\n    left: {\n      validPositions: ['left', 'top-left', 'bottom-left'],\n      offsets: [4, 1, 1]\n    }\n  };\n\n  @Watch('data')\n  dataWatcher(_newData, _oldData) {\n    this.updated = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateData = true;\n    this.shouldUpdateLabelData = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldSetColors = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateTableData = true;\n    this.shouldValidate = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n  }\n\n  @Watch('uniqueID')\n  idWatcher(newID, _oldID) {\n    console.error(\n      'Change detected in prop uniqueID from value ' +\n        _oldID +\n        ' to value ' +\n        newID +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.chartID = newID;\n    // this.lineChartEl.id = this.chartID;\n    // this.shouldValidate = true;\n    // this.shouldUpdateDescriptionWrapper = true;\n    // this.shouldSetParentSVGAccessibility = true;\n    // this.shouldUpdateLegend = true;\n    // this.shouldAddStrokeUnder = true;\n  }\n\n  @Watch('highestHeadingLevel')\n  headingWatcher(_newVal, _oldVal) {\n    this.shouldRedrawWrapper = true;\n    this.shouldSetTagLevels = true;\n    this.shouldSetChartAccessibilityCount = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('mainTitle')\n  titleWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('subTitle')\n  subtitleWatcher(_newVal, _oldVal) {\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('height')\n  @Watch('width')\n  @Watch('padding')\n  @Watch('margin')\n  dimensionWatcher(_newVal, _oldVal) {\n    this.shouldSetDimensions = true;\n    this.shouldResetRoot = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('seriesAccessor')\n  seriesAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateData = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldSetColors = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldValidate = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n  }\n\n  @Watch('ordinalAccessor')\n  ordinalAccessorWatcher(_newVal, _oldVal) {\n    this.shouldSetGlobalSelections = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateStrokeWidth = true;\n  }\n\n  @Watch('valueAccessor')\n  valueAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldSetColors = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldValidateDataLabelAccessor = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGlobalSelections = true;\n  }\n\n  @Watch('xAxis')\n  xAxisWatcher(_newVal, _oldVal) {\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    const newUnit = _newVal && _newVal.unit ? _newVal.unit : false;\n    const oldUnit = _oldVal && _oldVal.unit ? _oldVal.unit : false;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateXGrid = true;\n    }\n    if (newUnit !== oldUnit) {\n      this.shouldUpdateScales = true;\n      this.shouldUpdateInterpolationData = true;\n      this.shouldUpdateLines = true;\n      this.shouldUpdatePoints = true;\n      this.shouldUpdateXGrid = true;\n      this.shouldUpdateSeriesLabels = true;\n      this.shouldUpdateLabels = true;\n      this.shouldUpdateReferenceLines = true;\n      this.shouldUpdateAnnotations = true;\n    }\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n  }\n\n  @Watch('yAxis')\n  yAxisWatcher(_newVal, _oldVal) {\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateYGrid = true;\n    }\n  }\n\n  @Watch('wrapLabel')\n  wrapLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n  }\n\n  @Watch('showBaselineX')\n  showBaselineXWatcher(_newVal, _oldVal) {\n    this.shouldUpdateBaseline = true;\n  }\n\n  @Watch('colorPalette')\n  paletteWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldUpdateColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n  }\n\n  @Watch('colors')\n  colorsWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldUpdateColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n  }\n\n  @Watch('clickStyle')\n  clickStyleWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n  }\n\n  @Watch('hoverStyle')\n  hoverStyleWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n  }\n\n  @Watch('referenceLines')\n  @Watch('referenceStyle')\n  referenceWatcher(_newVal, _oldVal) {\n    this.shouldUpdateReferenceLines = true;\n  }\n\n  @Watch('cursor')\n  cursorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCursor = true;\n    this.shouldSetLegendCursor = true;\n  }\n\n  @Watch('strokeWidth')\n  strokeWidthWatcher(_newVal, _oldVal) {\n    this.shouldUpdateStrokeWidth = true;\n  }\n\n  @Watch('showDots')\n  showDotsWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('dotRadius')\n  dotRadiusWatcher(_newVal, _oldVal) {\n    this.shouldUpdateDotRadius = true;\n  }\n\n  @Watch('lineCurve')\n  lineCurveWatcher(_newLineCurve, _oldLineCurve) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    console.warn(\n      'Change detected in prop lineCurve from value ' +\n        _newLineCurve +\n        ' to value ' +\n        _oldLineCurve +\n        '. Transition effects for this prop have not been implemented.'\n    );\n  }\n\n  @Watch('hoverOpacity')\n  hoverOpacityWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n  }\n\n  @Watch('dataLabel')\n  dataLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTableData = true;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    const newAccessor = _newVal && _newVal.labelAccessor ? _newVal.labelAccessor : false;\n    const oldAccessor = _oldVal && _oldVal.labelAccessor ? _oldVal.labelAccessor : false;\n    const newDisplayOnlyVal = _newVal && _newVal.displayOnly;\n    const oldDisplayOnlyVal = _oldVal && _oldVal.displayOnly;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetLabelOpacity = true;\n    }\n    if (newDisplayOnlyVal !== oldDisplayOnlyVal) {\n      this.shouldUpdateLabelData = true;\n      this.shouldSetLabelOpacity = true;\n    }\n    if (newAccessor !== oldAccessor) {\n      this.shouldValidateDataLabelAccessor = true;\n    }\n  }\n\n  @Watch('seriesLabel')\n  seriesLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateTableData = true;\n    this.shouldValidateSeriesLabels = true;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetSeriesLabelOpacity = true;\n    }\n  }\n\n  @Watch('tooltipLabel')\n  tooltipLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('showTooltip')\n  showTooltipWatcher(_newVal, _oldVal) {\n    // this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('accessibility')\n  accessibilityWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    const newTitle = _newVal && _newVal.title ? _newVal.title : false;\n    const oldTitle = _oldVal && _oldVal.title ? _oldVal.title : false;\n    if (newTitle !== oldTitle) {\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newExecutiveSummary = _newVal && _newVal.executiveSummary ? _newVal.executiveSummary : false;\n    const oldExecutiveSummary = _oldVal && _oldVal.executiveSummary ? _oldVal.executiveSummary : false;\n    if (newExecutiveSummary !== oldExecutiveSummary) {\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n    }\n    const newPurpose = _newVal && _newVal.purpose ? _newVal.purpose : false;\n    const oldPurpose = _oldVal && _oldVal.purpose ? _oldVal.purpose : false;\n    if (newPurpose !== oldPurpose) {\n      this.shouldSetChartAccessibilityPurpose = true;\n    }\n    const newLongDescription = _newVal && _newVal.longDescription ? _newVal.longDescription : false;\n    const oldLongDescription = _oldVal && _oldVal.longDescription ? _oldVal.longDescription : false;\n    if (newLongDescription !== oldLongDescription) {\n      this.shouldSetChartAccessibilityLongDescription = true;\n    }\n    const newContext = _newVal && _newVal.contextExplanation ? _newVal.contextExplanation : false;\n    const oldContext = _oldVal && _oldVal.contextExplanation ? _oldVal.contextExplanation : false;\n    if (newContext !== oldContext) {\n      this.shouldSetChartAccessibilityContext = true;\n    }\n    const newStatisticalNotes = _newVal && _newVal.statisticalNotes ? _newVal.statisticalNotes : false;\n    const oldStatisticalNotes = _oldVal && _oldVal.statisticalNotes ? _oldVal.statisticalNotes : false;\n    if (newStatisticalNotes !== oldStatisticalNotes) {\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n    }\n    const newStructureNotes = _newVal && _newVal.structureNotes ? _newVal.structureNotes : false;\n    const oldStructureNotes = _oldVal && _oldVal.structureNotes ? _oldVal.structureNotes : false;\n    if (newStructureNotes !== oldStructureNotes) {\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    const newincludeDataKeyNames = _newVal && _newVal.includeDataKeyNames;\n    const oldincludeDataKeyNames = _oldVal && _oldVal.includeDataKeyNames;\n    const newElementDescriptionAccessor =\n      _newVal && _newVal.elementDescriptionAccessor ? _newVal.elementDescriptionAccessor : false;\n    const oldElementDescriptionAccessor =\n      _oldVal && _oldVal.elementDescriptionAccessor ? _oldVal.elementDescriptionAccessor : false;\n    if (\n      newincludeDataKeyNames !== oldincludeDataKeyNames ||\n      newElementDescriptionAccessor !== oldElementDescriptionAccessor\n    ) {\n      if (newincludeDataKeyNames !== oldincludeDataKeyNames) {\n        // this one is tricky because it needs to run after the lifecycle\n        // AND it could run in the off-chance this prop is changed\n        this.shouldSetGroupAccessibilityLabel = true;\n      }\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newSmallValue = _newVal && _newVal.showSmallLabels ? _newVal.showSmallLabels : false;\n    const oldSmallValue = _oldVal && _oldVal.showSmallLabels ? _oldVal.showSmallLabels : false;\n    if (newSmallValue !== oldSmallValue) {\n      this.shouldSetLabelOpacity = true;\n    }\n    const newStrokes = _newVal && _newVal.hideStrokes ? _newVal.hideStrokes : false;\n    const oldStrokes = _oldVal && _oldVal.hideStrokes ? _oldVal.hideStrokes : false;\n    if (newStrokes !== oldStrokes) {\n      this.shouldUpdateStrokeWidth = true;\n      this.shouldSetColors = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newTextures = _newVal && _newVal.hideTextures ? _newVal.hideTextures : false;\n    const oldTextures = _oldVal && _oldVal.hideTextures ? _oldVal.hideTextures : false;\n    if (newTextures !== oldTextures) {\n      this.shouldUpdateDashPatterns = true;\n      this.shouldUpdateLegend = true;\n    }\n    const newKeyNav =\n      _newVal && _newVal.keyboardNavConfig && _newVal.keyboardNavConfig.disabled\n        ? _newVal.keyboardNavConfig.disabled\n        : false;\n    const oldKeyNav =\n      _oldVal && _oldVal.keyboardNavConfig && _oldVal.keyboardNavConfig.disabled\n        ? _oldVal.keyboardNavConfig.disabled\n        : false;\n    const newInterface = _newVal && _newVal.elementsAreInterface ? _newVal.elementsAreInterface : false;\n    const oldInterface = _oldVal && _oldVal.elementsAreInterface ? _oldVal.elementsAreInterface : false;\n    if (newKeyNav !== oldKeyNav || newInterface !== oldInterface) {\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetChartAccessibilitySubtitle = true;\n      this.shouldSetChartAccessibilityLongDescription = true;\n      this.shouldSetChartAccessibilityContext = true;\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n      this.shouldSetChartAccessibilityPurpose = true;\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    if (newInterface !== oldInterface) {\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('localization')\n  localizationWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n\n    // language\n    const newLanguage = _newVal && _newVal.language ? _newVal.language : false;\n    const oldLanguage = _oldVal && _oldVal.language ? _oldVal.language : false;\n    if (newLanguage !== oldLanguage) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n\n    // numeralLocale\n    const newNumeralLocale = _newVal && _newVal.numeralLocale ? _newVal.numeralLocale : false;\n    const oldNumeralLocale = _oldVal && _oldVal.numeralLocale ? _oldVal.numeralLocale : false;\n    if (newNumeralLocale !== oldNumeralLocale) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n  }\n\n  @Watch('legend')\n  legendWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLegend = true;\n    const newInteractiveVal = _newVal && _newVal.interactive;\n    const oldInteractiveVal = _oldVal && _oldVal.interactive;\n    if (newInteractiveVal !== oldInteractiveVal) {\n      this.shouldSetLegendCursor = true;\n      this.shouldUpdateLegendInteractivity = true;\n    }\n  }\n\n  @Watch('annotations')\n  annotationsWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetAnnotationAccessibility = true;\n  }\n\n  @Watch('maxValueOverride')\n  @Watch('minValueOverride')\n  valueOverrideWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('secondaryLines')\n  secondaryLinesWatcher(_newVal, _oldVal) {\n    const newDataLabelVal = _newVal && _newVal.showDataLabel;\n    const oldDataLabelVal = _oldVal && _oldVal.showDataLabel;\n    const newSeriesLabelVal = _newVal && _newVal.showSeriesLabel;\n    const oldSeriesLabelVal = _oldVal && _oldVal.showSeriesLabel;\n    const newKeysVal = _newVal && _newVal.keys ? _newVal.keys : false;\n    const oldKeysVal = _oldVal && _oldVal.keys ? _oldVal.keys : false;\n    const newOpacityVal = _newVal && _newVal.opacity ? _newVal.opacity : 0;\n    const oldOpacityVal = _oldVal && _oldVal.opacity ? _oldVal.opacity : 0;\n    if (newKeysVal !== oldKeysVal) {\n      this.shouldUpdateLines = true;\n      this.shouldUpdateStrokeWidth = true;\n      this.shouldSetLabelOpacity = true;\n      this.shouldSetSeriesLabelOpacity = true;\n    }\n    if (newDataLabelVal !== oldDataLabelVal) {\n      this.shouldSetLabelOpacity = true;\n    }\n    if (newSeriesLabelVal !== oldSeriesLabelVal) {\n      this.shouldUpdateLabels = true;\n    }\n    if (newOpacityVal !== oldOpacityVal) {\n      this.shouldDrawInteractionState = true;\n      this.shouldSetSeriesLabelOpacity = true;\n    }\n  }\n\n  @Watch('clickHighlight')\n  clickWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n  }\n\n  @Watch('hoverHighlight')\n  hoverWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n  }\n\n  @Watch('interactionKeys')\n  interactionWatcher(_newVal, _oldVal) {\n    this.shouldValidateInteractionKeys = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n  }\n\n  @Watch('dataKeyNames')\n  dataKeyNamesWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('suppressEvents')\n  suppressWatcher(_newVal, _oldVal) {\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldSetLegendCursor = true;\n    this.shouldUpdateLegendInteractivity = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldRedrawWrapper = true;\n    this.shouldValidate = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('unitTest')\n  unitTestWatcher(_newVal, _oldVal) {\n    this.shouldSetTestingAttributes = true;\n  }\n\n  componentWillLoad() {\n    const chartID = this.uniqueID || 'line-chart-' + uuid();\n    this.initialLoadEvent.emit({ chartID: chartID });\n    // contrary to componentWillUpdate, this method appears safe to use for\n    // any calculations we need. Keeping them here reduces future refactor,\n    // since componentWillUpdate should eventually mirror this method\n    return new Promise(resolve => {\n      this.duration = 0;\n      this.defaults = true;\n      this.chartID = chartID;\n      this.lineChartEl.id = this.chartID;\n      this.setLocalizationConfig();\n      this.setTagLevels();\n      this.setDimensions();\n      this.prepareScales();\n      this.prepareData();\n      this.prepareLabelData();\n      this.updateInterpolationData();\n      this.validateInteractionKeys();\n      this.validateDataLabelAccessor();\n      this.validateSeriesLabels();\n      this.setTableData();\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.setColors();\n      resolve('component will load');\n    });\n  }\n\n  componentWillUpdate() {\n    // NEVER put items in this method that rely on props (until stencil bug is resolved)\n    // All items that belong here are currently at the top of render\n    // see: https://github.com/ionic-team/stencil/issues/2061#issuecomment-578282178\n    return new Promise(resolve => {\n      resolve('component will update');\n    });\n  }\n\n  componentDidLoad() {\n    return new Promise(resolve => {\n      this.renderRootElements();\n      this.setTooltipInitialStyle();\n      this.setChartDescriptionWrapper();\n\n      this.setChartAccessibilityTitle();\n      this.setChartAccessibilitySubtitle();\n      this.setChartAccessibilityLongDescription();\n      this.setChartAccessibilityExecutiveSummary();\n      this.setChartAccessibilityPurpose();\n      this.setChartAccessibilityContext();\n      this.setChartAccessibilityStatisticalNotes();\n      this.setChartAccessibilityStructureNotes();\n      this.setParentSVGAccessibility();\n      this.reSetRoot();\n      this.drawXGrid();\n      this.drawYGrid();\n      this.setSubTitleElements();\n      this.setGlobalSelections();\n      this.setTestingAttributes();\n      this.enterLines();\n      this.updateLines();\n      this.exitLines();\n      this.enterPoints();\n      this.updatePoints();\n      this.exitPoints();\n      this.drawLines();\n      this.drawPoints();\n      this.enterSeriesLabels();\n      this.updateSeriesLabels();\n      this.exitSeriesLabels();\n      this.enterDataLabels();\n      this.updateDataLabels();\n      this.exitDataLabels();\n      // this.setSeriesLabelOpacity();\n      this.setChartCountAccessibility();\n      this.setGeometryAccessibilityAttributes();\n      this.setGeometryAriaLabels();\n      this.drawLegendElements();\n      this.drawDataLabels();\n      this.drawSeriesLabels();\n      this.addStrokeUnder();\n      this.drawReferenceLines();\n      this.setSelectedClass();\n      this.updateCursor();\n      this.bindInteractivity();\n      this.bindLegendInteractivity();\n      this.setLegendCursor();\n      this.drawXAxis();\n      this.setXAxisAccessibility();\n      this.drawYAxis();\n      this.setYAxisAccessibility();\n      this.drawBaseline();\n      this.drawAnnotations();\n      this.setAnnotationAccessibility();\n      hideNonessentialGroups(this.root.node(), this.dotG.node());\n      this.setGroupAccessibilityID();\n      this.onChangeHandler();\n      this.defaults = false;\n      resolve('component did load');\n    }).then(() => this.initialLoadEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  componentDidUpdate() {\n    return new Promise(resolve => {\n      this.duration = !this.animationConfig || !this.animationConfig.disabled ? 750 : 0;\n      if (this.shouldUpdateDescriptionWrapper) {\n        this.setChartDescriptionWrapper();\n        this.shouldUpdateDescriptionWrapper = false;\n      }\n      if (this.shouldSetChartAccessibilityCount) {\n        this.setChartCountAccessibility();\n        this.shouldSetChartAccessibilityCount = false;\n      }\n      if (this.shouldSetChartAccessibilityTitle) {\n        this.setChartAccessibilityTitle();\n        this.shouldSetChartAccessibilityTitle = false;\n      }\n      if (this.shouldSetChartAccessibilitySubtitle) {\n        this.setChartAccessibilitySubtitle();\n        this.shouldSetChartAccessibilitySubtitle = false;\n      }\n      if (this.shouldSetChartAccessibilityLongDescription) {\n        this.setChartAccessibilityLongDescription();\n        this.shouldSetChartAccessibilityLongDescription = false;\n      }\n      if (this.shouldSetChartAccessibilityExecutiveSummary) {\n        this.setChartAccessibilityExecutiveSummary();\n        this.shouldSetChartAccessibilityExecutiveSummary = false;\n      }\n      if (this.shouldSetChartAccessibilityPurpose) {\n        this.setChartAccessibilityPurpose();\n        this.shouldSetChartAccessibilityPurpose = false;\n      }\n      if (this.shouldSetChartAccessibilityContext) {\n        this.setChartAccessibilityContext();\n        this.shouldSetChartAccessibilityContext = false;\n      }\n      if (this.shouldSetChartAccessibilityStatisticalNotes) {\n        this.setChartAccessibilityStatisticalNotes();\n        this.shouldSetChartAccessibilityStatisticalNotes = false;\n      }\n      if (this.shouldSetChartAccessibilityStructureNotes) {\n        this.setChartAccessibilityStructureNotes();\n        this.shouldSetChartAccessibilityStructureNotes = false;\n      }\n      if (this.shouldSetParentSVGAccessibility) {\n        this.setParentSVGAccessibility();\n        this.shouldSetParentSVGAccessibility = false;\n      }\n      if (this.shouldResetRoot) {\n        this.reSetRoot();\n        this.shouldResetRoot = false;\n      }\n      if (this.shouldSetGlobalSelections) {\n        this.setGlobalSelections();\n        this.shouldSetGlobalSelections = false;\n      }\n      if (this.shouldSetTestingAttributes) {\n        this.setTestingAttributes();\n        this.shouldSetTestingAttributes = false;\n      }\n      if (this.shouldSetSubTitle) {\n        this.setSubTitleElements();\n        this.shouldSetSubTitle = false;\n      }\n      if (this.shouldUpdateXGrid) {\n        this.drawXGrid();\n        this.shouldUpdateXGrid = false;\n      }\n      if (this.shouldUpdateYGrid) {\n        this.drawYGrid();\n        this.shouldUpdateYGrid = false;\n      }\n      if (this.shouldEnterUpdateExit) {\n        this.enterLines();\n        this.updateLines();\n        this.exitLines();\n        this.enterPoints();\n        this.updatePoints();\n        this.exitPoints();\n        this.enterSeriesLabels();\n        this.updateSeriesLabels();\n        this.exitSeriesLabels();\n        this.enterDataLabels();\n        this.updateDataLabels();\n        this.exitDataLabels();\n        this.shouldEnterUpdateExit = false;\n      }\n      if (this.shouldUpdateLines) {\n        this.drawLines();\n        this.shouldUpdateLines = false;\n      }\n      if (this.shouldUpdatePoints) {\n        this.drawPoints();\n        this.shouldUpdatePoints = false;\n      }\n      if (this.shouldSetGeometryAccessibilityAttributes) {\n        this.setGeometryAccessibilityAttributes();\n        this.shouldSetGeometryAccessibilityAttributes = false;\n      }\n      if (this.shouldSetGeometryAriaLabels) {\n        this.setGeometryAriaLabels();\n        this.shouldSetGeometryAriaLabels = false;\n      }\n      if (this.shouldSetGroupAccessibilityLabel) {\n        this.setGroupAccessibilityID();\n        this.shouldSetGroupAccessibilityLabel = false;\n      }\n      if (this.shouldUpdateColors) {\n        this.updateColors();\n        this.shouldUpdateColors = false;\n      }\n      if (this.shouldUpdateLegend) {\n        this.drawLegendElements();\n        this.shouldUpdateLegend = false;\n      }\n      if (this.shouldUpdateLabels) {\n        this.drawDataLabels();\n        this.shouldUpdateLabels = false;\n      }\n      if (this.shouldUpdateSeriesLabels) {\n        this.drawSeriesLabels();\n        this.shouldUpdateSeriesLabels = false;\n      }\n      if (this.addStrokeUnder) {\n        this.addStrokeUnder();\n        this.shouldAddStrokeUnder = false;\n      }\n      if (this.shouldUpdateReferenceLines) {\n        this.drawReferenceLines();\n        this.shouldUpdateReferenceLines = false;\n      }\n      if (this.shouldUpdateStrokeWidth) {\n        this.updateStrokeWidth();\n        this.shouldUpdateStrokeWidth = false;\n      }\n      if (this.shouldUpdateDotRadius) {\n        this.updateDotRadius();\n        this.shouldUpdateDotRadius = false;\n      }\n      if (this.shouldDrawInteractionState) {\n        this.updateInteractionState();\n        this.shouldDrawInteractionState = false;\n      }\n      if (this.shouldUpdateDashPatterns) {\n        this.updateStrokePattern();\n        this.shouldUpdateDashPatterns = false;\n      }\n      if (this.shouldSetLabelOpacity) {\n        this.setLabelOpacity();\n        this.shouldSetLabelOpacity = false;\n      }\n      if (this.shouldSetSeriesLabelOpacity) {\n        this.setSeriesLabelOpacity();\n        this.shouldSetSeriesLabelOpacity = false;\n      }\n      if (this.shouldSetSelectionClass) {\n        this.setSelectedClass();\n        this.shouldSetSelectionClass = false;\n      }\n      if (this.shouldUpdateLegendInteractivity) {\n        this.bindLegendInteractivity();\n        this.shouldUpdateLegendInteractivity = false;\n      }\n      if (this.shouldSetLegendCursor) {\n        this.setLegendCursor();\n        this.shouldSetLegendCursor = false;\n      }\n      if (this.shouldUpdateCursor) {\n        this.updateCursor();\n        this.shouldUpdateCursor = false;\n      }\n      if (this.shouldBindInteractivity) {\n        this.bindInteractivity();\n        this.shouldBindInteractivity = false;\n      }\n      if (this.shouldUpdateXAxis) {\n        this.drawXAxis();\n        this.shouldUpdateXAxis = false;\n      }\n      if (this.shouldSetXAxisAccessibility) {\n        this.setXAxisAccessibility();\n        this.shouldSetXAxisAccessibility = false;\n      }\n      if (this.shouldUpdateYAxis) {\n        this.drawYAxis();\n        this.shouldUpdateYAxis = false;\n      }\n      if (this.shouldSetYAxisAccessibility) {\n        this.setYAxisAccessibility();\n        this.shouldSetYAxisAccessibility = false;\n      }\n      if (this.shouldUpdateAnnotations) {\n        this.drawAnnotations();\n        this.shouldUpdateAnnotations = false;\n      }\n      if (this.shouldSetAnnotationAccessibility) {\n        this.setAnnotationAccessibility();\n        this.shouldSetAnnotationAccessibility = false;\n      }\n      if (this.shouldUpdateBaseline) {\n        this.drawBaseline();\n        this.shouldUpdateBaseline = false;\n      }\n      this.onChangeHandler();\n      resolve('component did update');\n    }).then(() => this.drawEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  shouldValidateLocalizationProps() {\n    const windowInstances = getGlobalInstances();\n    const languageString = windowInstances.i18Next.language;\n    const languageObject = windowInstances.i18Next.getResourceBundle(languageString);\n    const numeralObject = windowInstances.numeral.localeData();\n    if (this.shouldValidateLocalization && !this.localization.skipValidation) {\n      this.shouldValidateLocalization = false;\n      validateLocalizationProps(this.chartID, {\n        ...this.localization,\n        language: languageObject,\n        numeralLocale: numeralObject\n      });\n    }\n  }\n\n  shouldValidateAccessibilityProps() {\n    if (this.shouldValidateAccessibility && !this.accessibility.disableValidation) {\n      this.shouldValidateAccessibility = false;\n      validateAccessibilityProps(\n        this.chartID,\n        { ...this.accessibility },\n        {\n          annotations: this.annotations,\n          data: this.data,\n          uniqueID: this.uniqueID,\n          context: {\n            mainTitle: this.mainTitle,\n            onClickEvent: this.suppressEvents ? undefined : this.clickEvent.emit\n          }\n        }\n      );\n    }\n  }\n\n  setDimensions() {\n    this.padding = typeof this.padding === 'string' ? getPadding(this.padding) : this.padding;\n    this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n    this.innerWidth = this.width - this.margin.left - this.margin.right;\n\n    this.innerPaddedHeight = this.innerHeight - this.padding.top - this.padding.bottom;\n    this.innerPaddedWidth = this.innerWidth - this.padding.left - this.padding.right;\n  }\n\n  validateInteractionKeys() {\n    this.innerInteractionKeys =\n      this.interactionKeys && this.interactionKeys.length ? this.interactionKeys : [this.seriesAccessor];\n\n    this.seriesInteraction =\n      this.innerInteractionKeys.length === 1 && this.innerInteractionKeys[0] === this.seriesAccessor;\n  }\n\n  validateDataLabelAccessor() {\n    this.innerLabelAccessor = this.dataLabel.labelAccessor ? this.dataLabel.labelAccessor : this.valueAccessor;\n  }\n\n  getLanguageString() {\n    return getActiveLanguageString(this.localization);\n  }\n\n  setLocalizationConfig() {\n    configLocalization(this.localization);\n  }\n\n  prepareScales() {\n    if (this.nest) {\n      this.interpolating = this.nest;\n      const oldXDomain = this.x.domain();\n      const oldXRange = this.x.range();\n      const oldYDomain = this.y.domain();\n      const oldYRange = this.y.range();\n      this.interpolating.x = this.x.domain(oldXDomain).range(oldXRange);\n      this.interpolating.y = scaleLinear()\n        .domain(oldYDomain)\n        .range(oldYRange);\n      this.interpolating.line = line()\n        .x(d => this.interpolating.x(d[this.ordinalAccessor]))\n        .y(d => this.interpolating.y(d[this.valueAccessor]))\n        .curve(this.curveOptions[this.lineCurve] || this.curveOptions['linear']);\n      this.interpolating.map = this.map;\n    }\n\n    const minValue = min(this.data, d => parseFloat(d[this.valueAccessor]));\n    const maxValue = max(this.data, d => parseFloat(d[this.valueAccessor]));\n\n    this.y = scaleLinear()\n      .domain([\n        this.minValueOverride || this.minValueOverride === 0\n          ? this.minValueOverride\n          : minValue - (maxValue - minValue) * 0.1,\n        this.maxValueOverride || this.maxValueOverride === 0\n          ? this.maxValueOverride\n          : maxValue + (maxValue - minValue) * 0.1\n      ])\n      .range([this.innerPaddedHeight, 0]);\n\n    // set xAxis scale : date\n    let xDomainUnique = [];\n    if (this.data[0][this.ordinalAccessor] instanceof Date) {\n      const maxDate = max(this.data, d => d[this.ordinalAccessor]);\n      const minDate = min(this.data, d => d[this.ordinalAccessor]);\n      const timeDiffInMilliseconds = timeMillisecond.count(minDate, maxDate);\n      const genericTimePadding = timeDiffInMilliseconds / 12;\n\n      this.x = scaleTime()\n        .domain([minDate, maxDate])\n        .range([0, this.innerPaddedWidth]);\n\n      // need a unique listing of all times provided for data-index attribute\n      xDomainUnique = this.data\n        .map(d => d[this.ordinalAccessor].getTime())\n        .filter((x, i, a) => a.indexOf(x) === i)\n        .sort((a, b) => a - b);\n\n      if (this.xAxis.unit) {\n        const timeTool = this.time['time' + this.xAxis.unit];\n        this.x.domain([timeTool.offset(minDate, -1), timeTool.offset(maxDate, +1)]);\n      } else {\n        this.x.domain([\n          new Date(timeMillisecond.offset(minDate, -genericTimePadding)),\n          new Date(timeMillisecond.offset(maxDate, genericTimePadding))\n        ]);\n      }\n    } else {\n      // set xAxis scale : ordinal value\n      this.x = scalePoint()\n        .domain(this.data.map(d => d[this.ordinalAccessor]))\n        .padding(0.5)\n        .range([0, this.innerPaddedWidth]);\n\n      // need a unique listing of all ordinal values for data-index attribute\n      xDomainUnique = this.data.map(d => d[this.ordinalAccessor]).filter((x, i, a) => a.indexOf(x) === i);\n    }\n\n    // this scale is used to derive the data-index based on scale result\n    this.xIndex = scalePoint()\n      .domain(xDomainUnique)\n      .range([0, xDomainUnique.length - 1]);\n\n    this.line = line()\n      .defined(d => !isNaN(d[this.valueAccessor]) && d[this.valueAccessor] !== null)\n      .x(d => this.x(d[this.ordinalAccessor]))\n      .y(d => this.y(d[this.valueAccessor]))\n      .curve(this.curveOptions[this.lineCurve] || this.curveOptions['linear']);\n  }\n\n  prepareData() {\n    const filteredData = this.data.filter(d => {\n      const hashObject = this.hiddenHash[`${d[this.ordinalAccessor]}-${d[this.seriesAccessor] || 'b'}`];\n      if (\n        hashObject &&\n        (this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly) &&\n        !d['enter'] &&\n        !d['exit']\n      ) {\n        d['hidden'] = hashObject['data-label-hidden'];\n        d['auto-x'] = hashObject.x;\n        d['auto-y'] = hashObject.y;\n        d['auto-text-anchor'] = hashObject['text-anchor'];\n      }\n      return !isNaN(d[this.valueAccessor]) && d[this.valueAccessor] !== null;\n    });\n\n    this.nest = nest()\n      .key(d => d[this.seriesAccessor])\n      .entries(this.data);\n\n    this.dotNest = nest()\n      .key(d => d[this.seriesAccessor])\n      .entries(filteredData);\n\n    this.map = nest()\n      .key(d => d[this.seriesAccessor])\n      .map(filteredData);\n  }\n\n  prepareLabelData() {\n    if (this.nest) {\n      let minArray = [];\n      let maxArray = [];\n      let firstArray = [];\n      let lastArray = [];\n\n      this.nest.forEach(item => {\n        const values = item.values;\n        // min\n        const minIdx = minIndex(values, d => d[this.valueAccessor]);\n        const minItem = values[minIdx];\n        // max\n        const maxIdx = maxIndex(values, d => d[this.valueAccessor]);\n        const maxItem = values[maxIdx];\n        // first\n        const firstItem = values.find(val => val[this.valueAccessor] != null);\n        // last\n        const lastItem = [...values].reverse().find(val => val[this.valueAccessor] != null);\n\n        // array creation with tracked items\n        minArray.push(minItem);\n        maxArray.push(maxItem);\n        firstArray.push(firstItem);\n        lastArray.push(lastItem);\n      });\n\n      this.displayOnlyLabelData = {\n        first: firstArray,\n        last: lastArray,\n        min: minArray,\n        max: maxArray\n      };\n    }\n  }\n\n  updateInterpolationData() {\n    if (this.interpolating) {\n      // for interpolating, we have to do this twice now, for dotNest and Nest\n      this.dotNest.forEach(parent => {\n        parent.interpolate = {};\n\n        const left = this.interpolating.map.get(parent.key);\n        const right = parent.values;\n\n        if (!left) {\n          parent.interpolate.start = right;\n          parent.interpolate.end = right;\n        } else {\n          const resolved = resolveLines(left, right, this.ordinalAccessor);\n          if (!resolved.length) {\n            parent.interpolate.start = left;\n            parent.interpolate.end = right;\n          } else {\n            parent.interpolate.start = resolved[0];\n            parent.interpolate.end = resolved[1];\n          }\n        }\n      });\n\n      // original nest interpolation before the creation of dotNest\n      let change = this.nest.length;\n      this.nest.forEach(parent => {\n        parent.interpolate = {};\n\n        const left = this.interpolating.map.get(parent.key);\n        const right = parent.values;\n\n        if (!left) {\n          parent.interpolate.start = right;\n          parent.interpolate.end = right;\n        } else {\n          const resolved = resolveLines(left, right, this.ordinalAccessor);\n          if (!resolved.length) {\n            parent.interpolate.start = left;\n            parent.interpolate.end = right;\n            change--;\n          } else {\n            parent.interpolate.start = resolved[0];\n            parent.interpolate.end = resolved[1];\n          }\n        }\n      });\n      if (!change && this.nest.length === this.interpolating.length) {\n        this.interpolating = false;\n      }\n    }\n  }\n\n  setSubTitleElements() {\n    setSubTitle({\n      root: this.subTitleG,\n      subTitle: this.subTitle\n    });\n  }\n\n  setColors() {\n    this.rawColors = this.colors ? convertVisaColor(this.colors) : getColors(this.colorPalette, this.nest.length);\n    this.textColors = {};\n    let adjustedColors = this.rawColors;\n    this.strokes = {};\n    if (!this.accessibility.hideStrokes) {\n      adjustedColors = [];\n    }\n    this.rawColors.forEach(color => {\n      if (!this.accessibility.hideStrokes) {\n        const strokes = getAccessibleStrokes(color);\n        const adjusted = strokes.length === 2 ? strokes[1] : strokes[0];\n        this.strokes[color.toLowerCase()] = adjusted;\n        adjustedColors.push(adjusted);\n      }\n      this.textColors[color.toLowerCase()] = ensureTextContrast(color, '#ffffff', 4.5);\n    });\n    if (this.hoverStyle && this.hoverStyle.color) {\n      if (!this.accessibility.hideStrokes) {\n        const strokes = getAccessibleStrokes(this.hoverStyle.color);\n        const adjusted = strokes.length === 2 ? strokes[1] : strokes[0];\n        this.strokes[this.hoverStyle.color.toLowerCase()] = adjusted;\n      }\n      this.textColors[this.hoverStyle.color.toLowerCase()] = ensureTextContrast(this.hoverStyle.color, '#ffffff', 4.5);\n    }\n    if (this.clickStyle && this.clickStyle.color) {\n      if (!this.accessibility.hideStrokes) {\n        const strokes = getAccessibleStrokes(this.clickStyle.color);\n        const adjusted = strokes.length === 2 ? strokes[1] : strokes[0];\n        this.strokes[this.clickStyle.color.toLowerCase()] = adjusted;\n      }\n      this.textColors[this.clickStyle.color.toLowerCase()] = ensureTextContrast(this.clickStyle.color, '#ffffff', 4.5);\n    }\n    this.colorArr = adjustedColors;\n  }\n\n  innerScopeDataKeys() {\n    // generate scoped and formatted data for data-table component\n    // we also scope singleAccessor array in chartAccessors based on what is actually in the data\n    const innerChartSingleAccessors = [];\n    chartAccessors.singleAccessors.forEach(accessor => {\n      if (this[accessor] && min(this.data, d => d[this[accessor]]) !== undefined) {\n        innerChartSingleAccessors.push(accessor);\n      }\n    });\n    const innerChartAccessors = { ...chartAccessors, singleAccessors: innerChartSingleAccessors };\n    return scopeDataKeys(this, innerChartAccessors, 'line-chart');\n  }\n\n  setTableData() {\n    const keys = this.innerScopeDataKeys();\n\n    this.tableData = getScopedData(this.data, keys);\n    this.tableColumns = Object.keys(keys);\n  }\n\n  addStrokeUnder() {\n    const filter = createTextStrokeFilter({\n      root: this.svg.node(),\n      id: this.chartID,\n      color: '#ffffff'\n    });\n    this.labels.attr('filter', filter);\n    this.seriesLabelG.attr('filter', filter);\n  }\n\n  // reset graph size based on window size\n  renderRootElements() {\n    this.svg = select(this.lineChartEl)\n      .select('.visa-viz-d3-line-container')\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    this.root = this.svg.append('g').attr('id', 'visa-viz-margin-container-g-' + this.chartID);\n    this.rootG = this.root.append('g').attr('id', 'visa-viz-padding-container-g-' + this.chartID);\n\n    this.gridG = this.rootG.append('g').attr('class', 'grid-group');\n\n    // this.lineG = this.rootG.select('.line-wrapper-group');\n    this.lineG = this.rootG.append('g').attr('class', 'line-group line-wrapper-group');\n    this.seriesLabelG = this.rootG.append('g').attr('class', 'line-series-wrapper');\n    this.dotG = this.rootG.append('g').attr('class', 'dot-group');\n\n    this.labels = this.rootG.append('g').attr('class', 'line-dataLabel-group');\n    this.legendG = select(this.lineChartEl)\n      .select('.line-legend')\n      .append('svg');\n\n    this.subTitleG = select(this.lineChartEl).select('.line-sub-title');\n    this.tooltipG = select(this.lineChartEl).select('.line-tooltip');\n    this.referencesG = this.rootG.append('g').attr('class', 'line-reference-line-group');\n  }\n\n  reSetRoot() {\n    const changeSvg = prepareRenderChange({\n      selection: this.svg,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeSvg\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    const changeRoot = prepareRenderChange({\n      selection: this.root,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRoot.attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n\n    const changeRootG = prepareRenderChange({\n      selection: this.rootG,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRootG.attr('transform', `translate(${this.padding.left}, ${this.padding.top})`);\n\n    setAccessibilityDescriptionWidth(this.chartID, this.width);\n  }\n\n  setGlobalSelections() {\n    const dataBoundToLines = this.lineG.selectAll('.line-plot').data(this.nest, d => d.key);\n    this.enter = dataBoundToLines.enter().append('path');\n    this.exit = dataBoundToLines.exit();\n    this.update = dataBoundToLines.merge(this.enter);\n    this.enterSize = this.enter.size();\n\n    const dataBoundToDotWrappers = this.dotG.selectAll('.line-dot-wrapper').data(this.dotNest, d => d.key);\n    this.enterDotWrappers = dataBoundToDotWrappers.enter().append('g');\n    this.exitDotWrappers = dataBoundToDotWrappers.exit();\n    this.updateDotWrappers = dataBoundToDotWrappers.merge(this.enterDotWrappers);\n\n    const dataBountToSeriesLabels = this.seriesLabelG.selectAll('.line-series-label').data(this.dotNest, d => d.key);\n    this.seriesLabelEnter = dataBountToSeriesLabels.enter().append('text');\n    this.seriesLabelExit = dataBountToSeriesLabels.exit();\n    this.seriesLabelUpdate = dataBountToSeriesLabels.merge(this.seriesLabelEnter);\n\n    const dataBoundToLabels = this.labels.selectAll('g').data(this.dotNest, d => d.key);\n    this.enteringLabelGroups = dataBoundToLabels.enter().append('g');\n    this.exitingLabelGroups = dataBoundToLabels.exit();\n    this.updatingLabelGroups = dataBoundToLabels.merge(this.enteringLabelGroups);\n\n    if (this.interpolating) {\n      this.updateDotWrappers.selectAll('circle').remove();\n      const dataBoundToDots = this.updateDotWrappers.selectAll('circle').data(d => d.interpolate.start);\n      this.enterDots = dataBoundToDots.enter().append('circle');\n      this.exitDots = dataBoundToDots.exit();\n      this.updateDots = dataBoundToDots.merge(this.enterDots);\n      // this.updateDots = this.updateDotWrappers.selectAll('circle').data(d => d.interpolate.end);\n\n      this.updatingLabelGroups.selectAll('.line-dataLabel').remove();\n      const dataBoundToLabelChildren = this.updatingLabelGroups\n        .selectAll('.line-dataLabel')\n        .data(d => d.interpolate.start);\n\n      this.enteringLabels = dataBoundToLabelChildren.enter().append('text');\n      this.exitingLabels = dataBoundToLabelChildren.exit();\n      this.updatingLabels = dataBoundToLabelChildren.merge(this.enteringLabels);\n      // this.updatingLabels = this.updatingLabelGroups.selectAll('.line-dataLabel').data(d => d.interpolate.end);\n    } else {\n      const dataBoundToDots = this.updateDotWrappers\n        .selectAll('circle')\n        .data(d => d.values, d => d[this.ordinalAccessor]);\n\n      this.enterDots = dataBoundToDots.enter().append('circle');\n      this.exitDots = dataBoundToDots.exit();\n      this.updateDots = dataBoundToDots.merge(this.enterDots);\n\n      this.enterSize = this.enterDots.size();\n      this.exitSize = this.exitDots.size();\n\n      const dataBoundToLabelChildren = this.updatingLabelGroups\n        .selectAll('.line-dataLabel')\n        .data(d => d.values, d => d[this.ordinalAccessor]);\n\n      this.enteringLabels = dataBoundToLabelChildren.enter().append('text');\n      this.exitingLabels = dataBoundToLabelChildren.exit();\n      this.updatingLabels = dataBoundToLabelChildren.merge(this.enteringLabels);\n    }\n  }\n\n  setTestingAttributes() {\n    if (this.unitTest) {\n      select(this.lineChartEl)\n        .select('.visa-viz-d3-line-container')\n        .attr('data-testid', 'chart-container');\n      select(this.lineChartEl)\n        .select('.line-main-title')\n        .attr('data-testid', 'main-title');\n      select(this.lineChartEl)\n        .select('.line-sub-title')\n        .attr('data-testid', 'sub-title');\n      this.svg.attr('data-testid', 'root-svg');\n      this.root.attr('data-testid', 'margin-container');\n      this.rootG.attr('data-testid', 'padding-container');\n      this.legendG.attr('data-testid', 'legend-container');\n      this.tooltipG.attr('data-testid', 'tooltip-container');\n      this.gridG.attr('data-testid', 'grid-group');\n\n      this.referencesG.attr('data-testid', 'reference-line-group');\n\n      // add test attributes to lines and series labels\n      this.lineG.attr('data-testid', 'line-group');\n      this.update.attr('data-testid', 'line').attr('data-id', d => `line-${d.key}`);\n      this.seriesLabelG.attr('data-testid', 'line-series-label-container');\n      this.seriesLabelUpdate\n        .attr('data-testid', 'line-series-label')\n        .attr('data-id', d => `line-series-label-${d.key}`);\n\n      // add test atttributes to line colors\n      this.dotG.attr('data-testid', 'marker-group');\n      this.updateDotWrappers.attr('data-testid', 'marker-series-group').attr('data-id', d => `marker-series-${d.key}`);\n      this.updateDots\n        .attr('data-testid', 'marker')\n        .attr('data-id', d => `marker-${d[this.seriesAccessor]}-${d[this.ordinalAccessor]}`);\n\n      // add test attributes to labels\n      this.labels.attr('data-testid', 'dataLabel-group-container');\n      this.updatingLabelGroups.attr('data-testid', 'dataLabel-group').attr('data-id', d => `dataLabel-group-${d.key}`);\n      this.updatingLabels\n        .attr('data-testid', 'dataLabel')\n        .attr('data-id', d => `dataLabel-${d[this.seriesAccessor]}-${d[this.ordinalAccessor]}`);\n\n      this.svg.select('defs').attr('data-testid', 'pattern-defs');\n    } else {\n      select(this.lineChartEl)\n        .select('.visa-viz-d3-line-container')\n        .attr('data-testid', null);\n      select(this.lineChartEl)\n        .select('.line-main-title')\n        .attr('data-testid', null);\n      select(this.lineChartEl)\n        .select('.line-sub-title')\n        .attr('data-testid', null);\n      this.svg.attr('data-testid', null);\n      this.root.attr('data-testid', null);\n      this.rootG.attr('data-testid', null);\n      this.legendG.attr('data-testid', null);\n      this.tooltipG.attr('data-testid', null);\n      this.gridG.attr('data-testid', null);\n\n      this.referencesG.attr('data-testid', null);\n\n      // add test attributes to lines and series labels\n      this.lineG.attr('data-testid', null);\n      this.update.attr('data-testid', null).attr('data-id', null);\n      this.seriesLabelG.attr('data-testid', null);\n      this.seriesLabelUpdate.attr('data-testid', null).attr('data-id', null);\n\n      // add test atttributes to line colors\n      this.dotG.attr('data-testid', null);\n      this.updateDotWrappers.attr('data-testid', null).attr('data-id', null);\n      this.updateDots.attr('data-testid', null).attr('data-id', null);\n\n      // add test attributes to labels\n      this.labels.attr('data-testid', null);\n      this.updatingLabelGroups.attr('data-testid', null).attr('data-id', null);\n      this.updatingLabels.attr('data-testid', null).attr('data-id', null);\n\n      this.svg.select('defs').attr('data-testid', null);\n    }\n  }\n\n  drawXAxis() {\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.ordinalAccessor]\n        ? this.dataKeyNames[this.ordinalAccessor]\n        : this.xAxis.label;\n\n    const bandWidth = (this.innerPaddedWidth / this.nest[0].values.length) * 0.7;\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.x,\n      left: false,\n      wrapLabel: this.wrapLabel ? bandWidth : '',\n      dateFormat: this.xAxis.format,\n      format: this.xAxis.format,\n      tickInterval: this.xAxis.tickInterval,\n      label: axisLabel, // this.xAxis.label,\n      padding: this.padding,\n      hide: !this.xAxis.visible,\n      duration: this.duration\n    });\n  }\n\n  drawYAxis() {\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.valueAccessor]\n        ? this.dataKeyNames[this.valueAccessor]\n        : this.yAxis.label;\n\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.y,\n      left: true,\n      wrapLabel: this.wrapLabel ? this.padding.left : '',\n      format: this.yAxis.format,\n      tickInterval: this.yAxis.tickInterval,\n      label: axisLabel, // this.yAxis.label,\n      padding: this.padding,\n      hide: !this.yAxis.visible,\n      duration: this.duration\n    });\n  }\n\n  setXAxisAccessibility() {\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.ordinalAccessor]\n        ? this.dataKeyNames[this.ordinalAccessor]\n        : this.xAxis.label;\n\n    setAccessXAxis({\n      rootEle: this.lineChartEl,\n      hasXAxis: this.xAxis ? this.xAxis.visible : false,\n      xAxis: this.x,\n      xAxisLabel: axisLabel ? axisLabel : ''\n    });\n  }\n\n  setYAxisAccessibility() {\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.valueAccessor]\n        ? this.dataKeyNames[this.valueAccessor]\n        : this.yAxis.label;\n\n    setAccessYAxis({\n      rootEle: this.lineChartEl,\n      hasYAxis: this.yAxis ? this.yAxis.visible : false,\n      yAxis: this.y,\n      yAxisLabel: axisLabel ? axisLabel : ''\n    });\n  }\n\n  drawBaseline() {\n    drawAxis({\n      root: this.gridG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.x,\n      left: false,\n      padding: this.padding,\n      markOffset: this.y(0) || -1,\n      hide: !this.showBaselineX,\n      duration: this.duration\n    });\n  }\n\n  // dashed line grid for chart\n  drawXGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.x,\n      false,\n      !this.xAxis.gridVisible,\n      this.xAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  drawYGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.y,\n      true,\n      !this.yAxis.gridVisible,\n      this.yAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  enterLines() {\n    this.enter.interrupt();\n\n    this.enter\n      .attr('class', 'line-plot entering')\n      .attr('d', d => this.line(d.values))\n      .attr('data-d', d => this.line(d.values))\n      .attr('data-translate-x', this.margin.left + this.padding.left);\n\n    this.enter\n      .attr('cursor', !this.suppressEvents && this.seriesInteraction ? this.cursor : null)\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onHoverHandler(d.values[0], n[i], false);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents && this.seriesInteraction ? () => this.onMouseOutHandler() : null)\n      .attr('stroke-dasharray', (d, i, n) => {\n        d.linelength = n[i].getTotalLength();\n        return d.linelength + ' ' + d.linelength;\n      })\n      .attr('stroke-dashoffset', d => d.linelength)\n      .attr('stroke-width', 0.1)\n      .transition('enter')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('stroke-dashoffset', 0)\n      .attr('stroke-width', d => this.calculateStrokeWidth(d, true))\n      .call(transitionEndAll, () => {\n        this.enter.attr('stroke-dasharray', this.handleStrokeDasharray);\n      });\n  }\n\n  updateLines() {\n    this.update.interrupt();\n\n    this.update\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', d => {\n        // check if interactionKeys includes seriesAccessor, if not then hide lines\n        const lineOpacity = this.secondaryLines.keys.includes(d.key) ? this.secondaryLines.opacity : 1;\n        if (!this.seriesInteraction) {\n          return lineOpacity;\n        } else if (this.secondaryLines.keys.includes(d.key)) {\n          return checkInteraction(\n            d.values[0],\n            this.secondaryLines.opacity,\n            Math.min(this.secondaryLines.opacity, this.hoverOpacity),\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        } else {\n          return checkInteraction(\n            d.values[0], // use first data point of each line to decide interaction highlight\n            lineOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        }\n      });\n  }\n\n  exitLines() {\n    this.exit\n      .attr('stroke-dasharray', (d, i, n) => {\n        d.linelength = n[i].getTotalLength();\n        return d.linelength + ' ' + d.linelength;\n      })\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', 0)\n      .attr('stroke-dashoffset', d => d.linelength)\n      .attr('stroke-width', 0.1)\n      .remove();\n  }\n  // lines based on data\n  drawLines() {\n    if (this.interpolating) {\n      this.update.attr('d', (d, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          return this.line(d.values);\n        }\n        return this.interpolating.line(d.interpolate.start);\n      });\n    }\n\n    this.update\n      .attr('stroke', this.handleLineStroke)\n      .attr('fill', 'none')\n      .attr('data-d', d => (this.interpolating ? this.line(d.interpolate.end) : this.line(d.values)))\n      .attr('data-translate-x', this.margin.left + this.padding.left)\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('d', d => (this.interpolating ? this.line(d.interpolate.end) : this.line(d.values)))\n      .call(transitionEndAll, () => {\n        this.update\n          .classed('entering', false)\n          .attr('d', d => this.line(d.values))\n          .attr('stroke-dasharray', this.handleStrokeDasharray);\n      });\n  }\n\n  enterPoints() {\n    this.enterDotWrappers.interrupt();\n    this.enterDots.interrupt();\n\n    this.enterDotWrappers\n      .attr('class', 'line-dot-wrapper')\n      .attr('fill', (_, i) => this.rawColors[i] || this.rawColors[0])\n      // bind interactivity for keyboard nav if series interactivity is enabled\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onHoverHandler(d.values[0], n[i], false);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents && this.seriesInteraction ? () => this.onMouseOutHandler() : null)\n      .each((_, i, n) => {\n        // we bind accessible interactivity and semantics here (role, tabindex, etc)\n        initializeElementAccess(n[i]);\n      });\n\n    this.enterDots\n      .each((_d, i, n) => {\n        initializeElementAccess(n[i]);\n      })\n      .attr('stroke', this.handleDotStroke)\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .attr('data-fill', true)\n      .attr('data-translate-x', this.margin.left + this.padding.left)\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i], true) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    if (this.interpolating) {\n      this.enterDots\n        .attr('cx', d => this.interpolating.x(d[this.ordinalAccessor]))\n        .attr('cy', d => this.interpolating.y(d[this.valueAccessor]))\n        .attr('r', d =>\n          d.enter\n            ? 0\n            : checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        );\n\n      this.enterDotWrappers\n        .selectAll('circle')\n        .attr('r', 0)\n        .attr('cx', d => this.x(d[this.ordinalAccessor]))\n        .attr('cy', d => this.y(d[this.valueAccessor]))\n        .classed('entering', true)\n        .attr('opacity', 0);\n    }\n    this.updateDotWrappers.order();\n    this.updateDots.order();\n  }\n\n  updatePoints() {\n    this.updateDotWrappers.interrupt();\n    this.updateDots.interrupt();\n\n    const dotOpacity = this.showDots ? 1 : 0;\n\n    this.updateDotWrappers.attr('opacity', d => {\n      const lineDotOpacity = this.secondaryLines.keys.includes(d.key) ? this.secondaryLines.opacity : 1;\n      return lineDotOpacity;\n    });\n\n    if (this.interpolating) {\n      this.updateDots.attr('opacity', d => {\n        this.exitSize += d.exit ? 1 : 0;\n        this.enterSize += d.enter ? 1 : 0;\n        return d.enter ? 0 : 1;\n      });\n\n      this.updateDots = this.updateDotWrappers\n        .selectAll('circle')\n        .data(d => d.interpolate.end)\n        .classed('exiting', d => d.exit);\n\n      this.updateDots\n        .transition('opacity')\n        .ease(easeCircleIn)\n        .duration((_, i, n) => {\n          if (select(n[i]).classed('entering')) {\n            return this.duration / 2;\n          }\n          return this.duration;\n        })\n        .delay((_, i, n) => {\n          if (select(n[i]).classed('entering')) {\n            return this.duration * 0.75 * (i / (n.length - 1));\n          }\n          return 0;\n        })\n        .attr('opacity', d => {\n          return checkInteraction(\n            d,\n            dotOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        })\n        .attr('data-index', d => {\n          return this.xIndex(\n            d[this.ordinalAccessor] instanceof Date ? d[this.ordinalAccessor].getTime() : d[this.ordinalAccessor]\n          );\n        });\n    } else {\n      this.updateDots\n        .transition('opacity')\n        .ease(easeCircleIn)\n        .duration(this.duration)\n        .attr('opacity', d => {\n          return checkInteraction(\n            d,\n            dotOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        })\n        .attr('data-index', d => {\n          return this.xIndex(\n            d[this.ordinalAccessor] instanceof Date ? d[this.ordinalAccessor].getTime() : d[this.ordinalAccessor]\n          );\n        });\n    }\n  }\n\n  exitPoints() {\n    this.exitDots.interrupt();\n\n    this.exitDots\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', 0)\n      .attr('r', 0);\n\n    this.exitDotWrappers\n      .selectAll('circle')\n      .each(d => {\n        d.exitWholeGroup = true;\n      })\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .delay((_, i, n) => {\n        return this.duration - this.duration * (i / (n.length - 1));\n      })\n      .attr('opacity', 0)\n      .attr('r', 0);\n\n    // this new transtition ensures that the chart counts and all labels\n    // correctly reflect the newest information\n    this.updateDots\n      .transition('accessibilityAfterExit')\n      .duration(this.duration / 2)\n      .delay((_, i, n) => {\n        return this.duration - this.duration * (i / (n.length - 1));\n      })\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        // before we exit geometries, we need to check if a focus exists or not\n        const focusDidExist = checkAccessFocus(this.rootG.node());\n        // then we must remove the exiting elements\n        this.exitDots.remove();\n        this.exitDotWrappers.remove();\n        this.svg.selectAll('.exiting').remove();\n        // updateDots/labels will keep references to the removed elements unless we reassign\n        this.updateDots = this.updateDotWrappers.selectAll('circle');\n        this.updatingLabels = this.updatingLabelGroups.selectAll('.line-dataLabel');\n        // then our util can count geometries\n        this.setChartCountAccessibility();\n        // our group's label should update with new counts too\n        this.setGroupAccessibilityID();\n        // since items exited, labels must receive updated values\n        this.setGeometryAriaLabels();\n        // and also make sure the user's focus isn't lost\n        retainAccessFocus({\n          parentGNode: this.rootG.node(),\n          focusDidExist\n          // recursive: true\n        });\n      });\n  }\n\n  // draw dots\n  drawPoints() {\n    // this.updateDots.interrupt();\n    this.updateDotWrappers\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.hoverHighlight || this.clickHighlight ? 0 : this.duration);\n    let updateTransition;\n    if (this.interpolating) {\n      updateTransition = this.updateDots\n        .attr('data-cx', d => this.x(d[this.ordinalAccessor]))\n        .attr('data-cy', d => this.y(d[this.valueAccessor]))\n        .attr('data-translate-x', this.padding.left + this.margin.left)\n        .attr('data-r', d =>\n          d.exit\n            ? 0\n            : checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        )\n        .transition('update')\n        .ease(easeCircleIn)\n        .duration((_, i, n) => {\n          if (select(n[i]).classed('entering')) {\n            return this.duration / 2;\n          }\n          return this.duration;\n        })\n        .delay((_, i, n) => {\n          if (select(n[i]).classed('entering')) {\n            return this.duration * 0.75 * (i / (n.length - 1));\n          }\n          return 0;\n        })\n        .attr('r', d =>\n          d.exit\n            ? 0\n            : checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        );\n    } else {\n      updateTransition = this.updateDots\n        .attr('r', d =>\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        )\n        .attr('data-cx', d => this.x(d[this.ordinalAccessor]))\n        .attr('data-cy', d => this.y(d[this.valueAccessor]))\n        .attr('data-translate-x', this.padding.left + this.margin.left)\n        .attr('data-r', d =>\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        )\n        .transition('update')\n        .ease(easeCircleIn)\n        .duration(this.duration);\n    }\n\n    this.updateDots.attr('stroke', this.handleDotStroke);\n    updateTransition\n      .attr('cx', d => this.x(d[this.ordinalAccessor]))\n      .attr('cy', d => this.y(d[this.valueAccessor]))\n      .call(transitionEndAll, () => {\n        this.updateDots.classed('entering', false).each(d => {\n          d.enter = false;\n        });\n        // we must make sure if geometries move, that our focus indicator does too\n        retainAccessFocus({\n          parentGNode: this.rootG.node()\n        });\n\n        // now we can emit the event that transitions are complete\n        this.transitionEndEvent.emit({ chartID: this.chartID });\n      });\n  }\n\n  updateStrokePattern() {\n    this.update.attr('stroke-dasharray', this.handleStrokeDasharray);\n  }\n\n  handleStrokeDasharray = (d, i) => {\n    return this.secondaryLines.keys.includes(d.key)\n      ? this.short\n      : !this.accessibility.hideTextures\n      ? this.dashPatterns[i]\n      : '';\n  };\n\n  updateDotRadius() {\n    this.updateDots\n      .each((d, i, n) => {\n        const me = select(n[i]);\n        if (!d.enter && !me.classed('entering') && !d.exit) {\n          me.attr('r', () =>\n            checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n              ? this.dotRadius +\n                (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n              : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n              ? this.dotRadius +\n                (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n              : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n              ? this.dotRadius + 0.5\n              : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n          );\n        }\n      })\n      .attr('stroke', this.handleDotStroke);\n  }\n  setSelectedClass() {\n    this.updateDots.classed('highlight', (d, i, n) => {\n      let selected = checkInteraction(d, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n      selected = this.clickHighlight && this.clickHighlight.length ? selected : false;\n      const selectable = this.accessibility.elementsAreInterface;\n      setElementInteractionAccessState(n[i], selected, selectable);\n      return selected;\n    });\n  }\n  // draw series label\n\n  validateSeriesLabels() {\n    this.labelDetails = { ...this.seriesLabel };\n    if (!this.labelDetails.placement) {\n      this.labelDetails.placement = '';\n    }\n    if (!this.labelDetails.label || !this.labelDetails.label.length) {\n      this.labelDetails.label = '';\n    }\n\n    this.isRight = this.labelDetails.placement !== 'left';\n  }\n\n  enterSeriesLabels() {\n    this.seriesLabelEnter.interrupt();\n\n    this.seriesLabelEnter\n      .attr('opacity', d => {\n        const seriesLabelOpacity = !this.seriesLabel.visible\n          ? 0\n          : this.secondaryLines.keys.includes(d.key) &&\n            (!this.secondaryLines.showSeriesLabel || this.secondaryLines.opacity < 1)\n          ? 0\n          : 1;\n        // check if interactionKeys includes seriesAccessor, if not then don't check seriesLabel for interaction\n        if (!this.seriesInteraction) {\n          return seriesLabelOpacity;\n        } else {\n          return checkInteraction(\n            d.values[0],\n            seriesLabelOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n            ? 0\n            : Number.EPSILON;\n        }\n      })\n      .attr('class', 'line-series-label')\n      .attr('cursor', !this.suppressEvents && this.seriesInteraction ? this.cursor : null)\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onHoverHandler(d.values[0], n[i], false);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents && this.seriesInteraction ? () => this.onMouseOutHandler() : null)\n      .attr('fill', this.handleSeriesTextFill)\n      .attr('x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n      .attr('y', d =>\n        this.isRight\n          ? this.y(d.values[d.values.length - 1][this.valueAccessor])\n          : this.y(d.values[0][this.valueAccessor])\n      )\n      .attr('text-anchor', this.isRight ? 'start' : 'end')\n      .attr('dx', this.isRight ? '0.1em' : '-0.1em')\n      .attr('dy', '0.3em');\n  }\n\n  updateSeriesLabels() {\n    this.seriesLabelUpdate.interrupt();\n\n    this.seriesLabelUpdate\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', d => {\n        const seriesLabelOpacity = !this.seriesLabel.visible\n          ? 0\n          : this.secondaryLines.keys.includes(d.key) &&\n            (!this.secondaryLines.showSeriesLabel || this.secondaryLines.opacity < 1)\n          ? 0\n          : 1;\n        // check if interactionKeys includes seriesAccessor, if not then don't check seriesLabel for interaction\n        if (!this.seriesInteraction) {\n          return seriesLabelOpacity;\n        } else {\n          return checkInteraction(\n            d.values[0],\n            seriesLabelOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n            ? 0\n            : 1;\n        }\n      });\n  }\n\n  exitSeriesLabels() {\n    this.seriesLabelExit\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  drawSeriesLabels() {\n    const hideOnly = this.labelDetails.placement !== 'auto' && this.labelDetails.collisionHideOnly;\n\n    this.seriesLabelUpdate.text((d, i) =>\n      this.secondaryLines.keys.includes(d.key) && !this.secondaryLines.showSeriesLabel\n        ? ''\n        : this.labelDetails.label\n        ? this.labelDetails.label[i]\n        : !d.key || d.key === 'undefined'\n        ? ''\n        : d.key\n    );\n\n    const seriesUpdate = this.seriesLabelUpdate\n      .style('visibility', (_, i, n) =>\n        this.labelDetails.placement === 'auto' || this.labelDetails.collisionHideOnly\n          ? select(n[i]).style('visibility')\n          : null\n      )\n      .attr('data-x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n      .attr('data-y', (d, i, n) => {\n        const textElement = n[i];\n        const style = getComputedStyle(textElement);\n        const fontSize = parseFloat(style.fontSize);\n        const textHeight = Math.max(fontSize - 1, 1); // clone.getBBox().height;\n\n        return this.isRight\n          ? this.y(d.values[d.values.length - 1][this.valueAccessor]) + 0.3 * textHeight\n          : this.y(d.values[0][this.valueAccessor]) + 0.3 * textHeight;\n      })\n      .attr('data-translate-x', this.padding.left + this.margin.left)\n      .attr('dx', this.isRight ? '0.1em' : '-0.1em')\n      .attr('dy', '0.3em')\n      // if we are re-running collision we need text-anchor for bounds calc, but don't want to actually adjust\n      // text via text-anchor attribute\n      .attr('data-text-anchor', this.isRight ? 'start' : 'end')\n      .attr('data-use-dx', hideOnly)\n      .attr('data-use-dy', hideOnly)\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration);\n\n    // if we keep this in here, we are assuming the last point will always be on the right of the chart\n    // it also adds about 8-9 ms per run to redraw this.update to canvas => bitmap\n    if (this.labelDetails.visible && (this.labelDetails.placement === 'auto' || this.labelDetails.collisionHideOnly)) {\n      this.bitmaps = resolveLabelCollision({\n        bitmaps: this.bitmaps,\n        labelSelection: seriesUpdate,\n        avoidMarks: [], // [this.updateDots], // this will link the series label to the last point in the line\n        validPositions: hideOnly ? ['middle'] : ['middle', 'top', 'bottom'],\n        offsets: hideOnly ? [1] : [1, 1, 1],\n        accessors: ['key'],\n        size: [roundTo(this.width, 0), roundTo(this.innerPaddedHeight, 0)],\n        hideOnly: this.labelDetails.visible && hideOnly\n      });\n\n      // if we are in hide only we need to add attributes back\n      if (hideOnly) {\n        seriesUpdate\n          .attr('text-anchor', this.isRight ? 'start' : 'end')\n          .attr('x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n          .attr('y', d =>\n            this.isRight\n              ? this.y(d.values[d.values.length - 1][this.valueAccessor])\n              : this.y(d.values[0][this.valueAccessor])\n          )\n          .attr('dx', this.isRight ? '0.1em' : '-0.1em')\n          .attr('dy', '0.3em');\n      }\n    } else {\n      seriesUpdate\n        .attr('text-anchor', this.isRight ? 'start' : 'end')\n        .attr('x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n        .attr('y', d =>\n          this.isRight\n            ? this.y(d.values[d.values.length - 1][this.valueAccessor])\n            : this.y(d.values[0][this.valueAccessor])\n        )\n        .attr('dx', this.isRight ? '0.1em' : '-0.1em')\n        .attr('dy', '0.3em');\n    }\n  }\n\n  enterDataLabels() {\n    this.enteringLabelGroups.interrupt();\n\n    this.enteringLabelGroups\n      .attr('class', 'line-label-wrapper')\n      .attr('opacity', 0)\n      .attr('fill', (_, i) => this.rawColors[i] || this.rawColors[0]);\n\n    this.enteringLabels.attr('fill', this.handleTextFill);\n\n    if (this.interpolating) {\n      const childrenEnter = this.enteringLabels.attr('class', 'line-dataLabel').attr('opacity', Number.EPSILON);\n\n      placeDataLabels({\n        root: childrenEnter,\n        xScale: this.interpolating.x,\n        yScale: this.interpolating.y,\n        ordinalAccessor: this.ordinalAccessor,\n        valueAccessor: this.valueAccessor,\n        placement: this.dataLabel.placement,\n        chartType: 'line'\n      });\n\n      this.updatingLabels.attr('opacity', d =>\n        d.enter\n          ? Number.EPSILON\n          : checkInteraction(\n              d,\n              checkLabelDisplayOnly(this.dataLabel.visible, this.dataLabel.displayOnly, d, this.displayOnlyLabelData, [\n                this.ordinalAccessor,\n                this.seriesAccessor\n              ]),\n              this.hoverOpacity,\n              this.hoverHighlight,\n              this.clickHighlight,\n              this.innerInteractionKeys\n            ) < 1\n          ? 0\n          : checkLabelDisplayOnly(this.dataLabel.visible, this.dataLabel.displayOnly, d, this.displayOnlyLabelData, [\n              this.ordinalAccessor,\n              this.seriesAccessor\n            ])\n      );\n\n      const fullEnter = this.enteringLabelGroups\n        .selectAll('.line-dataLabel')\n        .attr('opacity', Number.EPSILON)\n        .classed('entering', true);\n\n      placeDataLabels({\n        root: fullEnter,\n        xScale: this.x,\n        yScale: this.y,\n        ordinalAccessor: this.ordinalAccessor,\n        valueAccessor: this.valueAccessor,\n        placement: this.dataLabel.placement,\n        chartType: 'line'\n      });\n    } else {\n      const childrenEnter = this.enteringLabels.attr('opacity', Number.EPSILON).attr('class', 'line-dataLabel');\n\n      placeDataLabels({\n        root: childrenEnter,\n        xScale: this.x,\n        yScale: this.y,\n        ordinalAccessor: this.ordinalAccessor,\n        valueAccessor: this.valueAccessor,\n        placement: this.dataLabel.placement,\n        chartType: 'line'\n      });\n    }\n\n    // now we check whether we have auto collision to consider\n    if (this.dataLabel.placement === 'auto') {\n      this.updatingLabels.each((d, i, n) => {\n        // we check hash for each updated label, don't touch enter/exit/hidden stuff at all\n        if (\n          !d.enter &&\n          !d.exit &&\n          !d.hidden &&\n          (d['auto-x'] || d['auto-x'] === 0) &&\n          (d['auto-y'] || d['auto-y'] === 0)\n        ) {\n          select(n[i])\n            .attr('x', +select(n[i]).attr('x') + (+d['auto-x'] || 0))\n            .attr('y', +select(n[i]).attr('y') + (+d['auto-y'] || 0))\n            .attr('text-anchor', d['auto-text-anchor']);\n        }\n      });\n    }\n  }\n\n  updateDataLabels() {\n    this.updatingLabelGroups.interrupt('opacity');\n    this.updatingLabelGroups.attr('opacity', d => {\n      const labelOpacity = !this.dataLabel.visible\n        ? 0\n        : this.secondaryLines.keys.includes(d.key) &&\n          (!this.secondaryLines.showDataLabel || this.secondaryLines.opacity < 1)\n        ? 0\n        : 1;\n      return labelOpacity;\n    });\n\n    if (this.interpolating) {\n      this.updatingLabels = this.updatingLabelGroups\n        .selectAll('.line-dataLabel')\n        .data(d => d.interpolate.end)\n        .classed('exiting', d => d.exit);\n\n      this.updatingLabels\n        .transition('opacity')\n        .ease(easeCircleIn)\n        .duration((_, i, n) => {\n          if (select(n[i]).classed('entering')) {\n            return this.duration / 2;\n          }\n          return this.duration;\n        })\n        .delay((_, i, n) => {\n          if (select(n[i]).classed('entering')) {\n            return this.duration * 0.75 * (i / (n.length - 1));\n          }\n          return 0;\n        })\n        .attr('opacity', (d, i, n) => {\n          const targetOpacity = d.exit\n            ? 0\n            : checkInteraction(\n                d,\n                checkLabelDisplayOnly(\n                  this.dataLabel.visible,\n                  this.dataLabel.displayOnly,\n                  d,\n                  this.displayOnlyLabelData,\n                  [this.ordinalAccessor, this.seriesAccessor]\n                ),\n                this.hoverOpacity,\n                this.hoverHighlight,\n                this.clickHighlight,\n                this.innerInteractionKeys\n              ) < 1\n            ? 0\n            : checkLabelDisplayOnly(this.dataLabel.visible, this.dataLabel.displayOnly, d, this.displayOnlyLabelData, [\n                this.ordinalAccessor,\n                this.seriesAccessor\n              ]);\n          const parentOpacity = +select(n[i].parentNode).attr('opacity');\n          select(n[i]).attr('data-hidden', parentOpacity === 0 || targetOpacity === 0 ? 'true' : null);\n          return targetOpacity;\n        });\n    } else {\n      this.updatingLabels.attr('opacity', (d, i, n) => {\n        const targetOpacity =\n          checkInteraction(\n            d,\n            checkLabelDisplayOnly(this.dataLabel.visible, this.dataLabel.displayOnly, d, this.displayOnlyLabelData, [\n              this.ordinalAccessor,\n              this.seriesAccessor\n            ]),\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n            ? 0\n            : checkLabelDisplayOnly(this.dataLabel.visible, this.dataLabel.displayOnly, d, this.displayOnlyLabelData, [\n                this.ordinalAccessor,\n                this.seriesAccessor\n              ]);\n        const parentOpacity = +select(n[i].parentNode).attr('opacity');\n        select(n[i]).attr('data-hidden', parentOpacity === 0 || targetOpacity === 0 ? 'true' : null);\n        return targetOpacity;\n      });\n    }\n  }\n\n  exitDataLabels() {\n    this.exitingLabels.interrupt();\n\n    this.exitingLabels\n      .attr('data-hidden', 'true')\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', 0)\n      .remove();\n\n    this.exitingLabelGroups\n      .attr('data-hidden', 'true')\n      .selectAll('.line-dataLabel')\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .delay((_, i, n) => {\n        return this.duration - this.duration * (i / (n.length - 1));\n      })\n      .attr('opacity', 0)\n      .call(transitionEndAll, () => {\n        this.exitingLabelGroups.remove();\n      });\n  }\n\n  drawDataLabels() {\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n\n    let updateChildren = this.updatingLabels.text(d => {\n      return formatDataLabel(d, this.innerLabelAccessor, this.dataLabel.format);\n    });\n    if (this.interpolating) {\n      updateChildren = this.updatingLabels\n        .style('visibility', (d, i, n) =>\n          this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly\n            ? d.hidden\n              ? 'hidden'\n              : select(n[i]).style('visibility')\n            : null\n        )\n        .attr('data-x', d => this.x(d[this.ordinalAccessor]))\n        .attr('data-y', d => this.y(d[this.valueAccessor]))\n        .attr('data-translate-x', this.margin.left + this.padding.left)\n        .transition('update')\n        .ease(easeCircleIn)\n        .duration((_, i, n) => {\n          if (select(n[i]).classed('entering')) {\n            return this.duration / 2;\n          }\n          return this.duration;\n        })\n        .delay((_, i, n) => {\n          if (select(n[i]).classed('entering')) {\n            return this.duration * 0.75 * (i / (n.length - 1));\n          }\n          return 0;\n        });\n    } else {\n      updateChildren = this.updatingLabels\n        .style('visibility', (d, i, n) =>\n          this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly\n            ? d.hidden\n              ? 'hidden'\n              : select(n[i]).style('visibility')\n            : null\n        )\n        .attr('data-x', d => this.x(d[this.ordinalAccessor]))\n        .attr('data-y', d => this.y(d[this.valueAccessor]))\n        .attr('data-translate-x', this.margin.left + this.padding.left)\n        .transition('update')\n        .ease(easeCircleIn)\n        .duration(this.duration);\n    }\n    const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n    const validPositions = hideOnly\n      ? ['middle']\n      : collisionPlacement && this.collisionSettings[collisionPlacement] // check whether placement provided maps correctly\n      ? this.collisionSettings[collisionPlacement].validPositions\n      : this.collisionSettings['all'].validPositions;\n    const offsets = hideOnly\n      ? [1]\n      : collisionPlacement && this.collisionSettings[collisionPlacement] // check whether placement provided maps correctly\n      ? this.collisionSettings[collisionPlacement].offsets\n      : this.collisionSettings['all'].offsets;\n\n    this.bitmaps = placeDataLabels({\n      root: updateChildren, // this must have a transition cause we copy it\n      xScale: this.x,\n      yScale: this.y,\n      ordinalAccessor: this.ordinalAccessor,\n      valueAccessor: this.valueAccessor,\n      placement: this.dataLabel.placement,\n      chartType: 'line',\n      avoidCollision: {\n        runOccupancyBitmap: this.dataLabel.visible && this.dataLabel.placement === 'auto',\n        labelSelection: updateChildren,\n        avoidMarks: [this.updateDots, this.update],\n        validPositions,\n        offsets,\n        accessors: [this.ordinalAccessor, this.seriesAccessor, 'key'], // key is created for lines by nesting done in line,\n        size: [roundTo(this.width, 0), roundTo(this.innerPaddedHeight, 0)],\n        hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly\n      }\n    });\n\n    // we need to maintain some values since line has customized lifecycle setup\n    updateChildren.call(transitionEndAll, () => {\n      this.hiddenHash = {}; // empty out hash each time to be safe\n      this.updatingLabels.each((d, i, n) => {\n        // store results to hash so we can use them in lifecycle (specific to line/parallel lifecycle only)\n        this.hiddenHash[`${d[this.ordinalAccessor]}-${d[this.seriesAccessor] || 'b'}`] = {\n          'data-label-hidden': select(n[i]).attr('data-label-hidden') === 'true',\n          x: +select(n[i]).attr('x') - +select(n[i]).attr('data-x'),\n          y: +select(n[i]).attr('y') - +select(n[i]).attr('data-y'),\n          'text-anchor': select(n[i]).attr('text-anchor')\n        };\n      });\n    });\n  }\n\n  updateStrokeWidth() {\n    this.update.attr('stroke-width', d => this.calculateStrokeWidth(d, true));\n    this.updateDots.attr('stroke', this.handleDotStroke);\n  }\n\n  calculateStrokeWidth = (data, useChildData?) => {\n    const d = !useChildData ? data : data.values[0];\n    return !useChildData || this.seriesInteraction\n      ? checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n        ? this.clickStyle.strokeWidth || this.strokeWidth\n        : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n        ? this.hoverStyle.strokeWidth || this.strokeWidth\n        : !this.secondaryLines.keys.includes(d[this.seriesAccessor])\n        ? this.strokeWidth\n        : 1\n      : !this.secondaryLines.keys.includes(d[this.seriesAccessor])\n      ? this.strokeWidth\n      : 1;\n  };\n\n  handleDotStroke = (d, i, n) => {\n    if (!this.accessibility.hideStrokes) {\n      const clicked =\n        this.clickHighlight &&\n        this.clickHighlight.length > 0 &&\n        checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n      const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n      const baseColor = select(n[i].parentNode).attr('fill');\n      const color =\n        clicked && this.clickStyle.color\n          ? visaColors[this.clickStyle.color] || this.clickStyle.color\n          : clicked\n          ? baseColor\n          : hovered && this.hoverStyle.color\n          ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n          : baseColor;\n      select(n[i]).attr('stroke-width', this.calculateStrokeWidth(d));\n      select(n[i]).attr('fill', color);\n      return this.strokes[color.toLowerCase()];\n    }\n    return null;\n  };\n\n  handleLineStroke = (data, i) => {\n    const baseColor = this.colorArr[i] || this.colorArr[0];\n    const d = data.values[0];\n    const clicked = checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n    const hovered = checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n    return this.seriesInteraction\n      ? clicked && this.clickStyle.color\n        ? this.strokes[(visaColors[this.clickStyle.color] || this.clickStyle.color).toLowerCase()]\n        : clicked\n        ? baseColor\n        : hovered && this.hoverStyle.color\n        ? this.strokes[(visaColors[this.hoverStyle.color] || this.hoverStyle.color).toLowerCase()]\n        : baseColor\n      : baseColor;\n  };\n\n  handleSeriesTextFill = (data, i) => {\n    const baseColor = this.rawColors[i] || this.rawColors[0];\n    const d = data.values[0];\n    const clicked = checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n    const hovered = checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n    const color = this.seriesInteraction\n      ? clicked && this.clickStyle.color\n        ? visaColors[this.clickStyle.color] || this.clickStyle.color\n        : clicked\n        ? baseColor\n        : hovered && this.hoverStyle.color\n        ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n        : baseColor\n      : baseColor;\n    return this.textColors[color.toLowerCase()];\n  };\n\n  handleTextFill = (d, i, n) => {\n    const clicked =\n      this.clickHighlight &&\n      this.clickHighlight.length > 0 &&\n      checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n    const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n    const baseColor = select(n[i].parentNode).attr('fill');\n    const color =\n      clicked && this.clickStyle.color\n        ? visaColors[this.clickStyle.color] || this.clickStyle.color\n        : clicked\n        ? baseColor\n        : hovered && this.hoverStyle.color\n        ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n        : baseColor;\n    return this.textColors[color.toLowerCase()];\n  };\n\n  updateColors() {\n    this.updateDotWrappers.attr('fill', (_, i) => this.rawColors[i] || this.rawColors[0]);\n    this.updateDots.attr('stroke', this.handleDotStroke);\n    this.update.attr('stroke', this.handleLineStroke);\n    this.seriesLabelUpdate.attr('fill', this.handleSeriesTextFill);\n    this.updatingLabelGroups.attr('fill', (_, i) => this.rawColors[i] || this.rawColors[0]);\n    this.updatingLabels.attr('fill', this.handleTextFill);\n  }\n\n  setLabelOpacity() {\n    // this.updatingLabelGroups.interrupt();\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n    const addCollisionClass = this.dataLabel.placement === 'auto' || hideOnly;\n    const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n\n    this.updatingLabelGroups.attr('opacity', d => {\n      const labelOpacity = !this.dataLabel.visible\n        ? 0\n        : this.secondaryLines.keys.includes(d.key) &&\n          (!this.secondaryLines.showDataLabel || this.secondaryLines.opacity < 1)\n        ? 0\n        : 1;\n      return labelOpacity;\n    });\n    if (this.interpolating) {\n      this.updatingLabels.each((d, i, n) => {\n        const me = select(n[i]);\n        const prevOpacity = +me.attr('opacity');\n        const styleVisibility = me.style('visibility');\n        if (!d.enter && !me.classed('entering') && !d.exit) {\n          me.attr('opacity', () => {\n            const targetOpacity =\n              checkInteraction(\n                d,\n                checkLabelDisplayOnly(\n                  this.dataLabel.visible,\n                  this.dataLabel.displayOnly,\n                  d,\n                  this.displayOnlyLabelData,\n                  [this.ordinalAccessor, this.seriesAccessor]\n                ),\n                this.hoverOpacity,\n                this.hoverHighlight,\n                this.clickHighlight,\n                this.innerInteractionKeys\n              ) < 1\n                ? 0\n                : checkLabelDisplayOnly(\n                    this.dataLabel.visible,\n                    this.dataLabel.displayOnly,\n                    d,\n                    this.displayOnlyLabelData,\n                    [this.ordinalAccessor, this.seriesAccessor]\n                  );\n\n            const parentOpacity = +select(n[i].parentNode).attr('opacity');\n            me.attr('data-hidden', parentOpacity === 0 || targetOpacity === 0 ? 'true' : null);\n            if (\n              ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n              (this.dataLabel.placement === 'auto' || hideOnly)\n            ) {\n              if (targetOpacity === 1) {\n                select(n[i])\n                  .classed('collision-added', true)\n                  .style('visibility', null);\n              } else {\n                select(n[i]).classed('collision-removed', true);\n              }\n            }\n            return targetOpacity;\n          });\n        }\n      });\n    } else {\n      this.updatingLabels.attr('opacity', (d, i, n) => {\n        const prevOpacity = +select(n[i]).attr('opacity');\n        const styleVisibility = select(n[i]).style('visibility');\n        const targetOpacity =\n          checkInteraction(\n            d,\n            checkLabelDisplayOnly(this.dataLabel.visible, this.dataLabel.displayOnly, d, this.displayOnlyLabelData, [\n              this.ordinalAccessor,\n              this.seriesAccessor\n            ]),\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n            ? 0\n            : checkLabelDisplayOnly(this.dataLabel.visible, this.dataLabel.displayOnly, d, this.displayOnlyLabelData, [\n                this.ordinalAccessor,\n                this.seriesAccessor\n              ]);\n        const parentOpacity = +select(n[i].parentNode).attr('opacity');\n        select(n[i]).attr('data-hidden', parentOpacity === 0 || targetOpacity === 0 ? 'true' : null);\n        if (\n          ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n          (this.dataLabel.placement === 'auto' || hideOnly)\n        ) {\n          if (targetOpacity === 1) {\n            select(n[i])\n              .classed('collision-added', true)\n              .style('visibility', null);\n          } else {\n            select(n[i]).classed('collision-removed', true);\n          }\n        }\n        return targetOpacity;\n      });\n    }\n\n    if (addCollisionClass) {\n      const labelsAdded = this.updatingLabels\n        .filter((_, i, n) => select(n[i]).classed('collision-added'))\n        .transition()\n        .duration(0);\n      const labelsRemoved = this.updatingLabels.filter((_, i, n) => select(n[i]).classed('collision-removed')); // .transition().duration(0);\n      const validPositions = hideOnly\n        ? ['middle']\n        : collisionPlacement && this.collisionSettings[collisionPlacement] // check whether placement provided maps correctly\n        ? this.collisionSettings[collisionPlacement].validPositions\n        : this.collisionSettings['all'].validPositions;\n      const offsets = hideOnly\n        ? [1]\n        : collisionPlacement && this.collisionSettings[collisionPlacement] // check whether placement provided maps correctly\n        ? this.collisionSettings[collisionPlacement].offsets\n        : this.collisionSettings['all'].offsets;\n\n      // we can now remove labels as well if we need to...\n      if (labelsRemoved.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsRemoved,\n          avoidMarks: [], // [this.updateDots], // this will link the series label to the last point in the line\n          validPositions: ['middle'],\n          offsets: [1],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.innerPaddedHeight, 0)],\n          hideOnly: false,\n          removeOnly: true\n        });\n\n        // remove temporary class now\n        labelsRemoved.classed('collision-removed', false);\n      }\n\n      // we can now add labels as well if we need to...\n      if (labelsAdded.size() > 0) {\n        this.bitmaps = placeDataLabels({\n          root: labelsAdded,\n          xScale: this.x,\n          yScale: this.y,\n          ordinalAccessor: this.ordinalAccessor,\n          valueAccessor: this.valueAccessor,\n          placement: this.dataLabel.placement,\n          chartType: 'line',\n          avoidCollision: {\n            runOccupancyBitmap: this.dataLabel.visible && this.dataLabel.placement === 'auto',\n            bitmaps: this.bitmaps,\n            labelSelection: labelsAdded,\n            avoidMarks: [this.updateDots, this.update],\n            validPositions,\n            offsets,\n            accessors: [this.ordinalAccessor, this.seriesAccessor, 'key'], // key is created for lines by nesting done in line,\n            size: [roundTo(this.width, 0), roundTo(this.innerPaddedHeight, 0)],\n            hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly,\n            suppressMarkDraw: true\n          }\n        });\n\n        // we need to maintain some values since line has customized lifecycle setup\n        labelsAdded.call(transitionEndAll, () => {\n          this.updatingLabels.each((d, i, n) => {\n            select(n[i]).classed('collision-added', false);\n            // store results to hash so we can use them in lifecycle (specific to line/parallel lifecycle only)\n            this.hiddenHash[`${d[this.ordinalAccessor]}-${d[this.seriesAccessor] || 'b'}`] = {\n              'data-label-hidden': select(n[i]).attr('data-label-hidden') === 'true',\n              x: +select(n[i]).attr('x') - +select(n[i]).attr('data-x'),\n              y: +select(n[i]).attr('y') - +select(n[i]).attr('data-y'),\n              'text-anchor': select(n[i]).attr('text-anchor')\n            };\n          });\n        });\n      }\n    }\n  }\n\n  setSeriesLabelOpacity() {\n    const hideOnly = this.labelDetails.placement !== 'auto' && this.labelDetails.collisionHideOnly;\n    const addCollisionClass = this.labelDetails.placement === 'auto' || hideOnly;\n\n    this.seriesLabelUpdate.interrupt('opacity');\n\n    this.seriesLabelUpdate.attr('opacity', (d, i, n) => {\n      const prevOpacity = +select(n[i]).attr('opacity');\n      const styleVisibility = select(n[i]).style('visibility');\n      const seriesLabelOpacity = !this.seriesLabel.visible\n        ? 0\n        : this.secondaryLines.keys.includes(d.key) &&\n          (!this.secondaryLines.showSeriesLabel || this.secondaryLines.opacity < 1)\n        ? 0\n        : 1;\n      // check if interactionKeys includes seriesAccessor, if not then don't check seriesLabel for interaction\n      if (!this.seriesInteraction) {\n        select(n[i]).attr('data-hidden', seriesLabelOpacity === 0 ? 'true' : null);\n        return seriesLabelOpacity;\n      } else {\n        const targetOpacity =\n          checkInteraction(\n            d.values[0],\n            seriesLabelOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n            ? 0\n            : 1;\n        select(n[i]).attr('data-hidden', targetOpacity === 0 ? 'true' : null);\n        if (\n          ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n          (this.labelDetails.placement === 'auto' || hideOnly)\n        ) {\n          if (targetOpacity === 1) {\n            select(n[i])\n              .classed('collision-added', true)\n              .style('visibility', null);\n          } else {\n            select(n[i]).classed('collision-removed', true);\n          }\n        }\n        return targetOpacity;\n      }\n    });\n\n    if (addCollisionClass) {\n      const labelsAdded = this.seriesLabelUpdate\n        .filter((_, i, n) => select(n[i]).classed('collision-added'))\n        .attr(\n          'data-text-anchor',\n          (_, i, n) => select(n[i]).attr('collision-text-anchor') || select(n[i]).attr('data-text-anchor')\n        )\n        .attr('collision-text-anchor', null);\n\n      const labelsRemoved = this.seriesLabelUpdate\n        .filter((_, i, n) => select(n[i]).classed('collision-removed'))\n        .attr('data-use-dx', hideOnly)\n        .attr('data-use-dy', hideOnly)\n        .attr('keep-data-y', hideOnly)\n        .attr('collision-text-anchor', (_, i, n) => select(n[i]).attr('data-text-anchor'))\n        .attr('data-text-anchor', null); // need this for remove only\n\n      // we can now remove labels as well if we need to...\n      if (labelsRemoved.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsRemoved,\n          avoidMarks: [], // [this.updateDots], // this will link the series label to the last point in the line\n          validPositions: ['middle'],\n          offsets: [1],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.innerPaddedHeight, 0)],\n          hideOnly: false,\n          removeOnly: true\n        });\n\n        // remove temporary class now\n        labelsRemoved.classed('collision-removed', false).attr('keep-data-y', null);\n      }\n\n      // we can now add labels as well if we need to...\n      if (labelsAdded.size() > 0) {\n        // if we keep this in here, we are assuming the last point will always be on the right of the chart\n        // it also adds about 8-9 ms per run to redraw this.update to canvas => bitmap\n        if (\n          this.labelDetails.visible &&\n          (this.labelDetails.placement === 'auto' || this.labelDetails.collisionHideOnly)\n        ) {\n          this.bitmaps = resolveLabelCollision({\n            bitmaps: this.bitmaps,\n            labelSelection: labelsAdded,\n            avoidMarks: [], // [this.updateDots], // this will link the series label to the last point in the line\n            validPositions: hideOnly ? ['middle'] : ['middle', 'top', 'bottom'],\n            offsets: hideOnly ? [1] : [1, 1, 1],\n            accessors: ['key'],\n            size: [roundTo(this.width, 0), roundTo(this.innerPaddedHeight, 0)],\n            hideOnly: this.labelDetails.visible && hideOnly,\n            suppressMarkDraw: true\n          });\n\n          // if we are in hide only we need to add attributes back\n          if (hideOnly) {\n            labelsAdded\n              .attr('text-anchor', this.isRight ? 'start' : 'end')\n              .attr('x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n              .attr('y', d =>\n                this.isRight\n                  ? this.y(d.values[d.values.length - 1][this.valueAccessor])\n                  : this.y(d.values[0][this.valueAccessor])\n              )\n              .attr('dx', this.isRight ? '0.1em' : '-0.1em')\n              .attr('dy', '0.3em');\n          }\n        }\n\n        // remove temporary class now\n        labelsAdded.classed('collision-added', false);\n      }\n    }\n  }\n\n  updateInteractionState() {\n    // we created an \"opacity\" transition namespace in update's transition\n    // we override it here to instantly display opacity state (below)\n    this.update.interrupt('opacity');\n\n    // we use this.update and this.updatingLabels from setGlobalSelection here\n    // the lifecycle state does not matter (enter/update/exit)\n    // since interaction state can happen at any time\n    const dotOpacity = this.showDots ? 1 : 0;\n    this.update.attr('opacity', d => {\n      // check if interactionKeys includes seriesAccessor, if not then hide lines\n      const lineOpacity = this.secondaryLines.keys.includes(d.key) ? this.secondaryLines.opacity : 1;\n      if (!this.seriesInteraction) {\n        return lineOpacity;\n      } else if (this.secondaryLines.keys.includes(d.key)) {\n        return checkInteraction(\n          d.values[0],\n          this.secondaryLines.opacity,\n          Math.min(this.secondaryLines.opacity, this.hoverOpacity),\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        );\n      } else {\n        return checkInteraction(\n          d.values[0], // use first data point of each line to decide interaction highlight\n          lineOpacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        );\n      }\n    });\n\n    this.updateDotWrappers.attr('opacity', d => {\n      const lineDotOpacity = this.secondaryLines.keys.includes(d.key) ? this.secondaryLines.opacity : 1;\n      return lineDotOpacity;\n    });\n\n    this.updateDots.each((d, i, n) => {\n      const me = select(n[i]);\n      if (!d.enter && !me.classed('entering') && !d.exit) {\n        me.attr('opacity', () => {\n          return checkInteraction(\n            d,\n            dotOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        });\n      }\n    });\n\n    retainAccessFocus({\n      parentGNode: this.rootG.node()\n    });\n\n    setLegendInteractionState({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.seriesAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.hoverStyle,\n      clickStyle: this.clickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  updateCursor() {\n    this.update.attr('cursor', !this.suppressEvents && this.seriesInteraction ? this.cursor : null);\n    this.updateDotWrappers.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    this.seriesLabelUpdate.attr('cursor', !this.suppressEvents && this.seriesInteraction ? this.cursor : null);\n    this.updatingLabels.attr('cursor', !this.suppressEvents ? this.cursor : null);\n  }\n\n  drawReferenceLines() {\n    setReferenceLine({\n      groupName: 'line',\n      root: this.referencesG,\n      referenceLines: this.referenceLines,\n      referenceStyle: this.referenceStyle,\n      innerPaddedWidth: this.innerPaddedWidth,\n      innerPaddedHeight: this.innerPaddedHeight,\n      duration: this.duration,\n      x: this.x,\n      y: this.y,\n      unitTest: this.unitTest\n    });\n  }\n\n  drawAnnotations() {\n    annotate({\n      source: this.rootG.node(),\n      data: this.annotations,\n      xScale: this.x,\n      xAccessor: this.ordinalAccessor,\n      yScale: this.y,\n      yAccessor: this.valueAccessor,\n      width: this.width,\n      height: this.height,\n      padding: this.padding,\n      margin: this.margin,\n      bitmaps: this.bitmaps\n    });\n  }\n\n  setAnnotationAccessibility() {\n    setAccessAnnotation(this.getLanguageString(), this.lineChartEl, this.annotations, this.referenceLines);\n  }\n\n  drawLegendElements() {\n    // if we have default series access and it is not in the data don't show legend\n    const noSeriesAccessor =\n      this.seriesAccessor === LineChartDefaultValues.seriesAccessor &&\n      this.nest &&\n      this.nest.length === 1 &&\n      this.nest[0].key === 'undefined';\n\n    drawLegend({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      width: this.innerPaddedWidth,\n      height: this.margin.top + 20,\n      colorArr: this.colorArr,\n      dashPatterns: !this.accessibility.hideTextures ? this.dashPatterns : null,\n      margin: this.margin,\n      padding: this.padding,\n      duration: this.duration,\n      type: 'line',\n      secondary: this.secondaryLines.keys,\n      fontSize: 16,\n      data: this.nest,\n      label: this.legend.labels,\n      hide: !((this.legend.visible && !noSeriesAccessor) || !this.legend || !this.seriesAccessor),\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.seriesAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.hoverStyle,\n      clickStyle: this.clickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  bindLegendInteractivity() {\n    select(this.lineChartEl)\n      .selectAll('.legend')\n      .on(\n        'click',\n        !this.suppressEvents && this.legend.interactive && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.legend.interactive && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.hoverEvent.emit({ data: d.values[0], target: n[i] });\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseout',\n        !this.suppressEvents && this.legend.interactive && this.seriesInteraction\n          ? () => this.onMouseOutHandler()\n          : null\n      );\n  }\n\n  setLegendCursor() {\n    select(this.lineChartEl)\n      .selectAll('.legend')\n      .style('cursor', !this.suppressEvents && this.legend.interactive && this.seriesInteraction ? this.cursor : null);\n  }\n\n  bindInteractivity() {\n    this.update\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onHoverHandler(d.values[0], n[i], false);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents && this.seriesInteraction ? () => this.onMouseOutHandler() : null);\n\n    this.updateDots\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i], true) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    // we bind the G for keyboard interactivity\n    // this does not effect mouse, but enables keyboard series selection to\n    // tap into series interactivity, if enabled\n    this.dotG\n      .selectAll('.line-dot-wrapper')\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onHoverHandler(d.values[0], n[i], false);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents && this.seriesInteraction ? () => this.onMouseOutHandler() : null);\n\n    this.seriesLabelUpdate\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onHoverHandler(d.values[0], n[i], false);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents && this.seriesInteraction ? () => this.onMouseOutHandler() : null);\n    this.updatingLabels\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i], true) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  // new accessibility functions added here\n  setTagLevels() {\n    this.topLevel = findTagLevel(this.highestHeadingLevel);\n    this.bottomLevel = findTagLevel(this.highestHeadingLevel, 3);\n  }\n\n  setChartDescriptionWrapper() {\n    // this initializes the accessibility description section of the chart\n    initializeDescriptionRoot({\n      language: this.getLanguageString(),\n      rootEle: this.lineChartEl,\n      title: this.accessibility.title || this.mainTitle,\n      chartTag: 'line-chart',\n      uniqueID: this.chartID,\n      highestHeadingLevel: this.highestHeadingLevel,\n      redraw: this.shouldRedrawWrapper,\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      hideDataTable: this.accessibility.hideDataTableButton\n    });\n    this.shouldRedrawWrapper = false;\n  }\n\n  setParentSVGAccessibility() {\n    // this sets the accessibility features of the root SVG element\n    setAccessibilityController({\n      chartTag: 'line-chart',\n      language: this.getLanguageString(),\n      node: this.svg.node(),\n      title: this.accessibility.title || this.mainTitle,\n      description: this.subTitle,\n      uniqueID: this.chartID,\n      geomType: 'point',\n      includeKeyNames: this.accessibility.includeDataKeyNames,\n      dataKeys: this.innerScopeDataKeys(),\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.seriesAccessor,\n      groupName: 'line',\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled\n    });\n  }\n\n  setGeometryAccessibilityAttributes() {\n    // this makes sure every geom element has correct event handlers + semantics (role, tabindex, etc)\n    this.updateDots.each((_d, i, n) => {\n      initializeElementAccess(n[i]);\n    });\n  }\n\n  setGeometryAriaLabels() {\n    // this adds an ARIA label to each geom (a description read by screen readers)\n    const keys = this.innerScopeDataKeys();\n    this.updateDots.each((_d, i, n) => {\n      setElementFocusHandler({\n        chartTag: 'line-chart',\n        language: this.getLanguageString(),\n        node: n[i],\n        geomType: 'point',\n        includeKeyNames: this.accessibility.includeDataKeyNames,\n        dataKeys: keys,\n        dataKeyNames: this.dataKeyNames,\n        groupName: 'line',\n        uniqueID: this.chartID,\n        disableKeyNav:\n          this.suppressEvents &&\n          this.accessibility.elementsAreInterface === false &&\n          this.accessibility.keyboardNavConfig &&\n          this.accessibility.keyboardNavConfig.disabled\n      });\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setGroupAccessibilityID() {\n    // this sets an ARIA label on all the g elements in the chart\n    this.updateDotWrappers.each((_, i, n) => {\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setChartAccessibilityTitle() {\n    setAccessTitle(this.getLanguageString(), this.lineChartEl, this.accessibility.title || this.mainTitle);\n  }\n\n  setChartAccessibilitySubtitle() {\n    setAccessSubtitle(this.getLanguageString(), this.lineChartEl, this.subTitle);\n  }\n\n  setChartAccessibilityLongDescription() {\n    setAccessLongDescription(this.getLanguageString(), this.lineChartEl, this.accessibility.longDescription);\n  }\n\n  setChartAccessibilityExecutiveSummary() {\n    setAccessExecutiveSummary(this.getLanguageString(), this.lineChartEl, this.accessibility.executiveSummary);\n  }\n\n  setChartAccessibilityPurpose() {\n    setAccessPurpose(this.getLanguageString(), this.lineChartEl, this.accessibility.purpose);\n  }\n\n  setChartAccessibilityContext() {\n    setAccessContext(this.getLanguageString(), this.lineChartEl, this.accessibility.contextExplanation);\n  }\n\n  setChartAccessibilityStatisticalNotes() {\n    setAccessStatistics(this.getLanguageString(), this.lineChartEl, this.accessibility.statisticalNotes);\n  }\n\n  setChartCountAccessibility() {\n    // this is our automated section that describes the chart contents\n    // (like geometry and gorup counts, etc)\n    setAccessChartCounts({\n      rootEle: this.lineChartEl,\n      parentGNode: this.dotG.node(), // pass the wrapper to <g> or geometries here, should be single node selection\n      chartTag: 'line-chart',\n      geomType: 'point',\n      groupName: 'line'\n      // recursive: true\n    });\n  }\n\n  setChartAccessibilityStructureNotes() {\n    setAccessStructure(this.getLanguageString(), this.lineChartEl, this.accessibility.structureNotes);\n  }\n  // new accessibility stuff ends here\n\n  onChangeHandler() {\n    if (this.accessibility && typeof this.accessibility.onChangeFunc === 'function') {\n      const d = {\n        updated: this.updated,\n        added: this.enterSize,\n        removed: this.exitSize\n      };\n      this.accessibility.onChangeFunc(d);\n    }\n    this.interpolating = false;\n    this.updated = false;\n    this.enterSize = 0;\n    this.exitSize = 0;\n  }\n\n  onClickHandler(d, n) {\n    this.clickEvent.emit({ data: d, target: n });\n  }\n\n  onHoverHandler(d, n, hasTooltip) {\n    overrideTitleTooltip(this.chartID, true);\n    this.hoverEvent.emit({ data: d, target: n });\n    if (this.showTooltip && hasTooltip) {\n      this.eventsTooltip({ data: d, evt: event, isToShow: true });\n    }\n  }\n\n  onMouseOutHandler() {\n    overrideTitleTooltip(this.chartID, false);\n    this.mouseOutEvent.emit();\n    if (this.showTooltip) {\n      this.eventsTooltip({ isToShow: false });\n    }\n  }\n\n  // set initial style (instead of copying css class across the lib)\n  setTooltipInitialStyle() {\n    initTooltipStyle(this.tooltipG);\n  }\n\n  // tooltip\n  eventsTooltip({ data, evt, isToShow }: { data?: any; evt?: any; isToShow: boolean }) {\n    drawTooltip({\n      root: this.tooltipG,\n      data,\n      event: evt,\n      isToShow,\n      tooltipLabel: this.tooltipLabel,\n      xAxis: this.xAxis,\n      yAxis: this.yAxis,\n      dataLabel: this.dataLabel,\n      dataKeyNames: this.dataKeyNames,\n      ordinalAccessor: this.ordinalAccessor,\n      valueAccessor: this.valueAccessor,\n      groupAccessor: this.seriesAccessor,\n      chartType: 'line'\n    });\n  }\n\n  render() {\n    this.drawStartEvent.emit({ chartID: this.chartID });\n    // everything between this comment and the third should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n    this.init();\n    if (this.shouldSetLocalizationConfig) {\n      this.setLocalizationConfig();\n      this.shouldSetLocalizationConfig = false;\n    }\n    if (this.shouldSetTagLevels) {\n      this.setTagLevels();\n      this.shouldSetTagLevels = false;\n    }\n    if (this.shouldSetDimensions) {\n      this.setDimensions();\n      this.shouldSetDimensions = false;\n    }\n    if (this.shouldUpdateScales) {\n      this.prepareScales();\n      this.shouldUpdateScales = false;\n    }\n    if (this.shouldUpdateData) {\n      this.prepareData();\n      this.shouldUpdateData = false;\n    }\n    if (this.shouldUpdateLabelData) {\n      this.prepareLabelData();\n      this.shouldUpdateLabelData = false;\n    }\n    if (this.shouldUpdateInterpolationData) {\n      this.updateInterpolationData();\n      this.shouldUpdateInterpolationData = false;\n    }\n    if (this.shouldValidateInteractionKeys) {\n      this.validateInteractionKeys();\n      this.shouldValidateInteractionKeys = false;\n    }\n    if (this.shouldValidateDataLabelAccessor) {\n      this.validateDataLabelAccessor();\n      this.shouldValidateDataLabelAccessor = false;\n    }\n    if (this.shouldUpdateTableData) {\n      this.setTableData();\n      this.shouldUpdateTableData = false;\n    }\n    if (this.shouldValidate) {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.shouldValidate = false;\n    }\n    if (this.shouldSetColors) {\n      this.setColors();\n      this.shouldSetColors = false;\n    }\n    if (this.shouldValidateSeriesLabels) {\n      this.validateSeriesLabels();\n      this.shouldValidateSeriesLabels = false;\n    }\n    // // Everything between this comment and the first should eventually\n    // // be moved into componentWillUpdate (if the Stencil bug is fixed)\n\n    return (\n      <div class=\"o-layout\">\n        <div class=\"o-layout--chart\">\n          <this.topLevel class=\"line-main-title vcl-main-title\">{this.mainTitle}</this.topLevel>\n          <this.bottomLevel class=\"visa-ui-text--instructions line-sub-title vcl-sub-title\" />\n          <div class=\"line-legend vcl-legend\" style={{ display: this.legend.visible ? 'block' : 'none' }} />\n          <keyboard-instructions\n            uniqueID={this.chartID}\n            geomType={'point'}\n            groupName={'line'} // taken from initializeDescriptionRoot, on bar this should be \"bar group\", stacked bar is \"stack\", and clustered is \"cluster\"\n            language={this.getLanguageString()}\n            chartTag={'line-chart'}\n            width={this.width - (this.margin ? this.margin.right || 0 : 0)}\n            isInteractive={this.accessibility.elementsAreInterface}\n            hasCousinNavigation={true} // on bar this requires checking for groupAccessor\n            disabled={\n              this.suppressEvents &&\n              this.accessibility.elementsAreInterface === false &&\n              this.accessibility.keyboardNavConfig &&\n              this.accessibility.keyboardNavConfig.disabled\n            } // the chart is \"simple\"\n          />\n          <div class=\"visa-viz-d3-line-container\" />\n          <div class=\"line-tooltip vcl-tooltip\" style={{ display: this.showTooltip ? 'block' : 'none' }} />\n          <data-table\n            uniqueID={this.chartID}\n            isCompact\n            language={this.getLanguageString()}\n            tableColumns={this.tableColumns}\n            dataKeyNames={this.dataKeyNames}\n            data={this.tableData}\n            padding={this.padding}\n            margin={this.margin}\n            hideDataTable={this.accessibility.hideDataTableButton}\n            unitTest={this.unitTest}\n          />\n        </div>\n        {/* <canvas id=\"bitmap-render\" /> */}\n      </div>\n    );\n  }\n  private init() {\n    // reading properties\n    const keys = Object.keys(LineChartDefaultValues);\n    let i = 0;\n    const exceptions = {\n      wrapLabel: {\n        exception: false\n      },\n      strokeWidth: {\n        exception: 0\n      },\n      showDots: {\n        exception: false\n      },\n      hoverOpacity: {\n        exception: 0\n      },\n      dotRadius: {\n        exception: 0\n      },\n      showTooltip: {\n        exception: false\n      },\n      mainTitle: {\n        exception: ''\n      },\n      subTitle: {\n        exception: ''\n      },\n      showBaselineX: {\n        exception: false\n      }\n    };\n    for (i = 0; i < keys.length; i++) {\n      const exception = !exceptions[keys[i]] ? false : this[keys[i]] === exceptions[keys[i]].exception;\n      this[keys[i]] = this[keys[i]] || exception ? this[keys[i]] : LineChartDefaultValues[keys[i]];\n    }\n  }\n}\n\n// incorporate OSS licenses into build\nwindow['VisaChartsLibOSSLicenses'] = getLicenses(); // tslint:disable-line no-string-literal\n"],"mappings":"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","ignoreList":[]}