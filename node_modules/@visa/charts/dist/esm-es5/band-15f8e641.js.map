{"version":3,"names":["band","scale","ordinal","unknown","undefined","domain","ordinalRange","range","step","bandwidth","round","paddingInner","paddingOuter","align","rescale","n","length","reverse","start","stop","Math","max","floor","values","sequence","map","i","_","arguments","slice","rangeRound","padding","min","copy","initRange","apply","pointish","point"],"sources":["node_modules/d3-scale/src/band.js"],"sourcesContent":["import {range as sequence} from \"d3-array\";\nimport {initRange} from \"./init\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, paddingOuter = +_), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.min(1, _), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = +_, rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band(domain(), range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return initRange.apply(rescale(), arguments);\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band.apply(null, arguments).paddingInner(1));\n}\n"],"mappings":"0GAIe,SAASA,OACtB,IAAIC,EAAQC,UAAUC,QAAQC,WAC1BC,EAASJ,EAAMI,OACfC,EAAeL,EAAMM,MACrBA,EAAQ,CAAC,EAAG,GACZC,EACAC,EACAC,EAAQ,MACRC,EAAe,EACfC,EAAe,EACfC,EAAQ,UAELZ,EAAME,QAEb,SAASW,IACP,IAAIC,EAAIV,IAASW,OACbC,EAAUV,EAAM,GAAKA,EAAM,GAC3BW,EAAQX,EAAMU,EAAU,GACxBE,EAAOZ,EAAM,EAAIU,GACrBT,GAAQW,EAAOD,GAASE,KAAKC,IAAI,EAAGN,EAAIJ,EAAeC,EAAe,GACtE,GAAIF,EAAOF,EAAOY,KAAKE,MAAMd,GAC7BU,IAAUC,EAAOD,EAAQV,GAAQO,EAAIJ,IAAiBE,EACtDJ,EAAYD,GAAQ,EAAIG,GACxB,GAAID,EAAOQ,EAAQE,KAAKV,MAAMQ,GAAQT,EAAYW,KAAKV,MAAMD,GAC7D,IAAIc,EAASC,MAAST,GAAGU,KAAI,SAASC,GAAK,OAAOR,EAAQV,EAAOkB,CAAE,IACnE,OAAOpB,EAAaW,EAAUM,EAAON,UAAYM,EACrD,CAEEtB,EAAMI,OAAS,SAASsB,GACtB,OAAOC,UAAUZ,QAAUX,EAAOsB,GAAIb,KAAaT,GACvD,EAEEJ,EAAMM,MAAQ,SAASoB,GACrB,OAAOC,UAAUZ,QAAUT,EAAQ,EAAEoB,EAAE,IAAKA,EAAE,IAAKb,KAAaP,EAAMsB,OAC1E,EAEE5B,EAAM6B,WAAa,SAASH,GAC1B,OAAOpB,EAAQ,EAAEoB,EAAE,IAAKA,EAAE,IAAKjB,EAAQ,KAAMI,GACjD,EAEEb,EAAMQ,UAAY,WAChB,OAAOA,CACX,EAEER,EAAMO,KAAO,WACX,OAAOA,CACX,EAEEP,EAAMS,MAAQ,SAASiB,GACrB,OAAOC,UAAUZ,QAAUN,IAAUiB,EAAGb,KAAaJ,CACzD,EAEET,EAAM8B,QAAU,SAASJ,GACvB,OAAOC,UAAUZ,QAAUL,EAAeS,KAAKY,IAAI,EAAGpB,GAAgBe,GAAIb,KAAaH,CAC3F,EAEEV,EAAMU,aAAe,SAASgB,GAC5B,OAAOC,UAAUZ,QAAUL,EAAeS,KAAKY,IAAI,EAAGL,GAAIb,KAAaH,CAC3E,EAEEV,EAAMW,aAAe,SAASe,GAC5B,OAAOC,UAAUZ,QAAUJ,GAAgBe,EAAGb,KAAaF,CAC/D,EAEEX,EAAMY,MAAQ,SAASc,GACrB,OAAOC,UAAUZ,QAAUH,EAAQO,KAAKC,IAAI,EAAGD,KAAKY,IAAI,EAAGL,IAAKb,KAAaD,CACjF,EAEEZ,EAAMgC,KAAO,WACX,OAAOjC,KAAKK,IAAUE,GACjBG,MAAMA,GACNC,aAAaA,GACbC,aAAaA,GACbC,MAAMA,EACf,EAEE,OAAOqB,UAAUC,MAAMrB,IAAWc,UACpC,CAEA,SAASQ,SAASnC,GAChB,IAAIgC,EAAOhC,EAAMgC,KAEjBhC,EAAM8B,QAAU9B,EAAMW,oBACfX,EAAMU,oBACNV,EAAMW,aAEbX,EAAMgC,KAAO,WACX,OAAOG,SAASH,IACpB,EAEE,OAAOhC,CACT,CAEO,SAASoC,QACd,OAAOD,SAASpC,KAAKmC,MAAM,KAAMP,WAAWjB,aAAa,GAC3D,Q","ignoreList":[]}