import{i as initRange,e as linearish,f as bisect,s as slice}from"./linear-31cb5780.js";function quantize(){var n=0,r=1,i=1,t=[.5],e=[0,1],u;function a(n){return n<=n?e[bisect(t,n,0,i)]:u}function c(){var e=-1;t=new Array(i);while(++e<i)t[e]=((e+1)*r-(e-i)*n)/(i+1);return a}a.domain=function(i){return arguments.length?(n=+i[0],r=+i[1],c()):[n,r]};a.range=function(n){return arguments.length?(i=(e=slice.call(n)).length-1,c()):e.slice()};a.invertExtent=function(u){var a=e.indexOf(u);return a<0?[NaN,NaN]:a<1?[n,t[0]]:a>=i?[t[i-1],r]:[t[a-1],t[a]]};a.unknown=function(n){return arguments.length?(u=n,a):a};a.thresholds=function(){return t.slice()};a.copy=function(){return quantize().domain([n,r]).range(e).unknown(u)};return initRange.apply(linearish(a),arguments)}export{quantize as q};
//# sourceMappingURL=quantize-3ec98eb2.js.map