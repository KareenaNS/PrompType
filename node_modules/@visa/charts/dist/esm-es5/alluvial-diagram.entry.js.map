{"version":3,"names":["linkSource","d","source","linkTarget","target","link","curve","x","pointX","y","pointY","context","output","path","withPath","buffer","argv","slice","call","arguments","s","apply","this","t","lineStart","point","lineEnd","_","length","constant","linkHorizontal","bumpX","linkVertical","bumpY","propDefaultValues","Utils","AlluvialDiagramDefaultValues","highestHeadingLevel","mainTitle","subTitle","text","height","width","layout","layoutHorizontal","margin","top","bottom","right","left","padding","localization","sourceAccessor","targetAccessor","valueAccessor","groupAccessor","nodeIDAccessor","nodeConfig","fill","alignment","compare","linkConfig","visible","fillMode","opacity","accessibility","animationConfig","colorPalette","colorPaletteCategorical","dataLabel","annotations","hoverStyle","clickStyle","hoverOpacity","cursor","tooltipLabel","showTooltip","suppressEvents","clickHighlight","alluvialDiagramCss","AlluvialDiagramStyle0","getGlobalInstances","configLocalization","getActiveLanguageString","initializeDescriptionRoot","setAccessibilityController","initializeElementAccess","setElementFocusHandler","setElementAccessID","setAccessChartCounts","hideNonessentialGroups","setAccessTitle","setAccessSubtitle","setAccessLongDescription","setAccessExecutiveSummary","setAccessPurpose","setAccessContext","setAccessStatistics","setAccessStructure","setAccessAnnotation","retainAccessFocus","checkAccessFocus","setElementInteractionAccessState","setAccessibilityDescriptionWidth","roundTo","resolveLabelCollision","transitionEndAll","annotate","checkClicked","checkInteraction","convertVisaColor","createTextStrokeFilter","drawTooltip","findTagLevel","formatDataLabel","formatStats","getColors","getContrastingStroke","getPadding","checkHovered","initTooltipStyle","overrideTitleTooltip","scopeDataKeys","chartAccessors","sankey","sankeyCenter","sankeyJustify","sankeyLeft","sankeyLinkHorizontal","sankeyLinkVertical","sankeyRight","prepareRenderChange","visaColors","validateAccessibilityProps","validateLocalizationProps","setSubTitle","AlluvialDiagram","shouldValidateAccessibility","shouldValidateLocalization","innerInteractionKeys","topLevel","bottomLevel","sourceLinksString","targetLinksString","valueString","updated","shouldSetDimensions","shouldUpdateData","shouldSetColors","shouldSetSubTitle","shouldSetTagLevels","shouldRedrawWrapper","shouldUpdateTableData","shouldUpdateDescriptionWrapper","shouldSetChartAccessibilityCount","shouldSetChartAccessibilityTitle","shouldSetChartAccessibilitySubtitle","shouldSetChartAccessibilityLongDescription","shouldSetChartAccessibilityExecutiveSummary","shouldSetChartAccessibilityPurpose","shouldSetChartAccessibilityContext","shouldSetChartAccessibilityStatisticalNotes","shouldSetChartAccessibilityStructureNotes","shouldSetParentSVGAccessibility","shouldSetGeometryAccessibilityAttributes","shouldSetGeometryAriaLabels","shouldSetGroupAccessibilityLabel","shouldSetSelectionClass","shouldSetAnnotationAccessibility","shouldSetGlobalSelections","shouldSetTestingAttributes","shouldDrawInteractionState","shouldEnterUpdateExit","shouldUpdateNodeGeometries","shouldUpdateNodeStyle","shouldUpdateLinkGeometries","shouldUpdateLinkStyle","shouldDrawNodeLabels","shouldSetNodeDimensions","shouldCallSankeyGenerator","shouldUpdateAnnotations","shouldValidateIdAccessor","shouldValidateLabelText","shouldValidateLinkFillMode","shouldValidateNodeAlignment","shouldValidateInteractionKeys","shouldValidateLinkGroups","shouldUpdateCursor","shouldBindInteractivity","shouldResetRoot","shouldSetNodeLabelOpacity","shouldSetLocalizationConfig","prototype","dataWatcher","_newData","_oldData","idWatcher","newID","_oldID","console","error","headingWatcher","_newVal","_oldVal","mainTitleWatcher","subTitleWatcher","dimensionWatcher","layoutWatcher","warn","sourceAccessorWatcher","targetAccessorWatcher","valueAccessorWatcher","groupAccessorWatcher","nodeIDAccessorWatcher","nodeConfigWatcher","newAlignmentVal","oldAlignmentVal","newCompareVal","oldCompareVal","newFillVal","oldFillVal","newWidthVal","oldWidthVal","newPaddingVal","oldPaddingVal","linkConfigWatcher","newFillModeVal","oldFillModeVal","newVisibleVal","oldVisibleVal","colorWatcher","interactionStyleWatcher","cursorWatcher","hoverOpacityWatcher","dataLabelWatcher","newLabelAccessorVal","labelAccessor","oldLabelAccessorVal","tooltipLabelWatcher","showTooltipWatcher","accessibilityWatcher","newTitle","title","oldTitle","newExecutiveSummary","executiveSummary","oldExecutiveSummary","newPurpose","purpose","oldPurpose","newLongDescription","longDescription","oldLongDescription","newContext","contextExplanation","oldContext","newStatisticalNotes","statisticalNotes","oldStatisticalNotes","newStructureNotes","structureNotes","oldStructureNotes","newincludeDataKeyNames","includeDataKeyNames","oldincludeDataKeyNames","newElementDescriptionAccessor","elementDescriptionAccessor","oldElementDescriptionAccessor","newKeyNav","keyboardNavConfig","disabled","oldKeyNav","newInterface","elementsAreInterface","oldInterface","localizationWatcher","newLanguage","language","oldLanguage","newNumeralLocale","numeralLocale","oldNumeralLocale","annotationsWatcher","clickWatcher","hoverWatcher","interactionWatcher","dataKeyNamesWatcher","suppressWatcher","unitTestWatcher","componentWillLoad","_this","chartID","uniqueID","uuid","initialLoadEvent","emit","Promise","resolve","duration","defaults","alluvialDiagramEl","id","setLocalizationConfig","setTagLevels","prepareData","setDimensions","validateIdAccessor","validateLabelText","validateLinkFillMode","validateNodeAlignment","validateInteractionKeys","validateLinkGroups","shouldValidateAccessibilityProps","shouldValidateLocalizationProps","setColors","setNodeDimensions","callSankeyGenerator","setTableData","componentWillUpdate","componentDidLoad","renderRootElements","setTooltipInitialStyle","setChartDescriptionWrapper","setChartAccessibilityTitle","setChartAccessibilitySubtitle","setChartAccessibilityLongDescription","setChartAccessibilityExecutiveSummary","setChartAccessibilityPurpose","setChartAccessibilityContext","setChartAccessibilityStatisticalNotes","setChartAccessibilityStructureNotes","setParentSVGAccessibility","reSetRoot","setSubTitleElements","setGlobalSelections","setTestingAttributes","enterLinkGeometries","updateLinkGeometries","exitLinkGeometries","enterNodeGeometries","updateNodeGeometries","exitNodeGeometries","enterNodeLabels","updateNodeLabels","exitNodeLabels","updateLinkStyle","drawNodeGeometries","drawLinkGeometries","setGeometryAccessibilityAttributes","setGeometryAriaLabels","setGroupAccessibilityID","setChartCountAccessibility","setSelectedClass","updateCursor","drawNodeLabels","bindInteractivity","drawAnnotations","setAnnotationAccessibility","onChangeHandler","root","node","then","initialLoadEndEvent","componentDidUpdate","updateNodeStyle","updateInteractionState","setNodeLabelOpacity","drawEndEvent","innerWidth","innerHeight","innerPaddedHeight","innerPaddedWidth","nodeList","linkList","linkData","forEach","obj","i","linkObj","value","data","nodeData","createNodeList","map","some","e","uniqueSourceID","push","uniqueTargetID","innerLabelAccessor","innerIDAccessor","innerLinkFillMode","innerNodeAlignment","interactionKeys","groupKeys","filter","a","indexOf","windowInstances","languageString","i18Next","languageObject","getResourceBundle","numeralObject","numeral","localeData","skipValidation","Object","assign","disableValidation","onClickEvent","undefined","clickEvent","getLanguageString","uniqueNodeAccessors","nodeAccessors","singleAccessors","nestedAccessors","objectName","objectAccessors","formatAccessors","nodeKeys","tableData","getScopedTableData","preppedData","nodes","tableColumns","keys","linkChartAccessors","secondaryTableData","links","secondaryTableColumns","keyMap","scopedData","dataRecord","scopedDataRecord","field","alluvialProperties","nodeId","nodeWidth","nodePadding","nodeAlign","nodeSort","size","sankeyData","nodeCount","max","layer","svg","select","append","attr","rootG","nodeG","linkG","labelG","subTitleG","tooltipG","updateLinks","updatingLabels","changeSvg","selection","namespace","easing","easeCircleIn","changeRoot","concat","changeRootG","currentNodeLayers","previousNodeLayers","dataBoundToNodes","selectAll","enterNodes","enter","exitNodes","exit","updateNodes","merge","updatingNodesWithoutEnteringNodes","item","includes","previousMaxNodeLayer","previousMinNodeLayer","min","updatingNodesWithoutExitingNodes","currentMaxNodeLayer","currentMinNodeLayer","each","n","linkDataGroups","dataBoundToLinkGroups","enterLinkGroups","exitLinkGroups","remove","updateLinkGroups","dataBoundToLinks","sourceLinks","enterLinks","exitLinks","exitSize","enterSize","dataBoundToLabels","enteringLabels","exitingLabels","unitTest","newColumnInterpolationPosition","x0","y0","x1","y1","newColumnInterpolationPositionVertical","interrupt","linkOpacity","classed","on","onClickHandler","onHoverHandler","onMouseOutHandler","linelength","getTotalLength","Math","transition","ease","hoverHighlight","removeTemporaryClickedLinks","clicked","drawDuplicateClickedLink","focusDidExist","parentGNode","transitionEndEvent","inputElement","className","parent","parentNode","sourceCopy","cloneNode","style","parentOfParent","validSiblings","_groups","lastGroup","appendChild","color","colorArr","index","delay","placeNodeLabels","_a","xPlacement","yPlacement","offsetX","offsetY","textAnchor","placement","hiddenOpacity","Number","EPSILON","widthAllNodesNoLinks","noLinksLeftPadding","matchHover","addStrokeUnder","hideOnly","collisionHideOnly","cloneAdjustment","nodeLabelUpdate","format","collisionPlacement_1","collisionPlacement","nodeRects","clonedRects","bitmaps","labelSelection","avoidMarks","validPositions","offsets","accessors","addCollisionClass","prevOpacity","styleVisibility","targetOpacity","labelsAdded","labelsRemoved","removeOnly","collisionPlacement_2","suppressMarkDraw","positionData","preppedAnnotations","datum","internalData","positionType","hasOwnProperty","findIndex","ignoreScales","colors","rootEle","chartTag","redraw","disableKeyNav","hideDataTable","hideDataTableButton","description","geomType","includeKeyNames","dataKeys","dataKeyNames","groupName","_d","selected","selectable","onChangeFunc","added","removed","hoverEvent","eventsTooltip","evt","event","isToShow","mouseOutEvent","xAccessor","yAccessor","ordinalAccessor","chartType","render","drawStartEvent","init","h","key","class","isInteractive","hasCousinNavigation","display","isCompact","secondaryData","exceptions","exception"],"sources":["node_modules/d3-shape/src/link.js","src/components/alluvial-diagram/alluvial-diagram-default-values.ts","src/components/alluvial-diagram/alluvial-diagram.scss?tag=alluvial-diagram","src/components/alluvial-diagram/alluvial-diagram.tsx"],"sourcesContent":["import {slice} from \"./array.js\";\nimport constant from \"./constant.js\";\nimport {bumpX, bumpY, bumpRadial} from \"./curve/bump.js\";\nimport {withPath} from \"./path.js\";\nimport {x as pointX, y as pointY} from \"./point.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nexport function link(curve) {\n  let source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null,\n      output = null,\n      path = withPath(link);\n\n  function link() {\n    let buffer;\n    const argv = slice.call(arguments);\n    const s = source.apply(this, argv);\n    const t = target.apply(this, argv);\n    if (context == null) output = curve(buffer = path());\n    output.lineStart();\n    argv[0] = s, output.point(+x.apply(this, argv), +y.apply(this, argv));\n    argv[0] = t, output.point(+x.apply(this, argv), +y.apply(this, argv));\n    output.lineEnd();\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), link) : context;\n  };\n\n  return link;\n}\n\nexport function linkHorizontal() {\n  return link(bumpX);\n}\n\nexport function linkVertical() {\n  return link(bumpY);\n}\n\nexport function linkRadial() {\n  const l = link(bumpRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","/**\n * Copyright (c) 2021, 2022, 2023 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport Utils from '@visa/visa-charts-utils';\n\nconst { propDefaultValues } = Utils;\nexport class AlluvialDiagramDefaultValues {\n  static readonly highestHeadingLevel = propDefaultValues.highestHeadingLevel;\n  static readonly mainTitle = 'Alluvial Diagram Title';\n  static readonly subTitle = propDefaultValues.subTitle.text;\n  static readonly height = 300;\n  static readonly width = 650;\n  static readonly layout = propDefaultValues.layoutHorizontal;\n  static readonly margin = {\n    top: 300 * 0.01,\n    bottom: 300 * 0.01,\n    right: 650 * 0.01,\n    left: 650 * 0.01\n  };\n  static readonly padding = {\n    top: 20,\n    bottom: 50,\n    right: 50,\n    left: 50\n  };\n\n  static readonly localization = propDefaultValues.localization;\n\n  static readonly sourceAccessor = 'source';\n  static readonly targetAccessor = 'target';\n  static readonly valueAccessor = 'value';\n  static readonly groupAccessor = '';\n  // static readonly labelAccessor = '';\n  static readonly nodeIDAccessor = 'id';\n\n  static readonly nodeConfig = {\n    fill: false,\n    width: 12,\n    padding: 20,\n    alignment: 'left',\n    compare: false\n  };\n\n  static readonly linkConfig = {\n    visible: true,\n    fillMode: 'none',\n    opacity: 0.3\n  };\n\n  static readonly accessibility = propDefaultValues.accessibility;\n  static readonly animationConfig = propDefaultValues.animationConfig;\n  static readonly colorPalette = propDefaultValues.colorPaletteCategorical;\n  static readonly dataLabel = propDefaultValues.dataLabel;\n  static readonly dataKeyNames;\n  static readonly annotations = propDefaultValues.annotations;\n\n  static readonly hoverStyle = propDefaultValues.hoverStyle;\n  static readonly clickStyle = propDefaultValues.clickStyle;\n  static readonly hoverOpacity = propDefaultValues.hoverOpacity;\n  static readonly cursor = propDefaultValues.cursor;\n  static readonly tooltipLabel = propDefaultValues.tooltipLabel;\n  static readonly showTooltip = propDefaultValues.showTooltip;\n  static readonly suppressEvents = propDefaultValues.suppressEvents;\n  static readonly hoverHighlight;\n  static readonly clickHighlight = propDefaultValues.clickHighlight;\n}\n","/**\n * Copyright (c) 2021, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nalluvial-diagram {\n  .annotations {\n    pointer-events: none;\n    .handle {\n      pointer-events: all;\n    }\n  }\n\n  .screen-reader-info {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n\n  .data-table-link {\n    color: #767676;\n    text-decoration: none;\n    font-size: 12px;\n    margin-left: 5%;\n  }\n\n  .hidden {\n    display: none;\n  }\n\n  cursor: default;\n\n  .node rect {\n    cursor: move;\n    // fill-opacity: 0.9;\n    // shape-rendering: crispEdges;\n  }\n\n  .node text {\n    pointer-events: none;\n    text-shadow: 0 1px 0 #fff;\n  }\n\n  .link {\n    fill: none;\n    stroke: #000;\n    stroke-opacity: 0.2;\n  }\n\n  .link:hover {\n    stroke-opacity: 0.5;\n  }\n}\n","/**\n * Copyright (c) 2021, 2022, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport { Component, Element, Prop, Watch, h, Event, EventEmitter } from '@stencil/core';\n\nimport { select, event } from 'd3-selection';\nimport { min, max } from 'd3-array';\nimport { linkHorizontal, linkVertical } from 'd3-shape';\nimport { easeCircleIn } from 'd3-ease';\n\nimport {\n  IBoxModelType,\n  ILocalizationType,\n  IHoverStyleType,\n  IClickStyleType,\n  IDataLabelType,\n  ITooltipLabelType,\n  IAccessibilityType,\n  IAnimationConfig,\n  INodeConfigType,\n  ILinkConfigType,\n  ISubTitleType\n} from '@visa/charts-types';\nimport { AlluvialDiagramDefaultValues } from './alluvial-diagram-default-values';\nimport { v4 as uuid } from 'uuid';\nimport 'd3-transition';\nimport Utils from '@visa/visa-charts-utils';\nconst {\n  getGlobalInstances,\n  configLocalization,\n  getActiveLanguageString,\n  initializeDescriptionRoot,\n  setAccessibilityController,\n  initializeElementAccess,\n  setElementFocusHandler,\n  setElementAccessID,\n  setAccessChartCounts,\n  hideNonessentialGroups,\n  setAccessTitle,\n  setAccessSubtitle,\n  setAccessLongDescription,\n  setAccessExecutiveSummary,\n  setAccessPurpose,\n  setAccessContext,\n  setAccessStatistics,\n  setAccessStructure,\n  setAccessAnnotation,\n  retainAccessFocus,\n  checkAccessFocus,\n  setElementInteractionAccessState,\n  setAccessibilityDescriptionWidth,\n  roundTo,\n  resolveLabelCollision,\n  transitionEndAll,\n  annotate,\n  checkClicked,\n  checkInteraction,\n  convertVisaColor,\n  createTextStrokeFilter,\n  drawTooltip,\n  findTagLevel,\n  formatDataLabel,\n  formatStats,\n  getColors,\n  getContrastingStroke,\n  getPadding,\n  // getScopedData,\n  checkHovered,\n  initTooltipStyle,\n  overrideTitleTooltip,\n  scopeDataKeys,\n  chartAccessors,\n  sankey,\n  sankeyCenter,\n  sankeyJustify,\n  sankeyLeft,\n  sankeyLinkHorizontal,\n  sankeyLinkVertical,\n  sankeyRight,\n  prepareRenderChange,\n  visaColors,\n  validateAccessibilityProps,\n  validateLocalizationProps,\n  setSubTitle\n} = Utils;\n\n@Component({\n  tag: 'alluvial-diagram',\n  styleUrl: 'alluvial-diagram.scss'\n})\nexport class AlluvialDiagram {\n  @Event() clickEvent: EventEmitter;\n  @Event() hoverEvent: EventEmitter;\n  @Event() mouseOutEvent: EventEmitter;\n  @Event() initialLoadEvent: EventEmitter;\n  @Event() initialLoadEndEvent: EventEmitter;\n  @Event() drawStartEvent: EventEmitter;\n  @Event() drawEndEvent: EventEmitter;\n  @Event() transitionEndEvent: EventEmitter;\n\n  // Chart Attributes (1/7)\n  @Prop({ mutable: true }) mainTitle: string = AlluvialDiagramDefaultValues.mainTitle;\n  @Prop({ mutable: true }) subTitle: string | ISubTitleType = AlluvialDiagramDefaultValues.subTitle;\n  @Prop({ mutable: true }) height: number = AlluvialDiagramDefaultValues.height;\n  @Prop({ mutable: true }) width: number = AlluvialDiagramDefaultValues.width;\n  @Prop({ mutable: true }) highestHeadingLevel: string | number = AlluvialDiagramDefaultValues.highestHeadingLevel;\n  @Prop({ mutable: true }) margin: IBoxModelType = AlluvialDiagramDefaultValues.margin;\n  @Prop({ mutable: true }) padding: IBoxModelType = AlluvialDiagramDefaultValues.padding;\n  @Prop({ mutable: true }) layout: string = AlluvialDiagramDefaultValues.layout;\n\n  // Data (2/7)\n  @Prop() linkData: object[];\n  @Prop() nodeData: object[];\n  @Prop() uniqueID: string;\n  @Prop({ mutable: true }) localization: ILocalizationType = AlluvialDiagramDefaultValues.localization;\n  @Prop({ mutable: true }) sourceAccessor: string = AlluvialDiagramDefaultValues.sourceAccessor;\n  @Prop({ mutable: true }) targetAccessor: string = AlluvialDiagramDefaultValues.targetAccessor;\n  @Prop({ mutable: true }) valueAccessor: string = AlluvialDiagramDefaultValues.valueAccessor;\n  @Prop({ mutable: true }) groupAccessor: string = AlluvialDiagramDefaultValues.groupAccessor;\n  @Prop({ mutable: true }) nodeIDAccessor: string = AlluvialDiagramDefaultValues.nodeIDAccessor;\n\n  // Color & Shape (4/7)\n  @Prop({ mutable: true }) nodeConfig: INodeConfigType = AlluvialDiagramDefaultValues.nodeConfig;\n  @Prop({ mutable: true }) linkConfig: ILinkConfigType = AlluvialDiagramDefaultValues.linkConfig;\n  @Prop({ mutable: true }) colorPalette: string = AlluvialDiagramDefaultValues.colorPalette;\n  @Prop({ mutable: true }) colors: string[];\n  @Prop({ mutable: true }) hoverStyle: IHoverStyleType = AlluvialDiagramDefaultValues.hoverStyle;\n  @Prop({ mutable: true }) clickStyle: IClickStyleType = AlluvialDiagramDefaultValues.clickStyle;\n  @Prop({ mutable: true }) cursor: string = AlluvialDiagramDefaultValues.cursor;\n  @Prop({ mutable: true }) hoverOpacity: number = AlluvialDiagramDefaultValues.hoverOpacity;\n  @Prop({ mutable: true }) animationConfig: IAnimationConfig = AlluvialDiagramDefaultValues.animationConfig;\n\n  // Data label (5/7)\n  @Prop({ mutable: true }) dataLabel: IDataLabelType = AlluvialDiagramDefaultValues.dataLabel;\n  @Prop({ mutable: true }) dataKeyNames: object;\n  @Prop({ mutable: true }) showTooltip: boolean = AlluvialDiagramDefaultValues.showTooltip;\n  @Prop({ mutable: true }) tooltipLabel: ITooltipLabelType = AlluvialDiagramDefaultValues.tooltipLabel;\n  @Prop({ mutable: true }) accessibility: IAccessibilityType = AlluvialDiagramDefaultValues.accessibility;\n  @Prop({ mutable: true }) annotations: object[] = AlluvialDiagramDefaultValues.annotations;\n\n  // Interactivity (7/7)\n  @Prop({ mutable: true }) suppressEvents: boolean = AlluvialDiagramDefaultValues.suppressEvents;\n  @Prop({ mutable: true }) hoverHighlight: object;\n  @Prop({ mutable: true }) clickHighlight: object[] = AlluvialDiagramDefaultValues.clickHighlight;\n  @Prop({ mutable: true }) interactionKeys: string[];\n\n  // Testing (8/7)\n  @Prop() unitTest: boolean = false;\n  //  @Prop() debugMode: boolean = false;\n\n  @Element()\n  alluvialDiagramEl: HTMLElement;\n  shouldValidateAccessibility: boolean = true;\n  shouldValidateLocalization: boolean = true;\n  svg: any;\n  root: any;\n  rootG: any;\n  nest: any;\n  alluvialProperties: any;\n  labels: any;\n  tooltipG: any;\n  defaults: boolean;\n  duration: number;\n  innerHeight: number;\n  innerWidth: number;\n  innerPaddedHeight: number;\n  innerPaddedWidth: number;\n  dataTest: any;\n  chartID: string;\n  enterNodeGroups: any;\n  exitNodeGroups: any;\n  updateNodeGroups: any;\n  enterNodes: any;\n  exitNodes: any;\n  updateNodes: any;\n  enterLinks: any;\n  exitLinks: any;\n  enterLinkGroups: any;\n  exitLinkGroups: any;\n  updateLinkGroups: any;\n  updateLinks: any;\n  enteringLabels: any;\n  exitingLabels: any;\n  updatingLabels: any;\n  nodeList: any;\n  linkList: any;\n  innerNodeData: any;\n  innerLinkData: any;\n  preppedData: any;\n  oldNodeCount: any;\n  nodeCount: any;\n  newColumn: any;\n  nodeG: any;\n  linkG: any;\n  labelG: any;\n  subTitleG: any;\n  innerLinkFillMode: any;\n  innerLabelAccessor: any;\n  innerIDAccessor: any;\n  innerNodeAlignment: any;\n  innerNodeInteractionKeys: any;\n  innerLinkInteractionKeys: any;\n  innerInteractionKeys: any = [];\n  colorArr: any;\n  noLinksLeftPadding: any;\n  widthAllNodesNoLinks: any;\n  previousNodeLayers: any;\n  currentNodeLayers: any;\n  previousMinNodeLayer: any;\n  previousMaxNodeLayer: any;\n  currentMaxNodeLayer: any;\n  currentMinNodeLayer: any;\n  topLevel: string = 'h2';\n  bottomLevel: string = 'p';\n  sourceLinksString: string = 'sourceLinks';\n  targetLinksString: string = 'targetLinks';\n  valueString: string = 'value';\n  groupKeys: any;\n  tableData: any;\n  tableColumns: any;\n  secondaryTableData: any;\n  secondaryTableColumns: any;\n  updated: boolean = true;\n  enterSize: number;\n  exitSize: number;\n  shouldSetDimensions: boolean = false;\n  shouldUpdateData: boolean = false;\n  shouldSetColors: boolean = false;\n  shouldSetSubTitle: boolean = false;\n  shouldSetTagLevels: boolean = false;\n  shouldRedrawWrapper: boolean = false;\n  shouldUpdateTableData: boolean = false;\n  shouldUpdateDescriptionWrapper: boolean = false;\n  shouldSetChartAccessibilityCount: boolean = false;\n  shouldSetChartAccessibilityTitle: boolean = false;\n  shouldSetChartAccessibilitySubtitle: boolean = false;\n  shouldSetChartAccessibilityLongDescription: boolean = false;\n  shouldSetChartAccessibilityExecutiveSummary: boolean = false;\n  shouldSetChartAccessibilityPurpose: boolean = false;\n  shouldSetChartAccessibilityContext: boolean = false;\n  shouldSetChartAccessibilityStatisticalNotes: boolean = false;\n  shouldSetChartAccessibilityStructureNotes: boolean = false;\n  shouldSetParentSVGAccessibility: boolean = false;\n  shouldSetGeometryAccessibilityAttributes: boolean = false;\n  shouldSetGeometryAriaLabels: boolean = false;\n  shouldSetGroupAccessibilityLabel: boolean = false;\n  shouldSetSelectionClass: boolean = false;\n  shouldSetAnnotationAccessibility: boolean = false;\n  shouldSetGlobalSelections: boolean = false;\n  shouldSetTestingAttributes: boolean = false;\n  shouldDrawInteractionState: boolean = false;\n  shouldEnterUpdateExit: boolean = false;\n  shouldUpdateNodeGeometries: boolean = false;\n  shouldUpdateNodeStyle: boolean = false;\n  shouldUpdateLinkGeometries: boolean = false;\n  shouldUpdateLinkStyle: boolean = false;\n  shouldDrawNodeLabels: boolean = false;\n  shouldSetNodeDimensions: boolean = false;\n  shouldCallSankeyGenerator: boolean = false;\n  shouldUpdateAnnotations: boolean = false;\n  shouldValidateIdAccessor: boolean = false;\n  shouldValidateLabelText: boolean = false;\n  shouldValidateLinkFillMode: boolean = false;\n  shouldValidateNodeAlignment: boolean = false;\n  shouldValidateInteractionKeys: boolean = false;\n  shouldValidateLinkGroups: boolean = false;\n  shouldUpdateCursor: boolean = false;\n  shouldBindInteractivity: boolean = false;\n  shouldResetRoot: boolean = false;\n  shouldSetNodeLabelOpacity: boolean = false;\n  shouldSetLocalizationConfig: boolean = false;\n  bitmaps: any;\n\n  @Watch('nodeData')\n  @Watch('linkData')\n  dataWatcher(_newData, _oldData) {\n    this.updated = true;\n    this.shouldUpdateData = true;\n    this.shouldSetColors = true;\n    this.shouldValidateIdAccessor = true;\n    this.shouldSetNodeDimensions = true;\n    this.shouldCallSankeyGenerator = true;\n    this.shouldUpdateTableData = true;\n    this.shouldValidateLinkGroups = true;\n    this.shouldValidateAccessibility = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateNodeGeometries = true;\n    this.shouldUpdateNodeStyle = true;\n    this.shouldUpdateLinkGeometries = true;\n    this.shouldDrawNodeLabels = true;\n    this.shouldUpdateLinkStyle = true;\n    this.shouldDrawInteractionState = true;\n    // this.shouldSetNodeLabelOpacity = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('uniqueID')\n  idWatcher(newID, _oldID) {\n    console.error(\n      'Change detected in prop uniqueID from value ' +\n        _oldID +\n        ' to value ' +\n        newID +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.chartID = newID || 'alluvial-diagram-' + uuid();\n    // this.alluvialDiagramEl.id = this.chartID;\n    // this.shouldValidateAccessibility = true;\n    // this.shouldUpdateDescriptionWrapper = true;\n    // this.shouldSetParentSVGAccessibility = true;\n    // this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('highestHeadingLevel')\n  headingWatcher(_newVal, _oldVal) {\n    this.shouldRedrawWrapper = true;\n    this.shouldSetTagLevels = true;\n    this.shouldSetChartAccessibilityCount = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('mainTitle')\n  mainTitleWatcher(_newVal, _oldVal) {\n    this.shouldValidateAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('subTitle')\n  subTitleWatcher(_newVal, _oldVal) {\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('height')\n  @Watch('width')\n  @Watch('padding')\n  @Watch('margin')\n  dimensionWatcher(_newVal, _oldVal) {\n    this.shouldSetDimensions = true;\n    this.shouldSetNodeDimensions = true;\n    this.shouldResetRoot = true;\n    this.shouldCallSankeyGenerator = true;\n    this.shouldSetGlobalSelections = true;\n    // this.shouldEnterUpdateExit = true;\n    this.shouldUpdateNodeGeometries = true;\n    this.shouldUpdateNodeStyle = true;\n    this.shouldUpdateLinkGeometries = true;\n    this.shouldUpdateLinkStyle = true;\n    this.shouldDrawNodeLabels = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('layout')\n  layoutWatcher(_newVal, _oldVal) {\n    this.shouldSetDimensions = true;\n    this.shouldSetNodeDimensions = true;\n    this.shouldResetRoot = true;\n    this.shouldCallSankeyGenerator = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldUpdateNodeGeometries = true;\n    this.shouldUpdateNodeStyle = true;\n    this.shouldUpdateLinkGeometries = true;\n    this.shouldUpdateLinkStyle = true;\n    this.shouldDrawNodeLabels = true;\n    this.shouldUpdateAnnotations = true;\n    console.warn(\n      'Change detected in prop layout from value ' +\n        _oldVal +\n        ' to value ' +\n        _newVal +\n        '. Transitions have yet to be designed in VCC for this prop.'\n    );\n  }\n\n  @Watch('sourceAccessor')\n  sourceAccessorWatcher(_newVal, _oldVal) {\n    console.error(\n      'Change detected in prop sourceAccessor from value ' +\n        _oldVal +\n        ' to value ' +\n        _newVal +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.shouldUpdateData = true;\n    // this.shouldSetNodeDimensions = true;\n    // this.shouldCallSankeyGenerator = true;\n    // this.shouldUpdateTableData = true;\n    // this.shouldSetGlobalSelections = true;\n    // this.shouldEnterUpdateExit = true;\n    // this.shouldUpdateNodeGeometries = true;\n    // this.shouldUpdateNodeStyle = true;\n    // this.shouldUpdateLinkGeometries = true;\n    // this.shouldUpdateLinkStyle = true;\n    // this.shouldDrawInteractionState = true;\n    // this.shouldSetNodeLabelOpacity = true;\n    // this.shouldDrawNodeLabels = true;\n    // this.shouldUpdateAnnotations = true;\n    // this.shouldSetGeometryAriaLabels = true;\n    // if (!(this.interactionKeys && this.interactionKeys.length)) {\n    //   this.shouldValidateInteractionKeys = true;\n    //   this.shouldSetSelectionClass = true;\n    // }\n  }\n\n  @Watch('targetAccessor')\n  targetAccessorWatcher(_newVal, _oldVal) {\n    console.error(\n      'Change detected in prop targetAccessor from value ' +\n        _oldVal +\n        ' to value ' +\n        _newVal +\n        '. This prop cannot be changed after component has loaded.'\n    );\n\n    // this.shouldUpdateData = true;\n    // this.shouldSetNodeDimensions = true;\n    // this.shouldCallSankeyGenerator = true;\n    // this.shouldUpdateTableData = true;\n    // this.shouldSetGlobalSelections = true;\n    // this.shouldEnterUpdateExit = true;\n    // this.shouldUpdateNodeGeometries = true;\n    // this.shouldUpdateNodeStyle = true;\n    // this.shouldUpdateLinkGeometries = true;\n    // this.shouldUpdateLinkStyle = true;\n    // this.shouldDrawInteractionState = true;\n    // this.shouldSetNodeLabelOpacity = true;\n    // this.shouldDrawNodeLabels = true;\n    // this.shouldUpdateAnnotations = true;\n    // this.shouldSetGeometryAriaLabels = true;\n    // if (!(this.interactionKeys && this.interactionKeys.length)) {\n    //   this.shouldValidateInteractionKeys = true;\n    //   this.shouldSetSelectionClass = true;\n    // }\n  }\n\n  @Watch('valueAccessor')\n  valueAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldSetNodeDimensions = true;\n    this.shouldCallSankeyGenerator = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateNodeGeometries = true;\n    this.shouldUpdateNodeStyle = true;\n    this.shouldUpdateLinkGeometries = true;\n    this.shouldUpdateLinkStyle = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetNodeLabelOpacity = true;\n    this.shouldDrawNodeLabels = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('groupAccessor')\n  groupAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldValidateLinkFillMode = true;\n    this.shouldValidateLinkGroups = true;\n    this.shouldSetNodeDimensions = true;\n    this.shouldCallSankeyGenerator = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateNodeGeometries = true;\n    this.shouldUpdateNodeStyle = true;\n    this.shouldUpdateLinkGeometries = true;\n    this.shouldUpdateLinkStyle = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetNodeLabelOpacity = true;\n    this.shouldDrawNodeLabels = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('nodeIDAccessor')\n  nodeIDAccessorWatcher(_newVal, _oldVal) {\n    console.error(\n      'Change detected in prop nodeIDAccessor from value ' +\n        _oldVal +\n        ' to value ' +\n        _newVal +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.shouldUpdateData = true;\n    // this.shouldValidateIdAccessor = true;\n    // this.shouldSetNodeDimensions = true;\n    // this.shouldCallSankeyGenerator = true;\n    // this.shouldUpdateTableData = true;\n    // this.shouldSetGlobalSelections = true;\n    // this.shouldEnterUpdateExit = true;\n    // this.shouldUpdateNodeGeometries = true;\n    // this.shouldUpdateNodeStyle = true;\n    // this.shouldUpdateLinkGeometries = true;\n    // this.shouldUpdateLinkStyle = true;\n    // this.shouldDrawInteractionState = true;\n    // this.shouldSetNodeLabelOpacity = true;\n    // this.shouldDrawNodeLabels = true;\n    // this.shouldUpdateAnnotations = true;\n    // this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('nodeConfig')\n  nodeConfigWatcher(_newVal, _oldVal) {\n    const newAlignmentVal = _newVal && _newVal.alignment;\n    const oldAlignmentVal = _oldVal && _oldVal.alignment;\n    const newCompareVal = _newVal && _newVal.compare;\n    const oldCompareVal = _oldVal && _oldVal.compare;\n    const newFillVal = _newVal && _newVal.fill;\n    const oldFillVal = _oldVal && _oldVal.fill;\n    const newWidthVal = _newVal && _newVal.width;\n    const oldWidthVal = _oldVal && _oldVal.width;\n    const newPaddingVal = _newVal && _newVal.padding;\n    const oldPaddingVal = _oldVal && _oldVal.padding;\n    if (newAlignmentVal !== oldAlignmentVal) {\n      this.shouldValidateNodeAlignment = true;\n    }\n    if (\n      newAlignmentVal !== oldAlignmentVal ||\n      newCompareVal !== oldCompareVal ||\n      newWidthVal !== oldWidthVal ||\n      newPaddingVal !== oldPaddingVal\n    ) {\n      this.shouldSetNodeDimensions = true;\n      this.shouldCallSankeyGenerator = true;\n      this.shouldSetGlobalSelections = true;\n      this.shouldDrawInteractionState = true;\n      this.shouldSetGeometryAccessibilityAttributes = true;\n      this.shouldUpdateNodeGeometries = true;\n      this.shouldUpdateLinkGeometries = true;\n      this.shouldDrawNodeLabels = true;\n      this.shouldUpdateAnnotations = true;\n    }\n    if (newFillVal !== oldFillVal) {\n      this.shouldUpdateNodeStyle = true;\n      this.shouldUpdateLinkStyle = true;\n    }\n  }\n\n  @Watch('linkConfig')\n  linkConfigWatcher(_newVal, _oldVal) {\n    const newFillModeVal = _newVal && _newVal.fillMode;\n    const oldFillModeVal = _oldVal && _oldVal.fillMode;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    // const newOpacityVal = _newVal && _newVal.opacity;\n    // const oldOpacityVal = _oldVal && _oldVal.opacity;\n    if (newFillModeVal !== oldFillModeVal) {\n      this.shouldValidateLinkFillMode = true;\n      this.shouldSetGlobalSelections = true;\n      this.shouldEnterUpdateExit = true;\n      this.shouldUpdateLinkGeometries = true;\n    }\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetNodeDimensions = true;\n      this.shouldCallSankeyGenerator = true;\n      this.shouldSetGlobalSelections = true;\n      this.shouldSetNodeLabelOpacity = true;\n      this.shouldUpdateNodeGeometries = true;\n      this.shouldUpdateLinkGeometries = true;\n      this.shouldDrawNodeLabels = true;\n      this.shouldUpdateAnnotations = true;\n    }\n    this.shouldUpdateLinkStyle = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetTestingAttributes = true;\n    // if (newOpacityVal !== oldOpacityVal) {\n    // }\n  }\n\n  @Watch('colors')\n  @Watch('colorPalette')\n  colorWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldUpdateNodeStyle = true;\n    this.shouldUpdateLinkStyle = true;\n    this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('clickStyle')\n  @Watch('hoverStyle')\n  interactionStyleWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetNodeLabelOpacity = true;\n  }\n\n  @Watch('cursor')\n  cursorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCursor = true;\n  }\n\n  @Watch('hoverOpacity')\n  hoverOpacityWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetNodeLabelOpacity = true;\n  }\n\n  @Watch('dataLabel')\n  dataLabelWatcher(_newVal, _oldVal) {\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    const newLabelAccessorVal = _newVal && _newVal.labelAccessor ? _newVal.labelAccessor : false;\n    const oldLabelAccessorVal = _oldVal && _oldVal.labelAccessor ? _oldVal.labelAccessor : false;\n    if (newLabelAccessorVal !== oldLabelAccessorVal) {\n      this.shouldValidateLabelText = true;\n    }\n    this.shouldDrawNodeLabels = true;\n    this.shouldUpdateTableData = true;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetNodeLabelOpacity = true;\n    }\n  }\n\n  @Watch('tooltipLabel')\n  tooltipLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('showTooltip')\n  showTooltipWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('accessibility')\n  accessibilityWatcher(_newVal, _oldVal) {\n    this.shouldValidateAccessibility = true;\n    const newTitle = _newVal && _newVal.title ? _newVal.title : false;\n    const oldTitle = _oldVal && _oldVal.title ? _oldVal.title : false;\n    if (newTitle !== oldTitle) {\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newExecutiveSummary = _newVal && _newVal.executiveSummary ? _newVal.executiveSummary : false;\n    const oldExecutiveSummary = _oldVal && _oldVal.executiveSummary ? _oldVal.executiveSummary : false;\n    if (newExecutiveSummary !== oldExecutiveSummary) {\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n    }\n    const newPurpose = _newVal && _newVal.purpose ? _newVal.purpose : false;\n    const oldPurpose = _oldVal && _oldVal.purpose ? _oldVal.purpose : false;\n    if (newPurpose !== oldPurpose) {\n      this.shouldSetChartAccessibilityPurpose = true;\n    }\n    const newLongDescription = _newVal && _newVal.longDescription ? _newVal.longDescription : false;\n    const oldLongDescription = _oldVal && _oldVal.longDescription ? _oldVal.longDescription : false;\n    if (newLongDescription !== oldLongDescription) {\n      this.shouldSetChartAccessibilityLongDescription = true;\n    }\n    const newContext = _newVal && _newVal.contextExplanation ? _newVal.contextExplanation : false;\n    const oldContext = _oldVal && _oldVal.contextExplanation ? _oldVal.contextExplanation : false;\n    if (newContext !== oldContext) {\n      this.shouldSetChartAccessibilityContext = true;\n    }\n    const newStatisticalNotes = _newVal && _newVal.statisticalNotes ? _newVal.statisticalNotes : false;\n    const oldStatisticalNotes = _oldVal && _oldVal.statisticalNotes ? _oldVal.statisticalNotes : false;\n    if (newStatisticalNotes !== oldStatisticalNotes) {\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n    }\n    const newStructureNotes = _newVal && _newVal.structureNotes ? _newVal.structureNotes : false;\n    const oldStructureNotes = _oldVal && _oldVal.structureNotes ? _oldVal.structureNotes : false;\n    if (newStructureNotes !== oldStructureNotes) {\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    const newincludeDataKeyNames = _newVal && _newVal.includeDataKeyNames;\n    const oldincludeDataKeyNames = _oldVal && _oldVal.includeDataKeyNames;\n    const newElementDescriptionAccessor =\n      _newVal && _newVal.elementDescriptionAccessor ? _newVal.elementDescriptionAccessor : false;\n    const oldElementDescriptionAccessor =\n      _oldVal && _oldVal.elementDescriptionAccessor ? _oldVal.elementDescriptionAccessor : false;\n    if (\n      newincludeDataKeyNames !== oldincludeDataKeyNames ||\n      newElementDescriptionAccessor !== oldElementDescriptionAccessor\n    ) {\n      if (newincludeDataKeyNames !== oldincludeDataKeyNames) {\n        // this one is tricky because it needs to run after the lifecycle\n        // AND it could run in the off-chance this prop is changed\n        this.shouldSetGroupAccessibilityLabel = true;\n      }\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    // const newTextures = _newVal && _newVal.hideTextures ? _newVal.hideTextures : false;\n    // const oldTextures = _oldVal && _oldVal.hideTextures ? _oldVal.hideTextures : false;\n    // const newExTextures = _newVal && _newVal.showExperimentalTextures ? _newVal.showExperimentalTextures : false;\n    // const oldExTextures = _oldVal && _oldVal.showExperimentalTextures ? _oldVal.showExperimentalTextures : false;\n    // if (newTextures !== oldTextures || newExTextures !== oldExTextures) {\n    //   this.shouldSetTextures = true;\n    //   this.shouldUpdateLegend = true;\n    //   this.shouldDrawInteractionState = true;\n    //   this.shouldCheckLabelColor = true;\n    // }\n    // const newStrokes = _newVal && _newVal.hideStrokes ? _newVal.hideStrokes : false;\n    // const oldStrokes = _oldVal && _oldVal.hideStrokes ? _oldVal.hideStrokes : false;\n    // if (newStrokes !== oldStrokes) {\n    //   this.shouldSetStrokes = true;\n    //   this.shouldUpdateLegend = true;\n    //   this.shouldDrawInteractionState = true;\n    // }\n    const newKeyNav =\n      _newVal && _newVal.keyboardNavConfig && _newVal.keyboardNavConfig.disabled\n        ? _newVal.keyboardNavConfig.disabled\n        : false;\n    const oldKeyNav =\n      _oldVal && _oldVal.keyboardNavConfig && _oldVal.keyboardNavConfig.disabled\n        ? _oldVal.keyboardNavConfig.disabled\n        : false;\n    const newInterface = _newVal && _newVal.elementsAreInterface ? _newVal.elementsAreInterface : false;\n    const oldInterface = _oldVal && _oldVal.elementsAreInterface ? _oldVal.elementsAreInterface : false;\n    if (newKeyNav !== oldKeyNav || newInterface !== oldInterface) {\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetChartAccessibilitySubtitle = true;\n      this.shouldSetChartAccessibilityLongDescription = true;\n      this.shouldSetChartAccessibilityContext = true;\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n      this.shouldSetChartAccessibilityPurpose = true;\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    if (newInterface !== oldInterface) {\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('localization')\n  localizationWatcher(_newVal, _oldVal) {\n    this.shouldValidateLocalization = true;\n\n    // language\n    const newLanguage = _newVal && _newVal.language ? _newVal.language : false;\n    const oldLanguage = _oldVal && _oldVal.language ? _oldVal.language : false;\n    if (newLanguage !== oldLanguage) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n\n    // numeralLocale\n    const newNumeralLocale = _newVal && _newVal.numeralLocale ? _newVal.numeralLocale : false;\n    const oldNumeralLocale = _oldVal && _oldVal.numeralLocale ? _oldVal.numeralLocale : false;\n    if (newNumeralLocale !== oldNumeralLocale) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n  }\n\n  @Watch('annotations')\n  annotationsWatcher(_newVal, _oldVal) {\n    this.shouldValidateAccessibility = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('clickHighlight')\n  clickWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetNodeLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n  }\n\n  @Watch('hoverHighlight')\n  hoverWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetNodeLabelOpacity = true;\n  }\n\n  @Watch('interactionKeys')\n  interactionWatcher(_newVal, _oldVal) {\n    this.shouldSetNodeDimensions = true;\n    this.shouldCallSankeyGenerator = true;\n    this.shouldValidateInteractionKeys = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetNodeLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n  }\n\n  @Watch('dataKeyNames')\n  dataKeyNamesWatcher(_newVal, _oldVal) {\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('suppressEvents')\n  suppressWatcher(_newVal, _oldVal) {\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldValidateAccessibility = true;\n    this.shouldRedrawWrapper = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n    // this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('unitTest')\n  unitTestWatcher(_newVal, _oldVal) {\n    this.shouldSetTestingAttributes = true;\n  }\n\n  componentWillLoad() {\n    const chartID = this.uniqueID || 'alluvial-diagram-' + uuid();\n    this.initialLoadEvent.emit({ chartID: chartID });\n    // contrary to componentWillUpdate, this method appears safe to use for\n    // any calculations we need. Keeping them here reduces future refactor,\n    // since componentWillUpdate should eventually mirror this method\n    return new Promise(resolve => {\n      this.duration = 0;\n      this.defaults = true;\n      this.chartID = chartID;\n      this.alluvialDiagramEl.id = this.chartID;\n      this.setLocalizationConfig();\n      this.setTagLevels();\n      this.prepareData();\n      this.setDimensions();\n      this.validateIdAccessor();\n      this.validateLabelText();\n      this.validateLinkFillMode();\n      this.validateNodeAlignment();\n      this.validateInteractionKeys();\n      this.validateLinkGroups();\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.setColors();\n      this.setNodeDimensions();\n      this.callSankeyGenerator();\n      this.setTableData();\n      resolve('component will load');\n    });\n  }\n\n  componentWillUpdate() {\n    // NEVER put items in this method that rely on props (until stencil bug is resolved)\n    // All items that belong here are currently at the top of render\n    // see: https://github.com/ionic-team/stencil/issues/2061#issuecomment-578282178\n    return new Promise(resolve => {\n      resolve('component will update');\n    });\n  }\n\n  componentDidLoad() {\n    return new Promise(resolve => {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.renderRootElements();\n      this.setTooltipInitialStyle();\n      this.setChartDescriptionWrapper();\n      this.setChartAccessibilityTitle();\n      this.setChartAccessibilitySubtitle();\n      this.setChartAccessibilityLongDescription();\n      this.setChartAccessibilityExecutiveSummary();\n      this.setChartAccessibilityPurpose();\n      this.setChartAccessibilityContext();\n      this.setChartAccessibilityStatisticalNotes();\n      this.setChartAccessibilityStructureNotes();\n      this.setParentSVGAccessibility();\n      this.reSetRoot();\n      this.setSubTitleElements();\n      this.setGlobalSelections();\n      this.setTestingAttributes();\n      this.enterLinkGeometries();\n      this.updateLinkGeometries();\n      this.exitLinkGeometries();\n      this.enterNodeGeometries();\n      this.updateNodeGeometries();\n      this.exitNodeGeometries();\n      this.enterNodeLabels();\n      this.updateNodeLabels();\n      this.exitNodeLabels();\n      this.updateLinkStyle();\n      this.drawNodeGeometries();\n      this.drawLinkGeometries();\n      this.setGeometryAccessibilityAttributes();\n      this.setGeometryAriaLabels();\n      this.setGroupAccessibilityID();\n      this.setChartCountAccessibility();\n      this.setSelectedClass();\n      this.updateCursor();\n      this.drawNodeLabels();\n      this.bindInteractivity();\n      this.drawAnnotations();\n      this.setAnnotationAccessibility();\n      this.onChangeHandler();\n      this.duration = 750;\n      this.defaults = false;\n      hideNonessentialGroups(this.root.node(), null);\n      resolve('component did load');\n    }).then(() => this.initialLoadEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  componentDidUpdate() {\n    return new Promise(resolve => {\n      this.duration = !this.animationConfig || !this.animationConfig.disabled ? 750 : 0;\n      if (this.shouldUpdateDescriptionWrapper) {\n        this.setChartDescriptionWrapper();\n        this.shouldUpdateDescriptionWrapper = false;\n      }\n      if (this.shouldSetChartAccessibilityCount) {\n        this.setChartCountAccessibility();\n        this.shouldSetChartAccessibilityCount = false;\n      }\n      if (this.shouldSetChartAccessibilityTitle) {\n        this.setChartAccessibilityTitle();\n        this.shouldSetChartAccessibilityTitle = false;\n      }\n      if (this.shouldSetChartAccessibilitySubtitle) {\n        this.setChartAccessibilitySubtitle();\n        this.shouldSetChartAccessibilitySubtitle = false;\n      }\n      if (this.shouldSetChartAccessibilityLongDescription) {\n        this.setChartAccessibilityLongDescription();\n        this.shouldSetChartAccessibilityLongDescription = false;\n      }\n      if (this.shouldSetChartAccessibilityExecutiveSummary) {\n        this.setChartAccessibilityExecutiveSummary();\n        this.shouldSetChartAccessibilityExecutiveSummary = false;\n      }\n      if (this.shouldSetChartAccessibilityPurpose) {\n        this.setChartAccessibilityPurpose();\n        this.shouldSetChartAccessibilityPurpose = false;\n      }\n      if (this.shouldSetChartAccessibilityContext) {\n        this.setChartAccessibilityContext();\n        this.shouldSetChartAccessibilityContext = false;\n      }\n      if (this.shouldSetChartAccessibilityStatisticalNotes) {\n        this.setChartAccessibilityStatisticalNotes();\n        this.shouldSetChartAccessibilityStatisticalNotes = false;\n      }\n      if (this.shouldSetChartAccessibilityStructureNotes) {\n        this.setChartAccessibilityStructureNotes();\n        this.shouldSetChartAccessibilityStructureNotes = false;\n      }\n      if (this.shouldSetParentSVGAccessibility) {\n        this.setParentSVGAccessibility();\n        this.shouldSetParentSVGAccessibility = false;\n      }\n      if (this.shouldResetRoot) {\n        this.reSetRoot();\n        this.shouldResetRoot = false;\n      }\n      if (this.shouldSetGlobalSelections) {\n        this.setGlobalSelections();\n        this.shouldSetGlobalSelections = false;\n      }\n      if (this.shouldSetTestingAttributes) {\n        this.setTestingAttributes();\n        this.shouldSetTestingAttributes = false;\n      }\n      if (this.shouldSetSubTitle) {\n        this.setSubTitleElements();\n        this.shouldSetSubTitle = false;\n      }\n      if (this.shouldEnterUpdateExit) {\n        this.enterLinkGeometries();\n        this.updateLinkGeometries();\n        this.exitLinkGeometries();\n        this.enterNodeGeometries();\n        this.updateNodeGeometries();\n        this.exitNodeGeometries();\n        this.enterNodeLabels();\n        this.updateNodeLabels();\n        this.exitNodeLabels();\n        this.shouldEnterUpdateExit = false;\n      }\n      if (this.shouldUpdateNodeGeometries) {\n        this.drawNodeGeometries();\n        this.shouldUpdateNodeGeometries = false;\n      }\n      if (this.shouldUpdateNodeStyle) {\n        this.updateNodeStyle();\n        this.shouldUpdateNodeStyle = false;\n      }\n      if (this.shouldUpdateLinkGeometries) {\n        this.drawLinkGeometries();\n        this.shouldUpdateLinkGeometries = false;\n      }\n      if (this.shouldUpdateLinkStyle) {\n        this.updateLinkStyle();\n        this.shouldUpdateLinkStyle = false;\n      }\n      if (this.shouldSetGeometryAccessibilityAttributes) {\n        this.setGeometryAccessibilityAttributes();\n        this.shouldSetGeometryAccessibilityAttributes = false;\n      }\n      if (this.shouldSetGeometryAriaLabels) {\n        this.setGeometryAriaLabels();\n        this.shouldSetGeometryAriaLabels = false;\n      }\n      if (this.shouldSetGroupAccessibilityLabel) {\n        this.setGroupAccessibilityID();\n        this.shouldSetGroupAccessibilityLabel = false;\n      }\n      if (this.shouldDrawNodeLabels) {\n        this.drawNodeLabels();\n        this.shouldDrawNodeLabels = false;\n      }\n      if (this.shouldDrawInteractionState) {\n        this.updateInteractionState();\n        this.shouldDrawInteractionState = false;\n      }\n      if (this.shouldSetNodeLabelOpacity) {\n        this.setNodeLabelOpacity();\n        this.shouldSetNodeLabelOpacity = false;\n      }\n      if (this.shouldSetSelectionClass) {\n        this.setSelectedClass();\n        this.shouldSetSelectionClass = false;\n      }\n      if (this.shouldUpdateCursor) {\n        this.updateCursor();\n        this.shouldUpdateCursor = false;\n      }\n      if (this.shouldBindInteractivity) {\n        this.bindInteractivity();\n        this.shouldBindInteractivity = false;\n      }\n      if (this.shouldUpdateAnnotations) {\n        this.drawAnnotations();\n        this.shouldUpdateAnnotations = false;\n      }\n      if (this.shouldSetAnnotationAccessibility) {\n        this.setAnnotationAccessibility();\n        this.shouldSetAnnotationAccessibility = false;\n      }\n      this.onChangeHandler();\n      resolve('component did update');\n    }).then(() => this.drawEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  setDimensions() {\n    this.padding = typeof this.padding === 'string' ? getPadding(this.padding) : this.padding;\n\n    // since we hacked sankey.ts for vertical layout, we have to get a bit weird\n    // on the definition of these dimesions and flip things for vertical layout\n    if (this.layout === 'vertical') {\n      this.innerWidth = this.height - this.margin.top - this.margin.bottom;\n      this.innerHeight = this.width - this.margin.left - this.margin.right;\n      this.innerPaddedHeight = this.innerHeight - this.padding.left - this.padding.right;\n      this.innerPaddedWidth = this.innerWidth - this.padding.top - this.padding.bottom;\n    } else {\n      this.innerWidth = this.width - this.margin.left - this.margin.right;\n      this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n      this.innerPaddedHeight = this.innerHeight - this.padding.top - this.padding.bottom;\n      this.innerPaddedWidth = this.innerWidth - this.padding.left - this.padding.right;\n    }\n  }\n\n  prepareData() {\n    this.nodeList = [];\n    this.linkList = [];\n\n    this.linkData.forEach((obj, i) => {\n      const linkObj = {\n        source: obj[this.sourceAccessor],\n        target: obj[this.targetAccessor],\n        value: obj[this.valueAccessor],\n        data: obj\n      };\n\n      if (this.groupAccessor) {\n        linkObj[this.groupAccessor] = obj[this.groupAccessor];\n      }\n\n      this.linkList[i] = linkObj;\n    });\n\n    // if the user did not set this.nodeData, generate node data from link data\n    this.nodeData && this.nodeData.length > 1 ? (this.nodeList = this.nodeData) : this.createNodeList();\n  }\n\n  createNodeList() {\n    this.nodeList = [];\n    this.linkData.map(link => {\n      if (!this.nodeList.some(e => e.id === link[this.sourceAccessor])) {\n        const uniqueSourceID = { id: link[this.sourceAccessor] };\n        this.nodeList.push(uniqueSourceID);\n      }\n      if (!this.nodeList.some(e => e.id === link[this.targetAccessor])) {\n        const uniqueTargetID = { id: link[this.targetAccessor] };\n        this.nodeList.push(uniqueTargetID);\n      }\n    });\n  }\n\n  validateLabelText() {\n    // if label accessor is passed use that, otherwise default to value hardcoded which is the total\n    // of valueAccessor at the node level\n    this.innerLabelAccessor = this.dataLabel.labelAccessor ? this.dataLabel.labelAccessor : this.valueString;\n  }\n\n  // if there is no nodeData present, use 'id', otherwise use the nodeIDAccessor that is passed\n  validateIdAccessor() {\n    this.innerIDAccessor =\n      this.nodeData && this.nodeData.length > 1\n        ? this.nodeList[0][this.nodeIDAccessor]\n          ? this.nodeIDAccessor\n          : 'id'\n        : 'id';\n  }\n\n  validateLinkFillMode() {\n    this.innerLinkFillMode =\n      this.groupAccessor && this.linkConfig.fillMode === 'group'\n        ? 'group'\n        : this.linkConfig.fillMode === 'source'\n        ? 'source'\n        : this.linkConfig.fillMode === 'target'\n        ? 'target'\n        : this.linkConfig.fillMode === 'link'\n        ? 'link'\n        : 'none';\n  }\n\n  validateNodeAlignment() {\n    this.innerNodeAlignment =\n      this.layout === 'vertical'\n        ? this.nodeConfig.alignment === 'bottom'\n          ? sankeyRight\n          : this.nodeConfig.alignment === 'middle'\n          ? sankeyCenter\n          : this.nodeConfig.alignment === 'justify'\n          ? sankeyJustify\n          : sankeyLeft\n        : this.nodeConfig.alignment === 'right'\n        ? sankeyRight\n        : this.nodeConfig.alignment === 'center'\n        ? sankeyCenter\n        : this.nodeConfig.alignment === 'justify'\n        ? sankeyJustify\n        : sankeyLeft;\n  }\n\n  validateInteractionKeys() {\n    this.innerInteractionKeys = [];\n\n    this.innerInteractionKeys =\n      this.interactionKeys && this.interactionKeys.length\n        ? this.interactionKeys\n        : [this.sourceAccessor, this.targetAccessor];\n  }\n\n  validateLinkGroups() {\n    this.groupKeys = [];\n\n    if (this.groupAccessor) {\n      this.groupKeys = this.linkData.map(d => d[this.groupAccessor]).filter((x, i, a) => a.indexOf(x) === i);\n    }\n  }\n\n  shouldValidateLocalizationProps() {\n    const windowInstances = getGlobalInstances();\n    const languageString = windowInstances.i18Next.language;\n    const languageObject = windowInstances.i18Next.getResourceBundle(languageString);\n    const numeralObject = windowInstances.numeral.localeData();\n    if (this.shouldValidateLocalization && !this.localization.skipValidation) {\n      this.shouldValidateLocalization = false;\n      validateLocalizationProps(this.chartID, {\n        ...this.localization,\n        language: languageObject,\n        numeralLocale: numeralObject\n      });\n    }\n  }\n\n  shouldValidateAccessibilityProps() {\n    if (this.shouldValidateAccessibility && !this.accessibility.disableValidation) {\n      this.shouldValidateAccessibility = false;\n      validateAccessibilityProps(\n        this.chartID,\n        { ...this.accessibility },\n        {\n          annotations: this.annotations,\n          data: this.linkData,\n          uniqueID: this.uniqueID,\n          context: {\n            mainTitle: this.mainTitle,\n            onClickEvent: this.suppressEvents ? undefined : this.clickEvent.emit\n          }\n        }\n      );\n    }\n  }\n\n  getLanguageString() {\n    return getActiveLanguageString(this.localization);\n  }\n\n  setLocalizationConfig() {\n    configLocalization(this.localization);\n  }\n\n  setTableData() {\n    // generate scoped and formatted data for data-table component, showing node data\n    const uniqueNodeAccessors = ['nodeIDAccessor', 'valueAccessor'];\n    const nodeAccessors = {\n      singleAccessors: uniqueNodeAccessors,\n      nestedAccessors: [\n        {\n          objectName: 'dataLabel',\n          objectAccessors: ['labelAccessor'],\n          formatAccessors: ['format']\n        }\n      ]\n    };\n\n    const nodeKeys = scopeDataKeys(this, nodeAccessors, 'alluvial-diagram');\n    this.tableData = this.getScopedTableData(this.preppedData.nodes, nodeKeys);\n    this.tableColumns = Object.keys(nodeKeys);\n\n    // create secondary table data for link data\n    // remove dataLabel accessor, as we use this in the nodeData table\n    const linkChartAccessors = chartAccessors;\n    delete linkChartAccessors.nestedAccessors[2];\n    const keys = scopeDataKeys(this, linkChartAccessors, 'alluvial-diagram-secondary-table');\n    this.secondaryTableData = this.getScopedTableData(this.preppedData.links, keys);\n    this.secondaryTableColumns = Object.keys(keys);\n  }\n\n  getScopedTableData(data, keyMap) {\n    const scopedData = [];\n    data.forEach(dataRecord => {\n      const scopedDataRecord = {};\n      // links always have data objects, so will always enter this section of the loop\n      Object.keys(keyMap).forEach(field => {\n        if ('data' in dataRecord && dataRecord.data[field]) {\n          scopedDataRecord[field] =\n            keyMap[field] && dataRecord.data[field]\n              ? formatStats(dataRecord.data[field], keyMap[field])\n              : dataRecord.data[field];\n        } else {\n          if (field === this.valueAccessor) {\n            scopedDataRecord[field] = keyMap[field]\n              ? formatStats(dataRecord[this.valueString], keyMap[field])\n              : dataRecord[this.valueString];\n          } else {\n            scopedDataRecord[field] =\n              keyMap[field] && dataRecord[field] ? formatStats(dataRecord[field], keyMap[field]) : dataRecord[field];\n          }\n        }\n      });\n      scopedData.push(scopedDataRecord);\n    });\n    return scopedData;\n  }\n\n  setNodeDimensions() {\n    // controls node width and node padding\n    this.alluvialProperties = sankey(this.nodeConfig.compare, this.linkConfig.visible, this.layout)\n      .nodeId(d => d[this.innerIDAccessor])\n      .nodeWidth(this.nodeConfig.width)\n      .nodePadding(this.nodeConfig.padding)\n      .nodeAlign(this.innerNodeAlignment)\n      .nodeSort(null)\n      .size([this.innerPaddedWidth, this.innerPaddedHeight]);\n  }\n\n  callSankeyGenerator() {\n    const sankeyData = (nodes, links) =>\n      this.alluvialProperties({\n        nodes: nodes.map(d => ({ ...d })),\n        links: links.map(d => ({ ...d }))\n      });\n    this.preppedData = sankeyData(this.nodeList, this.linkList);\n    this.nodeCount = max(this.preppedData.nodes, d => d.layer);\n  }\n\n  renderRootElements() {\n    this.svg = select(this.alluvialDiagramEl)\n      .select('.visa-viz-d3-alluvial-container')\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height);\n    // .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    this.root = this.svg.append('g').attr('id', 'visa-viz-margin-container-g-' + this.chartID);\n    this.rootG = this.root.append('g').attr('id', 'visa-viz-padding-container-g-' + this.chartID);\n\n    this.nodeG = this.rootG.append('g').attr('class', 'alluvial-node-group');\n    this.linkG = this.rootG.append('g').attr('class', 'alluvial-link-group');\n\n    this.labelG = this.rootG.append('g').attr('class', 'alluvial-dataLabel-group');\n    this.subTitleG = select(this.alluvialDiagramEl).select('.alluvial-sub-title');\n    this.tooltipG = select(this.alluvialDiagramEl).select('.alluvial-tooltip');\n  }\n\n  updateCursor() {\n    this.updateLinks.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    // this.updateNodes.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    this.updatingLabels.attr('cursor', !this.suppressEvents && this.dataLabel.visible ? this.cursor : null);\n  }\n  // reset graph size based on window size\n  reSetRoot() {\n    const changeSvg = prepareRenderChange({\n      selection: this.svg,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeSvg\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    const changeRoot = prepareRenderChange({\n      selection: this.root,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRoot.attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n\n    const changeRootG = prepareRenderChange({\n      selection: this.rootG,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRootG.attr('transform', `translate(${this.padding.left}, ${this.padding.top})`);\n\n    setAccessibilityDescriptionWidth(this.chartID, this.width);\n  }\n\n  setGlobalSelections() {\n    if (this.currentNodeLayers) {\n      this.previousNodeLayers = this.currentNodeLayers;\n    }\n\n    const dataBoundToNodes = this.nodeG\n      .selectAll('.node-wrapper')\n      .data(this.preppedData.nodes, d => d[this.innerIDAccessor]);\n\n    this.enterNodes = dataBoundToNodes\n      .enter()\n      .append('g')\n      .attr('class', 'node-wrapper')\n      .attr('data-offset-group', 'true');\n    this.enterNodes.append('rect').attr('class', 'alluvial-node');\n    this.exitNodes = dataBoundToNodes.exit();\n    this.updateNodes = dataBoundToNodes.merge(this.enterNodes);\n    this.updateNodes.selectAll('.alluvial-node').data(d => [d]);\n\n    this.currentNodeLayers = this.preppedData.nodes;\n    if (this.previousNodeLayers) {\n      const updatingNodesWithoutEnteringNodes = this.currentNodeLayers.filter(item =>\n        this.previousNodeLayers.map(a => a[this.innerIDAccessor]).includes(item.id)\n      );\n      this.previousMaxNodeLayer = max(updatingNodesWithoutEnteringNodes, d => d.layer);\n      this.previousMinNodeLayer = min(updatingNodesWithoutEnteringNodes, d => d.layer);\n\n      const updatingNodesWithoutExitingNodes = this.previousNodeLayers.filter(item =>\n        this.currentNodeLayers.map(a => a[this.innerIDAccessor]).includes(item.id)\n      );\n      this.currentMaxNodeLayer = max(updatingNodesWithoutExitingNodes, d => d.layer);\n      this.currentMinNodeLayer = min(updatingNodesWithoutExitingNodes, d => d.layer);\n    }\n\n    // temporary, to be removed when lifecycle functions are added\n    // tslint:disable-next-line:no-unused-expression\n    // this.updateLinkGroups && this.updateLinkGroups.remove();\n    // tslint:disable-next-line:no-unused-expression\n    // this.updateLinks && this.updateLinks.remove();\n\n    if (this.innerLinkFillMode === 'source' || this.innerLinkFillMode === 'target') {\n      this.updateNodes.each((_, i, n) => {\n        initializeElementAccess(n[i]);\n      });\n      const linkDataGroups = this.preppedData.nodes;\n      const dataBoundToLinkGroups = this.linkG\n        .selectAll('.alluvial-link-wrapper')\n        .data(linkDataGroups, d => d[this.innerIDAccessor]);\n      this.enterLinkGroups = dataBoundToLinkGroups.enter().append('g');\n      this.exitLinkGroups = dataBoundToLinkGroups.exit().remove();\n      this.updateLinkGroups = dataBoundToLinkGroups.merge(this.enterLinkGroups);\n\n      const dataBoundToLinks = this.updateLinkGroups\n        .selectAll('.alluvial-link')\n        .data(d => d.sourceLinks, d => d.data[this.sourceAccessor] + d.data[this.targetAccessor]);\n      this.enterLinks = dataBoundToLinks.enter().append('path');\n      this.exitLinks = dataBoundToLinks.exit();\n      this.updateLinks = dataBoundToLinks.merge(this.enterLinks).attr('data-offset-element', this.innerLinkFillMode);\n    } else {\n      this.updateNodes.attr('tabindex', null);\n\n      const dataBoundToLinks = this.linkG\n        .selectAll('.alluvial-link')\n        .data(this.preppedData.links, d => d.data[this.sourceAccessor] + d.data[this.targetAccessor]);\n      this.enterLinks = dataBoundToLinks.enter().append('path');\n      this.exitLinks = dataBoundToLinks.exit();\n      this.updateLinks = dataBoundToLinks.merge(this.enterLinks).attr('data-offset-element', null);\n    }\n\n    this.exitSize = this.exitLinks.size();\n    this.enterSize = this.enterLinks.size();\n\n    const dataBoundToLabels = this.labelG.selectAll('text').data(this.preppedData.nodes, d => d[this.innerIDAccessor]);\n    this.enteringLabels = dataBoundToLabels.enter().append('text');\n    this.exitingLabels = dataBoundToLabels.exit();\n    this.updatingLabels = dataBoundToLabels.merge(this.enteringLabels);\n  }\n\n  setTestingAttributes() {\n    if (this.unitTest) {\n      select(this.alluvialDiagramEl)\n        .select('.visa-viz-d3-alluvial-container')\n        .attr('data-testid', 'chart-container');\n      select(this.alluvialDiagramEl)\n        .select('.alluvial-main-title')\n        .attr('data-testid', 'main-title');\n      select(this.alluvialDiagramEl)\n        .select('.alluvial-sub-title')\n        .attr('data-testid', 'sub-title');\n      this.svg.attr('data-testid', 'root-svg');\n      this.root.attr('data-testid', 'margin-container');\n      this.rootG.attr('data-testid', 'padding-container');\n      // this.legendG.attr('data-testid', 'legend-container');\n      this.tooltipG.attr('data-testid', 'tooltip-container');\n\n      // add test attributes to nodes\n      // note that nodes are each wrapped in their own G, which is what this grabs\n      this.updateNodes.attr('data-testid', 'node').attr('data-id', d => `node-${d[this.innerIDAccessor]}`);\n\n      // add test attributes to links\n      if (this.innerLinkFillMode === 'source' || this.innerLinkFillMode === 'target') {\n        this.updateLinkGroups\n          .attr('data-testid', 'alluvial-link-group')\n          .attr('data-id', d => `link-group-${d[this.innerIDAccessor]}`);\n      }\n      this.updateLinks\n        .attr('data-testid', 'link')\n        .attr('data-id', d => `link-${d.source[this.innerIDAccessor]}-${d.target[this.innerIDAccessor]}`);\n\n      // add test attributes to labels\n      this.updatingLabels.attr('data-testid', 'dataLabel').attr('data-id', d => `dataLabel-${d[this.innerIDAccessor]}`);\n\n      this.svg.select('defs').attr('data-testid', 'pattern-defs');\n    } else {\n      select(this.alluvialDiagramEl)\n        .select('.visa-viz-d3-alluvial-container')\n        .attr('data-testid', null);\n      select(this.alluvialDiagramEl)\n        .select('.alluvial-main-title')\n        .attr('data-testid', null);\n      select(this.alluvialDiagramEl)\n        .select('.alluvial-sub-title')\n        .attr('data-testid', null);\n      this.svg.attr('data-testid', null);\n      this.root.attr('data-testid', null);\n      this.rootG.attr('data-testid', null);\n      // this.legendG.attr('data-testid', null);\n      this.tooltipG.attr('data-testid', null);\n\n      // add test attributes to nodes\n      this.updateNodes.attr('data-testid', null).attr('data-id', null);\n\n      // add test attributes to links\n      if (this.innerLinkFillMode === 'source' || this.innerLinkFillMode === 'target') {\n        this.updateLinkGroups.attr('data-testid', null).attr('data-id', null);\n      }\n      this.updateLinks.attr('data-testid', null).attr('data-id', null);\n\n      // add test attributes to labels\n      this.updatingLabels.attr('data-testid', null).attr('data-id', null);\n\n      this.svg.select('defs').attr('data-testid', null);\n    }\n  }\n\n  newColumnInterpolationPosition() {\n    return linkHorizontal()\n      .source(d =>\n        d.target.layer <= this.previousMinNodeLayer\n          ? [d.source.x0, d.y0]\n          : d.source.layer >= this.previousMaxNodeLayer\n          ? [d.target.x1, d.y0]\n          : [d.source.x1, d.y0]\n      )\n      .target(d =>\n        d.target.layer <= this.previousMinNodeLayer\n          ? [d.source.x0, d.y0]\n          : d.source.layer >= this.previousMaxNodeLayer\n          ? [d.target.x1, d.y0]\n          : [d.target.x0, d.y1]\n      );\n  }\n\n  newColumnInterpolationPositionVertical() {\n    return linkVertical()\n      .source(d =>\n        d.target.layer <= this.previousMinNodeLayer\n          ? [d.x0, d.source.y0]\n          : d.source.layer >= this.previousMaxNodeLayer\n          ? [d.x0, d.target.y1]\n          : [d.x0, d.source.y1]\n      )\n      .target(d =>\n        d.target.layer <= this.previousMinNodeLayer\n          ? [d.x0, d.source.y0]\n          : d.source.layer >= this.previousMaxNodeLayer\n          ? [d.x0, d.target.y1]\n          : [d.x1, d.target.y0]\n      );\n  }\n\n  enterLinkGeometries() {\n    this.enterLinks.interrupt();\n    const linkOpacity = this.linkConfig.visible ? this.linkConfig.opacity : 0;\n\n    if (this.innerLinkFillMode === 'source' || this.innerLinkFillMode === 'target') {\n      this.enterLinkGroups.attr('class', 'alluvial-link-wrapper');\n    }\n\n    this.enterLinks\n      .attr('class', 'alluvial-link')\n      .classed('entering', true)\n      .attr(\n        'd',\n        this.layout === 'vertical'\n          ? this.newColumnInterpolationPositionVertical()\n          : this.newColumnInterpolationPosition()\n      );\n\n    this.enterLinks\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .attr('stroke-dasharray', (d, i, n) => {\n        d.linelength = n[i].getTotalLength() - 2;\n        // return d.linelength + ' ' + d.linelength;\n        return d.target.layer <= this.previousMinNodeLayer || d.source.layer >= this.previousMaxNodeLayer\n          ? ''\n          : d.linelength + ' ' + d.linelength;\n      })\n      // .attr('stroke-dashoffset', d => d.linelength)\n      .attr('stroke-dashoffset', d =>\n        d.target.layer <= this.previousMinNodeLayer || d.source.layer >= this.previousMaxNodeLayer ? 0 : d.linelength\n      )\n      .attr('stroke-width', d =>\n        d.target.layer <= this.previousMinNodeLayer || d.source.layer >= this.previousMaxNodeLayer\n          ? Math.max(1, d.width)\n          : 0.1\n      )\n      .attr('stroke-opacity', linkOpacity)\n      .transition('enter')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('d', this.layout === 'vertical' ? sankeyLinkVertical() : sankeyLinkHorizontal())\n      .attr('stroke-width', d =>\n        d.target.layer <= this.previousMinNodeLayer || d.source.layer >= this.previousMaxNodeLayer\n          ? Math.max(1, d.width)\n          : 1\n      )\n      .attr('stroke-dashoffset', 0);\n\n    // const test = select(this.svg.node())\n    //   .selectAll('.duplicated-clicked-link');\n\n    // this.enterLinks.each((d, i, n) => {\n    //   const clicked =\n    //     this.clickHighlight &&\n    //     this.clickHighlight.length > 0 &&\n    //     checkClicked(d.data, this.clickHighlight, this.innerInteractionKeys);\n    //   if (clicked) {\n    //     // this.drawDuplicateClickedLink(n[i]);\n    //     // if (n[i].classed('duplicated-clicked-link')){\n    //     // }\n    //   }\n    // });\n  }\n\n  updateLinkGeometries() {\n    this.updateLinks.interrupt();\n    const linkOpacity = this.linkConfig.visible ? this.linkConfig.opacity : 0;\n\n    this.updateLinks\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('stroke-opacity', d => {\n        return checkInteraction(\n          d.data,\n          linkOpacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n          // this.nodeIDAccessor\n        );\n      });\n  }\n\n  exitLinkGeometries() {\n    this.exitLinks.interrupt();\n    const linkOpacity = this.linkConfig.visible ? this.linkConfig.opacity : 0;\n\n    this.exitLinks\n      .attr('stroke-dasharray', (d, i, n) => {\n        d.linelength = n[i].getTotalLength();\n        return d.target.layer <= this.previousMinNodeLayer || d.source.layer >= this.previousMaxNodeLayer\n          ? ''\n          : d.linelength + ' ' + d.linelength;\n      })\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr(\n        'd',\n        this.layout === 'vertical'\n          ? this.newColumnInterpolationPositionVertical()\n          : this.newColumnInterpolationPosition()\n      )\n      .attr('stroke-opacity', linkOpacity)\n      .attr('stroke-dashoffset', d => d.linelength)\n      .attr('stroke-width', d =>\n        d.target.layer <= this.currentMinNodeLayer || d.source.layer >= this.currentMaxNodeLayer\n          ? Math.max(1, d.width)\n          : 0.1\n      )\n      .remove();\n  }\n\n  drawLinkGeometries() {\n    this.removeTemporaryClickedLinks(this.svg.node());\n    // const linkOpacity = this.linkConfig.visible ? this.linkConfig.opacity : 0;\n\n    if (this.innerLinkFillMode === 'source' || this.innerLinkFillMode === 'target') {\n      this.updateLinkGroups.classed('link-group offset-target', true);\n      // .classed('entering', true)\n      // .attr('cursor', !this.suppressEvents ? this.cursor : null);\n    }\n\n    this.updateLinks\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      // .attr('stroke-opacity', d => {\n      //   return checkInteraction(\n      //     d.data,\n      //     linkOpacity,\n      //     this.hoverOpacity,\n      //     this.hoverHighlight,\n      //     this.clickHighlight,\n      //     this.innerInteractionKeys\n      //     // this.nodeIDAccessor\n      //   );\n      // })\n      .attr('d', this.layout === 'vertical' ? sankeyLinkVertical() : sankeyLinkHorizontal())\n      .attr('stroke-width', d => Math.max(1, d.width))\n      .call(transitionEndAll, () => {\n        this.removeTemporaryClickedLinks(this.svg.node());\n        this.updateLinks\n          .classed('entering', false)\n          .attr('d', this.layout === 'vertical' ? sankeyLinkVertical() : sankeyLinkHorizontal())\n          .attr('stroke-dasharray', '');\n\n        this.updateInteractionState();\n        this.updateLinks.each((d, i, n) => {\n          const clicked =\n            this.clickHighlight &&\n            this.clickHighlight.length > 0 &&\n            checkClicked(d.data, this.clickHighlight, this.innerInteractionKeys);\n          if (clicked) {\n            // this will add a non-interactive duplicate of each clicked link above the existing ones\n            // so that the link visually appears above all other links, but the keyboard nav order does not change\n            this.drawDuplicateClickedLink(n[i], d);\n          }\n        });\n      });\n\n    this.updateLinks\n      .transition('accessibilityAfterExit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        // before we exit geometries, we need to check if a focus exists or not\n        const focusDidExist = checkAccessFocus(this.rootG.node());\n        // then we must remove the exiting elements\n        this.exitLinks.remove();\n        // then our util can count geometries\n        this.setChartCountAccessibility();\n        // our group's label should update with new counts too\n        this.setGroupAccessibilityID();\n        // since items exited, labels must receive updated values\n        this.setGeometryAriaLabels();\n        // and also make sure the user's focus isn't lost\n        retainAccessFocus({\n          parentGNode: this.rootG.node(),\n          focusDidExist\n          // recursive: true\n        });\n        // now we can emit the event that transitions are complete\n        this.transitionEndEvent.emit({ chartID: this.chartID });\n      });\n  }\n\n  // creates a clone of clicked links\n  drawDuplicateClickedLink(inputElement, d) {\n    const source = inputElement;\n    const className = 'vcl-accessibility-focus';\n    const parent = source.parentNode;\n    const sourceCopy = source.cloneNode();\n    select(sourceCopy)\n      .classed('alluvial-link', false)\n      .classed(className + '-highlight ' + className + '-hover', true)\n      .classed('duplicated-clicked-link', true)\n      .classed('entering', false)\n      .data([d.data])\n      .attr('focusable', false)\n      .attr('aria-label', null)\n      .attr('aria-hidden', true)\n      .attr('role', null)\n      .style('pointer-events', 'none')\n      .attr('tabindex', null);\n\n    if (this.innerLinkFillMode === 'source' || this.innerLinkFillMode === 'target') {\n      const parentOfParent = parent.parentNode;\n      const validSiblings = select(parentOfParent).selectAll('.link-group')._groups[0];\n      const lastGroup = validSiblings[validSiblings.length - 1];\n      lastGroup.appendChild(sourceCopy);\n    } else {\n      parent.appendChild(sourceCopy);\n    }\n  }\n\n  removeTemporaryClickedLinks(root) {\n    select(root)\n      .selectAll('.duplicated-clicked-link')\n      .remove();\n  }\n\n  updateLinkStyle() {\n    this.updateLinks\n      .attr('stroke', d =>\n        this.clickHighlight.length > 0 &&\n        checkClicked(d.data, this.clickHighlight, this.innerInteractionKeys) &&\n        this.clickStyle.color\n          ? visaColors[this.clickStyle.color] || this.clickStyle.color\n          : this.hoverHighlight &&\n            checkHovered(d.data, this.hoverHighlight, this.innerInteractionKeys) &&\n            this.hoverStyle.color\n          ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n          : this.innerLinkFillMode === 'group'\n          ? this.colorArr[this.groupKeys.indexOf(d[this.groupAccessor])]\n          : this.innerLinkFillMode === 'none'\n          ? this.colorArr[0] || '#E4E4E4'\n          : this.innerLinkFillMode === 'link'\n          ? this.colorArr[d.index]\n          : this.innerLinkFillMode === 'source'\n          ? this.colorArr[d.source.index]\n          : this.colorArr[d.target.index]\n      )\n      .attr('fill', 'none');\n  }\n\n  enterNodeGeometries() {\n    this.enterNodes.interrupt();\n\n    if (!this.defaults) {\n      this.enterNodes.classed('entering', true);\n    }\n\n    this.enterNodes\n      .select('.alluvial-node')\n      // .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .attr('fill', (_, i) => (this.nodeConfig.fill ? this.colorArr[i] || this.colorArr[0] : '#E4E4E4'))\n      .attr('stroke', (_, i) =>\n        getContrastingStroke(this.nodeConfig.fill ? this.colorArr[i] || this.colorArr[0] : '#E4E4E4')\n      )\n      .attr('stroke-width', '1px')\n      .attr('x', d => d.x0)\n      .attr('y', d => d.y0)\n      .attr('height', d => d.y1 - d.y0)\n      .attr('opacity', 0)\n      .attr('width', d => d.x1 - d.x0);\n\n    // .transition('enter_nodes')\n    // .delay(20 * this.duration)\n    // .duration(this.duration)\n    // .ease(easeCircleIn)\n    // .attr('x', d => d.x0)\n    // .attr('y', d => d.y0)\n    // .attr('height', d => d.y1 - d.y0)\n    // .attr('width', d => d.x1 - d.x0)\n    // .attr('opacity', 1);\n\n    // this.enterNodeGroups\n    //   .attr('class', 'node-wrapper')\n    //   .attr('data-offset-group', 'true');\n    // this.enterNodes\n    //   .attr('class', 'alluvial-node');\n  }\n\n  updateNodeGeometries() {\n    this.updateNodes.interrupt();\n\n    this.updateNodes\n      .select('.alluvial-node')\n      .transition('node_opacity')\n      .duration((_, i, n) => {\n        if (select(n[i].parentNode).classed('entering')) {\n          // select(n[i].parentNode).classed('entering', false);\n          return this.duration / 3;\n        }\n        return 0;\n      })\n      // .duration(this.duration)\n      .delay((_, i, n) => {\n        return select(n[i].parentNode).classed('entering') ? this.duration / 1.2 : 0;\n      })\n      .ease(easeCircleIn)\n      .attr(\n        'opacity',\n        1\n        // d => {\n        //   return checkInteraction(\n        //     d.data,\n        //     1,\n        //     this.hoverOpacity,\n        //     this.hoverHighlight,\n        //     this.clickHighlight,\n        //     this.innerInteractionKeys\n        //     // this.nodeIDAccessor\n        //   );\n        // }\n      );\n  }\n\n  exitNodeGeometries() {\n    this.exitNodes.interrupt();\n\n    this.exitNodes\n      .select('.alluvial-node')\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 3)\n      .attr('opacity', 0)\n      .attr('width', 0)\n      .select(function() {\n        return this.parentNode;\n      })\n      .remove();\n  }\n\n  drawNodeGeometries() {\n    this.updateNodes\n      .select('.alluvial-node')\n      // .on('click', !this.suppressEvents ? d => this.onClickHandler(d) : null)\n      // .on('mouseover', !this.suppressEvents ? d => this.onHoverHandler(d) : null)\n      // .on('mouseover', !this.suppressEvents ? d => this.onHoverHandler(d) : null)\n      // .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      // .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .transition('update_nodes')\n      .duration((_, i, n) => {\n        return select(n[i].parentNode).classed('entering') ? this.duration / 3 : this.duration;\n      })\n      .delay((_, i, n) => {\n        return select(n[i].parentNode).classed('entering') ? this.duration / 1.2 : 0;\n      })\n      .ease(easeCircleIn)\n      .attr('x', d => d.x0)\n      .attr('y', d => d.y0)\n      .attr('height', d => d.y1 - d.y0)\n      .attr('width', d => d.x1 - d.x0)\n      .attr('opacity', 1)\n      .call(transitionEndAll, () => {\n        this.updateNodes.classed('entering', false);\n        // .attr('opacity', 1)\n        // .attr('d', sankeyLinkHorizontal())\n        // .attr('stroke-dasharray', '');\n      });\n    // d => {\n    // let matchHover = true;\n    // if (d[this.sourceLinksString].length) {\n    //   matchHover = d[this.sourceLinksString].some(\n    //     linkData =>\n    //       checkInteraction(\n    //         linkData,\n    //         1,\n    //         this.hoverOpacity,\n    //         this.hoverHighlight,\n    //         this.clickHighlight,\n    //         this.innerInteractionKeys,\n    //         this.nodeIDAccessor\n    //       ) >= 1\n    //   );\n    // }\n    // if (d[this.targetLinksString].length) {\n    //   matchHover = d[this.targetLinksString].some(\n    //     linkData =>\n    //       checkInteraction(\n    //         linkData,\n    //         1,\n    //         this.hoverOpacity,\n    //         this.hoverHighlight,\n    //         this.clickHighlight,\n    //         this.innerInteractionKeys,\n    //         this.nodeIDAccessor\n    //       ) >= 1\n    //   );\n    // }\n    // return matchHover ? 1 : this.hoverOpacity;\n    // })\n  }\n\n  updateNodeStyle() {\n    this.updateNodes\n      .select('.alluvial-node')\n      .attr('fill', (_, i) => (this.nodeConfig.fill ? this.colorArr[i] || this.colorArr[0] : '#E4E4E4'));\n    this.updateNodes\n      .select('.alluvial-node')\n      .attr('stroke', (_, i) =>\n        getContrastingStroke(this.nodeConfig.fill ? this.colorArr[i] || this.colorArr[0] : '#E4E4E4')\n      );\n    this.updateNodes.select('.alluvial-node').attr('stroke-width', '1px');\n  }\n\n  // at some point we could extract this to dataLabel.ts, but not now\n  // the additional selection of this below will skip any transition that\n  // is taking place in the selection, we need to use transition on update\n  // but not on entry, need to look into this more.\n  placeNodeLabels({\n    root,\n    layout,\n    dataLabel,\n    innerPaddedWidth\n  }: {\n    root?: any;\n    layout?: string;\n    dataLabel: any;\n    innerPaddedWidth?: number;\n  }) {\n    // scenarios we need to account for\n    // vertical - top, middle, bottom, auto\n    // horizontal - top, middle, bottom, auto\n    let xPlacement, yPlacement, offsetX, offsetY, textAnchor;\n\n    // note: keep in mind that width/height have been flipped for vertical\n    if (layout === 'vertical') {\n      switch (dataLabel.placement) {\n        case 'outside':\n          xPlacement = d => d.x0 + (d.x1 - d.x0) / 2;\n          yPlacement = d => {\n            return d.y0 < innerPaddedWidth / 2 ? d.y0 : d.y1;\n          };\n          offsetX = '0.0em';\n          offsetY = d => (d.y0 < innerPaddedWidth / 2 ? '-0.5em' : '1.3em');\n          textAnchor = 'middle';\n          break;\n        case 'on-node':\n          xPlacement = d => d.x0 + (d.x1 - d.x0) / 2;\n          yPlacement = d => d.y0 + (d.y1 - d.y0) / 2;\n          offsetX = '0.0em';\n          offsetY = '0.4em';\n          textAnchor = 'middle';\n          break;\n        case 'inside':\n          xPlacement = d => d.x0 + (d.x1 - d.x0) / 2;\n          yPlacement = d => (d.y0 < innerPaddedWidth / 2 ? d.y1 : d.y0);\n          offsetX = '0.0em';\n          offsetY = d => (d.y0 < innerPaddedWidth / 2 ? '1.3em' : '-0.5em');\n          textAnchor = 'middle';\n          break;\n        default:\n          xPlacement = d => d.x0 + (d.x1 - d.x0) / 2;\n          yPlacement = d => (d.y0 < innerPaddedWidth / 2 ? d.y1 : d.y0);\n          offsetX = '0.0em';\n          offsetY = d => (d.y0 < innerPaddedWidth / 2 ? '1.3em' : '-0.5em');\n          textAnchor = 'middle';\n          break;\n      }\n    } else {\n      switch (dataLabel.placement) {\n        case 'outside':\n          xPlacement = d => (d.x0 < innerPaddedWidth / 2 ? d.x0 : d.x1);\n          yPlacement = d => d.y0 + (d.y1 - d.y0) / 2;\n          offsetX = d => (d.x0 < innerPaddedWidth / 2 ? '-0.5em' : '0.5em');\n          offsetY = '0.4em';\n          textAnchor = d => (d.x0 < innerPaddedWidth / 2 ? 'end' : 'start');\n          break;\n        case 'on-node':\n          xPlacement = d => d.x0 + (d.x1 - d.x0) / 2;\n          yPlacement = d => d.y0 + (d.y1 - d.y0) / 2;\n          offsetX = '0.0em';\n          offsetY = '0.4em';\n          textAnchor = 'middle';\n          break;\n        case 'inside':\n          xPlacement = d => (d.x0 < innerPaddedWidth / 2 ? d.x1 : d.x0);\n          yPlacement = d => d.y0 + (d.y1 - d.y0) / 2;\n          offsetX = d => (d.x0 < innerPaddedWidth / 2 ? '0.5em' : '-0.5em');\n          offsetY = '0.4em';\n          textAnchor = d => (d.x0 < innerPaddedWidth / 2 ? 'start' : 'end');\n          break;\n        default:\n          xPlacement = d => (d.x0 < innerPaddedWidth / 2 ? d.x1 : d.x0);\n          yPlacement = d => d.y0 + (d.y1 - d.y0) / 2;\n          offsetX = d => (d.x0 < innerPaddedWidth / 2 ? '0.5em' : '-0.5em');\n          offsetY = '0.4em';\n          textAnchor = d => (d.x0 < innerPaddedWidth / 2 ? 'start' : 'end');\n          break;\n      }\n    }\n\n    // now we use d3 each to call the above accessors for each node label placement\n    // if we need to skip the transition at times we can use the .each() function like below\n    // .each((_, i, n) => {\n    //   select(n[i]) // this new selection will be outside of the transition scope\n    //    .attr(...)\n    // });\n    // the call below will be within the transition scope of the selection passed\n    root\n      .attr('x', xPlacement)\n      .attr('y', yPlacement)\n      .attr('dx', offsetX)\n      .attr('dy', offsetY)\n      .attr('data-dx', offsetX)\n      .attr('data-dy', offsetY)\n      .attr('text-anchor', textAnchor);\n    // we handle these attributes slightly differently in the functions below\n    // .attr('data-x', xPlacement)\n    // .attr('data-use-dx', true)\n    // .attr('data-y', yPlacement)\n    // .attr('data-use-dy', true)\n  }\n\n  enterNodeLabels() {\n    this.enteringLabels.interrupt();\n    const opacity = this.dataLabel.visible ? 1 : 0;\n    const hiddenOpacity = this.dataLabel.visible ? Number.EPSILON : 0;\n    this.widthAllNodesNoLinks = this.nodeCount * this.nodeConfig.width + this.nodeCount * this.nodeConfig.width;\n    this.noLinksLeftPadding = (this.innerPaddedWidth - this.widthAllNodesNoLinks) / 2;\n\n    this.enteringLabels\n      .attr('class', 'alluvial-diagram-dataLabel entering')\n      .attr('cursor', !this.suppressEvents && this.dataLabel.visible ? this.cursor : null)\n      .attr('opacity', d => {\n        if (this.linkConfig.visible) {\n          let matchHover = true;\n          if (d[this.sourceLinksString].length) {\n            matchHover = d[this.sourceLinksString].some(\n              linkData =>\n                checkInteraction(\n                  linkData.data,\n                  opacity,\n                  this.hoverOpacity,\n                  this.hoverHighlight,\n                  this.clickHighlight,\n                  this.innerInteractionKeys\n                ) >= 1\n            );\n          }\n          if (d[this.targetLinksString].length) {\n            matchHover = d[this.targetLinksString].some(\n              linkData =>\n                checkInteraction(\n                  linkData.data,\n                  opacity,\n                  this.hoverOpacity,\n                  this.hoverHighlight,\n                  this.clickHighlight,\n                  this.innerInteractionKeys\n                ) >= 1\n            );\n          }\n          return matchHover ? hiddenOpacity : 0;\n        } else {\n          return d.layer === 0 ? hiddenOpacity : d.layer === this.nodeCount ? hiddenOpacity : 0;\n        }\n      });\n\n    this.placeNodeLabels({\n      root: this.enteringLabels,\n      layout: this.layout,\n      dataLabel: this.dataLabel,\n      innerPaddedWidth: this.innerPaddedWidth\n    });\n  }\n\n  updateNodeLabels() {\n    this.updatingLabels.interrupt('label_opacity');\n    const opacity = this.dataLabel.visible ? 1 : 0;\n\n    this.updatingLabels\n      .transition('label_opacity')\n      .ease(easeCircleIn)\n      // .duration(this.duration)\n      .duration((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          return this.duration / 3;\n        }\n        return 0;\n      })\n      // .duration(this.duration)\n      .delay((_, i, n) => {\n        return select(n[i]).classed('entering') ? this.duration / 1.2 : 0;\n      })\n      .attr('opacity', d => {\n        if (this.linkConfig.visible) {\n          let matchHover = true;\n          if (d[this.sourceLinksString].length) {\n            matchHover = d[this.sourceLinksString].some(\n              linkData =>\n                checkInteraction(\n                  linkData.data,\n                  opacity,\n                  this.hoverOpacity,\n                  this.hoverHighlight,\n                  this.clickHighlight,\n                  this.innerInteractionKeys\n                ) >= 1\n            );\n          }\n          if (d[this.targetLinksString].length) {\n            matchHover = d[this.targetLinksString].some(\n              linkData =>\n                checkInteraction(\n                  linkData.data,\n                  opacity,\n                  this.hoverOpacity,\n                  this.hoverHighlight,\n                  this.clickHighlight,\n                  this.innerInteractionKeys\n                ) >= 1\n            );\n          }\n          return matchHover ? 1 : 0;\n        } else {\n          return d.layer === 0 ? opacity : d.layer === this.nodeCount ? opacity : 0;\n        }\n      });\n  }\n\n  exitNodeLabels() {\n    this.exitingLabels.interrupt();\n\n    this.exitingLabels\n      .transition('exit_labels')\n      // .duration(this.duration)\n      .duration(this.duration / 3)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  addStrokeUnder() {\n    const filter = createTextStrokeFilter({\n      root: this.svg.node(),\n      id: this.chartID,\n      color: '#ffffff'\n    });\n    this.updatingLabels.attr('filter', filter);\n  }\n\n  drawNodeLabels() {\n    // const opacity = this.dataLabel.visible ? 1 : 0;\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n    const cloneAdjustment = hideOnly ? 0 : 4;\n\n    this.widthAllNodesNoLinks = this.nodeCount * this.nodeConfig.width * 2;\n    this.noLinksLeftPadding = (this.innerPaddedWidth - this.widthAllNodesNoLinks) / 2;\n    const nodeLabelUpdate = this.updatingLabels\n      .text(d =>\n        this.dataLabel.format\n          ? formatDataLabel(d, this.innerLabelAccessor, this.dataLabel.format)\n          : d[this.innerLabelAccessor]\n      )\n      .attr('data-x', d =>\n        this.layout === 'vertical'\n          ? d.x0 + (d.x1 - d.x0) / 2\n          : this.dataLabel.placement === 'outside'\n          ? d.x0 < this.innerPaddedWidth / 2\n            ? d.x0 - cloneAdjustment\n            : d.x1 + cloneAdjustment\n          : d.x0 < this.innerPaddedWidth / 2\n          ? d.x1 + cloneAdjustment\n          : d.x0 - cloneAdjustment\n      ) // note we hacked vertical layout so still have to use width here\n      .attr('data-y', d =>\n        this.layout === 'vertical'\n          ? this.dataLabel.placement === 'outside'\n            ? d.y0 < this.innerPaddedWidth / 2\n              ? d.y0 - cloneAdjustment\n              : d.y1 + cloneAdjustment\n            : d.y0 < this.innerPaddedWidth / 2\n            ? d.y1 + cloneAdjustment\n            : d.y0 - cloneAdjustment\n          : d.y0 + (d.y1 - d.y0) / 2\n      )\n      .attr('data-translate-x', this.padding.left + this.margin.left)\n      .attr('data-translate-y', this.padding.top + this.margin.top)\n      .attr('data-use-dx', hideOnly)\n      .attr('data-use-dy', hideOnly)\n      .transition('update_labels')\n      .duration((_, i, n) => {\n        return select(n[i]).classed('entering') ? this.duration / 3 : this.duration;\n      })\n      .delay((_, i, n) => {\n        return select(n[i]).classed('entering') ? this.duration / 1.2 : 0;\n      })\n      .ease(easeCircleIn);\n\n    if (this.dataLabel.visible && (this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly)) {\n      // we only need the node outlines and correct attributes on them\n      const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n      const nodeRects = this.updateNodes\n        .select('.alluvial-node')\n        .attr('data-x', d => d.x0)\n        .attr('data-y', d => d.y0)\n        .attr('data-translate-x', this.padding.left + this.margin.left)\n        .attr('data-translate-y', this.padding.top + this.margin.top)\n        .attr('data-height', d => d.y1 - d.y0)\n        .attr('data-width', d => d.x1 - d.x0)\n        .each((d, i, n) => {\n          // for each node, we create a clone and place it\n          // on either side of the rect to hack an inside/outside\n          // placement from the collision util\n          if (!hideOnly) {\n            const source = n[i];\n            const parent = source.parentNode;\n            const className = 'alluvial-node-collision-clone';\n            const sourceCopy = source.cloneNode();\n            select(sourceCopy)\n              .classed('alluvial-node', false)\n              .classed(className, true)\n              .classed('entering', false)\n              .data([d])\n              .attr('focusable', false)\n              .attr('aria-label', null)\n              .attr('aria-hidden', true)\n              .attr('role', null)\n              .style('pointer-events', 'none')\n              .style('visibility', 'hidden')\n              .attr('tabindex', null)\n              .attr(\n                'data-x',\n                this.layout === 'vertical'\n                  ? d.x0\n                  : collisionPlacement === 'all'\n                  ? d.x0\n                  : collisionPlacement === 'outside'\n                  ? d.x0 < this.innerPaddedWidth / 2\n                    ? d.x0 - cloneAdjustment\n                    : d.x1 + cloneAdjustment\n                  : d.x0 < this.innerPaddedWidth / 2\n                  ? d.x1 + cloneAdjustment\n                  : d.x0 - cloneAdjustment\n              ) // note we hacked vertical layout so still have to use width here\n              .attr(\n                'data-y',\n                this.layout === 'vertical'\n                  ? collisionPlacement === 'all'\n                    ? d.y0\n                    : collisionPlacement === 'outside'\n                    ? d.y0 < this.innerPaddedWidth / 2\n                      ? d.y0 - cloneAdjustment\n                      : d.y1 + cloneAdjustment\n                    : d.y0 < this.innerPaddedWidth / 2\n                    ? d.y1 + cloneAdjustment\n                    : d.y0 - cloneAdjustment\n                  : d.y0\n              )\n              .attr(\n                'data-width',\n                this.layout === 'vertical' ? d.x1 - d.x0 : collisionPlacement === 'all' ? d.x1 - d.x0 : 1\n              )\n              .attr(\n                'data-height',\n                this.layout === 'vertical' ? (collisionPlacement === 'all' ? d.y1 - d.y0 : 1) : d.y1 - d.y0\n              );\n\n            // temporarily append these to the parent\n            parent.appendChild(sourceCopy);\n          }\n        });\n      const clonedRects = this.updateNodes.select('.alluvial-node-collision-clone');\n      this.bitmaps = resolveLabelCollision({\n        labelSelection: nodeLabelUpdate,\n        avoidMarks: hideOnly ? [nodeRects] : [nodeRects, clonedRects],\n        validPositions: hideOnly ? ['middle'] : this.layout === 'vertical' ? ['top', 'bottom'] : ['left', 'right'],\n        offsets: hideOnly ? [1] : [4, 4],\n        accessors: [this.innerIDAccessor],\n        size: [roundTo(this.width, 0), roundTo(this.height, 0)], // we need the whole width for series labels\n        hideOnly: this.dataLabel.visible && hideOnly\n      });\n      clonedRects.remove();\n\n      // if we are in hide only we need to add attributes back\n      if (hideOnly) {\n        this.placeNodeLabels({\n          root: nodeLabelUpdate,\n          layout: this.layout,\n          dataLabel: this.dataLabel,\n          innerPaddedWidth: this.innerPaddedWidth\n        });\n      }\n    } else {\n      this.placeNodeLabels({\n        root: nodeLabelUpdate,\n        layout: this.layout,\n        dataLabel: this.dataLabel,\n        innerPaddedWidth: this.innerPaddedWidth\n      });\n    }\n    // we need to call this after the transitions\n    nodeLabelUpdate.call(transitionEndAll, () => {\n      this.updatingLabels.classed('entering', false);\n      this.addStrokeUnder();\n    });\n  }\n\n  setNodeLabelOpacity() {\n    this.updatingLabels.interrupt('label_opacity');\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n    const cloneAdjustment = hideOnly ? 0 : 4;\n    const addCollisionClass =\n      this.dataLabel.visible && (this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly);\n    const opacity = this.dataLabel.visible ? 1 : 0;\n\n    this.updatingLabels.attr('opacity', (d, i, n) => {\n      const prevOpacity = +select(n[i]).attr('opacity');\n      const styleVisibility = select(n[i]).style('visibility');\n      let targetOpacity;\n      if (this.linkConfig.visible) {\n        let matchHover = true;\n        if (d[this.sourceLinksString].length) {\n          matchHover = d[this.sourceLinksString].some(\n            linkData =>\n              checkInteraction(\n                linkData.data,\n                opacity,\n                this.hoverOpacity,\n                this.hoverHighlight,\n                this.clickHighlight,\n                this.innerInteractionKeys\n              ) >= 1\n          );\n        }\n        if (d[this.targetLinksString].length) {\n          matchHover = d[this.targetLinksString].some(\n            linkData =>\n              checkInteraction(\n                linkData.data,\n                opacity,\n                this.hoverOpacity,\n                this.hoverHighlight,\n                this.clickHighlight,\n                this.innerInteractionKeys\n              ) >= 1\n          );\n        }\n        targetOpacity = matchHover ? opacity : 0;\n      } else {\n        targetOpacity = d.layer === 0 ? opacity : d.layer === this.nodeCount ? opacity : 0;\n      }\n      if (\n        ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n        addCollisionClass\n      ) {\n        if (targetOpacity === 1) {\n          select(n[i])\n            .classed('collision-added', true)\n            .style('visibility', null);\n        } else {\n          select(n[i]).classed('collision-removed', true);\n        }\n      }\n      return targetOpacity;\n    });\n\n    if (addCollisionClass) {\n      const labelsAdded = this.updatingLabels.filter((_, i, n) => select(n[i]).classed('collision-added'));\n      const labelsRemoved = this.updatingLabels\n        .filter((_, i, n) => select(n[i]).classed('collision-removed'))\n        .attr('data-use-dx', hideOnly) // need to add this for remove piece of collision below\n        .attr('data-use-dy', hideOnly);\n\n      // we can now remove labels as well if we need to...\n      if (labelsRemoved.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsRemoved,\n          avoidMarks: [],\n          validPositions: ['middle'],\n          offsets: [1],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n          hideOnly: false,\n          removeOnly: true\n        });\n\n        // remove temporary class now\n        labelsRemoved.classed('collision-removed', false);\n      }\n\n      // we can now add labels as well if we need to...\n      if (labelsAdded.size() > 0) {\n        // we only need the node outlines and correct attributes on them\n        const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n        const nodeRects = this.updateNodes\n          .select('.alluvial-node')\n          .attr('data-x', d => d.x0)\n          .attr('data-y', d => d.y0)\n          .attr('data-translate-x', this.padding.left + this.margin.left)\n          .attr('data-translate-y', this.padding.top + this.margin.top)\n          .attr('data-height', d => d.y1 - d.y0)\n          .attr('data-width', d => d.x1 - d.x0)\n          .each((d, i, n) => {\n            // for each node, we create a clone and place it\n            // on either side of the rect to hack an inside/outside\n            // placement from the collision util\n            if (!hideOnly) {\n              const source = n[i];\n              const parent = source.parentNode;\n              const className = 'alluvial-node-collision-clone';\n              const sourceCopy = source.cloneNode();\n              select(sourceCopy)\n                .classed('alluvial-node', false)\n                .classed(className, true)\n                .classed('entering', false)\n                .data([d])\n                .attr('focusable', false)\n                .attr('aria-label', null)\n                .attr('aria-hidden', true)\n                .attr('role', null)\n                .style('pointer-events', 'none')\n                .style('visibility', 'hidden')\n                .attr('tabindex', null)\n                .attr(\n                  'data-x',\n                  this.layout === 'vertical'\n                    ? d.x0\n                    : collisionPlacement === 'all'\n                    ? d.x0\n                    : collisionPlacement === 'outside'\n                    ? d.x0 < this.innerPaddedWidth / 2\n                      ? d.x0 - cloneAdjustment\n                      : d.x1 + cloneAdjustment\n                    : d.x0 < this.innerPaddedWidth / 2\n                    ? d.x1 + cloneAdjustment\n                    : d.x0 - cloneAdjustment\n                ) // note we hacked vertical layout so still have to use width here\n                .attr(\n                  'data-y',\n                  this.layout === 'vertical'\n                    ? collisionPlacement === 'all'\n                      ? d.y0\n                      : collisionPlacement === 'outside'\n                      ? d.y0 < this.innerPaddedWidth / 2\n                        ? d.y0 - cloneAdjustment\n                        : d.y1 + cloneAdjustment\n                      : d.y0 < this.innerPaddedWidth / 2\n                      ? d.y1 + cloneAdjustment\n                      : d.y0 - cloneAdjustment\n                    : d.y0\n                )\n                .attr(\n                  'data-width',\n                  this.layout === 'vertical' ? d.x1 - d.x0 : collisionPlacement === 'all' ? d.x1 - d.x0 : 1\n                )\n                .attr(\n                  'data-height',\n                  this.layout === 'vertical' ? (collisionPlacement === 'all' ? d.y1 - d.y0 : 1) : d.y1 - d.y0\n                );\n              // temporarily append these to the parent\n              parent.appendChild(sourceCopy);\n            }\n          });\n        const clonedRects = this.updateNodes.select('.alluvial-node-collision-clone');\n        this.bitmaps = resolveLabelCollision({\n          labelSelection: labelsAdded,\n          bitmaps: this.bitmaps,\n          avoidMarks: hideOnly ? [nodeRects] : [nodeRects, clonedRects],\n          validPositions: hideOnly ? ['middle'] : this.layout === 'vertical' ? ['top', 'bottom'] : ['left', 'right'],\n          offsets: hideOnly ? [1] : [4, 4],\n          accessors: [this.innerIDAccessor],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)], // we need the whole width for series labels\n          hideOnly: this.dataLabel.visible && hideOnly,\n          suppressMarkDraw: true\n        });\n        clonedRects.remove();\n\n        // if we are in hide only we need to add attributes back\n        if (hideOnly) {\n          this.placeNodeLabels({\n            root: labelsAdded,\n            layout: this.layout,\n            dataLabel: this.dataLabel,\n            innerPaddedWidth: this.innerPaddedWidth\n          });\n        }\n\n        // remove temporary class now\n        labelsAdded.classed('collision-added', false);\n      }\n    }\n  }\n\n  updateInteractionState() {\n    // we created an \"opacity\" transition namespace in update's transition\n    // we override it here to instantly display opacity state (below)\n    this.removeTemporaryClickedLinks(this.svg.node());\n    this.updateLinks.interrupt('opacity');\n\n    // we use this.update and this.labelCurrent from setGlobalSelection here\n    // the lifecycle state does not matter (enter/update/exit)\n    // since interaction state can happen at any time\n    const linkOpacity = this.linkConfig.visible ? this.linkConfig.opacity : 0;\n    this.updateLinks\n      .attr('stroke-opacity', d => {\n        return checkInteraction(\n          d.data,\n          linkOpacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n          // this.nodeIDAccessor\n        );\n      })\n      .attr('stroke', d =>\n        this.clickHighlight.length > 0 &&\n        checkClicked(d.data, this.clickHighlight, this.innerInteractionKeys) &&\n        this.clickStyle.color\n          ? visaColors[this.clickStyle.color] || this.clickStyle.color\n          : this.hoverHighlight &&\n            checkHovered(d.data, this.hoverHighlight, this.innerInteractionKeys) &&\n            this.hoverStyle.color\n          ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n          : this.innerLinkFillMode === 'group'\n          ? this.colorArr[this.groupKeys.indexOf(d[this.groupAccessor])]\n          : this.innerLinkFillMode === 'none'\n          ? this.colorArr[0] || '#E4E4E4'\n          : this.innerLinkFillMode === 'link'\n          ? this.colorArr[d.index]\n          : this.innerLinkFillMode === 'source'\n          ? this.colorArr[d.source.index]\n          : this.colorArr[d.target.index]\n      );\n\n    this.updateLinks.each((d, i, n) => {\n      const clicked =\n        this.clickHighlight &&\n        this.clickHighlight.length > 0 &&\n        checkClicked(d.data, this.clickHighlight, this.innerInteractionKeys);\n      if (clicked) {\n        // this will add a non-interactive duplicate of each clicked link above the existing ones\n        // so that the link visually appears above all other links, but the keyboard nav order does not change\n        this.drawDuplicateClickedLink(n[i], d);\n      }\n    });\n  }\n\n  bindInteractivity() {\n    this.updateLinks\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  // positions are broken when dealing with vertical sankey\n  drawAnnotations() {\n    const positionData = this.preppedData;\n    const preppedAnnotations = [];\n    this.annotations.forEach((datum: any) => {\n      const d = { ...datum };\n      let internalData = datum.data;\n      if (positionData && internalData) {\n        if (d.positionType === 'node' && d.data.hasOwnProperty(this.innerIDAccessor)) {\n          const index = positionData.nodes.findIndex(x => x[this.innerIDAccessor] === d.data[this.innerIDAccessor]);\n          internalData = positionData.nodes[index];\n        } else if (\n          d.positionType === 'source' ||\n          (d.positionType === 'target' &&\n            d.data.hasOwnProperty(this.sourceAccessor) &&\n            d.data.hasOwnProperty(this.targetAccessor))\n        ) {\n          const index = positionData.links.findIndex(\n            x =>\n              x.data[this.sourceAccessor] === d.data[this.sourceAccessor] &&\n              x.data[this.targetAccessor] === d.data[this.targetAccessor]\n          );\n          internalData = positionData.links[index];\n        }\n      }\n      if (d.positionType && internalData) {\n        if (d.positionType === 'target' && internalData.target) {\n          d.x = internalData.target.x0;\n          d.y = internalData.y1;\n        } else if (d.positionType === 'source' && internalData.source) {\n          d.x = internalData.source.x1;\n          d.y = internalData.y0;\n        } else if (d.positionType === 'node') {\n          d.x = internalData.x1;\n          d.y = (internalData.y1 + internalData.y0) / 2;\n        }\n      }\n      // we need to wipe the data before we pass it in, so that the x and y are used instead!\n      delete d.data;\n      preppedAnnotations.push(d);\n    });\n    annotate({\n      source: this.rootG.node(),\n      data: preppedAnnotations,\n      ignoreScales: true,\n      // xScale: this.x,\n      // xAccessor: this.layout !== 'horizontal' ? this.ordinalAccessor : this.valueAccessor,\n      // yScale: this.y,\n      // yAccessor: this.layout !== 'horizontal' ? this.valueAccessor : this.ordinalAccessor,\n      width: this.width,\n      height: this.height,\n      padding: this.padding,\n      margin: this.margin,\n      bitmaps: this.bitmaps\n    });\n  }\n\n  setSubTitleElements() {\n    setSubTitle({\n      root: this.subTitleG,\n      subTitle: this.subTitle\n    });\n  }\n\n  setColors() {\n    this.colorArr = this.colors ? convertVisaColor(this.colors) : getColors(this.colorPalette, this.nodeList.length);\n  }\n\n  setTagLevels() {\n    this.topLevel = findTagLevel(this.highestHeadingLevel);\n    this.bottomLevel = findTagLevel(this.highestHeadingLevel, 3);\n  }\n\n  setChartDescriptionWrapper() {\n    // this initializes the accessibility description section of the chart\n    initializeDescriptionRoot({\n      language: this.getLanguageString(),\n      rootEle: this.alluvialDiagramEl, // this.lineChartEl,\n      title: this.accessibility.title || this.mainTitle,\n      chartTag: 'alluvial-diagram',\n      uniqueID: this.chartID,\n      highestHeadingLevel: this.highestHeadingLevel,\n      redraw: this.shouldRedrawWrapper,\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      hideDataTable: this.accessibility.hideDataTableButton\n    });\n    this.shouldRedrawWrapper = false;\n  }\n\n  setParentSVGAccessibility() {\n    // this sets the accessibility features of the root SVG element\n    const keys = scopeDataKeys(this, chartAccessors, 'alluvial-diagram');\n    setAccessibilityController({\n      language: this.getLanguageString(),\n      node: this.svg.node(),\n      chartTag: 'alluvial-diagram',\n      title: this.accessibility.title || this.mainTitle,\n      description: this.subTitle,\n      uniqueID: this.chartID,\n      geomType: 'link',\n      includeKeyNames: this.accessibility.includeDataKeyNames,\n      dataKeys: keys,\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.innerIDAccessor,\n      groupKeys: ['value'],\n      groupName: 'node',\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled\n    });\n  }\n\n  setGeometryAccessibilityAttributes() {\n    // this makes sure every geom element has correct event handlers + semantics (role, tabindex, etc)\n    this.updateLinks.each((_d, i, n) => {\n      initializeElementAccess(n[i]);\n    });\n  }\n\n  setGeometryAriaLabels() {\n    // this adds an ARIA label to each geom (a description read by screen readers)\n    const keys = scopeDataKeys(this, chartAccessors, 'alluvial-diagram');\n    this.updateLinks.each((_d, i, n) => {\n      setElementFocusHandler({\n        node: n[i],\n        geomType: 'link',\n        includeKeyNames: this.accessibility.includeDataKeyNames,\n        dataKeys: keys,\n        dataKeyNames: this.dataKeyNames,\n        groupName: 'node',\n        uniqueID: this.chartID,\n        disableKeyNav:\n          this.suppressEvents &&\n          this.accessibility.elementsAreInterface === false &&\n          this.accessibility.keyboardNavConfig &&\n          this.accessibility.keyboardNavConfig.disabled\n      });\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setGroupAccessibilityID() {\n    // this sets an ARIA label on all the g elements in the chart\n    this.updateNodes.each((_, i, n) => {\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setChartCountAccessibility() {\n    // this is our automated section that describes the chart contents\n    // (like geometry and gorup counts, etc)\n    setAccessChartCounts({\n      rootEle: this.alluvialDiagramEl, // this.lineChartEl,\n      parentGNode: this.linkG.node(), // this.dotG.node(), // pass the wrapper to <g> or geometries here, should be single node selection\n      chartTag: 'alluvial-diagram',\n      geomType: 'link',\n      groupName: 'node'\n      // recursive: true\n    });\n  }\n\n  setSelectedClass() {\n    this.updateLinks\n      .classed('highlight', d => {\n        const selected = checkInteraction(d.data, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n        return this.clickHighlight && this.clickHighlight.length ? selected : false;\n      })\n      .each((d, i, n) => {\n        let selected = checkInteraction(d.data, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n        selected = this.clickHighlight && this.clickHighlight.length ? selected : false;\n        const selectable = this.accessibility.elementsAreInterface;\n        setElementInteractionAccessState(n[i], selected, selectable);\n      });\n  }\n\n  setChartAccessibilityTitle() {\n    setAccessTitle(this.getLanguageString(), this.alluvialDiagramEl, this.accessibility.title || this.mainTitle);\n  }\n\n  setChartAccessibilitySubtitle() {\n    setAccessSubtitle(this.getLanguageString(), this.alluvialDiagramEl, this.subTitle);\n  }\n\n  setChartAccessibilityLongDescription() {\n    setAccessLongDescription(this.getLanguageString(), this.alluvialDiagramEl, this.accessibility.longDescription);\n  }\n\n  setChartAccessibilityExecutiveSummary() {\n    setAccessExecutiveSummary(this.getLanguageString(), this.alluvialDiagramEl, this.accessibility.executiveSummary);\n  }\n\n  setChartAccessibilityPurpose() {\n    setAccessPurpose(this.getLanguageString(), this.alluvialDiagramEl, this.accessibility.purpose);\n  }\n\n  setChartAccessibilityContext() {\n    setAccessContext(this.getLanguageString(), this.alluvialDiagramEl, this.accessibility.contextExplanation);\n  }\n\n  setChartAccessibilityStatisticalNotes() {\n    setAccessStatistics(this.getLanguageString(), this.alluvialDiagramEl, this.accessibility.statisticalNotes);\n  }\n\n  setChartAccessibilityStructureNotes() {\n    setAccessStructure(this.getLanguageString(), this.alluvialDiagramEl, this.accessibility.structureNotes);\n  }\n\n  setAnnotationAccessibility() {\n    setAccessAnnotation(this.getLanguageString(), this.alluvialDiagramEl, this.annotations, undefined);\n  }\n\n  onChangeHandler() {\n    if (this.accessibility && typeof this.accessibility.onChangeFunc === 'function') {\n      const d = {\n        updated: this.updated,\n        added: this.enterSize,\n        removed: this.exitSize\n      };\n      this.accessibility.onChangeFunc(d);\n    }\n    this.updated = false;\n    this.enterSize = 0;\n    this.exitSize = 0;\n  }\n\n  onClickHandler(d, n) {\n    this.clickEvent.emit({ data: d.data, target: n });\n  }\n\n  onHoverHandler(d, n) {\n    overrideTitleTooltip(this.chartID, true);\n    this.hoverEvent.emit({ data: d.data, target: n });\n    if (this.showTooltip) {\n      this.eventsTooltip({ data: d.data, evt: event, isToShow: true });\n    }\n  }\n\n  onMouseOutHandler() {\n    overrideTitleTooltip(this.chartID, false);\n    this.mouseOutEvent.emit();\n    if (this.showTooltip) {\n      this.eventsTooltip({ isToShow: false });\n    }\n  }\n\n  // set initial style (instead of copying css class across the lib)\n  setTooltipInitialStyle() {\n    initTooltipStyle(this.tooltipG);\n  }\n\n  // tooltip\n  eventsTooltip({ data, evt, isToShow }: { data?: any; evt?: any; isToShow: boolean }) {\n    drawTooltip({\n      root: this.tooltipG,\n      data,\n      event: evt,\n      isToShow,\n      tooltipLabel: this.tooltipLabel,\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.groupAccessor,\n      xAccessor: this.sourceAccessor, // map source to x for default tooltip logic\n      yAccessor: this.targetAccessor, // map source to y for default tooltip logic\n      valueAccessor: this.valueAccessor,\n      ordinalAccessor: this.innerIDAccessor,\n      chartType: 'alluvial-diagram'\n    });\n  }\n\n  render() {\n    this.drawStartEvent.emit({ chartID: this.chartID });\n    // everything between this comment and the third should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n    this.init();\n    if (this.shouldSetLocalizationConfig) {\n      this.setLocalizationConfig();\n      this.shouldSetLocalizationConfig = false;\n    }\n    if (this.shouldSetTagLevels) {\n      this.setTagLevels();\n      this.shouldSetTagLevels = false;\n    }\n    if (this.shouldUpdateData) {\n      this.prepareData();\n      this.shouldUpdateData = false;\n    }\n    if (this.shouldSetDimensions) {\n      this.setDimensions();\n      this.shouldSetDimensions = false;\n    }\n    if (this.shouldValidateLabelText) {\n      this.validateLabelText();\n      this.shouldValidateLabelText = false;\n    }\n    if (this.shouldValidateLinkFillMode) {\n      this.validateLinkFillMode();\n      this.shouldValidateLinkFillMode = false;\n    }\n    if (this.shouldValidateNodeAlignment) {\n      this.validateNodeAlignment();\n      this.shouldValidateNodeAlignment = false;\n    }\n    if (this.shouldValidateInteractionKeys) {\n      this.validateInteractionKeys();\n      this.shouldValidateInteractionKeys = false;\n    }\n    if (this.shouldValidateLinkGroups) {\n      this.validateLinkGroups();\n      this.shouldValidateLinkGroups = true;\n    }\n    if (this.shouldValidateLocalization) {\n      this.shouldValidateLocalizationProps();\n      this.shouldValidateLocalization = false;\n    }\n    if (this.shouldValidateAccessibility) {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateAccessibility = false;\n    }\n    if (this.shouldSetColors) {\n      this.setColors();\n      this.shouldSetColors = false;\n    }\n    if (this.shouldValidateIdAccessor) {\n      this.validateIdAccessor();\n      this.shouldValidateIdAccessor = false;\n    }\n    if (this.shouldSetNodeDimensions) {\n      this.setNodeDimensions();\n      this.shouldSetNodeDimensions = false;\n    }\n    if (this.shouldCallSankeyGenerator) {\n      this.callSankeyGenerator();\n      this.shouldCallSankeyGenerator = false;\n    }\n    if (this.shouldUpdateTableData) {\n      this.setTableData();\n      this.shouldUpdateTableData = false;\n    }\n\n    return (\n      // <div class=\"alluvial-diagram\">alluvial-diagram</div>;\n      <div>\n        <div class=\"o-layout\">\n          <div class=\"o-layout--chart\">\n            <this.topLevel class=\"alluvial-main-title vcl-main-title\">{this.mainTitle}</this.topLevel>\n            <this.bottomLevel class=\"visa-ui-text--instructions alluvial-sub-title vcl-sub-title\" />\n            <keyboard-instructions\n              uniqueID={this.chartID}\n              geomType={'node'}\n              groupName={'node collection'} // taken from initializeDescriptionRoot, on bar this should be \"bar group\", stacked bar is \"stack\", and clustered is \"cluster\"\n              language={this.getLanguageString()}\n              chartTag={'alluvial-diagram'}\n              width={this.width - (this.margin ? this.margin.right || 0 : 0)}\n              isInteractive={this.accessibility.elementsAreInterface}\n              hasCousinNavigation={this.innerLinkFillMode === 'source' || this.innerLinkFillMode === 'target'}\n              disabled={\n                this.suppressEvents &&\n                this.accessibility.elementsAreInterface === false &&\n                this.accessibility.keyboardNavConfig &&\n                this.accessibility.keyboardNavConfig.disabled\n              } // the chart is \"simple\"\n            />\n            <div class=\"visa-viz-d3-alluvial-container\" />\n            <div class=\"alluvial-tooltip vcl-tooltip\" style={{ display: this.showTooltip ? 'block' : 'none' }} />\n            <data-table\n              uniqueID={this.chartID}\n              isCompact\n              language={this.getLanguageString()}\n              tableColumns={this.tableColumns}\n              dataKeyNames={this.dataKeyNames}\n              data={this.tableData}\n              secondaryData={this.secondaryTableData}\n              secondaryTableColumns={this.secondaryTableColumns}\n              padding={this.padding}\n              margin={this.margin}\n              hideDataTable={this.accessibility.hideDataTableButton}\n              unitTest={this.unitTest}\n            />\n          </div>\n        </div>\n        {/* <canvas id=\"bitmap-render\" /> */}\n      </div>\n    );\n  }\n  private init() {\n    // reading properties\n    const keys = Object.keys(AlluvialDiagramDefaultValues);\n    let i = 0;\n    const exceptions = {\n      hoverOpacity: {\n        exception: 0\n      },\n      showTooltip: {\n        exception: false\n      },\n      mainTitle: {\n        exception: ''\n      },\n      subTitle: {\n        exception: ''\n      },\n      linkConfig: {\n        ...{\n          exception: false\n        }\n      }\n    };\n    for (i = 0; i < keys.length; i++) {\n      const exception = !exceptions[keys[i]] ? false : this[keys[i]] === exceptions[keys[i]].exception;\n      this[keys[i]] = this[keys[i]] || exception ? this[keys[i]] : AlluvialDiagramDefaultValues[keys[i]];\n    }\n  }\n}\n"],"mappings":"yfAMA,SAASA,WAAWC,GAClB,OAAOA,EAAEC,MACX,CAEA,SAASC,WAAWF,GAClB,OAAOA,EAAEG,MACX,CAEO,SAASC,KAAKC,GACnB,IAAIJ,EAASF,WACTI,EAASD,WACTI,EAAIC,EACJC,EAAIC,EACJC,EAAU,KACVC,EAAS,KACTC,EAAOC,SAAST,GAEpB,SAASA,IACP,IAAIU,EACJ,IAAMC,EAAOC,MAAMC,KAAKC,WACxB,IAAMC,EAAIlB,EAAOmB,MAAMC,KAAMN,GAC7B,IAAMO,EAAInB,EAAOiB,MAAMC,KAAMN,GAC7B,GAAIL,GAAW,KAAMC,EAASN,EAAMS,EAASF,KAC7CD,EAAOY,YACPR,EAAK,GAAKI,EAAGR,EAAOa,OAAOlB,EAAEc,MAAMC,KAAMN,IAAQP,EAAEY,MAAMC,KAAMN,IAC/DA,EAAK,GAAKO,EAAGX,EAAOa,OAAOlB,EAAEc,MAAMC,KAAMN,IAAQP,EAAEY,MAAMC,KAAMN,IAC/DJ,EAAOc,UACP,GAAIX,EAAQ,OAAOH,EAAS,KAAMG,EAAS,IAAM,IACrD,CAEEV,EAAKH,OAAS,SAASyB,GACrB,OAAOR,UAAUS,QAAU1B,EAASyB,EAAGtB,GAAQH,CACnD,EAEEG,EAAKD,OAAS,SAASuB,GACrB,OAAOR,UAAUS,QAAUxB,EAASuB,EAAGtB,GAAQD,CACnD,EAEEC,EAAKE,EAAI,SAASoB,GAChB,OAAOR,UAAUS,QAAUrB,SAAWoB,IAAM,WAAaA,EAAIE,UAAUF,GAAItB,GAAQE,CACvF,EAEEF,EAAKI,EAAI,SAASkB,GAChB,OAAOR,UAAUS,QAAUnB,SAAWkB,IAAM,WAAaA,EAAIE,UAAUF,GAAItB,GAAQI,CACvF,EAEEJ,EAAKM,QAAU,SAASgB,GACtB,OAAOR,UAAUS,QAAUD,GAAK,KAAOhB,EAAUC,EAAS,KAAOA,EAASN,EAAMK,EAAUgB,GAAItB,GAAQM,CAC1G,EAEE,OAAON,CACT,CAEO,SAASyB,iBACd,OAAOzB,KAAK0B,MACd,CAEO,SAASC,eACd,OAAO3B,KAAK4B,MACd,CCxDQ,IAAAC,kBAAsBC,MAAKD,kB,sEAEjBE,6BAAAC,oBAAsBH,kBAAkBG,oBACxCD,6BAAAE,UAAY,yBACZF,6BAAAG,SAAWL,kBAAkBK,SAASC,KACtCJ,6BAAAK,OAAS,IACTL,6BAAAM,MAAQ,IACRN,6BAAAO,OAAST,kBAAkBU,iBAC3BR,6BAAAS,OAAS,CACvBC,IAAK,IAAM,IACXC,OAAQ,IAAM,IACdC,MAAO,IAAM,IACbC,KAAM,IAAM,KAEEb,6BAAAc,QAAU,CACxBJ,IAAK,GACLC,OAAQ,GACRC,MAAO,GACPC,KAAM,IAGQb,6BAAAe,aAAejB,kBAAkBiB,aAEjCf,6BAAAgB,eAAiB,SACjBhB,6BAAAiB,eAAiB,SACjBjB,6BAAAkB,cAAgB,QAChBlB,6BAAAmB,cAAgB,GAEhBnB,6BAAAoB,eAAiB,KAEjBpB,6BAAAqB,WAAa,CAC3BC,KAAM,MACNhB,MAAO,GACPQ,QAAS,GACTS,UAAW,OACXC,QAAS,OAGKxB,6BAAAyB,WAAa,CAC3BC,QAAS,KACTC,SAAU,OACVC,QAAS,IAGK5B,6BAAA6B,cAAgB/B,kBAAkB+B,cAClC7B,6BAAA8B,gBAAkBhC,kBAAkBgC,gBACpC9B,6BAAA+B,aAAejC,kBAAkBkC,wBACjChC,6BAAAiC,UAAYnC,kBAAkBmC,UAE9BjC,6BAAAkC,YAAcpC,kBAAkBoC,YAEhClC,6BAAAmC,WAAarC,kBAAkBqC,WAC/BnC,6BAAAoC,WAAatC,kBAAkBsC,WAC/BpC,6BAAAqC,aAAevC,kBAAkBuC,aACjCrC,6BAAAsC,OAASxC,kBAAkBwC,OAC3BtC,6BAAAuC,aAAezC,kBAAkByC,aACjCvC,6BAAAwC,YAAc1C,kBAAkB0C,YAChCxC,6BAAAyC,eAAiB3C,kBAAkB2C,eAEnCzC,6BAAA0C,eAAiB5C,kBAAkB4C,eCpErD,IAAMC,mBAAqB,uwBAC3B,IAAAC,sBAAeD,mBC+Bb,IAAAE,mBAwDE9C,MAAK8C,mBAvDPC,mBAuDE/C,MAAK+C,mBAtDPC,wBAsDEhD,MAAKgD,wBArDPC,0BAqDEjD,MAAKiD,0BApDPC,2BAoDElD,MAAKkD,2BAnDPC,wBAmDEnD,MAAKmD,wBAlDPC,uBAkDEpD,MAAKoD,uBAjDPC,mBAiDErD,MAAKqD,mBAhDPC,qBAgDEtD,MAAKsD,qBA/CPC,uBA+CEvD,MAAKuD,uBA9CPC,eA8CExD,MAAKwD,eA7CPC,kBA6CEzD,MAAKyD,kBA5CPC,yBA4CE1D,MAAK0D,yBA3CPC,0BA2CE3D,MAAK2D,0BA1CPC,iBA0CE5D,MAAK4D,iBAzCPC,iBAyCE7D,MAAK6D,iBAxCPC,oBAwCE9D,MAAK8D,oBAvCPC,mBAuCE/D,MAAK+D,mBAtCPC,oBAsCEhE,MAAKgE,oBArCPC,kBAqCEjE,MAAKiE,kBApCPC,iBAoCElE,MAAKkE,iBAnCPC,iCAmCEnE,MAAKmE,iCAlCPC,iCAkCEpE,MAAKoE,iCAjCPC,QAiCErE,MAAKqE,QAhCPC,sBAgCEtE,MAAKsE,sBA/BPC,iBA+BEvE,MAAKuE,iBA9BPC,SA8BExE,MAAKwE,SA7BPC,aA6BEzE,MAAKyE,aA5BPC,iBA4BE1E,MAAK0E,iBA3BPC,iBA2BE3E,MAAK2E,iBA1BPC,uBA0BE5E,MAAK4E,uBAzBPC,YAyBE7E,MAAK6E,YAxBPC,aAwBE9E,MAAK8E,aAvBPC,gBAuBE/E,MAAK+E,gBAtBPC,YAsBEhF,MAAKgF,YArBPC,UAqBEjF,MAAKiF,UApBPC,qBAoBElF,MAAKkF,qBAnBPC,WAmBEnF,MAAKmF,WAjBPC,aAiBEpF,MAAKoF,aAhBPC,iBAgBErF,MAAKqF,iBAfPC,qBAeEtF,MAAKsF,qBAdPC,cAcEvF,MAAKuF,cAbPC,eAaExF,MAAKwF,eAZPC,OAYEzF,MAAKyF,OAXPC,aAWE1F,MAAK0F,aAVPC,cAUE3F,MAAK2F,cATPC,WASE5F,MAAK4F,WARPC,qBAQE7F,MAAK6F,qBAPPC,mBAOE9F,MAAK8F,mBANPC,YAME/F,MAAK+F,YALPC,oBAKEhG,MAAKgG,oBAJPC,WAIEjG,MAAKiG,WAHPC,2BAGElG,MAAKkG,2BAFPC,0BAEEnG,MAAKmG,0BADPC,YACEpG,MAAKoG,Y,IAMIC,gBAAe,W,+eA8D1BlH,KAAAmH,4BAAuC,KACvCnH,KAAAoH,2BAAsC,KAiDtCpH,KAAAqH,qBAA4B,GAU5BrH,KAAAsH,SAAmB,KACnBtH,KAAAuH,YAAsB,IACtBvH,KAAAwH,kBAA4B,cAC5BxH,KAAAyH,kBAA4B,cAC5BzH,KAAA0H,YAAsB,QAMtB1H,KAAA2H,QAAmB,KAGnB3H,KAAA4H,oBAA+B,MAC/B5H,KAAA6H,iBAA4B,MAC5B7H,KAAA8H,gBAA2B,MAC3B9H,KAAA+H,kBAA6B,MAC7B/H,KAAAgI,mBAA8B,MAC9BhI,KAAAiI,oBAA+B,MAC/BjI,KAAAkI,sBAAiC,MACjClI,KAAAmI,+BAA0C,MAC1CnI,KAAAoI,iCAA4C,MAC5CpI,KAAAqI,iCAA4C,MAC5CrI,KAAAsI,oCAA+C,MAC/CtI,KAAAuI,2CAAsD,MACtDvI,KAAAwI,4CAAuD,MACvDxI,KAAAyI,mCAA8C,MAC9CzI,KAAA0I,mCAA8C,MAC9C1I,KAAA2I,4CAAuD,MACvD3I,KAAA4I,0CAAqD,MACrD5I,KAAA6I,gCAA2C,MAC3C7I,KAAA8I,yCAAoD,MACpD9I,KAAA+I,4BAAuC,MACvC/I,KAAAgJ,iCAA4C,MAC5ChJ,KAAAiJ,wBAAmC,MACnCjJ,KAAAkJ,iCAA4C,MAC5ClJ,KAAAmJ,0BAAqC,MACrCnJ,KAAAoJ,2BAAsC,MACtCpJ,KAAAqJ,2BAAsC,MACtCrJ,KAAAsJ,sBAAiC,MACjCtJ,KAAAuJ,2BAAsC,MACtCvJ,KAAAwJ,sBAAiC,MACjCxJ,KAAAyJ,2BAAsC,MACtCzJ,KAAA0J,sBAAiC,MACjC1J,KAAA2J,qBAAgC,MAChC3J,KAAA4J,wBAAmC,MACnC5J,KAAA6J,0BAAqC,MACrC7J,KAAA8J,wBAAmC,MACnC9J,KAAA+J,yBAAoC,MACpC/J,KAAAgK,wBAAmC,MACnChK,KAAAiK,2BAAsC,MACtCjK,KAAAkK,4BAAuC,MACvClK,KAAAmK,8BAAyC,MACzCnK,KAAAoK,yBAAoC,MACpCpK,KAAAqK,mBAA8B,MAC9BrK,KAAAsK,wBAAmC,MACnCtK,KAAAuK,gBAA2B,MAC3BvK,KAAAwK,0BAAqC,MACrCxK,KAAAyK,4BAAuC,M,eAzKM3J,6BAA6BE,U,cACdF,6BAA6BG,S,YAC/CH,6BAA6BK,O,WAC9BL,6BAA6BM,M,yBACNN,6BAA6BC,oB,YAC5CD,6BAA6BS,O,aAC5BT,6BAA6Bc,Q,YACrCd,6BAA6BO,O,0FAMZP,6BAA6Be,a,oBACtCf,6BAA6BgB,e,oBAC7BhB,6BAA6BiB,e,mBAC9BjB,6BAA6BkB,c,mBAC7BlB,6BAA6BmB,c,oBAC5BnB,6BAA6BoB,e,gBAGxBpB,6BAA6BqB,W,gBAC7BrB,6BAA6ByB,W,kBACpCzB,6BAA6B+B,a,sCAEtB/B,6BAA6BmC,W,gBAC7BnC,6BAA6BoC,W,YAC1CpC,6BAA6BsC,O,kBACvBtC,6BAA6BqC,a,qBAChBrC,6BAA6B8B,gB,eAGrC9B,6BAA6BiC,U,6CAElCjC,6BAA6BwC,Y,kBAClBxC,6BAA6BuC,a,mBAC3BvC,6BAA6B6B,c,iBACzC7B,6BAA6BkC,Y,oBAG3BlC,6BAA6ByC,e,kDAE5BzC,6BAA6B0C,e,6CAIrD,K,CAgI5B0D,EAAAwD,UAAAC,YAAA,SAAYC,EAAUC,GACpB7K,KAAK2H,QAAU,KACf3H,KAAK6H,iBAAmB,KACxB7H,KAAK8H,gBAAkB,KACvB9H,KAAK+J,yBAA2B,KAChC/J,KAAK4J,wBAA0B,KAC/B5J,KAAK6J,0BAA4B,KACjC7J,KAAKkI,sBAAwB,KAC7BlI,KAAKoK,yBAA2B,KAChCpK,KAAKmH,4BAA8B,KACnCnH,KAAKmJ,0BAA4B,KACjCnJ,KAAKoJ,2BAA6B,KAClCpJ,KAAKsJ,sBAAwB,KAC7BtJ,KAAKuJ,2BAA6B,KAClCvJ,KAAKwJ,sBAAwB,KAC7BxJ,KAAKyJ,2BAA6B,KAClCzJ,KAAK2J,qBAAuB,KAC5B3J,KAAK0J,sBAAwB,KAC7B1J,KAAKqJ,2BAA6B,KAElCrJ,KAAK8I,yCAA2C,KAChD9I,KAAK+I,4BAA8B,KACnC/I,KAAKsK,wBAA0B,KAC/BtK,KAAKqK,mBAAqB,KAC1BrK,KAAK8J,wBAA0B,I,EAIjC5C,EAAAwD,UAAAI,UAAA,SAAUC,EAAOC,GACfC,QAAQC,MACN,+CACEF,EACA,aACAD,EACA,4D,EAWN7D,EAAAwD,UAAAS,eAAA,SAAeC,EAASC,GACtBrL,KAAKiI,oBAAsB,KAC3BjI,KAAKgI,mBAAqB,KAC1BhI,KAAKoI,iCAAmC,KACxCpI,KAAKmI,+BAAiC,KACtCnI,KAAKkJ,iCAAmC,KACxClJ,KAAK+H,kBAAoB,KACzB/H,KAAKqI,iCAAmC,KACxCrI,KAAKsI,oCAAsC,KAC3CtI,KAAKuI,2CAA6C,KAClDvI,KAAK0I,mCAAqC,KAC1C1I,KAAKwI,4CAA8C,KACnDxI,KAAKyI,mCAAqC,KAC1CzI,KAAK2I,4CAA8C,KACnD3I,KAAK4I,0CAA4C,I,EAInD1B,EAAAwD,UAAAY,iBAAA,SAAiBF,EAASC,GACxBrL,KAAKmH,4BAA8B,KACnCnH,KAAKmI,+BAAiC,KACtCnI,KAAKqI,iCAAmC,KACxCrI,KAAK6I,gCAAkC,I,EAIzC3B,EAAAwD,UAAAa,gBAAA,SAAgBH,EAASC,GACvBrL,KAAK+H,kBAAoB,KACzB/H,KAAKqI,iCAAmC,KACxCrI,KAAKsI,oCAAsC,KAC3CtI,KAAK6I,gCAAkC,I,EAOzC3B,EAAAwD,UAAAc,iBAAA,SAAiBJ,EAASC,GACxBrL,KAAK4H,oBAAsB,KAC3B5H,KAAK4J,wBAA0B,KAC/B5J,KAAKuK,gBAAkB,KACvBvK,KAAK6J,0BAA4B,KACjC7J,KAAKmJ,0BAA4B,KAEjCnJ,KAAKuJ,2BAA6B,KAClCvJ,KAAKwJ,sBAAwB,KAC7BxJ,KAAKyJ,2BAA6B,KAClCzJ,KAAK0J,sBAAwB,KAC7B1J,KAAK2J,qBAAuB,KAC5B3J,KAAK8J,wBAA0B,I,EAIjC5C,EAAAwD,UAAAe,cAAA,SAAcL,EAASC,GACrBrL,KAAK4H,oBAAsB,KAC3B5H,KAAK4J,wBAA0B,KAC/B5J,KAAKuK,gBAAkB,KACvBvK,KAAK6J,0BAA4B,KACjC7J,KAAKmJ,0BAA4B,KACjCnJ,KAAKuJ,2BAA6B,KAClCvJ,KAAKwJ,sBAAwB,KAC7BxJ,KAAKyJ,2BAA6B,KAClCzJ,KAAK0J,sBAAwB,KAC7B1J,KAAK2J,qBAAuB,KAC5B3J,KAAK8J,wBAA0B,KAC/BmB,QAAQS,KACN,6CACEL,EACA,aACAD,EACA,8D,EAKNlE,EAAAwD,UAAAiB,sBAAA,SAAsBP,EAASC,GAC7BJ,QAAQC,MACN,qDACEG,EACA,aACAD,EACA,4D,EAwBNlE,EAAAwD,UAAAkB,sBAAA,SAAsBR,EAASC,GAC7BJ,QAAQC,MACN,qDACEG,EACA,aACAD,EACA,4D,EAyBNlE,EAAAwD,UAAAmB,qBAAA,SAAqBT,EAASC,GAC5BrL,KAAK6H,iBAAmB,KACxB7H,KAAK4J,wBAA0B,KAC/B5J,KAAK6J,0BAA4B,KACjC7J,KAAKkI,sBAAwB,KAC7BlI,KAAKmJ,0BAA4B,KACjCnJ,KAAKsJ,sBAAwB,KAC7BtJ,KAAKuJ,2BAA6B,KAClCvJ,KAAKwJ,sBAAwB,KAC7BxJ,KAAKyJ,2BAA6B,KAClCzJ,KAAK0J,sBAAwB,KAC7B1J,KAAKqJ,2BAA6B,KAClCrJ,KAAKwK,0BAA4B,KACjCxK,KAAK2J,qBAAuB,KAC5B3J,KAAK+I,4BAA8B,I,EAIrC7B,EAAAwD,UAAAoB,qBAAA,SAAqBV,EAASC,GAC5BrL,KAAK6H,iBAAmB,KACxB7H,KAAKiK,2BAA6B,KAClCjK,KAAKoK,yBAA2B,KAChCpK,KAAK4J,wBAA0B,KAC/B5J,KAAK6J,0BAA4B,KACjC7J,KAAKkI,sBAAwB,KAC7BlI,KAAKmJ,0BAA4B,KACjCnJ,KAAKsJ,sBAAwB,KAC7BtJ,KAAKuJ,2BAA6B,KAClCvJ,KAAKwJ,sBAAwB,KAC7BxJ,KAAKyJ,2BAA6B,KAClCzJ,KAAK0J,sBAAwB,KAC7B1J,KAAKqJ,2BAA6B,KAClCrJ,KAAKwK,0BAA4B,KACjCxK,KAAK2J,qBAAuB,KAC5B3J,KAAK+I,4BAA8B,I,EAIrC7B,EAAAwD,UAAAqB,sBAAA,SAAsBX,EAASC,GAC7BJ,QAAQC,MACN,qDACEG,EACA,aACAD,EACA,4D,EAqBNlE,EAAAwD,UAAAsB,kBAAA,SAAkBZ,EAASC,GACzB,IAAMY,EAAkBb,GAAWA,EAAQ/I,UAC3C,IAAM6J,EAAkBb,GAAWA,EAAQhJ,UAC3C,IAAM8J,EAAgBf,GAAWA,EAAQ9I,QACzC,IAAM8J,EAAgBf,GAAWA,EAAQ/I,QACzC,IAAM+J,EAAajB,GAAWA,EAAQhJ,KACtC,IAAMkK,EAAajB,GAAWA,EAAQjJ,KACtC,IAAMmK,EAAcnB,GAAWA,EAAQhK,MACvC,IAAMoL,EAAcnB,GAAWA,EAAQjK,MACvC,IAAMqL,EAAgBrB,GAAWA,EAAQxJ,QACzC,IAAM8K,EAAgBrB,GAAWA,EAAQzJ,QACzC,GAAIqK,IAAoBC,EAAiB,CACvClM,KAAKkK,4BAA8B,I,CAErC,GACE+B,IAAoBC,GACpBC,IAAkBC,GAClBG,IAAgBC,GAChBC,IAAkBC,EAClB,CACA1M,KAAK4J,wBAA0B,KAC/B5J,KAAK6J,0BAA4B,KACjC7J,KAAKmJ,0BAA4B,KACjCnJ,KAAKqJ,2BAA6B,KAClCrJ,KAAK8I,yCAA2C,KAChD9I,KAAKuJ,2BAA6B,KAClCvJ,KAAKyJ,2BAA6B,KAClCzJ,KAAK2J,qBAAuB,KAC5B3J,KAAK8J,wBAA0B,I,CAEjC,GAAIuC,IAAeC,EAAY,CAC7BtM,KAAKwJ,sBAAwB,KAC7BxJ,KAAK0J,sBAAwB,I,GAKjCxC,EAAAwD,UAAAiC,kBAAA,SAAkBvB,EAASC,GACzB,IAAMuB,EAAiBxB,GAAWA,EAAQ3I,SAC1C,IAAMoK,EAAiBxB,GAAWA,EAAQ5I,SAC1C,IAAMqK,EAAgB1B,GAAWA,EAAQ5I,QACzC,IAAMuK,EAAgB1B,GAAWA,EAAQ7I,QAGzC,GAAIoK,IAAmBC,EAAgB,CACrC7M,KAAKiK,2BAA6B,KAClCjK,KAAKmJ,0BAA4B,KACjCnJ,KAAKsJ,sBAAwB,KAC7BtJ,KAAKyJ,2BAA6B,I,CAEpC,GAAIqD,IAAkBC,EAAe,CACnC/M,KAAK4J,wBAA0B,KAC/B5J,KAAK6J,0BAA4B,KACjC7J,KAAKmJ,0BAA4B,KACjCnJ,KAAKwK,0BAA4B,KACjCxK,KAAKuJ,2BAA6B,KAClCvJ,KAAKyJ,2BAA6B,KAClCzJ,KAAK2J,qBAAuB,KAC5B3J,KAAK8J,wBAA0B,I,CAEjC9J,KAAK0J,sBAAwB,KAC7B1J,KAAKqJ,2BAA6B,KAClCrJ,KAAKoJ,2BAA6B,I,EAOpClC,EAAAwD,UAAAsC,aAAA,SAAa5B,EAASC,GACpBrL,KAAK8H,gBAAkB,KACvB9H,KAAKwJ,sBAAwB,KAC7BxJ,KAAK0J,sBAAwB,KAC7B1J,KAAKqJ,2BAA6B,I,EAKpCnC,EAAAwD,UAAAuC,wBAAA,SAAwB7B,EAASC,GAC/BrL,KAAK8H,gBAAkB,KACvB9H,KAAKqJ,2BAA6B,KAClCrJ,KAAKwK,0BAA4B,I,EAInCtD,EAAAwD,UAAAwC,cAAA,SAAc9B,EAASC,GACrBrL,KAAKqK,mBAAqB,I,EAI5BnD,EAAAwD,UAAAyC,oBAAA,SAAoB/B,EAASC,GAC3BrL,KAAKqJ,2BAA6B,KAClCrJ,KAAKwK,0BAA4B,I,EAInCtD,EAAAwD,UAAA0C,iBAAA,SAAiBhC,EAASC,GACxB,IAAMyB,EAAgB1B,GAAWA,EAAQ5I,QACzC,IAAMuK,EAAgB1B,GAAWA,EAAQ7I,QACzC,IAAM6K,EAAsBjC,GAAWA,EAAQkC,cAAgBlC,EAAQkC,cAAgB,MACvF,IAAMC,EAAsBlC,GAAWA,EAAQiC,cAAgBjC,EAAQiC,cAAgB,MACvF,GAAID,IAAwBE,EAAqB,CAC/CvN,KAAKgK,wBAA0B,I,CAEjChK,KAAK2J,qBAAuB,KAC5B3J,KAAKkI,sBAAwB,KAC7B,GAAI4E,IAAkBC,EAAe,CACnC/M,KAAKwK,0BAA4B,I,GAKrCtD,EAAAwD,UAAA8C,oBAAA,SAAoBpC,EAASC,GAC3BrL,KAAKkI,sBAAwB,KAC7BlI,KAAK6I,gCAAkC,KACvC7I,KAAK+I,4BAA8B,I,EAIrC7B,EAAAwD,UAAA+C,mBAAA,SAAmBrC,EAASC,GAC1BrL,KAAKqJ,2BAA6B,I,EAIpCnC,EAAAwD,UAAAgD,qBAAA,SAAqBtC,EAASC,GAC5BrL,KAAKmH,4BAA8B,KACnC,IAAMwG,EAAWvC,GAAWA,EAAQwC,MAAQxC,EAAQwC,MAAQ,MAC5D,IAAMC,EAAWxC,GAAWA,EAAQuC,MAAQvC,EAAQuC,MAAQ,MAC5D,GAAID,IAAaE,EAAU,CACzB7N,KAAKmI,+BAAiC,KACtCnI,KAAKqI,iCAAmC,KACxCrI,KAAK6I,gCAAkC,I,CAEzC,IAAMiF,EAAsB1C,GAAWA,EAAQ2C,iBAAmB3C,EAAQ2C,iBAAmB,MAC7F,IAAMC,EAAsB3C,GAAWA,EAAQ0C,iBAAmB1C,EAAQ0C,iBAAmB,MAC7F,GAAID,IAAwBE,EAAqB,CAC/ChO,KAAKwI,4CAA8C,I,CAErD,IAAMyF,EAAa7C,GAAWA,EAAQ8C,QAAU9C,EAAQ8C,QAAU,MAClE,IAAMC,EAAa9C,GAAWA,EAAQ6C,QAAU7C,EAAQ6C,QAAU,MAClE,GAAID,IAAeE,EAAY,CAC7BnO,KAAKyI,mCAAqC,I,CAE5C,IAAM2F,EAAqBhD,GAAWA,EAAQiD,gBAAkBjD,EAAQiD,gBAAkB,MAC1F,IAAMC,EAAqBjD,GAAWA,EAAQgD,gBAAkBhD,EAAQgD,gBAAkB,MAC1F,GAAID,IAAuBE,EAAoB,CAC7CtO,KAAKuI,2CAA6C,I,CAEpD,IAAMgG,EAAanD,GAAWA,EAAQoD,mBAAqBpD,EAAQoD,mBAAqB,MACxF,IAAMC,EAAapD,GAAWA,EAAQmD,mBAAqBnD,EAAQmD,mBAAqB,MACxF,GAAID,IAAeE,EAAY,CAC7BzO,KAAK0I,mCAAqC,I,CAE5C,IAAMgG,EAAsBtD,GAAWA,EAAQuD,iBAAmBvD,EAAQuD,iBAAmB,MAC7F,IAAMC,EAAsBvD,GAAWA,EAAQsD,iBAAmBtD,EAAQsD,iBAAmB,MAC7F,GAAID,IAAwBE,EAAqB,CAC/C5O,KAAK2I,4CAA8C,I,CAErD,IAAMkG,EAAoBzD,GAAWA,EAAQ0D,eAAiB1D,EAAQ0D,eAAiB,MACvF,IAAMC,EAAoB1D,GAAWA,EAAQyD,eAAiBzD,EAAQyD,eAAiB,MACvF,GAAID,IAAsBE,EAAmB,CAC3C/O,KAAK4I,0CAA4C,I,CAEnD,IAAMoG,EAAyB5D,GAAWA,EAAQ6D,oBAClD,IAAMC,EAAyB7D,GAAWA,EAAQ4D,oBAClD,IAAME,EACJ/D,GAAWA,EAAQgE,2BAA6BhE,EAAQgE,2BAA6B,MACvF,IAAMC,EACJhE,GAAWA,EAAQ+D,2BAA6B/D,EAAQ+D,2BAA6B,MACvF,GACEJ,IAA2BE,GAC3BC,IAAkCE,EAClC,CACA,GAAIL,IAA2BE,EAAwB,CAGrDlP,KAAKgJ,iCAAmC,I,CAE1ChJ,KAAK+I,4BAA8B,KACnC/I,KAAK6I,gCAAkC,I,CAmBzC,IAAMyG,EACJlE,GAAWA,EAAQmE,mBAAqBnE,EAAQmE,kBAAkBC,SAC9DpE,EAAQmE,kBAAkBC,SAC1B,MACN,IAAMC,EACJpE,GAAWA,EAAQkE,mBAAqBlE,EAAQkE,kBAAkBC,SAC9DnE,EAAQkE,kBAAkBC,SAC1B,MACN,IAAME,EAAetE,GAAWA,EAAQuE,qBAAuBvE,EAAQuE,qBAAuB,MAC9F,IAAMC,EAAevE,GAAWA,EAAQsE,qBAAuBtE,EAAQsE,qBAAuB,MAC9F,GAAIL,IAAcG,GAAaC,IAAiBE,EAAc,CAC5D5P,KAAK+I,4BAA8B,KACnC/I,KAAK6I,gCAAkC,KACvC7I,KAAKmI,+BAAiC,KACtCnI,KAAKiI,oBAAsB,KAC3BjI,KAAKqI,iCAAmC,KACxCrI,KAAKsI,oCAAsC,KAC3CtI,KAAKuI,2CAA6C,KAClDvI,KAAK0I,mCAAqC,KAC1C1I,KAAKwI,4CAA8C,KACnDxI,KAAKyI,mCAAqC,KAC1CzI,KAAK2I,4CAA8C,KACnD3I,KAAK4I,0CAA4C,I,CAEnD,GAAI8G,IAAiBE,EAAc,CACjC5P,KAAKiJ,wBAA0B,I,GAKnC/B,EAAAwD,UAAAmF,oBAAA,SAAoBzE,EAASC,GAC3BrL,KAAKoH,2BAA6B,KAGlC,IAAM0I,EAAc1E,GAAWA,EAAQ2E,SAAW3E,EAAQ2E,SAAW,MACrE,IAAMC,EAAc3E,GAAWA,EAAQ0E,SAAW1E,EAAQ0E,SAAW,MACrE,GAAID,IAAgBE,EAAa,CAC/BhQ,KAAKyK,4BAA8B,KACnCzK,KAAKkI,sBAAwB,KAC7BlI,KAAKiI,oBAAsB,KAC3BjI,KAAKmI,+BAAiC,KACtCnI,KAAKoI,iCAAmC,KACxCpI,KAAKmI,+BAAiC,KACtCnI,KAAK+I,4BAA8B,KACnC/I,KAAK6I,gCAAkC,I,CAIzC,IAAMoH,EAAmB7E,GAAWA,EAAQ8E,cAAgB9E,EAAQ8E,cAAgB,MACpF,IAAMC,EAAmB9E,GAAWA,EAAQ6E,cAAgB7E,EAAQ6E,cAAgB,MACpF,GAAID,IAAqBE,EAAkB,CACzCnQ,KAAKyK,4BAA8B,KACnCzK,KAAKkI,sBAAwB,KAC7BlI,KAAKiI,oBAAsB,KAC3BjI,KAAKmI,+BAAiC,KACtCnI,KAAKoI,iCAAmC,KACxCpI,KAAKmI,+BAAiC,KACtCnI,KAAK+I,4BAA8B,KACnC/I,KAAK6I,gCAAkC,I,GAK3C3B,EAAAwD,UAAA0F,mBAAA,SAAmBhF,EAASC,GAC1BrL,KAAKmH,4BAA8B,KACnCnH,KAAKkJ,iCAAmC,KACxClJ,KAAK8J,wBAA0B,I,EAIjC5C,EAAAwD,UAAA2F,aAAA,SAAajF,EAASC,GACpBrL,KAAKqJ,2BAA6B,KAClCrJ,KAAKwK,0BAA4B,KACjCxK,KAAKiJ,wBAA0B,I,EAIjC/B,EAAAwD,UAAA4F,aAAA,SAAalF,EAASC,GACpBrL,KAAKqJ,2BAA6B,KAClCrJ,KAAKwK,0BAA4B,I,EAInCtD,EAAAwD,UAAA6F,mBAAA,SAAmBnF,EAASC,GAC1BrL,KAAK4J,wBAA0B,KAC/B5J,KAAK6J,0BAA4B,KACjC7J,KAAKmK,8BAAgC,KACrCnK,KAAKqJ,2BAA6B,KAClCrJ,KAAKwK,0BAA4B,KACjCxK,KAAKiJ,wBAA0B,KAC/BjJ,KAAKkI,sBAAwB,KAC7BlI,KAAK+I,4BAA8B,KACnC/I,KAAKsK,wBAA0B,KAC/BtK,KAAKqK,mBAAqB,I,EAI5BnD,EAAAwD,UAAA8F,oBAAA,SAAoBpF,EAASC,GAC3BrL,KAAK6I,gCAAkC,KACvC7I,KAAKgJ,iCAAmC,KACxChJ,KAAK+I,4BAA8B,I,EAIrC7B,EAAAwD,UAAA+F,gBAAA,SAAgBrF,EAASC,GACvBrL,KAAKsK,wBAA0B,KAC/BtK,KAAKqK,mBAAqB,KAC1BrK,KAAK+I,4BAA8B,KACnC/I,KAAK6I,gCAAkC,KACvC7I,KAAKmI,+BAAiC,KACtCnI,KAAKmH,4BAA8B,KACnCnH,KAAKiI,oBAAsB,KAC3BjI,KAAK+H,kBAAoB,KACzB/H,KAAKqI,iCAAmC,KACxCrI,KAAKsI,oCAAsC,KAC3CtI,KAAKuI,2CAA6C,KAClDvI,KAAK0I,mCAAqC,KAC1C1I,KAAKwI,4CAA8C,KACnDxI,KAAKyI,mCAAqC,KAC1CzI,KAAK2I,4CAA8C,KACnD3I,KAAK4I,0CAA4C,I,EAKnD1B,EAAAwD,UAAAgG,gBAAA,SAAgBtF,EAASC,GACvBrL,KAAKoJ,2BAA6B,I,EAGpClC,EAAAwD,UAAAiG,kBAAA,eAAAC,EAAA5Q,KACE,IAAM6Q,EAAU7Q,KAAK8Q,UAAY,oBAAsBC,KACvD/Q,KAAKgR,iBAAiBC,KAAK,CAAEJ,QAASA,IAItC,OAAO,IAAIK,SAAQ,SAAAC,GACjBP,EAAKQ,SAAW,EAChBR,EAAKS,SAAW,KAChBT,EAAKC,QAAUA,EACfD,EAAKU,kBAAkBC,GAAKX,EAAKC,QACjCD,EAAKY,wBACLZ,EAAKa,eACLb,EAAKc,cACLd,EAAKe,gBACLf,EAAKgB,qBACLhB,EAAKiB,oBACLjB,EAAKkB,uBACLlB,EAAKmB,wBACLnB,EAAKoB,0BACLpB,EAAKqB,qBACLrB,EAAKsB,mCACLtB,EAAKuB,kCACLvB,EAAKwB,YACLxB,EAAKyB,oBACLzB,EAAK0B,sBACL1B,EAAK2B,eACLpB,EAAQ,sB,KAIZjK,EAAAwD,UAAA8H,oBAAA,WAIE,OAAO,IAAItB,SAAQ,SAAAC,GACjBA,EAAQ,wB,KAIZjK,EAAAwD,UAAA+H,iBAAA,eAAA7B,EAAA5Q,KACE,OAAO,IAAIkR,SAAQ,SAAAC,GACjBP,EAAKsB,mCACLtB,EAAKuB,kCACLvB,EAAK8B,qBACL9B,EAAK+B,yBACL/B,EAAKgC,6BACLhC,EAAKiC,6BACLjC,EAAKkC,gCACLlC,EAAKmC,uCACLnC,EAAKoC,wCACLpC,EAAKqC,+BACLrC,EAAKsC,+BACLtC,EAAKuC,wCACLvC,EAAKwC,sCACLxC,EAAKyC,4BACLzC,EAAK0C,YACL1C,EAAK2C,sBACL3C,EAAK4C,sBACL5C,EAAK6C,uBACL7C,EAAK8C,sBACL9C,EAAK+C,uBACL/C,EAAKgD,qBACLhD,EAAKiD,sBACLjD,EAAKkD,uBACLlD,EAAKmD,qBACLnD,EAAKoD,kBACLpD,EAAKqD,mBACLrD,EAAKsD,iBACLtD,EAAKuD,kBACLvD,EAAKwD,qBACLxD,EAAKyD,qBACLzD,EAAK0D,qCACL1D,EAAK2D,wBACL3D,EAAK4D,0BACL5D,EAAK6D,6BACL7D,EAAK8D,mBACL9D,EAAK+D,eACL/D,EAAKgE,iBACLhE,EAAKiE,oBACLjE,EAAKkE,kBACLlE,EAAKmE,6BACLnE,EAAKoE,kBACLpE,EAAKQ,SAAW,IAChBR,EAAKS,SAAW,MAChBjN,uBAAuBwM,EAAKqE,KAAKC,OAAQ,MACzC/D,EAAQ,qB,IACPgE,MAAK,WAAM,OAAAvE,EAAKwE,oBAAoBnE,KAAK,CAAEJ,QAASD,EAAKC,SAA9C,G,EAGhB3J,EAAAwD,UAAA2K,mBAAA,eAAAzE,EAAA5Q,KACE,OAAO,IAAIkR,SAAQ,SAAAC,GACjBP,EAAKQ,UAAYR,EAAKhO,kBAAoBgO,EAAKhO,gBAAgB4M,SAAW,IAAM,EAChF,GAAIoB,EAAKzI,+BAAgC,CACvCyI,EAAKgC,6BACLhC,EAAKzI,+BAAiC,K,CAExC,GAAIyI,EAAKxI,iCAAkC,CACzCwI,EAAK6D,6BACL7D,EAAKxI,iCAAmC,K,CAE1C,GAAIwI,EAAKvI,iCAAkC,CACzCuI,EAAKiC,6BACLjC,EAAKvI,iCAAmC,K,CAE1C,GAAIuI,EAAKtI,oCAAqC,CAC5CsI,EAAKkC,gCACLlC,EAAKtI,oCAAsC,K,CAE7C,GAAIsI,EAAKrI,2CAA4C,CACnDqI,EAAKmC,uCACLnC,EAAKrI,2CAA6C,K,CAEpD,GAAIqI,EAAKpI,4CAA6C,CACpDoI,EAAKoC,wCACLpC,EAAKpI,4CAA8C,K,CAErD,GAAIoI,EAAKnI,mCAAoC,CAC3CmI,EAAKqC,+BACLrC,EAAKnI,mCAAqC,K,CAE5C,GAAImI,EAAKlI,mCAAoC,CAC3CkI,EAAKsC,+BACLtC,EAAKlI,mCAAqC,K,CAE5C,GAAIkI,EAAKjI,4CAA6C,CACpDiI,EAAKuC,wCACLvC,EAAKjI,4CAA8C,K,CAErD,GAAIiI,EAAKhI,0CAA2C,CAClDgI,EAAKwC,sCACLxC,EAAKhI,0CAA4C,K,CAEnD,GAAIgI,EAAK/H,gCAAiC,CACxC+H,EAAKyC,4BACLzC,EAAK/H,gCAAkC,K,CAEzC,GAAI+H,EAAKrG,gBAAiB,CACxBqG,EAAK0C,YACL1C,EAAKrG,gBAAkB,K,CAEzB,GAAIqG,EAAKzH,0BAA2B,CAClCyH,EAAK4C,sBACL5C,EAAKzH,0BAA4B,K,CAEnC,GAAIyH,EAAKxH,2BAA4B,CACnCwH,EAAK6C,uBACL7C,EAAKxH,2BAA6B,K,CAEpC,GAAIwH,EAAK7I,kBAAmB,CAC1B6I,EAAK2C,sBACL3C,EAAK7I,kBAAoB,K,CAE3B,GAAI6I,EAAKtH,sBAAuB,CAC9BsH,EAAK8C,sBACL9C,EAAK+C,uBACL/C,EAAKgD,qBACLhD,EAAKiD,sBACLjD,EAAKkD,uBACLlD,EAAKmD,qBACLnD,EAAKoD,kBACLpD,EAAKqD,mBACLrD,EAAKsD,iBACLtD,EAAKtH,sBAAwB,K,CAE/B,GAAIsH,EAAKrH,2BAA4B,CACnCqH,EAAKwD,qBACLxD,EAAKrH,2BAA6B,K,CAEpC,GAAIqH,EAAKpH,sBAAuB,CAC9BoH,EAAK0E,kBACL1E,EAAKpH,sBAAwB,K,CAE/B,GAAIoH,EAAKnH,2BAA4B,CACnCmH,EAAKyD,qBACLzD,EAAKnH,2BAA6B,K,CAEpC,GAAImH,EAAKlH,sBAAuB,CAC9BkH,EAAKuD,kBACLvD,EAAKlH,sBAAwB,K,CAE/B,GAAIkH,EAAK9H,yCAA0C,CACjD8H,EAAK0D,qCACL1D,EAAK9H,yCAA2C,K,CAElD,GAAI8H,EAAK7H,4BAA6B,CACpC6H,EAAK2D,wBACL3D,EAAK7H,4BAA8B,K,CAErC,GAAI6H,EAAK5H,iCAAkC,CACzC4H,EAAK4D,0BACL5D,EAAK5H,iCAAmC,K,CAE1C,GAAI4H,EAAKjH,qBAAsB,CAC7BiH,EAAKgE,iBACLhE,EAAKjH,qBAAuB,K,CAE9B,GAAIiH,EAAKvH,2BAA4B,CACnCuH,EAAK2E,yBACL3E,EAAKvH,2BAA6B,K,CAEpC,GAAIuH,EAAKpG,0BAA2B,CAClCoG,EAAK4E,sBACL5E,EAAKpG,0BAA4B,K,CAEnC,GAAIoG,EAAK3H,wBAAyB,CAChC2H,EAAK8D,mBACL9D,EAAK3H,wBAA0B,K,CAEjC,GAAI2H,EAAKvG,mBAAoB,CAC3BuG,EAAK+D,eACL/D,EAAKvG,mBAAqB,K,CAE5B,GAAIuG,EAAKtG,wBAAyB,CAChCsG,EAAKiE,oBACLjE,EAAKtG,wBAA0B,K,CAEjC,GAAIsG,EAAK9G,wBAAyB,CAChC8G,EAAKkE,kBACLlE,EAAK9G,wBAA0B,K,CAEjC,GAAI8G,EAAK1H,iCAAkC,CACzC0H,EAAKmE,6BACLnE,EAAK1H,iCAAmC,K,CAE1C0H,EAAKoE,kBACL7D,EAAQ,uB,IACPgE,MAAK,WAAM,OAAAvE,EAAK6E,aAAaxE,KAAK,CAAEJ,QAASD,EAAKC,SAAvC,G,EAGhB3J,EAAAwD,UAAAiH,cAAA,WACE3R,KAAK4B,eAAiB5B,KAAK4B,UAAY,SAAWoE,WAAWhG,KAAK4B,SAAW5B,KAAK4B,QAIlF,GAAI5B,KAAKqB,SAAW,WAAY,CAC9BrB,KAAK0V,WAAa1V,KAAKmB,OAASnB,KAAKuB,OAAOC,IAAMxB,KAAKuB,OAAOE,OAC9DzB,KAAK2V,YAAc3V,KAAKoB,MAAQpB,KAAKuB,OAAOI,KAAO3B,KAAKuB,OAAOG,MAC/D1B,KAAK4V,kBAAoB5V,KAAK2V,YAAc3V,KAAK4B,QAAQD,KAAO3B,KAAK4B,QAAQF,MAC7E1B,KAAK6V,iBAAmB7V,KAAK0V,WAAa1V,KAAK4B,QAAQJ,IAAMxB,KAAK4B,QAAQH,M,KACrE,CACLzB,KAAK0V,WAAa1V,KAAKoB,MAAQpB,KAAKuB,OAAOI,KAAO3B,KAAKuB,OAAOG,MAC9D1B,KAAK2V,YAAc3V,KAAKmB,OAASnB,KAAKuB,OAAOC,IAAMxB,KAAKuB,OAAOE,OAC/DzB,KAAK4V,kBAAoB5V,KAAK2V,YAAc3V,KAAK4B,QAAQJ,IAAMxB,KAAK4B,QAAQH,OAC5EzB,KAAK6V,iBAAmB7V,KAAK0V,WAAa1V,KAAK4B,QAAQD,KAAO3B,KAAK4B,QAAQF,K,GAI/EwF,EAAAwD,UAAAgH,YAAA,eAAAd,EAAA5Q,KACEA,KAAK8V,SAAW,GAChB9V,KAAK+V,SAAW,GAEhB/V,KAAKgW,SAASC,SAAQ,SAACC,EAAKC,GAC1B,IAAMC,EAAU,CACdxX,OAAQsX,EAAItF,EAAK9O,gBACjBhD,OAAQoX,EAAItF,EAAK7O,gBACjBsU,MAAOH,EAAItF,EAAK5O,eAChBsU,KAAMJ,GAGR,GAAItF,EAAK3O,cAAe,CACtBmU,EAAQxF,EAAK3O,eAAiBiU,EAAItF,EAAK3O,c,CAGzC2O,EAAKmF,SAASI,GAAKC,C,IAIrBpW,KAAKuW,UAAYvW,KAAKuW,SAASjW,OAAS,EAAKN,KAAK8V,SAAW9V,KAAKuW,SAAYvW,KAAKwW,gB,EAGrFtP,EAAAwD,UAAA8L,eAAA,eAAA5F,EAAA5Q,KACEA,KAAK8V,SAAW,GAChB9V,KAAKgW,SAASS,KAAI,SAAA1X,GAChB,IAAK6R,EAAKkF,SAASY,MAAK,SAAAC,GAAK,OAAAA,EAAEpF,KAAOxS,EAAK6R,EAAK9O,eAAnB,IAAqC,CAChE,IAAM8U,EAAiB,CAAErF,GAAIxS,EAAK6R,EAAK9O,iBACvC8O,EAAKkF,SAASe,KAAKD,E,CAErB,IAAKhG,EAAKkF,SAASY,MAAK,SAAAC,GAAK,OAAAA,EAAEpF,KAAOxS,EAAK6R,EAAK7O,eAAnB,IAAqC,CAChE,IAAM+U,EAAiB,CAAEvF,GAAIxS,EAAK6R,EAAK7O,iBACvC6O,EAAKkF,SAASe,KAAKC,E,MAKzB5P,EAAAwD,UAAAmH,kBAAA,WAGE7R,KAAK+W,mBAAqB/W,KAAK+C,UAAUuK,cAAgBtN,KAAK+C,UAAUuK,cAAgBtN,KAAK0H,W,EAI/FR,EAAAwD,UAAAkH,mBAAA,WACE5R,KAAKgX,gBACHhX,KAAKuW,UAAYvW,KAAKuW,SAASjW,OAAS,EACpCN,KAAK8V,SAAS,GAAG9V,KAAKkC,gBACpBlC,KAAKkC,eACL,KACF,I,EAGRgF,EAAAwD,UAAAoH,qBAAA,WACE9R,KAAKiX,kBACHjX,KAAKiC,eAAiBjC,KAAKuC,WAAWE,WAAa,QAC/C,QACAzC,KAAKuC,WAAWE,WAAa,SAC7B,SACAzC,KAAKuC,WAAWE,WAAa,SAC7B,SACAzC,KAAKuC,WAAWE,WAAa,OAC7B,OACA,M,EAGRyE,EAAAwD,UAAAqH,sBAAA,WACE/R,KAAKkX,mBACHlX,KAAKqB,SAAW,WACZrB,KAAKmC,WAAWE,YAAc,SAC5BuE,YACA5G,KAAKmC,WAAWE,YAAc,SAC9BkE,aACAvG,KAAKmC,WAAWE,YAAc,UAC9BmE,cACAC,WACFzG,KAAKmC,WAAWE,YAAc,QAC9BuE,YACA5G,KAAKmC,WAAWE,YAAc,SAC9BkE,aACAvG,KAAKmC,WAAWE,YAAc,UAC9BmE,cACAC,U,EAGRS,EAAAwD,UAAAsH,wBAAA,WACEhS,KAAKqH,qBAAuB,GAE5BrH,KAAKqH,qBACHrH,KAAKmX,iBAAmBnX,KAAKmX,gBAAgB7W,OACzCN,KAAKmX,gBACL,CAACnX,KAAK8B,eAAgB9B,KAAK+B,e,EAGnCmF,EAAAwD,UAAAuH,mBAAA,eAAArB,EAAA5Q,KACEA,KAAKoX,UAAY,GAEjB,GAAIpX,KAAKiC,cAAe,CACtBjC,KAAKoX,UAAYpX,KAAKgW,SAASS,KAAI,SAAA9X,GAAK,OAAAA,EAAEiS,EAAK3O,cAAP,IAAuBoV,QAAO,SAACpY,EAAGkX,EAAGmB,GAAM,OAAAA,EAAEC,QAAQtY,KAAOkX,CAAjB,G,GAIvFjP,EAAAwD,UAAAyH,gCAAA,WACE,IAAMqF,EAAkB7T,qBACxB,IAAM8T,EAAiBD,EAAgBE,QAAQ3H,SAC/C,IAAM4H,EAAiBH,EAAgBE,QAAQE,kBAAkBH,GACjE,IAAMI,EAAgBL,EAAgBM,QAAQC,aAC9C,GAAI/X,KAAKoH,6BAA+BpH,KAAK6B,aAAamW,eAAgB,CACxEhY,KAAKoH,2BAA6B,MAClCJ,0BAA0BhH,KAAK6Q,QAAOoH,OAAAC,OAAAD,OAAAC,OAAA,GACjClY,KAAK6B,cAAY,CACpBkO,SAAU4H,EACVzH,cAAe2H,I,GAKrB3Q,EAAAwD,UAAAwH,iCAAA,WACE,GAAIlS,KAAKmH,8BAAgCnH,KAAK2C,cAAcwV,kBAAmB,CAC7EnY,KAAKmH,4BAA8B,MACnCJ,2BACE/G,KAAK6Q,QAAOoH,OAAAC,OAAA,GACPlY,KAAK2C,eACV,CACEK,YAAahD,KAAKgD,YAClBsT,KAAMtW,KAAKgW,SACXlF,SAAU9Q,KAAK8Q,SACfzR,QAAS,CACP2B,UAAWhB,KAAKgB,UAChBoX,aAAcpY,KAAKuD,eAAiB8U,UAAYrY,KAAKsY,WAAWrH,O,GAO1E/J,EAAAwD,UAAA6N,kBAAA,WACE,OAAO1U,wBAAwB7D,KAAK6B,a,EAGtCqF,EAAAwD,UAAA8G,sBAAA,WACE5N,mBAAmB5D,KAAK6B,a,EAG1BqF,EAAAwD,UAAA6H,aAAA,WAEE,IAAMiG,EAAsB,CAAC,iBAAkB,iBAC/C,IAAMC,EAAgB,CACpBC,gBAAiBF,EACjBG,gBAAiB,CACf,CACEC,WAAY,YACZC,gBAAiB,CAAC,iBAClBC,gBAAiB,CAAC,aAKxB,IAAMC,EAAW3S,cAAcpG,KAAMyY,EAAe,oBACpDzY,KAAKgZ,UAAYhZ,KAAKiZ,mBAAmBjZ,KAAKkZ,YAAYC,MAAOJ,GACjE/Y,KAAKoZ,aAAenB,OAAOoB,KAAKN,GAIhC,IAAMO,EAAqBjT,sBACpBiT,EAAmBX,gBAAgB,GAC1C,IAAMU,EAAOjT,cAAcpG,KAAMsZ,EAAoB,oCACrDtZ,KAAKuZ,mBAAqBvZ,KAAKiZ,mBAAmBjZ,KAAKkZ,YAAYM,MAAOH,GAC1ErZ,KAAKyZ,sBAAwBxB,OAAOoB,KAAKA,E,EAG3CnS,EAAAwD,UAAAuO,mBAAA,SAAmB3C,EAAMoD,GAAzB,IAAA9I,EAAA5Q,KACE,IAAM2Z,EAAa,GACnBrD,EAAKL,SAAQ,SAAA2D,GACX,IAAMC,EAAmB,GAEzB5B,OAAOoB,KAAKK,GAAQzD,SAAQ,SAAA6D,GAC1B,GAAI,SAAUF,GAAcA,EAAWtD,KAAKwD,GAAQ,CAClDD,EAAiBC,GACfJ,EAAOI,IAAUF,EAAWtD,KAAKwD,GAC7BjU,YAAY+T,EAAWtD,KAAKwD,GAAQJ,EAAOI,IAC3CF,EAAWtD,KAAKwD,E,KACjB,CACL,GAAIA,IAAUlJ,EAAK5O,cAAe,CAChC6X,EAAiBC,GAASJ,EAAOI,GAC7BjU,YAAY+T,EAAWhJ,EAAKlJ,aAAcgS,EAAOI,IACjDF,EAAWhJ,EAAKlJ,Y,KACf,CACLmS,EAAiBC,GACfJ,EAAOI,IAAUF,EAAWE,GAASjU,YAAY+T,EAAWE,GAAQJ,EAAOI,IAAUF,EAAWE,E,MAIxGH,EAAW9C,KAAKgD,E,IAElB,OAAOF,C,EAGTzS,EAAAwD,UAAA2H,kBAAA,eAAAzB,EAAA5Q,KAEEA,KAAK+Z,mBAAqBzT,OAAOtG,KAAKmC,WAAWG,QAAStC,KAAKuC,WAAWC,QAASxC,KAAKqB,QACrF2Y,QAAO,SAAArb,GAAK,OAAAA,EAAEiS,EAAKoG,gBAAP,IACZiD,UAAUja,KAAKmC,WAAWf,OAC1B8Y,YAAYla,KAAKmC,WAAWP,SAC5BuY,UAAUna,KAAKkX,oBACfkD,SAAS,MACTC,KAAK,CAACra,KAAK6V,iBAAkB7V,KAAK4V,mB,EAGvC1O,EAAAwD,UAAA4H,oBAAA,eAAA1B,EAAA5Q,KACE,IAAMsa,EAAa,SAACnB,EAAOK,GACzB,OAAA5I,EAAKmJ,mBAAmB,CACtBZ,MAAOA,EAAM1C,KAAI,SAAA9X,GAAC,OAAAsZ,OAAAC,OAAA,GAAUvZ,EAAV,IAClB6a,MAAOA,EAAM/C,KAAI,SAAA9X,GAAC,OAAAsZ,OAAAC,OAAA,GAAUvZ,EAAV,KAFpB,EAIFqB,KAAKkZ,YAAcoB,EAAWta,KAAK8V,SAAU9V,KAAK+V,UAClD/V,KAAKua,UAAYC,IAAIxa,KAAKkZ,YAAYC,OAAO,SAAAxa,GAAK,OAAAA,EAAE8b,KAAF,G,EAGpDvT,EAAAwD,UAAAgI,mBAAA,WACE1S,KAAK0a,IAAMC,OAAO3a,KAAKsR,mBACpBqJ,OAAO,mCACPC,OAAO,OACPC,KAAK,QAAS7a,KAAKoB,OACnByZ,KAAK,SAAU7a,KAAKmB,QAGvBnB,KAAKiV,KAAOjV,KAAK0a,IAAIE,OAAO,KAAKC,KAAK,KAAM,+BAAiC7a,KAAK6Q,SAClF7Q,KAAK8a,MAAQ9a,KAAKiV,KAAK2F,OAAO,KAAKC,KAAK,KAAM,gCAAkC7a,KAAK6Q,SAErF7Q,KAAK+a,MAAQ/a,KAAK8a,MAAMF,OAAO,KAAKC,KAAK,QAAS,uBAClD7a,KAAKgb,MAAQhb,KAAK8a,MAAMF,OAAO,KAAKC,KAAK,QAAS,uBAElD7a,KAAKib,OAASjb,KAAK8a,MAAMF,OAAO,KAAKC,KAAK,QAAS,4BACnD7a,KAAKkb,UAAYP,OAAO3a,KAAKsR,mBAAmBqJ,OAAO,uBACvD3a,KAAKmb,SAAWR,OAAO3a,KAAKsR,mBAAmBqJ,OAAO,oB,EAGxDzT,EAAAwD,UAAAiK,aAAA,WACE3U,KAAKob,YAAYP,KAAK,UAAW7a,KAAKuD,eAAiBvD,KAAKoD,OAAS,MAErEpD,KAAKqb,eAAeR,KAAK,UAAW7a,KAAKuD,gBAAkBvD,KAAK+C,UAAUP,QAAUxC,KAAKoD,OAAS,K,EAGpG8D,EAAAwD,UAAA4I,UAAA,WACE,IAAMgI,EAAYzU,oBAAoB,CACpC0U,UAAWvb,KAAK0a,IAChBtJ,SAAUpR,KAAKoR,SACfoK,UAAW,aACXC,OAAQC,WAGVJ,EACGT,KAAK,QAAS7a,KAAKoB,OACnByZ,KAAK,SAAU7a,KAAKmB,QACpB0Z,KAAK,UAAW,OAAS7a,KAAKoB,MAAQ,IAAMpB,KAAKmB,QAEpD,IAAMwa,EAAa9U,oBAAoB,CACrC0U,UAAWvb,KAAKiV,KAChB7D,SAAUpR,KAAKoR,SACfoK,UAAW,aACXC,OAAQC,WAGVC,EAAWd,KAAK,YAAa,aAAAe,OAAa5b,KAAKuB,OAAOI,KAAI,MAAAia,OAAK5b,KAAKuB,OAAOC,IAAG,MAE9E,IAAMqa,EAAchV,oBAAoB,CACtC0U,UAAWvb,KAAK8a,MAChB1J,SAAUpR,KAAKoR,SACfoK,UAAW,aACXC,OAAQC,WAGVG,EAAYhB,KAAK,YAAa,aAAAe,OAAa5b,KAAK4B,QAAQD,KAAI,MAAAia,OAAK5b,KAAK4B,QAAQJ,IAAG,MAEjFyD,iCAAiCjF,KAAK6Q,QAAS7Q,KAAKoB,M,EAGtD8F,EAAAwD,UAAA8I,oBAAA,eAAA5C,EAAA5Q,KACE,GAAIA,KAAK8b,kBAAmB,CAC1B9b,KAAK+b,mBAAqB/b,KAAK8b,iB,CAGjC,IAAME,EAAmBhc,KAAK+a,MAC3BkB,UAAU,iBACV3F,KAAKtW,KAAKkZ,YAAYC,OAAO,SAAAxa,GAAK,OAAAA,EAAEiS,EAAKoG,gBAAP,IAErChX,KAAKkc,WAAaF,EACfG,QACAvB,OAAO,KACPC,KAAK,QAAS,gBACdA,KAAK,oBAAqB,QAC7B7a,KAAKkc,WAAWtB,OAAO,QAAQC,KAAK,QAAS,iBAC7C7a,KAAKoc,UAAYJ,EAAiBK,OAClCrc,KAAKsc,YAAcN,EAAiBO,MAAMvc,KAAKkc,YAC/Clc,KAAKsc,YAAYL,UAAU,kBAAkB3F,MAAK,SAAA3X,GAAK,OAACA,EAAD,IAEvDqB,KAAK8b,kBAAoB9b,KAAKkZ,YAAYC,MAC1C,GAAInZ,KAAK+b,mBAAoB,CAC3B,IAAMS,EAAoCxc,KAAK8b,kBAAkBzE,QAAO,SAAAoF,GACtE,OAAA7L,EAAKmL,mBAAmBtF,KAAI,SAAAa,GAAK,OAAAA,EAAE1G,EAAKoG,gBAAP,IAAyB0F,SAASD,EAAKlL,GAAxE,IAEFvR,KAAK2c,qBAAuBnC,IAAIgC,GAAmC,SAAA7d,GAAK,OAAAA,EAAE8b,KAAF,IACxEza,KAAK4c,qBAAuBC,IAAIL,GAAmC,SAAA7d,GAAK,OAAAA,EAAE8b,KAAF,IAExE,IAAMqC,EAAmC9c,KAAK+b,mBAAmB1E,QAAO,SAAAoF,GACtE,OAAA7L,EAAKkL,kBAAkBrF,KAAI,SAAAa,GAAK,OAAAA,EAAE1G,EAAKoG,gBAAP,IAAyB0F,SAASD,EAAKlL,GAAvE,IAEFvR,KAAK+c,oBAAsBvC,IAAIsC,GAAkC,SAAAne,GAAK,OAAAA,EAAE8b,KAAF,IACtEza,KAAKgd,oBAAsBH,IAAIC,GAAkC,SAAAne,GAAK,OAAAA,EAAE8b,KAAF,G,CASxE,GAAIza,KAAKiX,oBAAsB,UAAYjX,KAAKiX,oBAAsB,SAAU,CAC9EjX,KAAKsc,YAAYW,MAAK,SAAC5c,EAAG8V,EAAG+G,GAC3BlZ,wBAAwBkZ,EAAE/G,G,IAE5B,IAAMgH,EAAiBnd,KAAKkZ,YAAYC,MACxC,IAAMiE,EAAwBpd,KAAKgb,MAChCiB,UAAU,0BACV3F,KAAK6G,GAAgB,SAAAxe,GAAK,OAAAA,EAAEiS,EAAKoG,gBAAP,IAC7BhX,KAAKqd,gBAAkBD,EAAsBjB,QAAQvB,OAAO,KAC5D5a,KAAKsd,eAAiBF,EAAsBf,OAAOkB,SACnDvd,KAAKwd,iBAAmBJ,EAAsBb,MAAMvc,KAAKqd,iBAEzD,IAAMI,EAAmBzd,KAAKwd,iBAC3BvB,UAAU,kBACV3F,MAAK,SAAA3X,GAAK,OAAAA,EAAE+e,WAAF,IAAe,SAAA/e,GAAK,OAAAA,EAAE2X,KAAK1F,EAAK9O,gBAAkBnD,EAAE2X,KAAK1F,EAAK7O,eAA1C,IACjC/B,KAAK2d,WAAaF,EAAiBtB,QAAQvB,OAAO,QAClD5a,KAAK4d,UAAYH,EAAiBpB,OAClCrc,KAAKob,YAAcqC,EAAiBlB,MAAMvc,KAAK2d,YAAY9C,KAAK,sBAAuB7a,KAAKiX,kB,KACvF,CACLjX,KAAKsc,YAAYzB,KAAK,WAAY,MAElC,IAAM4C,EAAmBzd,KAAKgb,MAC3BiB,UAAU,kBACV3F,KAAKtW,KAAKkZ,YAAYM,OAAO,SAAA7a,GAAK,OAAAA,EAAE2X,KAAK1F,EAAK9O,gBAAkBnD,EAAE2X,KAAK1F,EAAK7O,eAA1C,IACrC/B,KAAK2d,WAAaF,EAAiBtB,QAAQvB,OAAO,QAClD5a,KAAK4d,UAAYH,EAAiBpB,OAClCrc,KAAKob,YAAcqC,EAAiBlB,MAAMvc,KAAK2d,YAAY9C,KAAK,sBAAuB,K,CAGzF7a,KAAK6d,SAAW7d,KAAK4d,UAAUvD,OAC/Bra,KAAK8d,UAAY9d,KAAK2d,WAAWtD,OAEjC,IAAM0D,EAAoB/d,KAAKib,OAAOgB,UAAU,QAAQ3F,KAAKtW,KAAKkZ,YAAYC,OAAO,SAAAxa,GAAK,OAAAA,EAAEiS,EAAKoG,gBAAP,IAC1FhX,KAAKge,eAAiBD,EAAkB5B,QAAQvB,OAAO,QACvD5a,KAAKie,cAAgBF,EAAkB1B,OACvCrc,KAAKqb,eAAiB0C,EAAkBxB,MAAMvc,KAAKge,e,EAGrD9W,EAAAwD,UAAA+I,qBAAA,eAAA7C,EAAA5Q,KACE,GAAIA,KAAKke,SAAU,CACjBvD,OAAO3a,KAAKsR,mBACTqJ,OAAO,mCACPE,KAAK,cAAe,mBACvBF,OAAO3a,KAAKsR,mBACTqJ,OAAO,wBACPE,KAAK,cAAe,cACvBF,OAAO3a,KAAKsR,mBACTqJ,OAAO,uBACPE,KAAK,cAAe,aACvB7a,KAAK0a,IAAIG,KAAK,cAAe,YAC7B7a,KAAKiV,KAAK4F,KAAK,cAAe,oBAC9B7a,KAAK8a,MAAMD,KAAK,cAAe,qBAE/B7a,KAAKmb,SAASN,KAAK,cAAe,qBAIlC7a,KAAKsc,YAAYzB,KAAK,cAAe,QAAQA,KAAK,WAAW,SAAAlc,GAAK,cAAAid,OAAQjd,EAAEiS,EAAKoG,iBAAf,IAGlE,GAAIhX,KAAKiX,oBAAsB,UAAYjX,KAAKiX,oBAAsB,SAAU,CAC9EjX,KAAKwd,iBACF3C,KAAK,cAAe,uBACpBA,KAAK,WAAW,SAAAlc,GAAK,oBAAAid,OAAcjd,EAAEiS,EAAKoG,iBAArB,G,CAE1BhX,KAAKob,YACFP,KAAK,cAAe,QACpBA,KAAK,WAAW,SAAAlc,GAAK,cAAAid,OAAQjd,EAAEC,OAAOgS,EAAKoG,iBAAgB,KAAA4E,OAAIjd,EAAEG,OAAO8R,EAAKoG,iBAAxD,IAGxBhX,KAAKqb,eAAeR,KAAK,cAAe,aAAaA,KAAK,WAAW,SAAAlc,GAAK,mBAAAid,OAAajd,EAAEiS,EAAKoG,iBAApB,IAE1EhX,KAAK0a,IAAIC,OAAO,QAAQE,KAAK,cAAe,e,KACvC,CACLF,OAAO3a,KAAKsR,mBACTqJ,OAAO,mCACPE,KAAK,cAAe,MACvBF,OAAO3a,KAAKsR,mBACTqJ,OAAO,wBACPE,KAAK,cAAe,MACvBF,OAAO3a,KAAKsR,mBACTqJ,OAAO,uBACPE,KAAK,cAAe,MACvB7a,KAAK0a,IAAIG,KAAK,cAAe,MAC7B7a,KAAKiV,KAAK4F,KAAK,cAAe,MAC9B7a,KAAK8a,MAAMD,KAAK,cAAe,MAE/B7a,KAAKmb,SAASN,KAAK,cAAe,MAGlC7a,KAAKsc,YAAYzB,KAAK,cAAe,MAAMA,KAAK,UAAW,MAG3D,GAAI7a,KAAKiX,oBAAsB,UAAYjX,KAAKiX,oBAAsB,SAAU,CAC9EjX,KAAKwd,iBAAiB3C,KAAK,cAAe,MAAMA,KAAK,UAAW,K,CAElE7a,KAAKob,YAAYP,KAAK,cAAe,MAAMA,KAAK,UAAW,MAG3D7a,KAAKqb,eAAeR,KAAK,cAAe,MAAMA,KAAK,UAAW,MAE9D7a,KAAK0a,IAAIC,OAAO,QAAQE,KAAK,cAAe,K,GAIhD3T,EAAAwD,UAAAyT,+BAAA,eAAAvN,EAAA5Q,KACE,OAAOQ,iBACJ5B,QAAO,SAAAD,GACN,OAAAA,EAAEG,OAAO2b,OAAS7J,EAAKgM,qBACnB,CAACje,EAAEC,OAAOwf,GAAIzf,EAAE0f,IAChB1f,EAAEC,OAAO6b,OAAS7J,EAAK+L,qBACvB,CAAChe,EAAEG,OAAOwf,GAAI3f,EAAE0f,IAChB,CAAC1f,EAAEC,OAAO0f,GAAI3f,EAAE0f,GAJpB,IAMDvf,QAAO,SAAAH,GACN,OAAAA,EAAEG,OAAO2b,OAAS7J,EAAKgM,qBACnB,CAACje,EAAEC,OAAOwf,GAAIzf,EAAE0f,IAChB1f,EAAEC,OAAO6b,OAAS7J,EAAK+L,qBACvB,CAAChe,EAAEG,OAAOwf,GAAI3f,EAAE0f,IAChB,CAAC1f,EAAEG,OAAOsf,GAAIzf,EAAE4f,GAJpB,G,EAQNrX,EAAAwD,UAAA8T,uCAAA,eAAA5N,EAAA5Q,KACE,OAAOU,eACJ9B,QAAO,SAAAD,GACN,OAAAA,EAAEG,OAAO2b,OAAS7J,EAAKgM,qBACnB,CAACje,EAAEyf,GAAIzf,EAAEC,OAAOyf,IAChB1f,EAAEC,OAAO6b,OAAS7J,EAAK+L,qBACvB,CAAChe,EAAEyf,GAAIzf,EAAEG,OAAOyf,IAChB,CAAC5f,EAAEyf,GAAIzf,EAAEC,OAAO2f,GAJpB,IAMDzf,QAAO,SAAAH,GACN,OAAAA,EAAEG,OAAO2b,OAAS7J,EAAKgM,qBACnB,CAACje,EAAEyf,GAAIzf,EAAEC,OAAOyf,IAChB1f,EAAEC,OAAO6b,OAAS7J,EAAK+L,qBACvB,CAAChe,EAAEyf,GAAIzf,EAAEG,OAAOyf,IAChB,CAAC5f,EAAE2f,GAAI3f,EAAEG,OAAOuf,GAJpB,G,EAQNnX,EAAAwD,UAAAgJ,oBAAA,eAAA9C,EAAA5Q,KACEA,KAAK2d,WAAWc,YAChB,IAAMC,EAAc1e,KAAKuC,WAAWC,QAAUxC,KAAKuC,WAAWG,QAAU,EAExE,GAAI1C,KAAKiX,oBAAsB,UAAYjX,KAAKiX,oBAAsB,SAAU,CAC9EjX,KAAKqd,gBAAgBxC,KAAK,QAAS,wB,CAGrC7a,KAAK2d,WACF9C,KAAK,QAAS,iBACd8D,QAAQ,WAAY,MACpB9D,KACC,IACA7a,KAAKqB,SAAW,WACZrB,KAAKwe,yCACLxe,KAAKme,kCAGbne,KAAK2d,WACF9C,KAAK,UAAW7a,KAAKuD,eAAiBvD,KAAKoD,OAAS,MACpDwb,GAAG,SAAU5e,KAAKuD,eAAiB,SAAC5E,EAAGwX,EAAG+G,GAAM,OAAAtM,EAAKiO,eAAelgB,EAAGue,EAAE/G,GAAzB,EAA+B,MAC/EyI,GAAG,aAAc5e,KAAKuD,eAAiB,SAAC5E,EAAGwX,EAAG+G,GAAM,OAAAtM,EAAKkO,eAAengB,EAAGue,EAAE/G,GAAzB,EAA+B,MACnFyI,GAAG,YAAa5e,KAAKuD,eAAiB,WAAM,OAAAqN,EAAKmO,mBAAL,EAA2B,MACvElE,KAAK,oBAAoB,SAAClc,EAAGwX,EAAG+G,GAC/Bve,EAAEqgB,WAAa9B,EAAE/G,GAAG8I,iBAAmB,EAEvC,OAAOtgB,EAAEG,OAAO2b,OAAS7J,EAAKgM,sBAAwBje,EAAEC,OAAO6b,OAAS7J,EAAK+L,qBACzE,GACAhe,EAAEqgB,WAAa,IAAMrgB,EAAEqgB,U,IAG5BnE,KAAK,qBAAqB,SAAAlc,GACzB,OAAAA,EAAEG,OAAO2b,OAAS7J,EAAKgM,sBAAwBje,EAAEC,OAAO6b,OAAS7J,EAAK+L,qBAAuB,EAAIhe,EAAEqgB,UAAnG,IAEDnE,KAAK,gBAAgB,SAAAlc,GACpB,OAAAA,EAAEG,OAAO2b,OAAS7J,EAAKgM,sBAAwBje,EAAEC,OAAO6b,OAAS7J,EAAK+L,qBAClEuC,KAAK1E,IAAI,EAAG7b,EAAEyC,OACd,EAFJ,IAIDyZ,KAAK,iBAAkB6D,GACvBS,WAAW,SACX/N,SAASpR,KAAKoR,UACdgO,KAAK1D,UACLb,KAAK,IAAK7a,KAAKqB,SAAW,WAAasF,qBAAuBD,wBAC9DmU,KAAK,gBAAgB,SAAAlc,GACpB,OAAAA,EAAEG,OAAO2b,OAAS7J,EAAKgM,sBAAwBje,EAAEC,OAAO6b,OAAS7J,EAAK+L,qBAClEuC,KAAK1E,IAAI,EAAG7b,EAAEyC,OACd,CAFJ,IAIDyZ,KAAK,oBAAqB,E,EAkB/B3T,EAAAwD,UAAAiJ,qBAAA,eAAA/C,EAAA5Q,KACEA,KAAKob,YAAYqD,YACjB,IAAMC,EAAc1e,KAAKuC,WAAWC,QAAUxC,KAAKuC,WAAWG,QAAU,EAExE1C,KAAKob,YACF+D,WAAW,WACXC,KAAK1D,UACLtK,SAASpR,KAAKoR,UACdyJ,KAAK,kBAAkB,SAAAlc,GACtB,OAAO4G,iBACL5G,EAAE2X,KACFoI,EACA9N,EAAKzN,aACLyN,EAAKyO,eACLzO,EAAKpN,eACLoN,EAAKvJ,qB,KAMbH,EAAAwD,UAAAkJ,mBAAA,eAAAhD,EAAA5Q,KACEA,KAAK4d,UAAUa,YACf,IAAMC,EAAc1e,KAAKuC,WAAWC,QAAUxC,KAAKuC,WAAWG,QAAU,EAExE1C,KAAK4d,UACF/C,KAAK,oBAAoB,SAAClc,EAAGwX,EAAG+G,GAC/Bve,EAAEqgB,WAAa9B,EAAE/G,GAAG8I,iBACpB,OAAOtgB,EAAEG,OAAO2b,OAAS7J,EAAKgM,sBAAwBje,EAAEC,OAAO6b,OAAS7J,EAAK+L,qBACzE,GACAhe,EAAEqgB,WAAa,IAAMrgB,EAAEqgB,U,IAE5BG,WAAW,QACXC,KAAK1D,UACLtK,SAASpR,KAAKoR,UACdyJ,KACC,IACA7a,KAAKqB,SAAW,WACZrB,KAAKwe,yCACLxe,KAAKme,kCAEVtD,KAAK,iBAAkB6D,GACvB7D,KAAK,qBAAqB,SAAAlc,GAAK,OAAAA,EAAEqgB,UAAF,IAC/BnE,KAAK,gBAAgB,SAAAlc,GACpB,OAAAA,EAAEG,OAAO2b,OAAS7J,EAAKoM,qBAAuBre,EAAEC,OAAO6b,OAAS7J,EAAKmM,oBACjEmC,KAAK1E,IAAI,EAAG7b,EAAEyC,OACd,EAFJ,IAIDmc,Q,EAGLrW,EAAAwD,UAAA2J,mBAAA,eAAAzD,EAAA5Q,KACEA,KAAKsf,4BAA4Btf,KAAK0a,IAAIxF,QAG1C,GAAIlV,KAAKiX,oBAAsB,UAAYjX,KAAKiX,oBAAsB,SAAU,CAC9EjX,KAAKwd,iBAAiBmB,QAAQ,2BAA4B,K,CAK5D3e,KAAKob,YACF+D,WAAW,UACX/N,SAASpR,KAAKoR,UACdgO,KAAK1D,UAYLb,KAAK,IAAK7a,KAAKqB,SAAW,WAAasF,qBAAuBD,wBAC9DmU,KAAK,gBAAgB,SAAAlc,GAAK,OAAAugB,KAAK1E,IAAI,EAAG7b,EAAEyC,MAAd,IAC1BxB,KAAKwF,kBAAkB,WACtBwL,EAAK0O,4BAA4B1O,EAAK8J,IAAIxF,QAC1CtE,EAAKwK,YACFuD,QAAQ,WAAY,OACpB9D,KAAK,IAAKjK,EAAKvP,SAAW,WAAasF,qBAAuBD,wBAC9DmU,KAAK,mBAAoB,IAE5BjK,EAAK2E,yBACL3E,EAAKwK,YAAY6B,MAAK,SAACte,EAAGwX,EAAG+G,GAC3B,IAAMqC,EACJ3O,EAAKpN,gBACLoN,EAAKpN,eAAelD,OAAS,GAC7BgF,aAAa3G,EAAE2X,KAAM1F,EAAKpN,eAAgBoN,EAAKvJ,sBACjD,GAAIkY,EAAS,CAGX3O,EAAK4O,yBAAyBtC,EAAE/G,GAAIxX,E,QAK5CqB,KAAKob,YACF+D,WAAW,0BACX/N,SAASpR,KAAKoR,UACdgO,KAAK1D,UACL9b,KAAKwF,kBAAkB,WAEtB,IAAMqa,EAAgB1a,iBAAiB6L,EAAKkK,MAAM5F,QAElDtE,EAAKgN,UAAUL,SAEf3M,EAAK6D,6BAEL7D,EAAK4D,0BAEL5D,EAAK2D,wBAELzP,kBAAkB,CAChB4a,YAAa9O,EAAKkK,MAAM5F,OACxBuK,cAAaA,IAIf7O,EAAK+O,mBAAmB1O,KAAK,CAAEJ,QAASD,EAAKC,S,KAKnD3J,EAAAwD,UAAA8U,yBAAA,SAAyBI,EAAcjhB,GACrC,IAAMC,EAASghB,EACf,IAAMC,EAAY,0BAClB,IAAMC,EAASlhB,EAAOmhB,WACtB,IAAMC,EAAaphB,EAAOqhB,YAC1BtF,OAAOqF,GACJrB,QAAQ,gBAAiB,OACzBA,QAAQkB,EAAY,cAAgBA,EAAY,SAAU,MAC1DlB,QAAQ,0BAA2B,MACnCA,QAAQ,WAAY,OACpBrI,KAAK,CAAC3X,EAAE2X,OACRuE,KAAK,YAAa,OAClBA,KAAK,aAAc,MACnBA,KAAK,cAAe,MACpBA,KAAK,OAAQ,MACbqF,MAAM,iBAAkB,QACxBrF,KAAK,WAAY,MAEpB,GAAI7a,KAAKiX,oBAAsB,UAAYjX,KAAKiX,oBAAsB,SAAU,CAC9E,IAAMkJ,EAAiBL,EAAOC,WAC9B,IAAMK,EAAgBzF,OAAOwF,GAAgBlE,UAAU,eAAeoE,QAAQ,GAC9E,IAAMC,EAAYF,EAAcA,EAAc9f,OAAS,GACvDggB,EAAUC,YAAYP,E,KACjB,CACLF,EAAOS,YAAYP,E,GAIvB9Y,EAAAwD,UAAA4U,4BAAA,SAA4BrK,GAC1B0F,OAAO1F,GACJgH,UAAU,4BACVsB,Q,EAGLrW,EAAAwD,UAAAyJ,gBAAA,eAAAvD,EAAA5Q,KACEA,KAAKob,YACFP,KAAK,UAAU,SAAAlc,GACd,OAAAiS,EAAKpN,eAAelD,OAAS,GAC7BgF,aAAa3G,EAAE2X,KAAM1F,EAAKpN,eAAgBoN,EAAKvJ,uBAC/CuJ,EAAK1N,WAAWsd,MACZ1Z,WAAW8J,EAAK1N,WAAWsd,QAAU5P,EAAK1N,WAAWsd,MACrD5P,EAAKyO,gBACLpZ,aAAatH,EAAE2X,KAAM1F,EAAKyO,eAAgBzO,EAAKvJ,uBAC/CuJ,EAAK3N,WAAWud,MAChB1Z,WAAW8J,EAAK3N,WAAWud,QAAU5P,EAAK3N,WAAWud,MACrD5P,EAAKqG,oBAAsB,QAC3BrG,EAAK6P,SAAS7P,EAAKwG,UAAUG,QAAQ5Y,EAAEiS,EAAK3O,iBAC5C2O,EAAKqG,oBAAsB,OAC3BrG,EAAK6P,SAAS,IAAM,UACpB7P,EAAKqG,oBAAsB,OAC3BrG,EAAK6P,SAAS9hB,EAAE+hB,OAChB9P,EAAKqG,oBAAsB,SAC3BrG,EAAK6P,SAAS9hB,EAAEC,OAAO8hB,OACvB9P,EAAK6P,SAAS9hB,EAAEG,OAAO4hB,MAhB3B,IAkBD7F,KAAK,OAAQ,O,EAGlB3T,EAAAwD,UAAAmJ,oBAAA,eAAAjD,EAAA5Q,KACEA,KAAKkc,WAAWuC,YAEhB,IAAKze,KAAKqR,SAAU,CAClBrR,KAAKkc,WAAWyC,QAAQ,WAAY,K,CAGtC3e,KAAKkc,WACFvB,OAAO,kBAEPE,KAAK,QAAQ,SAACxa,EAAG8V,GAAC,OAAMvF,EAAKzO,WAAWC,KAAOwO,EAAK6P,SAAStK,IAAMvF,EAAK6P,SAAS,GAAK,SAApE,IAClB5F,KAAK,UAAU,SAACxa,EAAG8V,GAClB,OAAApQ,qBAAqB6K,EAAKzO,WAAWC,KAAOwO,EAAK6P,SAAStK,IAAMvF,EAAK6P,SAAS,GAAK,UAAnF,IAED5F,KAAK,eAAgB,OACrBA,KAAK,KAAK,SAAAlc,GAAK,OAAAA,EAAEyf,EAAF,IACfvD,KAAK,KAAK,SAAAlc,GAAK,OAAAA,EAAE0f,EAAF,IACfxD,KAAK,UAAU,SAAAlc,GAAK,OAAAA,EAAE4f,GAAK5f,EAAE0f,EAAT,IACpBxD,KAAK,UAAW,GAChBA,KAAK,SAAS,SAAAlc,GAAK,OAAAA,EAAE2f,GAAK3f,EAAEyf,EAAT,G,EAmBxBlX,EAAAwD,UAAAoJ,qBAAA,eAAAlD,EAAA5Q,KACEA,KAAKsc,YAAYmC,YAEjBze,KAAKsc,YACF3B,OAAO,kBACPwE,WAAW,gBACX/N,UAAS,SAAC/Q,EAAG8V,EAAG+G,GACf,GAAIvC,OAAOuC,EAAE/G,GAAG4J,YAAYpB,QAAQ,YAAa,CAE/C,OAAO/N,EAAKQ,SAAW,C,CAEzB,OAAO,C,IAGRuP,OAAM,SAACtgB,EAAG8V,EAAG+G,GACZ,OAAOvC,OAAOuC,EAAE/G,GAAG4J,YAAYpB,QAAQ,YAAc/N,EAAKQ,SAAW,IAAM,C,IAE5EgO,KAAK1D,UACLb,KACC,UACA,E,EAeN3T,EAAAwD,UAAAqJ,mBAAA,WACE/T,KAAKoc,UAAUqC,YAEfze,KAAKoc,UACFzB,OAAO,kBACPwE,WAAW,QACXC,KAAK1D,UACLtK,SAASpR,KAAKoR,SAAW,GACzByJ,KAAK,UAAW,GAChBA,KAAK,QAAS,GACdF,QAAO,WACN,OAAO3a,KAAK+f,U,IAEbxC,Q,EAGLrW,EAAAwD,UAAA0J,mBAAA,eAAAxD,EAAA5Q,KACEA,KAAKsc,YACF3B,OAAO,kBAMPwE,WAAW,gBACX/N,UAAS,SAAC/Q,EAAG8V,EAAG+G,GACf,OAAOvC,OAAOuC,EAAE/G,GAAG4J,YAAYpB,QAAQ,YAAc/N,EAAKQ,SAAW,EAAIR,EAAKQ,Q,IAE/EuP,OAAM,SAACtgB,EAAG8V,EAAG+G,GACZ,OAAOvC,OAAOuC,EAAE/G,GAAG4J,YAAYpB,QAAQ,YAAc/N,EAAKQ,SAAW,IAAM,C,IAE5EgO,KAAK1D,UACLb,KAAK,KAAK,SAAAlc,GAAK,OAAAA,EAAEyf,EAAF,IACfvD,KAAK,KAAK,SAAAlc,GAAK,OAAAA,EAAE0f,EAAF,IACfxD,KAAK,UAAU,SAAAlc,GAAK,OAAAA,EAAE4f,GAAK5f,EAAE0f,EAAT,IACpBxD,KAAK,SAAS,SAAAlc,GAAK,OAAAA,EAAE2f,GAAK3f,EAAEyf,EAAT,IACnBvD,KAAK,UAAW,GAChBjb,KAAKwF,kBAAkB,WACtBwL,EAAK0L,YAAYqC,QAAQ,WAAY,M,KAuC3CzX,EAAAwD,UAAA4K,gBAAA,eAAA1E,EAAA5Q,KACEA,KAAKsc,YACF3B,OAAO,kBACPE,KAAK,QAAQ,SAACxa,EAAG8V,GAAC,OAAMvF,EAAKzO,WAAWC,KAAOwO,EAAK6P,SAAStK,IAAMvF,EAAK6P,SAAS,GAAK,SAApE,IACrBzgB,KAAKsc,YACF3B,OAAO,kBACPE,KAAK,UAAU,SAACxa,EAAG8V,GAClB,OAAApQ,qBAAqB6K,EAAKzO,WAAWC,KAAOwO,EAAK6P,SAAStK,IAAMvF,EAAK6P,SAAS,GAAK,UAAnF,IAEJzgB,KAAKsc,YAAY3B,OAAO,kBAAkBE,KAAK,eAAgB,M,EAOjE3T,EAAAwD,UAAAkW,gBAAA,SAAgBC,G,IACd5L,EAAI4L,EAAA5L,KACJ5T,EAAMwf,EAAAxf,OACN0B,EAAS8d,EAAA9d,UACT8S,EAAgBgL,EAAAhL,iBAUhB,IAAIiL,EAAYC,EAAYC,EAASC,EAASC,EAG9C,GAAI7f,IAAW,WAAY,CACzB,OAAQ0B,EAAUoe,WAChB,IAAK,UACHL,EAAa,SAAAniB,GAAK,OAAAA,EAAEyf,IAAMzf,EAAE2f,GAAK3f,EAAEyf,IAAM,CAAvB,EAClB2C,EAAa,SAAApiB,GACX,OAAOA,EAAE0f,GAAKxI,EAAmB,EAAIlX,EAAE0f,GAAK1f,EAAE4f,E,EAEhDyC,EAAU,QACVC,EAAU,SAAAtiB,GAAC,OAAKA,EAAE0f,GAAKxI,EAAmB,EAAI,SAAW,OAA9C,EACXqL,EAAa,SACb,MACF,IAAK,UACHJ,EAAa,SAAAniB,GAAK,OAAAA,EAAEyf,IAAMzf,EAAE2f,GAAK3f,EAAEyf,IAAM,CAAvB,EAClB2C,EAAa,SAAApiB,GAAK,OAAAA,EAAE0f,IAAM1f,EAAE4f,GAAK5f,EAAE0f,IAAM,CAAvB,EAClB2C,EAAU,QACVC,EAAU,QACVC,EAAa,SACb,MACF,IAAK,SACHJ,EAAa,SAAAniB,GAAK,OAAAA,EAAEyf,IAAMzf,EAAE2f,GAAK3f,EAAEyf,IAAM,CAAvB,EAClB2C,EAAa,SAAApiB,GAAC,OAAKA,EAAE0f,GAAKxI,EAAmB,EAAIlX,EAAE4f,GAAK5f,EAAE0f,EAA5C,EACd2C,EAAU,QACVC,EAAU,SAAAtiB,GAAC,OAAKA,EAAE0f,GAAKxI,EAAmB,EAAI,QAAU,QAA7C,EACXqL,EAAa,SACb,MACF,QACEJ,EAAa,SAAAniB,GAAK,OAAAA,EAAEyf,IAAMzf,EAAE2f,GAAK3f,EAAEyf,IAAM,CAAvB,EAClB2C,EAAa,SAAApiB,GAAC,OAAKA,EAAE0f,GAAKxI,EAAmB,EAAIlX,EAAE4f,GAAK5f,EAAE0f,EAA5C,EACd2C,EAAU,QACVC,EAAU,SAAAtiB,GAAC,OAAKA,EAAE0f,GAAKxI,EAAmB,EAAI,QAAU,QAA7C,EACXqL,EAAa,SACb,M,KAEC,CACL,OAAQne,EAAUoe,WAChB,IAAK,UACHL,EAAa,SAAAniB,GAAC,OAAKA,EAAEyf,GAAKvI,EAAmB,EAAIlX,EAAEyf,GAAKzf,EAAE2f,EAA5C,EACdyC,EAAa,SAAApiB,GAAK,OAAAA,EAAE0f,IAAM1f,EAAE4f,GAAK5f,EAAE0f,IAAM,CAAvB,EAClB2C,EAAU,SAAAriB,GAAC,OAAKA,EAAEyf,GAAKvI,EAAmB,EAAI,SAAW,OAA9C,EACXoL,EAAU,QACVC,EAAa,SAAAviB,GAAC,OAAKA,EAAEyf,GAAKvI,EAAmB,EAAI,MAAQ,OAA3C,EACd,MACF,IAAK,UACHiL,EAAa,SAAAniB,GAAK,OAAAA,EAAEyf,IAAMzf,EAAE2f,GAAK3f,EAAEyf,IAAM,CAAvB,EAClB2C,EAAa,SAAApiB,GAAK,OAAAA,EAAE0f,IAAM1f,EAAE4f,GAAK5f,EAAE0f,IAAM,CAAvB,EAClB2C,EAAU,QACVC,EAAU,QACVC,EAAa,SACb,MACF,IAAK,SACHJ,EAAa,SAAAniB,GAAC,OAAKA,EAAEyf,GAAKvI,EAAmB,EAAIlX,EAAE2f,GAAK3f,EAAEyf,EAA5C,EACd2C,EAAa,SAAApiB,GAAK,OAAAA,EAAE0f,IAAM1f,EAAE4f,GAAK5f,EAAE0f,IAAM,CAAvB,EAClB2C,EAAU,SAAAriB,GAAC,OAAKA,EAAEyf,GAAKvI,EAAmB,EAAI,QAAU,QAA7C,EACXoL,EAAU,QACVC,EAAa,SAAAviB,GAAC,OAAKA,EAAEyf,GAAKvI,EAAmB,EAAI,QAAU,KAA7C,EACd,MACF,QACEiL,EAAa,SAAAniB,GAAC,OAAKA,EAAEyf,GAAKvI,EAAmB,EAAIlX,EAAE2f,GAAK3f,EAAEyf,EAA5C,EACd2C,EAAa,SAAApiB,GAAK,OAAAA,EAAE0f,IAAM1f,EAAE4f,GAAK5f,EAAE0f,IAAM,CAAvB,EAClB2C,EAAU,SAAAriB,GAAC,OAAKA,EAAEyf,GAAKvI,EAAmB,EAAI,QAAU,QAA7C,EACXoL,EAAU,QACVC,EAAa,SAAAviB,GAAC,OAAKA,EAAEyf,GAAKvI,EAAmB,EAAI,QAAU,KAA7C,EACd,M,CAWNZ,EACG4F,KAAK,IAAKiG,GACVjG,KAAK,IAAKkG,GACVlG,KAAK,KAAMmG,GACXnG,KAAK,KAAMoG,GACXpG,KAAK,UAAWmG,GAChBnG,KAAK,UAAWoG,GAChBpG,KAAK,cAAeqG,E,EAQzBha,EAAAwD,UAAAsJ,gBAAA,eAAApD,EAAA5Q,KACEA,KAAKge,eAAeS,YACpB,IAAM/b,EAAU1C,KAAK+C,UAAUP,QAAU,EAAI,EAC7C,IAAM4e,EAAgBphB,KAAK+C,UAAUP,QAAU6e,OAAOC,QAAU,EAChEthB,KAAKuhB,qBAAuBvhB,KAAKua,UAAYva,KAAKmC,WAAWf,MAAQpB,KAAKua,UAAYva,KAAKmC,WAAWf,MACtGpB,KAAKwhB,oBAAsBxhB,KAAK6V,iBAAmB7V,KAAKuhB,sBAAwB,EAEhFvhB,KAAKge,eACFnD,KAAK,QAAS,uCACdA,KAAK,UAAW7a,KAAKuD,gBAAkBvD,KAAK+C,UAAUP,QAAUxC,KAAKoD,OAAS,MAC9EyX,KAAK,WAAW,SAAAlc,GACf,GAAIiS,EAAKrO,WAAWC,QAAS,CAC3B,IAAIif,EAAa,KACjB,GAAI9iB,EAAEiS,EAAKpJ,mBAAmBlH,OAAQ,CACpCmhB,EAAa9iB,EAAEiS,EAAKpJ,mBAAmBkP,MACrC,SAAAV,GACE,OAAAzQ,iBACEyQ,EAASM,KACT5T,EACAkO,EAAKzN,aACLyN,EAAKyO,eACLzO,EAAKpN,eACLoN,EAAKvJ,uBACF,CAPL,G,CAUN,GAAI1I,EAAEiS,EAAKnJ,mBAAmBnH,OAAQ,CACpCmhB,EAAa9iB,EAAEiS,EAAKnJ,mBAAmBiP,MACrC,SAAAV,GACE,OAAAzQ,iBACEyQ,EAASM,KACT5T,EACAkO,EAAKzN,aACLyN,EAAKyO,eACLzO,EAAKpN,eACLoN,EAAKvJ,uBACF,CAPL,G,CAUN,OAAOoa,EAAaL,EAAgB,C,KAC/B,CACL,OAAOziB,EAAE8b,QAAU,EAAI2G,EAAgBziB,EAAE8b,QAAU7J,EAAK2J,UAAY6G,EAAgB,C,KAI1FphB,KAAK4gB,gBAAgB,CACnB3L,KAAMjV,KAAKge,eACX3c,OAAQrB,KAAKqB,OACb0B,UAAW/C,KAAK+C,UAChB8S,iBAAkB7V,KAAK6V,kB,EAI3B3O,EAAAwD,UAAAuJ,iBAAA,eAAArD,EAAA5Q,KACEA,KAAKqb,eAAeoD,UAAU,iBAC9B,IAAM/b,EAAU1C,KAAK+C,UAAUP,QAAU,EAAI,EAE7CxC,KAAKqb,eACF8D,WAAW,iBACXC,KAAK1D,UAELtK,UAAS,SAAC/Q,EAAG8V,EAAG+G,GACf,GAAIvC,OAAOuC,EAAE/G,IAAIwI,QAAQ,YAAa,CACpC,OAAO/N,EAAKQ,SAAW,C,CAEzB,OAAO,C,IAGRuP,OAAM,SAACtgB,EAAG8V,EAAG+G,GACZ,OAAOvC,OAAOuC,EAAE/G,IAAIwI,QAAQ,YAAc/N,EAAKQ,SAAW,IAAM,C,IAEjEyJ,KAAK,WAAW,SAAAlc,GACf,GAAIiS,EAAKrO,WAAWC,QAAS,CAC3B,IAAIif,EAAa,KACjB,GAAI9iB,EAAEiS,EAAKpJ,mBAAmBlH,OAAQ,CACpCmhB,EAAa9iB,EAAEiS,EAAKpJ,mBAAmBkP,MACrC,SAAAV,GACE,OAAAzQ,iBACEyQ,EAASM,KACT5T,EACAkO,EAAKzN,aACLyN,EAAKyO,eACLzO,EAAKpN,eACLoN,EAAKvJ,uBACF,CAPL,G,CAUN,GAAI1I,EAAEiS,EAAKnJ,mBAAmBnH,OAAQ,CACpCmhB,EAAa9iB,EAAEiS,EAAKnJ,mBAAmBiP,MACrC,SAAAV,GACE,OAAAzQ,iBACEyQ,EAASM,KACT5T,EACAkO,EAAKzN,aACLyN,EAAKyO,eACLzO,EAAKpN,eACLoN,EAAKvJ,uBACF,CAPL,G,CAUN,OAAOoa,EAAa,EAAI,C,KACnB,CACL,OAAO9iB,EAAE8b,QAAU,EAAI/X,EAAU/D,EAAE8b,QAAU7J,EAAK2J,UAAY7X,EAAU,C,MAKhFwE,EAAAwD,UAAAwJ,eAAA,WACElU,KAAKie,cAAcQ,YAEnBze,KAAKie,cACFkB,WAAW,eAEX/N,SAASpR,KAAKoR,SAAW,GACzBgO,KAAK1D,UACLb,KAAK,UAAW,GAChB0C,Q,EAGLrW,EAAAwD,UAAAgX,eAAA,WACE,IAAMrK,EAAS5R,uBAAuB,CACpCwP,KAAMjV,KAAK0a,IAAIxF,OACf3D,GAAIvR,KAAK6Q,QACT2P,MAAO,YAETxgB,KAAKqb,eAAeR,KAAK,SAAUxD,E,EAGrCnQ,EAAAwD,UAAAkK,eAAA,eAAAhE,EAAA5Q,KAEE,IAAM2hB,EAAW3hB,KAAK+C,UAAUoe,YAAc,QAAUnhB,KAAK+C,UAAU6e,kBACvE,IAAMC,EAAkBF,EAAW,EAAI,EAEvC3hB,KAAKuhB,qBAAuBvhB,KAAKua,UAAYva,KAAKmC,WAAWf,MAAQ,EACrEpB,KAAKwhB,oBAAsBxhB,KAAK6V,iBAAmB7V,KAAKuhB,sBAAwB,EAChF,IAAMO,EAAkB9hB,KAAKqb,eAC1Bna,MAAK,SAAAvC,GACJ,OAAAiS,EAAK7N,UAAUgf,OACXnc,gBAAgBjH,EAAGiS,EAAKmG,mBAAoBnG,EAAK7N,UAAUgf,QAC3DpjB,EAAEiS,EAAKmG,mBAFX,IAID8D,KAAK,UAAU,SAAAlc,GACd,OAAAiS,EAAKvP,SAAW,WACZ1C,EAAEyf,IAAMzf,EAAE2f,GAAK3f,EAAEyf,IAAM,EACvBxN,EAAK7N,UAAUoe,YAAc,UAC7BxiB,EAAEyf,GAAKxN,EAAKiF,iBAAmB,EAC7BlX,EAAEyf,GAAKyD,EACPljB,EAAE2f,GAAKuD,EACTljB,EAAEyf,GAAKxN,EAAKiF,iBAAmB,EAC/BlX,EAAE2f,GAAKuD,EACPljB,EAAEyf,GAAKyD,CARX,IAUDhH,KAAK,UAAU,SAAAlc,GACd,OAAAiS,EAAKvP,SAAW,WACZuP,EAAK7N,UAAUoe,YAAc,UAC3BxiB,EAAE0f,GAAKzN,EAAKiF,iBAAmB,EAC7BlX,EAAE0f,GAAKwD,EACPljB,EAAE4f,GAAKsD,EACTljB,EAAE0f,GAAKzN,EAAKiF,iBAAmB,EAC/BlX,EAAE4f,GAAKsD,EACPljB,EAAE0f,GAAKwD,EACTljB,EAAE0f,IAAM1f,EAAE4f,GAAK5f,EAAE0f,IAAM,CAR3B,IAUDxD,KAAK,mBAAoB7a,KAAK4B,QAAQD,KAAO3B,KAAKuB,OAAOI,MACzDkZ,KAAK,mBAAoB7a,KAAK4B,QAAQJ,IAAMxB,KAAKuB,OAAOC,KACxDqZ,KAAK,cAAe8G,GACpB9G,KAAK,cAAe8G,GACpBxC,WAAW,iBACX/N,UAAS,SAAC/Q,EAAG8V,EAAG+G,GACf,OAAOvC,OAAOuC,EAAE/G,IAAIwI,QAAQ,YAAc/N,EAAKQ,SAAW,EAAIR,EAAKQ,Q,IAEpEuP,OAAM,SAACtgB,EAAG8V,EAAG+G,GACZ,OAAOvC,OAAOuC,EAAE/G,IAAIwI,QAAQ,YAAc/N,EAAKQ,SAAW,IAAM,C,IAEjEgO,KAAK1D,UAER,GAAI1b,KAAK+C,UAAUP,UAAYxC,KAAK+C,UAAUoe,YAAc,QAAUnhB,KAAK+C,UAAU6e,mBAAoB,CAEvG,IAAMI,EAAqBhiB,KAAK+C,WAAa/C,KAAK+C,UAAUkf,mBAC5D,IAAMC,EAAYliB,KAAKsc,YACpB3B,OAAO,kBACPE,KAAK,UAAU,SAAAlc,GAAK,OAAAA,EAAEyf,EAAF,IACpBvD,KAAK,UAAU,SAAAlc,GAAK,OAAAA,EAAE0f,EAAF,IACpBxD,KAAK,mBAAoB7a,KAAK4B,QAAQD,KAAO3B,KAAKuB,OAAOI,MACzDkZ,KAAK,mBAAoB7a,KAAK4B,QAAQJ,IAAMxB,KAAKuB,OAAOC,KACxDqZ,KAAK,eAAe,SAAAlc,GAAK,OAAAA,EAAE4f,GAAK5f,EAAE0f,EAAT,IACzBxD,KAAK,cAAc,SAAAlc,GAAK,OAAAA,EAAE2f,GAAK3f,EAAEyf,EAAT,IACxBnB,MAAK,SAACte,EAAGwX,EAAG+G,GAIX,IAAKyE,EAAU,CACb,IAAM/iB,EAASse,EAAE/G,GACjB,IAAM2J,EAASlhB,EAAOmhB,WACtB,IAAMF,EAAY,gCAClB,IAAMG,EAAaphB,EAAOqhB,YAC1BtF,OAAOqF,GACJrB,QAAQ,gBAAiB,OACzBA,QAAQkB,EAAW,MACnBlB,QAAQ,WAAY,OACpBrI,KAAK,CAAC3X,IACNkc,KAAK,YAAa,OAClBA,KAAK,aAAc,MACnBA,KAAK,cAAe,MACpBA,KAAK,OAAQ,MACbqF,MAAM,iBAAkB,QACxBA,MAAM,aAAc,UACpBrF,KAAK,WAAY,MACjBA,KACC,SACAjK,EAAKvP,SAAW,WACZ1C,EAAEyf,GACF4D,IAAuB,MACvBrjB,EAAEyf,GACF4D,IAAuB,UACvBrjB,EAAEyf,GAAKxN,EAAKiF,iBAAmB,EAC7BlX,EAAEyf,GAAKyD,EACPljB,EAAE2f,GAAKuD,EACTljB,EAAEyf,GAAKxN,EAAKiF,iBAAmB,EAC/BlX,EAAE2f,GAAKuD,EACPljB,EAAEyf,GAAKyD,GAEZhH,KACC,SACAjK,EAAKvP,SAAW,WACZ2gB,IAAuB,MACrBrjB,EAAE0f,GACF2D,IAAuB,UACvBrjB,EAAE0f,GAAKzN,EAAKiF,iBAAmB,EAC7BlX,EAAE0f,GAAKwD,EACPljB,EAAE4f,GAAKsD,EACTljB,EAAE0f,GAAKzN,EAAKiF,iBAAmB,EAC/BlX,EAAE4f,GAAKsD,EACPljB,EAAE0f,GAAKwD,EACTljB,EAAE0f,IAEPxD,KACC,aACAjK,EAAKvP,SAAW,WAAa1C,EAAE2f,GAAK3f,EAAEyf,GAAK4D,IAAuB,MAAQrjB,EAAE2f,GAAK3f,EAAEyf,GAAK,GAEzFvD,KACC,cACAjK,EAAKvP,SAAW,WAAc2gB,IAAuB,MAAQrjB,EAAE4f,GAAK5f,EAAE0f,GAAK,EAAK1f,EAAE4f,GAAK5f,EAAE0f,IAI7FyB,EAAOS,YAAYP,E,KAGzB,IAAMmC,EAAcniB,KAAKsc,YAAY3B,OAAO,kCAC5C3a,KAAKoiB,QAAUjd,sBAAsB,CACnCkd,eAAgBP,EAChBQ,WAAYX,EAAW,CAACO,GAAa,CAACA,EAAWC,GACjDI,eAAgBZ,EAAW,CAAC,UAAY3hB,KAAKqB,SAAW,WAAa,CAAC,MAAO,UAAY,CAAC,OAAQ,SAClGmhB,QAASb,EAAW,CAAC,GAAK,CAAC,EAAG,GAC9Bc,UAAW,CAACziB,KAAKgX,iBACjBqD,KAAM,CAACnV,QAAQlF,KAAKoB,MAAO,GAAI8D,QAAQlF,KAAKmB,OAAQ,IACpDwgB,SAAU3hB,KAAK+C,UAAUP,SAAWmf,IAEtCQ,EAAY5E,SAGZ,GAAIoE,EAAU,CACZ3hB,KAAK4gB,gBAAgB,CACnB3L,KAAM6M,EACNzgB,OAAQrB,KAAKqB,OACb0B,UAAW/C,KAAK+C,UAChB8S,iBAAkB7V,KAAK6V,kB,MAGtB,CACL7V,KAAK4gB,gBAAgB,CACnB3L,KAAM6M,EACNzgB,OAAQrB,KAAKqB,OACb0B,UAAW/C,KAAK+C,UAChB8S,iBAAkB7V,KAAK6V,kB,CAI3BiM,EAAgBliB,KAAKwF,kBAAkB,WACrCwL,EAAKyK,eAAesD,QAAQ,WAAY,OACxC/N,EAAK8Q,gB,KAITxa,EAAAwD,UAAA8K,oBAAA,eAAA5E,EAAA5Q,KACEA,KAAKqb,eAAeoD,UAAU,iBAC9B,IAAMkD,EAAW3hB,KAAK+C,UAAUoe,YAAc,QAAUnhB,KAAK+C,UAAU6e,kBACvE,IAAMC,EAAkBF,EAAW,EAAI,EACvC,IAAMe,EACJ1iB,KAAK+C,UAAUP,UAAYxC,KAAK+C,UAAUoe,YAAc,QAAUnhB,KAAK+C,UAAU6e,mBACnF,IAAMlf,EAAU1C,KAAK+C,UAAUP,QAAU,EAAI,EAE7CxC,KAAKqb,eAAeR,KAAK,WAAW,SAAClc,EAAGwX,EAAG+G,GACzC,IAAMyF,GAAehI,OAAOuC,EAAE/G,IAAI0E,KAAK,WACvC,IAAM+H,EAAkBjI,OAAOuC,EAAE/G,IAAI+J,MAAM,cAC3C,IAAI2C,EACJ,GAAIjS,EAAKrO,WAAWC,QAAS,CAC3B,IAAIif,EAAa,KACjB,GAAI9iB,EAAEiS,EAAKpJ,mBAAmBlH,OAAQ,CACpCmhB,EAAa9iB,EAAEiS,EAAKpJ,mBAAmBkP,MACrC,SAAAV,GACE,OAAAzQ,iBACEyQ,EAASM,KACT5T,EACAkO,EAAKzN,aACLyN,EAAKyO,eACLzO,EAAKpN,eACLoN,EAAKvJ,uBACF,CAPL,G,CAUN,GAAI1I,EAAEiS,EAAKnJ,mBAAmBnH,OAAQ,CACpCmhB,EAAa9iB,EAAEiS,EAAKnJ,mBAAmBiP,MACrC,SAAAV,GACE,OAAAzQ,iBACEyQ,EAASM,KACT5T,EACAkO,EAAKzN,aACLyN,EAAKyO,eACLzO,EAAKpN,eACLoN,EAAKvJ,uBACF,CAPL,G,CAUNwb,EAAgBpB,EAAa/e,EAAU,C,KAClC,CACLmgB,EAAgBlkB,EAAE8b,QAAU,EAAI/X,EAAU/D,EAAE8b,QAAU7J,EAAK2J,UAAY7X,EAAU,C,CAEnF,IACImgB,IAAkB,GAAKD,IAAoB,UAAaD,IAAgBE,IAC1EH,EACA,CACA,GAAIG,IAAkB,EAAG,CACvBlI,OAAOuC,EAAE/G,IACNwI,QAAQ,kBAAmB,MAC3BuB,MAAM,aAAc,K,KAClB,CACLvF,OAAOuC,EAAE/G,IAAIwI,QAAQ,oBAAqB,K,EAG9C,OAAOkE,C,IAGT,GAAIH,EAAmB,CACrB,IAAMI,EAAc9iB,KAAKqb,eAAehE,QAAO,SAAChX,EAAG8V,EAAG+G,GAAM,OAAAvC,OAAOuC,EAAE/G,IAAIwI,QAAQ,kBAArB,IAC5D,IAAMoE,EAAgB/iB,KAAKqb,eACxBhE,QAAO,SAAChX,EAAG8V,EAAG+G,GAAM,OAAAvC,OAAOuC,EAAE/G,IAAIwI,QAAQ,oBAArB,IACpB9D,KAAK,cAAe8G,GACpB9G,KAAK,cAAe8G,GAGvB,GAAIoB,EAAc1I,OAAS,EAAG,CAC5Bra,KAAKoiB,QAAUjd,sBAAsB,CACnCid,QAASpiB,KAAKoiB,QACdC,eAAgBU,EAChBT,WAAY,GACZC,eAAgB,CAAC,UACjBC,QAAS,CAAC,GACVC,UAAW,CAAC,OACZpI,KAAM,CAACnV,QAAQlF,KAAKoB,MAAO,GAAI8D,QAAQlF,KAAKmB,OAAQ,IACpDwgB,SAAU,MACVqB,WAAY,OAIdD,EAAcpE,QAAQ,oBAAqB,M,CAI7C,GAAImE,EAAYzI,OAAS,EAAG,CAE1B,IAAM4I,EAAqBjjB,KAAK+C,WAAa/C,KAAK+C,UAAUkf,mBAC5D,IAAMC,EAAYliB,KAAKsc,YACpB3B,OAAO,kBACPE,KAAK,UAAU,SAAAlc,GAAK,OAAAA,EAAEyf,EAAF,IACpBvD,KAAK,UAAU,SAAAlc,GAAK,OAAAA,EAAE0f,EAAF,IACpBxD,KAAK,mBAAoB7a,KAAK4B,QAAQD,KAAO3B,KAAKuB,OAAOI,MACzDkZ,KAAK,mBAAoB7a,KAAK4B,QAAQJ,IAAMxB,KAAKuB,OAAOC,KACxDqZ,KAAK,eAAe,SAAAlc,GAAK,OAAAA,EAAE4f,GAAK5f,EAAE0f,EAAT,IACzBxD,KAAK,cAAc,SAAAlc,GAAK,OAAAA,EAAE2f,GAAK3f,EAAEyf,EAAT,IACxBnB,MAAK,SAACte,EAAGwX,EAAG+G,GAIX,IAAKyE,EAAU,CACb,IAAM/iB,EAASse,EAAE/G,GACjB,IAAM2J,EAASlhB,EAAOmhB,WACtB,IAAMF,EAAY,gCAClB,IAAMG,EAAaphB,EAAOqhB,YAC1BtF,OAAOqF,GACJrB,QAAQ,gBAAiB,OACzBA,QAAQkB,EAAW,MACnBlB,QAAQ,WAAY,OACpBrI,KAAK,CAAC3X,IACNkc,KAAK,YAAa,OAClBA,KAAK,aAAc,MACnBA,KAAK,cAAe,MACpBA,KAAK,OAAQ,MACbqF,MAAM,iBAAkB,QACxBA,MAAM,aAAc,UACpBrF,KAAK,WAAY,MACjBA,KACC,SACAjK,EAAKvP,SAAW,WACZ1C,EAAEyf,GACF6E,IAAuB,MACvBtkB,EAAEyf,GACF6E,IAAuB,UACvBtkB,EAAEyf,GAAKxN,EAAKiF,iBAAmB,EAC7BlX,EAAEyf,GAAKyD,EACPljB,EAAE2f,GAAKuD,EACTljB,EAAEyf,GAAKxN,EAAKiF,iBAAmB,EAC/BlX,EAAE2f,GAAKuD,EACPljB,EAAEyf,GAAKyD,GAEZhH,KACC,SACAjK,EAAKvP,SAAW,WACZ4hB,IAAuB,MACrBtkB,EAAE0f,GACF4E,IAAuB,UACvBtkB,EAAE0f,GAAKzN,EAAKiF,iBAAmB,EAC7BlX,EAAE0f,GAAKwD,EACPljB,EAAE4f,GAAKsD,EACTljB,EAAE0f,GAAKzN,EAAKiF,iBAAmB,EAC/BlX,EAAE4f,GAAKsD,EACPljB,EAAE0f,GAAKwD,EACTljB,EAAE0f,IAEPxD,KACC,aACAjK,EAAKvP,SAAW,WAAa1C,EAAE2f,GAAK3f,EAAEyf,GAAK6E,IAAuB,MAAQtkB,EAAE2f,GAAK3f,EAAEyf,GAAK,GAEzFvD,KACC,cACAjK,EAAKvP,SAAW,WAAc4hB,IAAuB,MAAQtkB,EAAE4f,GAAK5f,EAAE0f,GAAK,EAAK1f,EAAE4f,GAAK5f,EAAE0f,IAG7FyB,EAAOS,YAAYP,E,KAGzB,IAAMmC,EAAcniB,KAAKsc,YAAY3B,OAAO,kCAC5C3a,KAAKoiB,QAAUjd,sBAAsB,CACnCkd,eAAgBS,EAChBV,QAASpiB,KAAKoiB,QACdE,WAAYX,EAAW,CAACO,GAAa,CAACA,EAAWC,GACjDI,eAAgBZ,EAAW,CAAC,UAAY3hB,KAAKqB,SAAW,WAAa,CAAC,MAAO,UAAY,CAAC,OAAQ,SAClGmhB,QAASb,EAAW,CAAC,GAAK,CAAC,EAAG,GAC9Bc,UAAW,CAACziB,KAAKgX,iBACjBqD,KAAM,CAACnV,QAAQlF,KAAKoB,MAAO,GAAI8D,QAAQlF,KAAKmB,OAAQ,IACpDwgB,SAAU3hB,KAAK+C,UAAUP,SAAWmf,EACpCuB,iBAAkB,OAEpBf,EAAY5E,SAGZ,GAAIoE,EAAU,CACZ3hB,KAAK4gB,gBAAgB,CACnB3L,KAAM6N,EACNzhB,OAAQrB,KAAKqB,OACb0B,UAAW/C,KAAK+C,UAChB8S,iBAAkB7V,KAAK6V,kB,CAK3BiN,EAAYnE,QAAQ,kBAAmB,M,IAK7CzX,EAAAwD,UAAA6K,uBAAA,eAAA3E,EAAA5Q,KAGEA,KAAKsf,4BAA4Btf,KAAK0a,IAAIxF,QAC1ClV,KAAKob,YAAYqD,UAAU,WAK3B,IAAMC,EAAc1e,KAAKuC,WAAWC,QAAUxC,KAAKuC,WAAWG,QAAU,EACxE1C,KAAKob,YACFP,KAAK,kBAAkB,SAAAlc,GACtB,OAAO4G,iBACL5G,EAAE2X,KACFoI,EACA9N,EAAKzN,aACLyN,EAAKyO,eACLzO,EAAKpN,eACLoN,EAAKvJ,qB,IAIRwT,KAAK,UAAU,SAAAlc,GACd,OAAAiS,EAAKpN,eAAelD,OAAS,GAC7BgF,aAAa3G,EAAE2X,KAAM1F,EAAKpN,eAAgBoN,EAAKvJ,uBAC/CuJ,EAAK1N,WAAWsd,MACZ1Z,WAAW8J,EAAK1N,WAAWsd,QAAU5P,EAAK1N,WAAWsd,MACrD5P,EAAKyO,gBACLpZ,aAAatH,EAAE2X,KAAM1F,EAAKyO,eAAgBzO,EAAKvJ,uBAC/CuJ,EAAK3N,WAAWud,MAChB1Z,WAAW8J,EAAK3N,WAAWud,QAAU5P,EAAK3N,WAAWud,MACrD5P,EAAKqG,oBAAsB,QAC3BrG,EAAK6P,SAAS7P,EAAKwG,UAAUG,QAAQ5Y,EAAEiS,EAAK3O,iBAC5C2O,EAAKqG,oBAAsB,OAC3BrG,EAAK6P,SAAS,IAAM,UACpB7P,EAAKqG,oBAAsB,OAC3BrG,EAAK6P,SAAS9hB,EAAE+hB,OAChB9P,EAAKqG,oBAAsB,SAC3BrG,EAAK6P,SAAS9hB,EAAEC,OAAO8hB,OACvB9P,EAAK6P,SAAS9hB,EAAEG,OAAO4hB,MAhB3B,IAmBJ1gB,KAAKob,YAAY6B,MAAK,SAACte,EAAGwX,EAAG+G,GAC3B,IAAMqC,EACJ3O,EAAKpN,gBACLoN,EAAKpN,eAAelD,OAAS,GAC7BgF,aAAa3G,EAAE2X,KAAM1F,EAAKpN,eAAgBoN,EAAKvJ,sBACjD,GAAIkY,EAAS,CAGX3O,EAAK4O,yBAAyBtC,EAAE/G,GAAIxX,E,MAK1CuI,EAAAwD,UAAAmK,kBAAA,eAAAjE,EAAA5Q,KACEA,KAAKob,YACFwD,GAAG,SAAU5e,KAAKuD,eAAiB,SAAC5E,EAAGwX,EAAG+G,GAAM,OAAAtM,EAAKiO,eAAelgB,EAAGue,EAAE/G,GAAzB,EAA+B,MAC/EyI,GAAG,aAAc5e,KAAKuD,eAAiB,SAAC5E,EAAGwX,EAAG+G,GAAM,OAAAtM,EAAKkO,eAAengB,EAAGue,EAAE/G,GAAzB,EAA+B,MACnFyI,GAAG,YAAa5e,KAAKuD,eAAiB,WAAM,OAAAqN,EAAKmO,mBAAL,EAA2B,K,EAI5E7X,EAAAwD,UAAAoK,gBAAA,eAAAlE,EAAA5Q,KACE,IAAMmjB,EAAenjB,KAAKkZ,YAC1B,IAAMkK,EAAqB,GAC3BpjB,KAAKgD,YAAYiT,SAAQ,SAACoN,GACxB,IAAM1kB,EAACsZ,OAAAC,OAAA,GAAQmL,GACf,IAAIC,EAAeD,EAAM/M,KACzB,GAAI6M,GAAgBG,EAAc,CAChC,GAAI3kB,EAAE4kB,eAAiB,QAAU5kB,EAAE2X,KAAKkN,eAAe5S,EAAKoG,iBAAkB,CAC5E,IAAM0J,EAAQyC,EAAahK,MAAMsK,WAAU,SAAAxkB,GAAK,OAAAA,EAAE2R,EAAKoG,mBAAqBrY,EAAE2X,KAAK1F,EAAKoG,gBAAxC,IAChDsM,EAAeH,EAAahK,MAAMuH,E,MAC7B,GACL/hB,EAAE4kB,eAAiB,UAClB5kB,EAAE4kB,eAAiB,UAClB5kB,EAAE2X,KAAKkN,eAAe5S,EAAK9O,iBAC3BnD,EAAE2X,KAAKkN,eAAe5S,EAAK7O,gBAC7B,CACA,IAAM2e,EAAQyC,EAAa3J,MAAMiK,WAC/B,SAAAxkB,GACE,OAAAA,EAAEqX,KAAK1F,EAAK9O,kBAAoBnD,EAAE2X,KAAK1F,EAAK9O,iBAC5C7C,EAAEqX,KAAK1F,EAAK7O,kBAAoBpD,EAAE2X,KAAK1F,EAAK7O,eAD5C,IAGJuhB,EAAeH,EAAa3J,MAAMkH,E,EAGtC,GAAI/hB,EAAE4kB,cAAgBD,EAAc,CAClC,GAAI3kB,EAAE4kB,eAAiB,UAAYD,EAAaxkB,OAAQ,CACtDH,EAAEM,EAAIqkB,EAAaxkB,OAAOsf,GAC1Bzf,EAAEQ,EAAImkB,EAAa/E,E,MACd,GAAI5f,EAAE4kB,eAAiB,UAAYD,EAAa1kB,OAAQ,CAC7DD,EAAEM,EAAIqkB,EAAa1kB,OAAO0f,GAC1B3f,EAAEQ,EAAImkB,EAAajF,E,MACd,GAAI1f,EAAE4kB,eAAiB,OAAQ,CACpC5kB,EAAEM,EAAIqkB,EAAahF,GACnB3f,EAAEQ,GAAKmkB,EAAa/E,GAAK+E,EAAajF,IAAM,C,SAIzC1f,EAAE2X,KACT8M,EAAmBvM,KAAKlY,E,IAE1B0G,SAAS,CACPzG,OAAQoB,KAAK8a,MAAM5F,OACnBoB,KAAM8M,EACNM,aAAc,KAKdtiB,MAAOpB,KAAKoB,MACZD,OAAQnB,KAAKmB,OACbS,QAAS5B,KAAK4B,QACdL,OAAQvB,KAAKuB,OACb6gB,QAASpiB,KAAKoiB,S,EAIlBlb,EAAAwD,UAAA6I,oBAAA,WACEtM,YAAY,CACVgO,KAAMjV,KAAKkb,UACXja,SAAUjB,KAAKiB,U,EAInBiG,EAAAwD,UAAA0H,UAAA,WACEpS,KAAKygB,SAAWzgB,KAAK2jB,OAASne,iBAAiBxF,KAAK2jB,QAAU7d,UAAU9F,KAAK6C,aAAc7C,KAAK8V,SAASxV,O,EAG3G4G,EAAAwD,UAAA+G,aAAA,WACEzR,KAAKsH,SAAW3B,aAAa3F,KAAKe,qBAClCf,KAAKuH,YAAc5B,aAAa3F,KAAKe,oBAAqB,E,EAG5DmG,EAAAwD,UAAAkI,2BAAA,WAEE9O,0BAA0B,CACxBiM,SAAU/P,KAAKuY,oBACfqL,QAAS5jB,KAAKsR,kBACd1D,MAAO5N,KAAK2C,cAAciL,OAAS5N,KAAKgB,UACxC6iB,SAAU,mBACV/S,SAAU9Q,KAAK6Q,QACf9P,oBAAqBf,KAAKe,oBAC1B+iB,OAAQ9jB,KAAKiI,oBACb8b,cACE/jB,KAAKuD,gBACLvD,KAAK2C,cAAcgN,uBAAyB,OAC5C3P,KAAK2C,cAAc4M,mBACnBvP,KAAK2C,cAAc4M,kBAAkBC,SACvCwU,cAAehkB,KAAK2C,cAAcshB,sBAEpCjkB,KAAKiI,oBAAsB,K,EAG7Bf,EAAAwD,UAAA2I,0BAAA,WAEE,IAAMgG,EAAOjT,cAAcpG,KAAMqG,eAAgB,oBACjDtC,2BAA2B,CACzBgM,SAAU/P,KAAKuY,oBACfrD,KAAMlV,KAAK0a,IAAIxF,OACf2O,SAAU,mBACVjW,MAAO5N,KAAK2C,cAAciL,OAAS5N,KAAKgB,UACxCkjB,YAAalkB,KAAKiB,SAClB6P,SAAU9Q,KAAK6Q,QACfsT,SAAU,OACVC,gBAAiBpkB,KAAK2C,cAAcsM,oBACpCoV,SAAUhL,EACViL,aAActkB,KAAKskB,aACnBriB,cAAejC,KAAKgX,gBACpBI,UAAW,CAAC,SACZmN,UAAW,OACXR,cACE/jB,KAAKuD,gBACLvD,KAAK2C,cAAcgN,uBAAyB,OAC5C3P,KAAK2C,cAAc4M,mBACnBvP,KAAK2C,cAAc4M,kBAAkBC,U,EAI3CtI,EAAAwD,UAAA4J,mCAAA,WAEEtU,KAAKob,YAAY6B,MAAK,SAACuH,EAAIrO,EAAG+G,GAC5BlZ,wBAAwBkZ,EAAE/G,G,KAI9BjP,EAAAwD,UAAA6J,sBAAA,eAAA3D,EAAA5Q,KAEE,IAAMqZ,EAAOjT,cAAcpG,KAAMqG,eAAgB,oBACjDrG,KAAKob,YAAY6B,MAAK,SAACuH,EAAIrO,EAAG+G,GAC5BjZ,uBAAuB,CACrBiR,KAAMgI,EAAE/G,GACRgO,SAAU,OACVC,gBAAiBxT,EAAKjO,cAAcsM,oBACpCoV,SAAUhL,EACViL,aAAc1T,EAAK0T,aACnBC,UAAW,OACXzT,SAAUF,EAAKC,QACfkT,cACEnT,EAAKrN,gBACLqN,EAAKjO,cAAcgN,uBAAyB,OAC5CiB,EAAKjO,cAAc4M,mBACnBqB,EAAKjO,cAAc4M,kBAAkBC,WAEzCtL,mBAAmB,CACjBgR,KAAMgI,EAAE/G,GACRrF,SAAUF,EAAKC,S,KAKrB3J,EAAAwD,UAAA8J,wBAAA,eAAA5D,EAAA5Q,KAEEA,KAAKsc,YAAYW,MAAK,SAAC5c,EAAG8V,EAAG+G,GAC3BhZ,mBAAmB,CACjBgR,KAAMgI,EAAE/G,GACRrF,SAAUF,EAAKC,S,KAKrB3J,EAAAwD,UAAA+J,2BAAA,WAGEtQ,qBAAqB,CACnByf,QAAS5jB,KAAKsR,kBACdoO,YAAa1f,KAAKgb,MAAM9F,OACxB2O,SAAU,mBACVM,SAAU,OACVI,UAAW,Q,EAKfrd,EAAAwD,UAAAgK,iBAAA,eAAA9D,EAAA5Q,KACEA,KAAKob,YACFuD,QAAQ,aAAa,SAAAhgB,GACpB,IAAM8lB,EAAWlf,iBAAiB5G,EAAE2X,KAAM,KAAM,MAAO,GAAI1F,EAAKpN,eAAgBoN,EAAKvJ,sBACrF,OAAOuJ,EAAKpN,gBAAkBoN,EAAKpN,eAAelD,OAASmkB,EAAW,K,IAEvExH,MAAK,SAACte,EAAGwX,EAAG+G,GACX,IAAIuH,EAAWlf,iBAAiB5G,EAAE2X,KAAM,KAAM,MAAO,GAAI1F,EAAKpN,eAAgBoN,EAAKvJ,sBACnFod,EAAW7T,EAAKpN,gBAAkBoN,EAAKpN,eAAelD,OAASmkB,EAAW,MAC1E,IAAMC,EAAa9T,EAAKjO,cAAcgN,qBACtC3K,iCAAiCkY,EAAE/G,GAAIsO,EAAUC,E,KAIvDxd,EAAAwD,UAAAmI,2BAAA,WACExO,eAAerE,KAAKuY,oBAAqBvY,KAAKsR,kBAAmBtR,KAAK2C,cAAciL,OAAS5N,KAAKgB,U,EAGpGkG,EAAAwD,UAAAoI,8BAAA,WACExO,kBAAkBtE,KAAKuY,oBAAqBvY,KAAKsR,kBAAmBtR,KAAKiB,S,EAG3EiG,EAAAwD,UAAAqI,qCAAA,WACExO,yBAAyBvE,KAAKuY,oBAAqBvY,KAAKsR,kBAAmBtR,KAAK2C,cAAc0L,gB,EAGhGnH,EAAAwD,UAAAsI,sCAAA,WACExO,0BAA0BxE,KAAKuY,oBAAqBvY,KAAKsR,kBAAmBtR,KAAK2C,cAAcoL,iB,EAGjG7G,EAAAwD,UAAAuI,6BAAA,WACExO,iBAAiBzE,KAAKuY,oBAAqBvY,KAAKsR,kBAAmBtR,KAAK2C,cAAcuL,Q,EAGxFhH,EAAAwD,UAAAwI,6BAAA,WACExO,iBAAiB1E,KAAKuY,oBAAqBvY,KAAKsR,kBAAmBtR,KAAK2C,cAAc6L,mB,EAGxFtH,EAAAwD,UAAAyI,sCAAA,WACExO,oBAAoB3E,KAAKuY,oBAAqBvY,KAAKsR,kBAAmBtR,KAAK2C,cAAcgM,iB,EAG3FzH,EAAAwD,UAAA0I,oCAAA,WACExO,mBAAmB5E,KAAKuY,oBAAqBvY,KAAKsR,kBAAmBtR,KAAK2C,cAAcmM,e,EAG1F5H,EAAAwD,UAAAqK,2BAAA,WACElQ,oBAAoB7E,KAAKuY,oBAAqBvY,KAAKsR,kBAAmBtR,KAAKgD,YAAaqV,U,EAG1FnR,EAAAwD,UAAAsK,gBAAA,WACE,GAAIhV,KAAK2C,sBAAwB3C,KAAK2C,cAAcgiB,eAAiB,WAAY,CAC/E,IAAMhmB,EAAI,CACRgJ,QAAS3H,KAAK2H,QACdid,MAAO5kB,KAAK8d,UACZ+G,QAAS7kB,KAAK6d,UAEhB7d,KAAK2C,cAAcgiB,aAAahmB,E,CAElCqB,KAAK2H,QAAU,MACf3H,KAAK8d,UAAY,EACjB9d,KAAK6d,SAAW,C,EAGlB3W,EAAAwD,UAAAmU,eAAA,SAAelgB,EAAGue,GAChBld,KAAKsY,WAAWrH,KAAK,CAAEqF,KAAM3X,EAAE2X,KAAMxX,OAAQoe,G,EAG/ChW,EAAAwD,UAAAoU,eAAA,SAAengB,EAAGue,GAChB/W,qBAAqBnG,KAAK6Q,QAAS,MACnC7Q,KAAK8kB,WAAW7T,KAAK,CAAEqF,KAAM3X,EAAE2X,KAAMxX,OAAQoe,IAC7C,GAAIld,KAAKsD,YAAa,CACpBtD,KAAK+kB,cAAc,CAAEzO,KAAM3X,EAAE2X,KAAM0O,IAAKC,MAAOC,SAAU,M,GAI7Dhe,EAAAwD,UAAAqU,kBAAA,WACE5Y,qBAAqBnG,KAAK6Q,QAAS,OACnC7Q,KAAKmlB,cAAclU,OACnB,GAAIjR,KAAKsD,YAAa,CACpBtD,KAAK+kB,cAAc,CAAEG,SAAU,O,GAKnChe,EAAAwD,UAAAiI,uBAAA,WACEzM,iBAAiBlG,KAAKmb,S,EAIxBjU,EAAAwD,UAAAqa,cAAA,SAAclE,G,IAAEvK,EAAIuK,EAAAvK,KAAE0O,EAAGnE,EAAAmE,IAAEE,EAAQrE,EAAAqE,SACjCxf,YAAY,CACVuP,KAAMjV,KAAKmb,SACX7E,KAAIA,EACJ2O,MAAOD,EACPE,SAAQA,EACR7hB,aAAcrD,KAAKqD,aACnBihB,aAActkB,KAAKskB,aACnBriB,cAAejC,KAAKiC,cACpBmjB,UAAWplB,KAAK8B,eAChBujB,UAAWrlB,KAAK+B,eAChBC,cAAehC,KAAKgC,cACpBsjB,gBAAiBtlB,KAAKgX,gBACtBuO,UAAW,oB,EAIfre,EAAAwD,UAAA8a,OAAA,WACExlB,KAAKylB,eAAexU,KAAK,CAAEJ,QAAS7Q,KAAK6Q,UAGzC7Q,KAAK0lB,OACL,GAAI1lB,KAAKyK,4BAA6B,CACpCzK,KAAKwR,wBACLxR,KAAKyK,4BAA8B,K,CAErC,GAAIzK,KAAKgI,mBAAoB,CAC3BhI,KAAKyR,eACLzR,KAAKgI,mBAAqB,K,CAE5B,GAAIhI,KAAK6H,iBAAkB,CACzB7H,KAAK0R,cACL1R,KAAK6H,iBAAmB,K,CAE1B,GAAI7H,KAAK4H,oBAAqB,CAC5B5H,KAAK2R,gBACL3R,KAAK4H,oBAAsB,K,CAE7B,GAAI5H,KAAKgK,wBAAyB,CAChChK,KAAK6R,oBACL7R,KAAKgK,wBAA0B,K,CAEjC,GAAIhK,KAAKiK,2BAA4B,CACnCjK,KAAK8R,uBACL9R,KAAKiK,2BAA6B,K,CAEpC,GAAIjK,KAAKkK,4BAA6B,CACpClK,KAAK+R,wBACL/R,KAAKkK,4BAA8B,K,CAErC,GAAIlK,KAAKmK,8BAA+B,CACtCnK,KAAKgS,0BACLhS,KAAKmK,8BAAgC,K,CAEvC,GAAInK,KAAKoK,yBAA0B,CACjCpK,KAAKiS,qBACLjS,KAAKoK,yBAA2B,I,CAElC,GAAIpK,KAAKoH,2BAA4B,CACnCpH,KAAKmS,kCACLnS,KAAKoH,2BAA6B,K,CAEpC,GAAIpH,KAAKmH,4BAA6B,CACpCnH,KAAKkS,mCACLlS,KAAKmH,4BAA8B,K,CAErC,GAAInH,KAAK8H,gBAAiB,CACxB9H,KAAKoS,YACLpS,KAAK8H,gBAAkB,K,CAEzB,GAAI9H,KAAK+J,yBAA0B,CACjC/J,KAAK4R,qBACL5R,KAAK+J,yBAA2B,K,CAElC,GAAI/J,KAAK4J,wBAAyB,CAChC5J,KAAKqS,oBACLrS,KAAK4J,wBAA0B,K,CAEjC,GAAI5J,KAAK6J,0BAA2B,CAClC7J,KAAKsS,sBACLtS,KAAK6J,0BAA4B,K,CAEnC,GAAI7J,KAAKkI,sBAAuB,CAC9BlI,KAAKuS,eACLvS,KAAKkI,sBAAwB,K,CAG/B,OAEEyd,EAAA,OAAAC,IAAA,4CACED,EAAA,OAAAC,IAAA,2CAAKC,MAAM,YACTF,EAAA,OAAAC,IAAA,2CAAKC,MAAM,mBACTF,EAAC3lB,KAAKsH,SAAQ,CAAAse,IAAA,2CAACC,MAAM,sCAAsC7lB,KAAKgB,WAChE2kB,EAAC3lB,KAAKuH,YAAW,CAAAqe,IAAA,2CAACC,MAAM,gEACxBF,EAAA,yBAAAC,IAAA,2CACE9U,SAAU9Q,KAAK6Q,QACfsT,SAAU,OACVI,UAAW,kBACXxU,SAAU/P,KAAKuY,oBACfsL,SAAU,mBACVziB,MAAOpB,KAAKoB,OAASpB,KAAKuB,OAASvB,KAAKuB,OAAOG,OAAS,EAAI,GAC5DokB,cAAe9lB,KAAK2C,cAAcgN,qBAClCoW,oBAAqB/lB,KAAKiX,oBAAsB,UAAYjX,KAAKiX,oBAAsB,SACvFzH,SACExP,KAAKuD,gBACLvD,KAAK2C,cAAcgN,uBAAyB,OAC5C3P,KAAK2C,cAAc4M,mBACnBvP,KAAK2C,cAAc4M,kBAAkBC,WAGzCmW,EAAA,OAAAC,IAAA,2CAAKC,MAAM,mCACXF,EAAA,OAAAC,IAAA,2CAAKC,MAAM,+BAA+B3F,MAAO,CAAE8F,QAAShmB,KAAKsD,YAAc,QAAU,UACzFqiB,EAAA,cAAAC,IAAA,2CACE9U,SAAU9Q,KAAK6Q,QACfoV,UAAS,KACTlW,SAAU/P,KAAKuY,oBACfa,aAAcpZ,KAAKoZ,aACnBkL,aAActkB,KAAKskB,aACnBhO,KAAMtW,KAAKgZ,UACXkN,cAAelmB,KAAKuZ,mBACpBE,sBAAuBzZ,KAAKyZ,sBAC5B7X,QAAS5B,KAAK4B,QACdL,OAAQvB,KAAKuB,OACbyiB,cAAehkB,KAAK2C,cAAcshB,oBAClC/F,SAAUle,KAAKke,a,EAQnBhX,EAAAwD,UAAAgb,KAAA,WAEN,IAAMrM,EAAOpB,OAAOoB,KAAKvY,8BACzB,IAAIqV,EAAI,EACR,IAAMgQ,EAAa,CACjBhjB,aAAc,CACZijB,UAAW,GAEb9iB,YAAa,CACX8iB,UAAW,OAEbplB,UAAW,CACTolB,UAAW,IAEbnlB,SAAU,CACRmlB,UAAW,IAEb7jB,WAAU0V,OAAAC,OACL,CACDkO,UAAW,SAIjB,IAAKjQ,EAAI,EAAGA,EAAIkD,EAAK/Y,OAAQ6V,IAAK,CAChC,IAAMiQ,GAAaD,EAAW9M,EAAKlD,IAAM,MAAQnW,KAAKqZ,EAAKlD,MAAQgQ,EAAW9M,EAAKlD,IAAIiQ,UACvFpmB,KAAKqZ,EAAKlD,IAAMnW,KAAKqZ,EAAKlD,KAAOiQ,EAAYpmB,KAAKqZ,EAAKlD,IAAMrV,6BAA6BuY,EAAKlD,G,q5CA73FzE,G","ignoreList":[]}