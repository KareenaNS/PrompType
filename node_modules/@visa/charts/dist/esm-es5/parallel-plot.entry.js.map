{"version":3,"names":["propDefaultValues","Utils","ParallelPlotDefaultValues","mainTitle","subTitle","text","height","width","margin","top","bottom","right","left","padding","localization","ordinalAccessor","valueAccessor","seriesAccessor","accessibility","animationConfig","highestHeadingLevel","xAxis","yAxis","showBaselineX","showBaselineFalse","wrapLabel","colorPalette","colorPaletteCategorical","hoverStyle","clickStyle","strokeWidth","strokeWidth1","showDots","dotRadius","dotRadius4","lineCurve","hoverOpacity","cursor","dataLabel","dataLabelBottomRight","seriesLabel","legend","hiddenLegend","tooltipLabel","secondaryLines","showTooltip","suppressEvents","annotations","clickHighlight","parallelPlotCss","ParallelPlotStyle0","getGlobalInstances","configLocalization","getActiveLanguageString","getAccessibleStrokes","ensureTextContrast","createTextStrokeFilter","findTagLevel","prepareRenderChange","initializeDescriptionRoot","initializeElementAccess","setElementFocusHandler","setElementAccessID","setAccessibilityController","hideNonessentialGroups","setAccessTitle","setAccessSubtitle","setAccessLongDescription","setAccessExecutiveSummary","setAccessPurpose","setAccessContext","setAccessStatistics","setAccessChartCounts","setAccessXAxis","setAccessYAxis","setAccessStructure","setAccessAnnotation","retainAccessFocus","checkAccessFocus","setElementInteractionAccessState","setAccessibilityDescriptionWidth","annotate","chartAccessors","checkInteraction","checkClicked","checkHovered","convertVisaColor","drawAxis","drawGrid","drawLegend","setLegendInteractionState","drawTooltip","formatDataLabel","getColors","getLicenses","getPadding","getScopedData","initTooltipStyle","overrideTitleTooltip","placeDataLabels","resolveLines","scopeDataKeys","transitionEndAll","visaColors","validateAccessibilityProps","validateLocalizationProps","roundTo","getTextWidth","resolveLabelCollision","setSubTitle","ParallelPlot","this","shouldValidateAccessibility","shouldValidateLocalization","updated","enterSize","exitSize","time","timehour","timeHour","timeday","timeDay","timeweek","timeWeek","timemonth","timeMonth","timeyear","timeYear","curveOptions","linear","curveLinear","bumpX","curveBumpX","bumpY","curveBumpY","catmullRom","curveCatmullRom","shouldUpdateXAxis","shouldUpdateYAxis","shouldUpdateXGrid","shouldUpdateYGrid","shouldValidate","shouldUpdateData","shouldSetDimensions","shouldUpdateScales","shouldUpdateTableData","shouldUpdateLabels","shouldUpdateAnnotations","shouldDrawInteractionState","shouldSetSelectionClass","shouldUpdateCursor","shouldSetColors","shouldSetSubTitle","shouldUpdateLines","shouldUpdatePoints","shouldUpdateLegend","shouldBindInteractivity","shouldUpdateLegendInteractivity","shouldResetRoot","shouldUpdateBaseline","shouldValidateInteractionKeys","shouldEnterUpdateExit","shouldSetGlobalSelections","shouldSetTestingAttributes","shouldSetLabelOpacity","shouldSetSeriesLabelOpacity","shouldSetLegendCursor","shouldAddStrokeUnder","shouldValidateSeriesLabels","shouldUpdateSeriesLabels","shouldUpdateColors","shouldUpdateStrokeWidth","shouldUpdateInterpolationData","shouldSetScaleUsed","shouldUpdateDotRadius","shouldUpdateDescriptionWrapper","shouldSetChartAccessibilityTitle","shouldSetChartAccessibilitySubtitle","shouldSetChartAccessibilityLongDescription","shouldSetChartAccessibilityExecutiveSummary","shouldSetChartAccessibilityStatisticalNotes","shouldSetChartAccessibilityStructureNotes","shouldSetParentSVGAccessibility","shouldSetGeometryAccessibilityAttributes","shouldSetGeometryAriaLabels","shouldSetGroupAccessibilityLabel","shouldSetChartAccessibilityPurpose","shouldSetChartAccessibilityContext","shouldRedrawWrapper","shouldSetTagLevels","shouldSetChartAccessibilityCount","shouldSetYAxisAccessibility","shouldSetXAxisAccessibility","shouldSetAnnotationAccessibility","shouldUpdateDashPatterns","shouldValidateDataLabelAccessor","shouldSetLocalizationConfig","topLevel","bottomLevel","strokes","b","short","med","long","dashPatterns","hiddenHash","collisionSettings","all","validPositions","offsets","middle","dynamicY","d","_this","scales","multiYScale","y","interpolateDynamicY","interpolating","handleDotStroke","i","n","hideStrokes","clicked","length","innerInteractionKeys","hovered","hoverHighlight","baseColor","select","parentNode","attr","color","calculateStrokeWidth","toLowerCase","handleLineStroke","data","colorArr","values","seriesInteraction","handleSeriesTextFill","rawColors","textColors","handleTextFill","useChildData","keys","includes","handleStrokeDasharray","key","hideTextures","prototype","dataWatcher","_newData","_oldData","idWatcher","newID","_oldID","console","error","headingWatcher","_newVal","_oldVal","titleWatcher","subtitleWatcher","dimensionWatcher","seriesAccessorWatcher","interactionKeys","ordinalAccessorWatcher","valueAccessorWatcher","xAxisWatcher","newGridVal","gridVisible","oldGridVal","newTickInterval","tickInterval","oldTickInterval","yAxisWatcher","newScaleVal","oldScaleVal","wrapLabelWatcher","showBaselineXWatcher","paletteWatcher","colorsWatcher","clickStyleWatcher","hoverStyleWatcher","cursorWatcher","strokeWidthWatcher","showDotsWatcher","dotRadiusWatcher","lineCurveWatcher","_newLineCurve","_oldLineCurve","warn","hoverOpacityWatcher","dataLabelWatcher","newVisibleVal","visible","oldVisibleVal","newPlacementVal","placement","oldPlacementVal","newAccessor","labelAccessor","oldAccessor","seriesLabelWatcher","tooltipLabelWatcher","showTooltipWatcher","accessibilityWatcher","newTitle","title","oldTitle","newExecutiveSummary","executiveSummary","oldExecutiveSummary","newPurpose","purpose","oldPurpose","newLongDescription","longDescription","oldLongDescription","newContext","contextExplanation","oldContext","newStatisticalNotes","statisticalNotes","oldStatisticalNotes","newStructureNotes","structureNotes","oldStructureNotes","newincludeDataKeyNames","includeDataKeyNames","oldincludeDataKeyNames","newElementDescriptionAccessor","elementDescriptionAccessor","oldElementDescriptionAccessor","newSmallValue","showSmallLabels","oldSmallValue","newStrokes","oldStrokes","newTextures","oldTextures","newKeyNav","keyboardNavConfig","disabled","oldKeyNav","newInterface","elementsAreInterface","oldInterface","localizationWatcher","newLanguage","language","oldLanguage","newNumeralLocale","numeralLocale","oldNumeralLocale","legendWatcher","newInteractiveVal","interactive","oldInteractiveVal","annotationsWatcher","valueOverrideWatcher","secondaryLinesWatcher","newDataLabelVal","showDataLabel","oldDataLabelVal","newSeriesLabelVal","showSeriesLabel","oldSeriesLabelVal","newKeysVal","oldKeysVal","newOpacityVal","opacity","oldOpacityVal","clickWatcher","hoverWatcher","interactionWatcher","dataKeyNamesWatcher","suppressWatcher","unitTestWatcher","componentWillLoad","chartID","uniqueID","uuid","initialLoadEvent","emit","Promise","resolve","duration","defaults","parallelChartEl","id","setLocalizationConfig","setTagLevels","setDimensions","setScaleUsed","prepareScales","prepareData","updateInterpolationData","validateInteractionKeys","validateSeriesLabels","validateDataLabelAccessor","setTableData","shouldValidateAccessibilityProps","shouldValidateLocalizationProps","setColors","componentWillUpdate","componentDidLoad","renderRootElements","renderChartRootElemets","setChartDescriptionWrapper","setChartAccessibilityTitle","setChartAccessibilitySubtitle","setChartAccessibilityLongDescription","setChartAccessibilityExecutiveSummary","setChartAccessibilityPurpose","setChartAccessibilityContext","setChartAccessibilityStatisticalNotes","setChartAccessibilityStructureNotes","setParentSVGAccessibility","reSetRoot","setSubTitleElements","drawXGrid","drawYGrid","setGlobalSelections","setTestingAttributes","drawXAxis","setXAxisAccessibility","enterYAxis","exitYAxis","drawYAxis","setYAxisAccessibility","enterChartLines","updateChartLines","exitChartLines","enterPoints","updatePoints","exitPoints","drawChartLines","drawPoints","enterSeriesLabels","updateSeriesLabels","exitSeriesLabels","enterDataLabels","updateDataLabels","exitDataLabels","setChartCountAccessibility","setGeometryAccessibilityAttributes","setGeometryAriaLabels","drawLegendElements","drawDataLabels","drawSeriesLabels","addStrokeUnder","setSelectedClass","updateCursor","bindInteractivity","setLegendCursor","bindLegendInteractivity","drawBaseline","drawAnnotations","setAnnotationAccessibility","root","node","dotG","setGroupAccessibilityID","onChangeHandler","then","initialLoadEndEvent","componentDidUpdate","updateColors","updateStrokeWidth","updateDotRadius","updateInteractionState","updateStrokePattern","setLabelOpacity","setSeriesLabelOpacity","drawEndEvent","windowInstances","languageString","i18Next","languageObject","getResourceBundle","numeralObject","numeral","localeData","skipValidation","Object","assign","disableValidation","context","onClickEvent","undefined","clickEvent","innerHeight","innerWidth","innerPaddedHeight","innerPaddedWidth","getLanguageString","subTitleG","colors","nest","adjustedColors","forEach","adjusted","push","innerScopeDataKeys","innerChartSingleAccessors","singleAccessors","accessor","min","innerChartAccessors","tableData","tableColumns","map","hashObject","concat","collisionHideOnly","x","Infinity","max","entries","scale","rangePadding","scaleLinear","domain","minValueOverride","maxValueOverride","range","ticks","invert","change_1","parent","interpolate","get","start","end","resolved","oldXDomain","oldXRange","oldYDomain","oldYRange","scalesUsed","line","curve","extent","minValue","parseFloat","maxValue","paddedMin","paddedMax","scalePoint","innerLabelAccessor","labelDetails","label","isRight","svg","append","rootG","gridG","yGroup","parallelLineG","seriesLabelG","labels","legendG","tooltipG","setTooltipInitialStyle","changeSvg","selection","namespace","easing","easeCircleIn","changeRoot","changeRootG","dataBoundToAxes","selectAll","yEnter","enter","yExit","exit","yUpdate","merge","dataBoundToLines","enterLines","exitLines","updateLines","size","dataBoundToDotWrappers","enterDotWrappers","exitDotWrappers","updateDotWrappers","dataBountToSeriesLabels","seriesLabelEnter","seriesLabelExit","seriesLabelUpdate","dataBoundToLabels","enteringLabelGroups","exitingLabelGroups","updatingLabelGroups","remove","dataBoundToDots","enterDots","exitDots","updateDots","dataBoundToLabelChildren","enteringLabels","updatingLabels","exitingLabels","unitTest","axisLabel","dataKeyNames","bandWidth","axisScale","format","hide","hidePath","transition","ease","each","onlyTickExtents","hideMe","rootEle","hasXAxis","xAxisLabel","axisLabelX","hasYAxis","yAxisLabel","markOffset","interrupt","on","onClickHandler","onHoverHandler","onMouseOutHandler","linelength","getTotalLength","call","lineOpacity","Math","classed","_","onSeriesHoverHandler","_d","order","dotOpacity","index","lineDotOpacity","enterWholeGroup","delay","exitWholeGroup","focusDidExist","parentGNode","updateTransition","transitionEndEvent","seriesLabelOpacity","Number","EPSILON","hideOnly","seriesUpdate","style","textElement","getComputedStyle","fontSize","textHeight","bitmaps","labelSelection","avoidMarks","accessors","childrenEnter","xScale","yScale","chartType","fullEnter","hidden","labelOpacity","targetOpacity","parentOpacity","updateChildren","axisRules","yAxisTexts","filter","textWidth","textContent","fontFamily","collisionPlacement","avoidCollision","runOccupancyBitmap","groupAccessor","addCollisionClass","me","prevOpacity","styleVisibility","labelsAdded","labelsRemoved","removeOnly","suppressMarkDraw","selected","selectable","source","xAccessor","yAccessor","chartTag","redraw","disableKeyNav","hideDataTable","hideDataTableButton","description","geomType","includeKeyNames","dataKeys","groupName","onChangeFunc","added","removed","target","hoverEvent","eventsTooltip","evt","event","isToShow","mouseOutEvent","_a","noSeriesAccessor","type","secondary","render","drawStartEvent","init","h","class","display","isInteractive","hasCousinNavigation","isCompact","exceptions","exception","window"],"sources":["src/components/parallel-plot/parallel-plot-default-values.ts","src/components/parallel-plot/parallel-plot.scss?tag=parallel-plot","src/components/parallel-plot/parallel-plot.tsx"],"sourcesContent":["/**\n * Copyright (c) 2020, 2021, 2022, 2023 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport Utils from '@visa/visa-charts-utils';\n\nconst { propDefaultValues } = Utils;\nexport class ParallelPlotDefaultValues {\n  static readonly mainTitle = 'Parallel Plot Title';\n  static readonly subTitle = propDefaultValues.subTitle.text;\n  static readonly height = 300;\n  static readonly width = 500;\n  static readonly margin = {\n    top: 300 * 0.01,\n    bottom: 300 * 0.01,\n    right: 500 * 0.01,\n    left: 500 * 0.01\n  };\n  static readonly padding = {\n    top: 20,\n    bottom: 50,\n    right: 100,\n    left: 75\n  };\n\n  static readonly localization = propDefaultValues.localization;\n\n  static readonly ordinalAccessor = 'label';\n  static readonly valueAccessor = 'value';\n  static readonly seriesAccessor = 'series';\n\n  static readonly accessibility = propDefaultValues.accessibility;\n  static readonly animationConfig = propDefaultValues.animationConfig;\n  static readonly highestHeadingLevel = propDefaultValues.highestHeadingLevel;\n  static readonly xAxis = propDefaultValues.xAxis;\n  static readonly yAxis = propDefaultValues.yAxis;\n  static readonly showBaselineX = propDefaultValues.showBaselineFalse;\n  static readonly wrapLabel = propDefaultValues.wrapLabel;\n  static readonly colorPalette = propDefaultValues.colorPaletteCategorical;\n\n  static readonly hoverStyle = propDefaultValues.hoverStyle;\n  static readonly clickStyle = propDefaultValues.clickStyle;\n\n  static readonly strokeWidth = propDefaultValues.strokeWidth1;\n  static readonly showDots = propDefaultValues.showDots;\n  static readonly dotRadius = propDefaultValues.dotRadius4;\n  static readonly lineCurve = propDefaultValues.lineCurve;\n  static readonly hoverOpacity = propDefaultValues.hoverOpacity;\n  static readonly cursor = propDefaultValues.cursor;\n\n  static readonly dataLabel = propDefaultValues.dataLabelBottomRight;\n  static readonly dataKeyNames;\n  static readonly seriesLabel = propDefaultValues.seriesLabel;\n  static readonly legend = propDefaultValues.hiddenLegend;\n  static readonly tooltipLabel = propDefaultValues.tooltipLabel;\n  static readonly secondaryLines = propDefaultValues.secondaryLines;\n\n  static readonly showTooltip = propDefaultValues.showTooltip;\n  static readonly suppressEvents = propDefaultValues.suppressEvents;\n  static readonly annotations = propDefaultValues.annotations;\n\n  static readonly hoverHighlight;\n  static readonly clickHighlight = propDefaultValues.clickHighlight;\n}\n","/**\n * Copyright (c) 2020, 2021, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nparallel-plot {\n  .annotations {\n    pointer-events: none;\n    .handle {\n      pointer-events: all;\n    }\n  }\n\n  .screen-reader-info {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n\n  .data-table-link {\n    color: #767676;\n    text-decoration: none;\n    font-size: 12px;\n    margin-left: 5%;\n  }\n\n  .hidden {\n    display: none;\n  }\n\n  cursor: default;\n  .axis {\n    font-size: 12px;\n    text {\n      //font: 0.65rem;\n      fill: #767676;\n    }\n\n    &-label {\n      text-anchor: middle;\n      font: 1rem sans-serif;\n    }\n    path {\n      stroke: #767676;\n    }\n  }\n\n  .grid {\n    line {\n      stroke: #767676;\n      shape-rendering: crispEdges;\n    }\n\n    path {\n      stroke-width: 0;\n      stroke: #767676;\n    }\n    &.left {\n      line {\n        stroke-dasharray: 4, 4;\n        stroke-opacity: 0.6;\n      }\n    }\n  }\n\n  .parallel-group {\n    transition: opacity 0.5s linear;\n\n    &__inactive {\n      opacity: 0;\n    }\n\n    .parallel-plot {\n      fill: none;\n    }\n\n    .dot {\n      stroke: #ffffff;\n    }\n    .parallel-series-label {\n      font-size: 1em;\n    }\n  }\n\n  .parallel-dataLabel-group {\n    text {\n      //font-size: 12px;\n    }\n  }\n\n  .parallel-legend {\n    font-size: 1em;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n\n    .legend {\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n    }\n  }\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport { Component, Element, Prop, Watch, h, Event, EventEmitter } from '@stencil/core';\n\nimport { select, event } from 'd3-selection';\nimport { max, min } from 'd3-array';\nimport { timeHour, timeDay, timeWeek, timeMonth, timeYear } from 'd3-time';\nimport { scalePoint, scaleLinear } from 'd3-scale';\nimport { line, curveLinear, curveBumpX, curveBumpY, curveCatmullRom } from 'd3-shape';\nimport { nest } from 'd3-collection';\nimport {\n  IBoxModelType,\n  ILocalizationType,\n  IHoverStyleType,\n  IClickStyleType,\n  IAxisType,\n  IDataLabelType,\n  ITooltipLabelType,\n  IAccessibilityType,\n  IAnimationConfig,\n  ILegendType,\n  ISeriesLabelType,\n  ISecondaryLinesType,\n  ISubTitleType\n} from '@visa/charts-types';\nimport { ParallelPlotDefaultValues } from './parallel-plot-default-values';\nimport { easeCircleIn } from 'd3-ease';\nimport 'd3-transition';\nimport Utils from '@visa/visa-charts-utils';\nimport { v4 as uuid } from 'uuid';\nconst {\n  getGlobalInstances,\n  configLocalization,\n  getActiveLanguageString,\n  getAccessibleStrokes,\n  ensureTextContrast,\n  createTextStrokeFilter,\n  findTagLevel,\n  prepareRenderChange,\n  initializeDescriptionRoot,\n  initializeElementAccess,\n  setElementFocusHandler,\n  setElementAccessID,\n  setAccessibilityController,\n  hideNonessentialGroups,\n  setAccessTitle,\n  setAccessSubtitle,\n  setAccessLongDescription,\n  setAccessExecutiveSummary,\n  setAccessPurpose,\n  setAccessContext,\n  setAccessStatistics,\n  setAccessChartCounts,\n  setAccessXAxis,\n  setAccessYAxis,\n  setAccessStructure,\n  setAccessAnnotation,\n  retainAccessFocus,\n  checkAccessFocus,\n  setElementInteractionAccessState,\n  setAccessibilityDescriptionWidth,\n  annotate,\n  chartAccessors,\n  checkInteraction,\n  checkClicked,\n  checkHovered,\n  convertVisaColor,\n  drawAxis,\n  drawGrid,\n  drawLegend,\n  setLegendInteractionState,\n  drawTooltip,\n  formatDataLabel,\n  getColors,\n  getLicenses,\n  getPadding,\n  getScopedData,\n  initTooltipStyle,\n  overrideTitleTooltip,\n  placeDataLabels,\n  resolveLines,\n  scopeDataKeys,\n  transitionEndAll,\n  visaColors,\n  validateAccessibilityProps,\n  validateLocalizationProps,\n  roundTo,\n  getTextWidth,\n  resolveLabelCollision,\n  setSubTitle\n} = Utils;\n\n@Component({\n  tag: 'parallel-plot',\n  styleUrl: 'parallel-plot.scss'\n})\nexport class ParallelPlot {\n  @Event() clickEvent: EventEmitter;\n  @Event() hoverEvent: EventEmitter;\n  @Event() mouseOutEvent: EventEmitter;\n  @Event() initialLoadEvent: EventEmitter;\n  @Event() initialLoadEndEvent: EventEmitter;\n  @Event() drawStartEvent: EventEmitter;\n  @Event() drawEndEvent: EventEmitter;\n  @Event() transitionEndEvent: EventEmitter;\n\n  // Chart Attributes (1/7)\n  @Prop({ mutable: true }) mainTitle: string = ParallelPlotDefaultValues.mainTitle;\n  @Prop({ mutable: true }) subTitle: string | ISubTitleType = ParallelPlotDefaultValues.subTitle;\n  @Prop({ mutable: true }) height: number = ParallelPlotDefaultValues.height;\n  @Prop({ mutable: true }) width: number = ParallelPlotDefaultValues.width;\n  @Prop({ mutable: true }) highestHeadingLevel: string | number = ParallelPlotDefaultValues.highestHeadingLevel;\n  @Prop({ mutable: true }) margin: IBoxModelType = ParallelPlotDefaultValues.margin;\n  @Prop({ mutable: true }) padding: IBoxModelType = ParallelPlotDefaultValues.padding;\n\n  // Data (2/7)\n  @Prop() data: object[];\n  @Prop() uniqueID: string;\n  @Prop({ mutable: true }) localization: ILocalizationType = ParallelPlotDefaultValues.localization;\n  @Prop({ mutable: true }) ordinalAccessor: string = ParallelPlotDefaultValues.ordinalAccessor;\n  @Prop({ mutable: true }) valueAccessor: string = ParallelPlotDefaultValues.valueAccessor;\n  @Prop({ mutable: true }) seriesAccessor: string = ParallelPlotDefaultValues.seriesAccessor;\n\n  // Axis (3/7)\n  @Prop({ mutable: true }) xAxis: IAxisType = ParallelPlotDefaultValues.xAxis;\n  @Prop({ mutable: true }) yAxis: IAxisType = ParallelPlotDefaultValues.yAxis;\n  @Prop({ mutable: true }) wrapLabel: boolean = ParallelPlotDefaultValues.wrapLabel;\n  @Prop({ mutable: true }) showBaselineX: boolean = ParallelPlotDefaultValues.showBaselineX;\n\n  // Color & Shape (4/7)\n  @Prop({ mutable: true }) colorPalette: string = ParallelPlotDefaultValues.colorPalette;\n  @Prop({ mutable: true }) colors: string[];\n  @Prop({ mutable: true }) hoverStyle: IHoverStyleType = ParallelPlotDefaultValues.hoverStyle;\n  @Prop({ mutable: true }) clickStyle: IClickStyleType = ParallelPlotDefaultValues.clickStyle;\n  @Prop({ mutable: true }) cursor: string = ParallelPlotDefaultValues.cursor;\n  @Prop({ mutable: true }) hoverOpacity: number = ParallelPlotDefaultValues.hoverOpacity;\n  @Prop({ mutable: true }) animationConfig: IAnimationConfig = ParallelPlotDefaultValues.animationConfig;\n  @Prop({ mutable: true }) strokeWidth: number = ParallelPlotDefaultValues.strokeWidth;\n  @Prop({ mutable: true }) showDots: boolean = ParallelPlotDefaultValues.showDots;\n  @Prop({ mutable: true }) dotRadius: number = ParallelPlotDefaultValues.dotRadius;\n  @Prop({ mutable: true }) lineCurve: string = ParallelPlotDefaultValues.lineCurve;\n\n  // Data label (5/7)\n  @Prop({ mutable: true }) dataLabel: IDataLabelType = ParallelPlotDefaultValues.dataLabel;\n  @Prop({ mutable: true }) dataKeyNames: object;\n  @Prop({ mutable: true }) showTooltip: boolean = ParallelPlotDefaultValues.showTooltip;\n  @Prop({ mutable: true }) tooltipLabel: ITooltipLabelType = ParallelPlotDefaultValues.tooltipLabel;\n  @Prop({ mutable: true }) accessibility: IAccessibilityType = ParallelPlotDefaultValues.accessibility;\n  @Prop({ mutable: true }) legend: ILegendType = ParallelPlotDefaultValues.legend;\n  @Prop({ mutable: true }) annotations: object[] = ParallelPlotDefaultValues.annotations;\n  @Prop({ mutable: true }) seriesLabel: ISeriesLabelType = ParallelPlotDefaultValues.seriesLabel;\n\n  // Calculation (6/7)\n  @Prop() maxValueOverride: number;\n  @Prop() minValueOverride: number;\n  @Prop({ mutable: true }) secondaryLines: ISecondaryLinesType = ParallelPlotDefaultValues.secondaryLines;\n\n  // Interactivity (7/7)\n  @Prop({ mutable: true }) suppressEvents: boolean = ParallelPlotDefaultValues.suppressEvents;\n  @Prop({ mutable: true }) hoverHighlight: object;\n  @Prop({ mutable: true }) clickHighlight: object[] = ParallelPlotDefaultValues.clickHighlight;\n  @Prop({ mutable: true }) interactionKeys: string[];\n\n  // Testing (8/7)\n  @Prop() unitTest: boolean = false;\n  //  @Prop() debugMode: boolean = false;\n\n  @Element()\n  parallelChartEl: HTMLElement;\n  shouldValidateAccessibility: boolean = true;\n  shouldValidateLocalization: boolean = true;\n  svg: any;\n  root: any;\n  rootG: any;\n  gridG: any;\n  parallelLineG: any;\n  dotG: any;\n  yEnter: any;\n  yUpdate: any;\n  yExit: any;\n  line: any;\n  seriesLabelG: any;\n  x: any;\n  y: any;\n  nest: any;\n  map: any;\n  interpolating: any;\n  innerHeight: number;\n  innerWidth: number;\n  innerPaddedHeight: number;\n  innerPaddedWidth: number;\n  innerXAxis: any;\n  innerYAxis: any;\n  innerLabelAccessor: any;\n  defaults: boolean;\n  duration: number;\n  legendG: any;\n  tooltipG: any;\n  subTitleG: any;\n  labels: any;\n  colorArr: any;\n  rawColors: any;\n  textColors: any;\n  multiYScale: any;\n  scalesUsed: any;\n  yGroup: any;\n  extent: any;\n  seriesInteraction: any;\n  updated: boolean = true;\n  enterSize: number = 0;\n  exitSize: number = 0;\n  enterLines: any;\n  exitLines: any;\n  updateLines: any;\n  enterDotWrappers: any;\n  updateDotWrappers: any;\n  exitDotWrappers: any;\n  enterDots: any;\n  updateDots: any;\n  exitDots: any;\n  enteringLabelGroups: any;\n  exitingLabelGroups: any;\n  updatingLabelGroups: any;\n  enteringLabels: any;\n  exitingLabels: any;\n  updatingLabels: any;\n  seriesLabelEnter: any;\n  seriesLabelUpdate: any;\n  seriesLabelExit: any;\n  tableData: any;\n  tableColumns: any;\n  time = {\n    timehour: timeHour,\n    timeday: timeDay,\n    timeweek: timeWeek,\n    timemonth: timeMonth,\n    timeyear: timeYear\n  };\n  curveOptions = {\n    linear: curveLinear,\n    bumpX: curveBumpX,\n    bumpY: curveBumpY,\n    catmullRom: curveCatmullRom\n  };\n  chartID: string;\n  innerInteractionKeys: any;\n  labelDetails: any;\n  seriesLabelCurrent: any;\n  isRight: any;\n  shouldUpdateXAxis: boolean = false;\n  shouldUpdateYAxis: boolean = false;\n  shouldUpdateXGrid: boolean = false;\n  shouldUpdateYGrid: boolean = false;\n  shouldValidate: boolean = false;\n  shouldUpdateData: boolean = false;\n  shouldSetDimensions: boolean = false;\n  shouldUpdateScales: boolean = false;\n  shouldUpdateTableData: boolean = false;\n  shouldUpdateLabels: boolean = false;\n  shouldUpdateAnnotations: boolean = false;\n  shouldDrawInteractionState: boolean = false;\n  shouldSetSelectionClass: boolean = false;\n  shouldUpdateCursor: boolean = false;\n  shouldSetColors: boolean = false;\n  shouldSetSubTitle: boolean = false;\n  shouldUpdateLines: boolean = false;\n  shouldUpdatePoints: boolean = false;\n  shouldUpdateLegend: boolean = false;\n  shouldBindInteractivity: boolean = false;\n  shouldUpdateLegendInteractivity: boolean = false;\n  shouldResetRoot: boolean = false;\n  shouldUpdateBaseline: boolean = false;\n  shouldValidateInteractionKeys: boolean = false;\n  shouldEnterUpdateExit: boolean = false;\n  shouldSetGlobalSelections: boolean = false;\n  shouldSetTestingAttributes: boolean = false;\n  shouldSetLabelOpacity: boolean = false;\n  shouldSetSeriesLabelOpacity: boolean = false;\n  shouldSetLegendCursor: boolean = false;\n  shouldAddStrokeUnder: boolean = false;\n  shouldValidateSeriesLabels: boolean = false;\n  shouldUpdateSeriesLabels: boolean = false;\n  shouldUpdateColors: boolean = false;\n  shouldUpdateStrokeWidth: boolean = false;\n  shouldUpdateInterpolationData: boolean = false;\n  shouldSetScaleUsed: boolean = false;\n  shouldUpdateDotRadius: boolean = false;\n  shouldUpdateDescriptionWrapper: boolean = false;\n  shouldSetChartAccessibilityTitle: boolean = false;\n  shouldSetChartAccessibilitySubtitle: boolean = false;\n  shouldSetChartAccessibilityLongDescription: boolean = false;\n  shouldSetChartAccessibilityExecutiveSummary: boolean = false;\n  shouldSetChartAccessibilityStatisticalNotes: boolean = false;\n  shouldSetChartAccessibilityStructureNotes: boolean = false;\n  shouldSetParentSVGAccessibility: boolean = false;\n  shouldSetGeometryAccessibilityAttributes: boolean = false;\n  shouldSetGeometryAriaLabels: boolean = false;\n  shouldSetGroupAccessibilityLabel: boolean = false;\n  shouldSetChartAccessibilityPurpose: boolean = false;\n  shouldSetChartAccessibilityContext: boolean = false;\n  shouldRedrawWrapper: boolean = false;\n  shouldSetTagLevels: boolean = false;\n  shouldSetChartAccessibilityCount: boolean = false;\n  shouldSetYAxisAccessibility: boolean = false;\n  shouldSetXAxisAccessibility: boolean = false;\n  shouldSetAnnotationAccessibility: boolean = false;\n  shouldUpdateDashPatterns: boolean = false;\n  shouldValidateDataLabelAccessor: boolean = false;\n  shouldSetLocalizationConfig: boolean = false;\n  topLevel: string = 'h2';\n  bottomLevel: string = 'p';\n  strokes: any = {};\n  b: string = ',';\n  short: string = '2,2';\n  med: string = '4,2';\n  long: string = '8,2';\n  dashPatterns: any = [\n    '',\n    this.long,\n    this.long + this.b + this.med,\n    this.short + this.b + this.long + this.b + this.long,\n    this.short + this.b + this.short + this.b + this.long\n  ];\n  bitmaps: any;\n  hiddenHash: object = {};\n  collisionSettings: object = {\n    all: {\n      validPositions: ['top', 'bottom', 'left', 'right', 'bottom-right', 'bottom-left', 'top-left', 'top-right'],\n      offsets: [3, 2, 4, 4, 1, 1, 1, 1]\n    },\n    top: {\n      validPositions: ['top', 'top-left', 'top-right'],\n      offsets: [3, 1, 1]\n    },\n    middle: {\n      validPositions: ['left', 'right'],\n      offsets: [4, 4]\n    },\n    bottom: {\n      validPositions: ['bottom', 'bottom-left', 'bottom-right'],\n      offsets: [2, 1, 1]\n    },\n    right: {\n      validPositions: ['right', 'top-right', 'bottom-right'],\n      offsets: [4, 1, 1]\n    },\n    left: {\n      validPositions: ['left', 'top-left', 'bottom-left'],\n      offsets: [4, 1, 1]\n    }\n  };\n\n  @Watch('data')\n  dataWatcher(_newData, _oldData) {\n    this.updated = true;\n    this.shouldSetScaleUsed = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateData = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldSetColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateTableData = true;\n    this.shouldValidate = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('uniqueID')\n  idWatcher(newID, _oldID) {\n    console.error(\n      'Change detected in prop uniqueID from value ' +\n        _oldID +\n        ' to value ' +\n        newID +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.chartID = newID;\n    // this.parallelChartEl.id = this.chartID;\n    // this.shouldValidate = true;\n    // this.shouldUpdateDescriptionWrapper = true;\n    // this.shouldSetParentSVGAccessibility = true;\n    // this.shouldUpdateLegend = true;\n    // this.shouldUpdateLegend = true;\n    // this.shouldAddStrokeUnder = true;\n  }\n\n  @Watch('highestHeadingLevel')\n  headingWatcher(_newVal, _oldVal) {\n    this.shouldRedrawWrapper = true;\n    this.shouldSetTagLevels = true;\n    this.shouldSetChartAccessibilityCount = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('mainTitle')\n  titleWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('subTitle')\n  subtitleWatcher(_newVal, _oldVal) {\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('height')\n  @Watch('width')\n  @Watch('padding')\n  @Watch('margin')\n  dimensionWatcher(_newVal, _oldVal) {\n    this.shouldSetDimensions = true;\n    this.shouldResetRoot = true;\n    this.shouldSetScaleUsed = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('seriesAccessor')\n  seriesAccessorWatcher(_newVal, _oldVal) {\n    this.shouldSetScaleUsed = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateData = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldSetColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldValidate = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n    this.shouldUpdateLabels = true;\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n  }\n\n  @Watch('ordinalAccessor')\n  ordinalAccessorWatcher(_newVal, _oldVal) {\n    this.shouldSetGlobalSelections = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetScaleUsed = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateAnnotations = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateStrokeWidth = true;\n  }\n\n  @Watch('valueAccessor')\n  valueAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldSetScaleUsed = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldSetColors = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldValidateDataLabelAccessor = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGlobalSelections = true;\n  }\n\n  @Watch('xAxis')\n  xAxisWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateXGrid = true;\n    }\n    this.shouldSetXAxisAccessibility = true;\n  }\n\n  @Watch('yAxis')\n  yAxisWatcher(_newVal, _oldVal) {\n    const newScaleVal = _newVal && _newVal.scales ? _newVal.scales : false;\n    const oldScaleVal = _oldVal && _oldVal.scales ? _oldVal.scales : false;\n    if (newScaleVal !== oldScaleVal) {\n      this.shouldSetScaleUsed = true;\n      this.shouldUpdateScales = true;\n      this.shouldUpdateData = true;\n      this.shouldUpdateInterpolationData = true;\n      this.shouldUpdateLines = true;\n      this.shouldUpdatePoints = true;\n      this.shouldUpdateYGrid = true;\n      this.shouldUpdateSeriesLabels = true;\n      this.shouldUpdateLabels = true;\n    }\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateYGrid = true;\n    }\n  }\n\n  @Watch('wrapLabel')\n  wrapLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n  }\n\n  @Watch('showBaselineX')\n  showBaselineXWatcher(_newVal, _oldVal) {\n    this.shouldUpdateBaseline = true;\n  }\n\n  @Watch('colorPalette')\n  paletteWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldUpdateColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n  }\n\n  @Watch('colors')\n  colorsWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldUpdateColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n  }\n\n  @Watch('clickStyle')\n  clickStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n    this.shouldSetColors = true;\n  }\n\n  @Watch('hoverStyle')\n  hoverStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n    this.shouldSetColors = true;\n  }\n\n  @Watch('cursor')\n  cursorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCursor = true;\n    this.shouldSetLegendCursor = true;\n  }\n\n  @Watch('strokeWidth')\n  strokeWidthWatcher(_newVal, _oldVal) {\n    this.shouldUpdateStrokeWidth = true;\n  }\n\n  @Watch('showDots')\n  showDotsWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('dotRadius')\n  dotRadiusWatcher(_newVal, _oldVal) {\n    this.shouldUpdateDotRadius = true;\n  }\n\n  @Watch('lineCurve')\n  lineCurveWatcher(_newLineCurve, _oldLineCurve) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    console.warn(\n      'Change detected in prop lineCurve from value ' +\n        _newLineCurve +\n        ' to value ' +\n        _oldLineCurve +\n        '. Transition effects for this prop have not been implemented.'\n    );\n  }\n\n  @Watch('hoverOpacity')\n  hoverOpacityWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n  }\n\n  @Watch('dataLabel')\n  dataLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTableData = true;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    const newPlacementVal = _newVal && _newVal.placement ? _newVal.placement : false;\n    const oldPlacementVal = _oldVal && _oldVal.placement ? _oldVal.placement : false;\n    const newAccessor = _newVal && _newVal.labelAccessor ? _newVal.labelAccessor : false;\n    const oldAccessor = _oldVal && _oldVal.labelAccessor ? _oldVal.labelAccessor : false;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetLabelOpacity = true;\n    }\n    if (newPlacementVal !== oldPlacementVal) {\n      this.shouldUpdateSeriesLabels = true;\n    }\n    if (newAccessor !== oldAccessor) {\n      this.shouldValidateDataLabelAccessor = true;\n    }\n  }\n\n  @Watch('seriesLabel')\n  seriesLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateTableData = true;\n    this.shouldValidateSeriesLabels = true;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetSeriesLabelOpacity = true;\n    }\n  }\n\n  @Watch('tooltipLabel')\n  tooltipLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('showTooltip')\n  showTooltipWatcher(_newVal, _oldVal) {\n    // this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('accessibility')\n  accessibilityWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    const newTitle = _newVal && _newVal.title ? _newVal.title : false;\n    const oldTitle = _oldVal && _oldVal.title ? _oldVal.title : false;\n    if (newTitle !== oldTitle) {\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newExecutiveSummary = _newVal && _newVal.executiveSummary ? _newVal.executiveSummary : false;\n    const oldExecutiveSummary = _oldVal && _oldVal.executiveSummary ? _oldVal.executiveSummary : false;\n    if (newExecutiveSummary !== oldExecutiveSummary) {\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n    }\n    const newPurpose = _newVal && _newVal.purpose ? _newVal.purpose : false;\n    const oldPurpose = _oldVal && _oldVal.purpose ? _oldVal.purpose : false;\n    if (newPurpose !== oldPurpose) {\n      this.shouldSetChartAccessibilityPurpose = true;\n    }\n    const newLongDescription = _newVal && _newVal.longDescription ? _newVal.longDescription : false;\n    const oldLongDescription = _oldVal && _oldVal.longDescription ? _oldVal.longDescription : false;\n    if (newLongDescription !== oldLongDescription) {\n      this.shouldSetChartAccessibilityLongDescription = true;\n    }\n    const newContext = _newVal && _newVal.contextExplanation ? _newVal.contextExplanation : false;\n    const oldContext = _oldVal && _oldVal.contextExplanation ? _oldVal.contextExplanation : false;\n    if (newContext !== oldContext) {\n      this.shouldSetChartAccessibilityContext = true;\n    }\n    const newStatisticalNotes = _newVal && _newVal.statisticalNotes ? _newVal.statisticalNotes : false;\n    const oldStatisticalNotes = _oldVal && _oldVal.statisticalNotes ? _oldVal.statisticalNotes : false;\n    if (newStatisticalNotes !== oldStatisticalNotes) {\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n    }\n    const newStructureNotes = _newVal && _newVal.structureNotes ? _newVal.structureNotes : false;\n    const oldStructureNotes = _oldVal && _oldVal.structureNotes ? _oldVal.structureNotes : false;\n    if (newStructureNotes !== oldStructureNotes) {\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    const newincludeDataKeyNames = _newVal && _newVal.includeDataKeyNames;\n    const oldincludeDataKeyNames = _oldVal && _oldVal.includeDataKeyNames;\n    const newElementDescriptionAccessor =\n      _newVal && _newVal.elementDescriptionAccessor ? _newVal.elementDescriptionAccessor : false;\n    const oldElementDescriptionAccessor =\n      _oldVal && _oldVal.elementDescriptionAccessor ? _oldVal.elementDescriptionAccessor : false;\n    if (\n      newincludeDataKeyNames !== oldincludeDataKeyNames ||\n      newElementDescriptionAccessor !== oldElementDescriptionAccessor\n    ) {\n      if (newincludeDataKeyNames !== oldincludeDataKeyNames) {\n        // this one is tricky because it needs to run after the lifecycle\n        // AND it could run in the off-chance this prop is changed\n        this.shouldSetGroupAccessibilityLabel = true;\n      }\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newSmallValue = _newVal && _newVal.showSmallLabels ? _newVal.showSmallLabels : false;\n    const oldSmallValue = _oldVal && _oldVal.showSmallLabels ? _oldVal.showSmallLabels : false;\n    if (newSmallValue !== oldSmallValue) {\n      this.shouldSetLabelOpacity = true;\n    }\n    const newStrokes = _newVal && _newVal.hideStrokes ? _newVal.hideStrokes : false;\n    const oldStrokes = _oldVal && _oldVal.hideStrokes ? _oldVal.hideStrokes : false;\n    if (newStrokes !== oldStrokes) {\n      this.shouldUpdateStrokeWidth = true;\n      this.shouldSetColors = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newTextures = _newVal && _newVal.hideTextures ? _newVal.hideTextures : false;\n    const oldTextures = _oldVal && _oldVal.hideTextures ? _oldVal.hideTextures : false;\n    if (newTextures !== oldTextures) {\n      this.shouldUpdateDashPatterns = true;\n      this.shouldUpdateLegend = true;\n    }\n    const newKeyNav =\n      _newVal && _newVal.keyboardNavConfig && _newVal.keyboardNavConfig.disabled\n        ? _newVal.keyboardNavConfig.disabled\n        : false;\n    const oldKeyNav =\n      _oldVal && _oldVal.keyboardNavConfig && _oldVal.keyboardNavConfig.disabled\n        ? _oldVal.keyboardNavConfig.disabled\n        : false;\n    const newInterface = _newVal && _newVal.elementsAreInterface ? _newVal.elementsAreInterface : false;\n    const oldInterface = _oldVal && _oldVal.elementsAreInterface ? _oldVal.elementsAreInterface : false;\n    if (newKeyNav !== oldKeyNav || newInterface !== oldInterface) {\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetChartAccessibilitySubtitle = true;\n      this.shouldSetChartAccessibilityLongDescription = true;\n      this.shouldSetChartAccessibilityContext = true;\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n      this.shouldSetChartAccessibilityPurpose = true;\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    if (newInterface !== oldInterface) {\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('localization')\n  localizationWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n\n    // language\n    const newLanguage = _newVal && _newVal.language ? _newVal.language : false;\n    const oldLanguage = _oldVal && _oldVal.language ? _oldVal.language : false;\n    if (newLanguage !== oldLanguage) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n\n    // numeralLocale\n    const newNumeralLocale = _newVal && _newVal.numeralLocale ? _newVal.numeralLocale : false;\n    const oldNumeralLocale = _oldVal && _oldVal.numeralLocale ? _oldVal.numeralLocale : false;\n    if (newNumeralLocale !== oldNumeralLocale) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n  }\n\n  @Watch('legend')\n  legendWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLegend = true;\n    const newInteractiveVal = _newVal && _newVal.interactive;\n    const oldInteractiveVal = _oldVal && _oldVal.interactive;\n    if (newInteractiveVal !== oldInteractiveVal) {\n      this.shouldSetLegendCursor = true;\n      this.shouldUpdateLegendInteractivity = true;\n    }\n  }\n\n  @Watch('annotations')\n  annotationsWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetAnnotationAccessibility = true;\n  }\n\n  @Watch('maxValueOverride')\n  @Watch('minValueOverride')\n  valueOverrideWatcher(_newVal, _oldVal) {\n    this.shouldSetScaleUsed = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateInterpolationData = true;\n    this.shouldUpdateLines = true;\n    this.shouldUpdatePoints = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateSeriesLabels = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('secondaryLines')\n  secondaryLinesWatcher(_newVal, _oldVal) {\n    const newDataLabelVal = _newVal && _newVal.showDataLabel;\n    const oldDataLabelVal = _oldVal && _oldVal.showDataLabel;\n    const newSeriesLabelVal = _newVal && _newVal.showSeriesLabel;\n    const oldSeriesLabelVal = _oldVal && _oldVal.showSeriesLabel;\n    const newKeysVal = _newVal && _newVal.keys ? _newVal.keys : false;\n    const oldKeysVal = _oldVal && _oldVal.keys ? _oldVal.keys : false;\n    const newOpacityVal = _newVal && _newVal.opacity ? _newVal.opacity : 0;\n    const oldOpacityVal = _oldVal && _oldVal.opacity ? _oldVal.opacity : 0;\n    if (newKeysVal !== oldKeysVal) {\n      this.shouldUpdateLines = true;\n      this.shouldSetLabelOpacity = true;\n      this.shouldSetSeriesLabelOpacity = true;\n    }\n    if (newDataLabelVal !== oldDataLabelVal) {\n      this.shouldSetLabelOpacity = true;\n    }\n    if (newSeriesLabelVal !== oldSeriesLabelVal) {\n      this.shouldUpdateLabels = true;\n    }\n    if (newOpacityVal !== oldOpacityVal) {\n      this.shouldDrawInteractionState = true;\n      this.shouldSetSeriesLabelOpacity = true;\n    }\n  }\n\n  @Watch('clickHighlight')\n  clickWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n  }\n\n  @Watch('hoverHighlight')\n  hoverWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n  }\n\n  @Watch('interactionKeys')\n  interactionWatcher(_newVal, _oldVal) {\n    this.shouldValidateInteractionKeys = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateDotRadius = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSeriesLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateStrokeWidth = true;\n    this.shouldUpdateColors = true;\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n  }\n\n  @Watch('dataKeyNames')\n  dataKeyNamesWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('suppressEvents')\n  suppressWatcher(_newVal, _oldVal) {\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldSetLegendCursor = true;\n    this.shouldUpdateLegendInteractivity = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldRedrawWrapper = true;\n    this.shouldValidate = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('unitTest')\n  unitTestWatcher(_newVal, _oldVal) {\n    this.shouldSetTestingAttributes = true;\n  }\n\n  componentWillLoad() {\n    const chartID = this.uniqueID || 'parallel-plot-' + uuid();\n    this.initialLoadEvent.emit({ chartID: chartID });\n    // contrary to componentWillUpdate, this method appears safe to use for\n    // any calculations we need. Keeping them here reduces future refactor,\n    // since componentWillUpdate should eventually mirror this method\n    return new Promise(resolve => {\n      this.duration = 0;\n      this.defaults = true;\n      this.chartID = chartID;\n      this.parallelChartEl.id = this.chartID;\n      this.setLocalizationConfig();\n      this.setTagLevels();\n      this.setDimensions();\n      this.setScaleUsed();\n      this.prepareScales();\n      this.prepareData();\n      this.updateInterpolationData();\n      this.validateInteractionKeys();\n      this.validateSeriesLabels();\n      this.validateDataLabelAccessor();\n      this.setTableData();\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.setColors();\n      resolve('component will load');\n    });\n  }\n\n  componentWillUpdate() {\n    // NEVER put items in this method that rely on props (until stencil bug is resolved)\n    // All items that belong here are currently at the top of render\n    // see: https://github.com/ionic-team/stencil/issues/2061#issuecomment-578282178\n    return new Promise(resolve => {\n      resolve('component will update');\n    });\n  }\n\n  componentDidLoad() {\n    return new Promise(resolve => {\n      this.renderRootElements();\n      this.renderChartRootElemets();\n      this.setChartDescriptionWrapper();\n      this.setChartAccessibilityTitle();\n      this.setChartAccessibilitySubtitle();\n      this.setChartAccessibilityLongDescription();\n      this.setChartAccessibilityExecutiveSummary();\n      this.setChartAccessibilityPurpose();\n      this.setChartAccessibilityContext();\n      this.setChartAccessibilityStatisticalNotes();\n      this.setChartAccessibilityStructureNotes();\n      this.setParentSVGAccessibility();\n      this.reSetRoot();\n      this.setSubTitleElements();\n      this.drawXGrid();\n      this.drawYGrid();\n      this.setGlobalSelections();\n      this.setTestingAttributes();\n      this.drawXAxis();\n      this.setXAxisAccessibility();\n      this.enterYAxis();\n      this.exitYAxis();\n      this.drawYAxis();\n      this.setYAxisAccessibility();\n      this.enterChartLines();\n      this.updateChartLines();\n      this.exitChartLines();\n      this.enterPoints();\n      this.updatePoints();\n      this.exitPoints();\n      this.drawChartLines();\n      this.drawPoints();\n      this.enterSeriesLabels();\n      this.updateSeriesLabels();\n      this.exitSeriesLabels();\n      this.enterDataLabels();\n      this.updateDataLabels();\n      this.exitDataLabels();\n      this.setChartCountAccessibility();\n      this.setGeometryAccessibilityAttributes();\n      this.setGeometryAriaLabels();\n      this.drawLegendElements();\n      this.drawDataLabels();\n      this.drawSeriesLabels();\n      this.addStrokeUnder();\n      this.setSelectedClass();\n      // this.updateInteractionState();\n      // this.setLabelOpacity();\n      // this.setSeriesLabelOpacity();\n      this.updateCursor();\n      this.bindInteractivity();\n      this.setLegendCursor();\n      this.bindLegendInteractivity();\n      this.drawBaseline();\n      this.drawAnnotations();\n      this.setAnnotationAccessibility();\n      hideNonessentialGroups(this.root.node(), this.dotG.node());\n      this.setGroupAccessibilityID();\n      this.onChangeHandler();\n      this.defaults = false;\n      resolve('component did load');\n    }).then(() => this.initialLoadEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  componentDidUpdate() {\n    return new Promise(resolve => {\n      this.duration = !this.animationConfig || !this.animationConfig.disabled ? 750 : 0;\n      if (this.shouldUpdateDescriptionWrapper) {\n        this.setChartDescriptionWrapper();\n        this.shouldUpdateDescriptionWrapper = false;\n      }\n      if (this.shouldSetChartAccessibilityCount) {\n        this.setChartCountAccessibility();\n        this.shouldSetChartAccessibilityCount = false;\n      }\n      if (this.shouldSetChartAccessibilityTitle) {\n        this.setChartAccessibilityTitle();\n        this.shouldSetChartAccessibilityTitle = false;\n      }\n      if (this.shouldSetChartAccessibilitySubtitle) {\n        this.setChartAccessibilitySubtitle();\n        this.shouldSetChartAccessibilitySubtitle = false;\n      }\n      if (this.shouldSetChartAccessibilityLongDescription) {\n        this.setChartAccessibilityLongDescription();\n        this.shouldSetChartAccessibilityLongDescription = false;\n      }\n      if (this.shouldSetChartAccessibilityExecutiveSummary) {\n        this.setChartAccessibilityExecutiveSummary();\n        this.shouldSetChartAccessibilityExecutiveSummary = false;\n      }\n      if (this.shouldSetChartAccessibilityPurpose) {\n        this.setChartAccessibilityPurpose();\n        this.shouldSetChartAccessibilityPurpose = false;\n      }\n      if (this.shouldSetChartAccessibilityContext) {\n        this.setChartAccessibilityContext();\n        this.shouldSetChartAccessibilityContext = false;\n      }\n      if (this.shouldSetChartAccessibilityStatisticalNotes) {\n        this.setChartAccessibilityStatisticalNotes();\n        this.shouldSetChartAccessibilityStatisticalNotes = false;\n      }\n      if (this.shouldSetChartAccessibilityStructureNotes) {\n        this.setChartAccessibilityStructureNotes();\n        this.shouldSetChartAccessibilityStructureNotes = false;\n      }\n      if (this.shouldSetParentSVGAccessibility) {\n        this.setParentSVGAccessibility();\n        this.shouldSetParentSVGAccessibility = false;\n      }\n      if (this.shouldResetRoot) {\n        this.reSetRoot();\n        this.shouldResetRoot = false;\n      }\n      if (this.shouldUpdateXGrid) {\n        this.drawXGrid();\n        this.shouldUpdateXGrid = false;\n      }\n      if (this.shouldUpdateYGrid) {\n        this.drawYGrid();\n        this.shouldUpdateYGrid = false;\n      }\n      if (this.shouldSetGlobalSelections) {\n        this.setGlobalSelections();\n        this.shouldSetGlobalSelections = false;\n      }\n      if (this.shouldSetTestingAttributes) {\n        this.setTestingAttributes();\n        this.shouldSetTestingAttributes = false;\n      }\n      if (this.shouldSetSubTitle) {\n        this.setSubTitleElements();\n        this.shouldSetSubTitle = false;\n      }\n      if (this.shouldEnterUpdateExit) {\n        this.enterYAxis();\n        this.exitYAxis();\n        this.enterChartLines();\n        this.updateChartLines();\n        this.exitChartLines();\n        this.enterPoints();\n        this.updatePoints();\n        this.exitPoints();\n        this.enterSeriesLabels();\n        this.updateSeriesLabels();\n        this.exitSeriesLabels();\n        this.enterDataLabels();\n        this.updateDataLabels();\n        this.exitDataLabels();\n        this.shouldEnterUpdateExit = false;\n      }\n      if (this.shouldUpdateXAxis) {\n        this.drawXAxis();\n        this.shouldUpdateXAxis = false;\n      }\n      if (this.shouldUpdateYAxis) {\n        this.drawYAxis();\n        this.shouldUpdateYAxis = false;\n      }\n      if (this.shouldSetXAxisAccessibility) {\n        this.setXAxisAccessibility();\n        this.shouldSetXAxisAccessibility = false;\n      }\n      if (this.shouldSetYAxisAccessibility) {\n        this.setYAxisAccessibility();\n        this.shouldSetYAxisAccessibility = false;\n      }\n      if (this.shouldUpdateLines) {\n        this.drawChartLines();\n        this.shouldUpdateLines = false;\n      }\n      if (this.shouldUpdatePoints) {\n        this.drawPoints();\n        this.shouldUpdatePoints = false;\n      }\n      if (this.shouldSetGeometryAccessibilityAttributes) {\n        this.setGeometryAccessibilityAttributes();\n        this.shouldSetGeometryAccessibilityAttributes = false;\n      }\n      if (this.shouldSetGeometryAriaLabels) {\n        this.setGeometryAriaLabels();\n        this.shouldSetGeometryAriaLabels = false;\n      }\n      if (this.shouldSetGroupAccessibilityLabel) {\n        this.setGroupAccessibilityID();\n        this.shouldSetGroupAccessibilityLabel = false;\n      }\n      if (this.shouldUpdateColors) {\n        this.updateColors();\n        this.shouldUpdateColors = false;\n      }\n      if (this.shouldUpdateLegend) {\n        this.drawLegendElements();\n        this.shouldUpdateLegend = false;\n      }\n      if (this.shouldUpdateLabels) {\n        this.drawDataLabels();\n        this.shouldUpdateLabels = false;\n      }\n      if (this.shouldUpdateSeriesLabels) {\n        this.drawSeriesLabels();\n        this.shouldUpdateSeriesLabels = false;\n      }\n      if (this.addStrokeUnder) {\n        this.addStrokeUnder();\n        this.shouldAddStrokeUnder = false;\n      }\n      if (this.shouldUpdateStrokeWidth) {\n        this.updateStrokeWidth();\n        this.shouldUpdateStrokeWidth = false;\n      }\n      if (this.shouldUpdateDotRadius) {\n        this.updateDotRadius();\n        this.shouldUpdateDotRadius = false;\n      }\n      if (this.shouldDrawInteractionState) {\n        this.updateInteractionState();\n        this.shouldDrawInteractionState = false;\n      }\n      if (this.shouldUpdateDashPatterns) {\n        this.updateStrokePattern();\n        this.shouldUpdateDashPatterns = false;\n      }\n      if (this.shouldSetLabelOpacity) {\n        this.setLabelOpacity();\n        this.shouldSetLabelOpacity = false;\n      }\n      if (this.shouldSetSeriesLabelOpacity) {\n        this.setSeriesLabelOpacity();\n        this.shouldSetSeriesLabelOpacity = false;\n      }\n      if (this.shouldSetSelectionClass) {\n        this.setSelectedClass();\n        this.shouldSetSelectionClass = false;\n      }\n      if (this.shouldUpdateLegendInteractivity) {\n        this.bindLegendInteractivity();\n        this.shouldUpdateLegendInteractivity = false;\n      }\n      if (this.shouldSetLegendCursor) {\n        this.setLegendCursor();\n        this.shouldSetLegendCursor = false;\n      }\n      if (this.shouldUpdateCursor) {\n        this.updateCursor();\n        this.shouldUpdateCursor = false;\n      }\n      if (this.shouldBindInteractivity) {\n        this.bindInteractivity();\n        this.shouldBindInteractivity = false;\n      }\n      if (this.shouldUpdateAnnotations) {\n        this.drawAnnotations();\n        this.shouldUpdateAnnotations = false;\n      }\n      if (this.shouldSetAnnotationAccessibility) {\n        this.setAnnotationAccessibility();\n        this.shouldSetAnnotationAccessibility = false;\n      }\n      if (this.shouldUpdateBaseline) {\n        this.drawBaseline();\n        this.shouldUpdateBaseline = false;\n      }\n      this.onChangeHandler();\n      resolve('component did update');\n    }).then(() => this.drawEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  shouldValidateLocalizationProps() {\n    const windowInstances = getGlobalInstances();\n    const languageString = windowInstances.i18Next.language;\n    const languageObject = windowInstances.i18Next.getResourceBundle(languageString);\n    const numeralObject = windowInstances.numeral.localeData();\n    if (this.shouldValidateLocalization && !this.localization.skipValidation) {\n      this.shouldValidateLocalization = false;\n      validateLocalizationProps(this.chartID, {\n        ...this.localization,\n        language: languageObject,\n        numeralLocale: numeralObject\n      });\n    }\n  }\n\n  shouldValidateAccessibilityProps() {\n    if (this.shouldValidateAccessibility && !this.accessibility.disableValidation) {\n      this.shouldValidateAccessibility = false;\n      validateAccessibilityProps(\n        this.chartID,\n        { ...this.accessibility },\n        {\n          annotations: this.annotations,\n          data: this.data,\n          uniqueID: this.uniqueID,\n          context: {\n            mainTitle: this.mainTitle,\n            onClickEvent: this.suppressEvents ? undefined : this.clickEvent.emit\n          }\n        }\n      );\n    }\n  }\n\n  setDimensions() {\n    this.padding = typeof this.padding === 'string' ? getPadding(this.padding) : this.padding;\n    this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n    this.innerWidth = this.width - this.margin.left - this.margin.right;\n\n    this.innerPaddedHeight = this.innerHeight - this.padding.top - this.padding.bottom;\n    this.innerPaddedWidth = this.innerWidth - this.padding.left - this.padding.right;\n  }\n\n  validateInteractionKeys() {\n    this.innerInteractionKeys =\n      this.interactionKeys && this.interactionKeys.length ? this.interactionKeys : [this.seriesAccessor];\n\n    this.seriesInteraction =\n      this.innerInteractionKeys.length === 1 && this.innerInteractionKeys[0] === this.seriesAccessor;\n  }\n\n  getLanguageString() {\n    return getActiveLanguageString(this.localization);\n  }\n\n  setLocalizationConfig() {\n    configLocalization(this.localization);\n  }\n\n  setSubTitleElements() {\n    setSubTitle({\n      root: this.subTitleG,\n      subTitle: this.subTitle\n    });\n  }\n\n  setColors() {\n    this.rawColors = this.colors ? convertVisaColor(this.colors) : getColors(this.colorPalette, this.nest.length);\n    this.textColors = {};\n    let adjustedColors = this.rawColors;\n    this.strokes = {};\n    if (!this.accessibility.hideStrokes) {\n      adjustedColors = [];\n    }\n    this.rawColors.forEach(color => {\n      if (!this.accessibility.hideStrokes) {\n        const strokes = getAccessibleStrokes(color);\n        const adjusted = strokes.length === 2 ? strokes[1] : strokes[0];\n        this.strokes[color.toLowerCase()] = adjusted;\n        adjustedColors.push(adjusted);\n      }\n      this.textColors[color.toLowerCase()] = ensureTextContrast(color, '#ffffff', 4.5);\n    });\n    if (this.hoverStyle && this.hoverStyle.color) {\n      if (!this.accessibility.hideStrokes) {\n        const strokes = getAccessibleStrokes(this.hoverStyle.color);\n        const adjusted = strokes.length === 2 ? strokes[1] : strokes[0];\n        this.strokes[this.hoverStyle.color.toLowerCase()] = adjusted;\n      }\n      this.textColors[this.hoverStyle.color.toLowerCase()] = ensureTextContrast(this.hoverStyle.color, '#ffffff', 4.5);\n    }\n    if (this.clickStyle && this.clickStyle.color) {\n      if (!this.accessibility.hideStrokes) {\n        const strokes = getAccessibleStrokes(this.clickStyle.color);\n        const adjusted = strokes.length === 2 ? strokes[1] : strokes[0];\n        this.strokes[this.clickStyle.color.toLowerCase()] = adjusted;\n      }\n      this.textColors[this.clickStyle.color.toLowerCase()] = ensureTextContrast(this.clickStyle.color, '#ffffff', 4.5);\n    }\n    this.colorArr = adjustedColors;\n  }\n\n  innerScopeDataKeys() {\n    // generate scoped and formatted data for data-table component\n    // we also scope singleAccessor array in chartAccessors based on what is actually in the data\n    const innerChartSingleAccessors = [];\n    chartAccessors.singleAccessors.forEach(accessor => {\n      if (this[accessor] && min(this.data, d => d[this[accessor]]) !== undefined) {\n        innerChartSingleAccessors.push(accessor);\n      }\n    });\n    const innerChartAccessors = { ...chartAccessors, singleAccessors: innerChartSingleAccessors };\n    return scopeDataKeys(this, innerChartAccessors, 'parallel-plot');\n  }\n\n  setTableData() {\n    // generate scoped and formatted data for data-table component\n    const keys = this.innerScopeDataKeys();\n    this.tableData = getScopedData(this.data, keys);\n    this.tableColumns = Object.keys(keys);\n  }\n\n  prepareData() {\n    this.multiYScale = {};\n\n    this.data.map(d => {\n      const hashObject = this.hiddenHash[`${d[this.ordinalAccessor]}-${d[this.seriesAccessor] || 'b'}`];\n      if (\n        hashObject &&\n        (this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly) &&\n        !d['enter'] &&\n        !d['exit']\n      ) {\n        d['hidden'] = hashObject['data-label-hidden'];\n        d['auto-x'] = hashObject.x;\n        d['auto-y'] = hashObject.y;\n        d['auto-text-anchor'] = hashObject['text-anchor'];\n      }\n    });\n\n    this.nest = nest()\n      .key(d => {\n        if (!this.multiYScale[d[this.ordinalAccessor]]) {\n          this.multiYScale[d[this.ordinalAccessor]] = {\n            min: Infinity,\n            max: 0\n          };\n        }\n        if (this.multiYScale[d[this.ordinalAccessor]].min > d[this.valueAccessor]) {\n          this.multiYScale[d[this.ordinalAccessor]].min = d[this.valueAccessor];\n        }\n        if (this.multiYScale[d[this.ordinalAccessor]].max < d[this.valueAccessor]) {\n          this.multiYScale[d[this.ordinalAccessor]].max = d[this.valueAccessor];\n        }\n        return d[this.seriesAccessor];\n      })\n      .entries(this.data);\n\n    this.map = nest()\n      .key(d => d[this.seriesAccessor])\n      .map(this.data);\n\n    const keys = Object.keys(this.multiYScale);\n\n    keys.forEach(key => {\n      const scale = this.multiYScale[key];\n      const rangePadding = this.innerPaddedHeight * 0.05;\n      scale.y = scaleLinear()\n        .domain([\n          this.minValueOverride || this.minValueOverride === 0 ? this.minValueOverride : scale.min,\n          this.maxValueOverride || this.maxValueOverride === 0 ? this.maxValueOverride : scale.max\n        ])\n        .range([this.innerPaddedHeight - rangePadding, 0 + rangePadding]);\n      scale.ticks = [scale.y.invert(this.innerPaddedHeight), scale.y.invert(0)];\n    });\n  }\n\n  updateInterpolationData() {\n    if (this.interpolating) {\n      let change = this.nest.length;\n      this.nest.forEach(parent => {\n        parent.interpolate = {};\n\n        const left = this.interpolating.map.get(parent.key);\n        const right = parent.values;\n\n        if (!left) {\n          parent.interpolate.start = right;\n          parent.interpolate.end = right;\n        } else {\n          const resolved = resolveLines(left, right, this.ordinalAccessor);\n          if (!resolved.length) {\n            parent.interpolate.start = left;\n            parent.interpolate.end = right;\n            change--;\n          } else {\n            parent.interpolate.start = resolved[0];\n            parent.interpolate.end = resolved[1];\n          }\n        }\n      });\n      if (!change && this.nest.length === this.interpolating.length) {\n        this.interpolating = false;\n      }\n    }\n  }\n\n  prepareScales() {\n    if (this.nest) {\n      this.interpolating = this.nest;\n      const oldXDomain = this.x.domain();\n      const oldXRange = this.x.range();\n      const oldYDomain = this.y.domain();\n      const oldYRange = this.y.range();\n      this.interpolating.scales = this.scalesUsed;\n      this.interpolating.multiYScale = { ...this.multiYScale };\n      this.interpolating.x = this.x.domain(oldXDomain).range(oldXRange);\n      this.interpolating.y = scaleLinear()\n        .domain(oldYDomain)\n        .range(oldYRange);\n      this.interpolating.line = line()\n        .x(d => this.interpolating.x(d[this.ordinalAccessor]))\n        .y(d => {\n          if (this.interpolating.scales === 'individual') {\n            return this.interpolating.multiYScale[d[this.ordinalAccessor]].y(d[this.valueAccessor]);\n          }\n          return this.interpolating.y(d[this.valueAccessor]);\n        })\n        .curve(this.curveOptions[this.lineCurve] || this.curveOptions['linear']);\n      this.interpolating.map = this.map;\n    }\n\n    this.extent = {};\n    this.extent.minValue = min(this.data, d => parseFloat(d[this.valueAccessor]));\n    this.extent.maxValue = max(this.data, d => parseFloat(d[this.valueAccessor]));\n    // const extentPadding = Math.abs(this.extent.maxValue * 0.1 || this.extent.minValue * 0.1);\n    let paddedMin = 0 + this.innerPaddedHeight * 0.05;\n    let paddedMax = this.innerPaddedHeight - this.innerPaddedHeight * 0.05;\n\n    if (this.yAxis.scales === 'preNormalized') {\n      this.extent.minValue = 0;\n      this.extent.maxValue = 1;\n      paddedMin = 0;\n      paddedMax = this.innerPaddedHeight;\n    }\n\n    this.extent.minValue =\n      this.minValueOverride || this.minValueOverride === 0 ? this.minValueOverride : this.extent.minValue;\n    this.extent.maxValue =\n      this.maxValueOverride || this.maxValueOverride === 0 ? this.maxValueOverride : this.extent.maxValue;\n    paddedMin = this.minValueOverride || this.minValueOverride === 0 ? this.minValueOverride : paddedMin;\n    paddedMax = this.maxValueOverride || this.maxValueOverride === 0 ? this.maxValueOverride : paddedMax;\n    this.y = scaleLinear()\n      .domain([this.extent.minValue, this.extent.maxValue])\n      .range([paddedMax, paddedMin]);\n\n    // set xAxis scale : ordinal value\n    this.x = scalePoint()\n      .domain(this.data.map(d => d[this.ordinalAccessor]))\n      .range([0, this.innerPaddedWidth]);\n\n    this.line = line()\n      .x(d => this.x(d[this.ordinalAccessor]))\n      .y(d => {\n        if (this.yAxis.scales === 'individual') {\n          return this.multiYScale[d[this.ordinalAccessor]].y(d[this.valueAccessor]);\n        }\n        return this.y(d[this.valueAccessor]);\n      })\n      .curve(this.curveOptions[this.lineCurve] || this.curveOptions['linear']);\n  }\n\n  validateDataLabelAccessor() {\n    this.innerLabelAccessor =\n      this.dataLabel && this.dataLabel.labelAccessor ? this.dataLabel.labelAccessor : this.valueAccessor;\n  }\n\n  validateSeriesLabels() {\n    this.labelDetails = { ...this.seriesLabel };\n    if (!this.labelDetails.placement) {\n      this.labelDetails.placement = '';\n    }\n    if (!this.labelDetails.label || !this.labelDetails.label.length) {\n      this.labelDetails.label = '';\n    }\n\n    this.isRight = this.labelDetails.placement !== 'left';\n  }\n\n  setScaleUsed() {\n    this.scalesUsed = this.yAxis.scales;\n  }\n\n  renderRootElements() {\n    this.svg = select(this.parallelChartEl)\n      .select('.visa-viz-d3-parallel-container')\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    this.root = this.svg.append('g').attr('id', 'visa-viz-margin-container-g-' + this.chartID);\n    this.rootG = this.root.append('g').attr('id', 'visa-viz-padding-container-g-' + this.chartID);\n\n    this.gridG = this.rootG.append('g').attr('class', 'grid-group');\n  }\n\n  renderChartRootElemets() {\n    this.yGroup = this.rootG.append('g').attr('class', 'y-scales-group');\n    this.parallelLineG = this.rootG.append('g').attr('class', 'parallel-group parallel-line-group');\n    this.dotG = this.rootG.append('g').attr('class', 'parallel-group');\n    this.seriesLabelG = this.rootG.append('g').attr('class', 'parallel-series-wrapper');\n    this.labels = this.rootG.append('g').attr('class', 'parallel-dataLabel-group');\n    this.legendG = select(this.parallelChartEl)\n      .select('.parallel-legend')\n      .append('svg');\n\n    this.subTitleG = select(this.parallelChartEl).select('.parallel-sub-title');\n    this.tooltipG = select(this.parallelChartEl).select('.parallel-tooltip');\n\n    this.setTooltipInitialStyle();\n  }\n\n  // reset graph size based on window size\n  reSetRoot() {\n    const changeSvg = prepareRenderChange({\n      selection: this.svg,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeSvg\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    const changeRoot = prepareRenderChange({\n      selection: this.root,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRoot.attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n\n    const changeRootG = prepareRenderChange({\n      selection: this.rootG,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRootG.attr('transform', `translate(${this.padding.left}, ${this.padding.top})`);\n\n    setAccessibilityDescriptionWidth(this.chartID, this.width);\n  }\n\n  setGlobalSelections() {\n    const keys = Object.keys(this.multiYScale);\n    const dataBoundToAxes = this.yGroup.selectAll('.y-wrapper').data(keys, d => d);\n    this.yEnter = dataBoundToAxes.enter().append('g');\n    this.yExit = dataBoundToAxes.exit();\n    this.yUpdate = dataBoundToAxes.merge(this.yEnter);\n\n    const dataBoundToLines = this.parallelLineG.selectAll('.parallel-plot').data(this.nest, d => d.key);\n    this.enterLines = dataBoundToLines.enter().append('path');\n    this.exitLines = dataBoundToLines.exit();\n    this.updateLines = dataBoundToLines.merge(this.enterLines);\n    this.enterSize = this.enterLines.size();\n\n    const dataBoundToDotWrappers = this.dotG.selectAll('.parallel-dot-wrapper').data(this.nest, d => d.key);\n    this.enterDotWrappers = dataBoundToDotWrappers.enter().append('g');\n    this.exitDotWrappers = dataBoundToDotWrappers.exit();\n    this.updateDotWrappers = dataBoundToDotWrappers.merge(this.enterDotWrappers);\n\n    const dataBountToSeriesLabels = this.seriesLabelG.selectAll('.parallel-series-label').data(this.nest, d => d.key);\n    this.seriesLabelEnter = dataBountToSeriesLabels.enter().append('text');\n    this.seriesLabelExit = dataBountToSeriesLabels.exit();\n    this.seriesLabelUpdate = dataBountToSeriesLabels.merge(this.seriesLabelEnter);\n\n    const dataBoundToLabels = this.labels.selectAll('g').data(this.nest, d => d.key);\n    this.enteringLabelGroups = dataBoundToLabels.enter().append('g');\n    this.exitingLabelGroups = dataBoundToLabels.exit();\n    this.updatingLabelGroups = dataBoundToLabels.merge(this.enteringLabelGroups);\n\n    if (this.interpolating) {\n      this.updateDotWrappers.selectAll('circle').remove();\n\n      const dataBoundToDots = this.updateDotWrappers.selectAll('circle').data(d => d.interpolate.start);\n      this.enterDots = dataBoundToDots.enter().append('circle');\n      this.exitDots = dataBoundToDots.exit();\n      this.updateDots = dataBoundToDots.merge(this.enterDots);\n\n      this.updatingLabelGroups.selectAll('.parallel-dataLabel').remove();\n      const dataBoundToLabelChildren = this.updatingLabelGroups\n        .selectAll('.parallel-dataLabel')\n        .data(d => d.interpolate.start);\n      this.enteringLabels = dataBoundToLabelChildren.enter().append('text');\n      this.updatingLabels = dataBoundToLabelChildren.merge(this.enteringLabels);\n      //   // this.updatingLabels = this.updatingLabelGroups.selectAll('.line-dataLabel').data(d => d.interpolate.end);\n    } else {\n      const dataBoundToDots = this.updateDotWrappers\n        .selectAll('circle')\n        .data(d => d.values, d => d[this.ordinalAccessor]);\n\n      this.enterDots = dataBoundToDots.enter().append('circle');\n      this.exitDots = dataBoundToDots.exit();\n      this.updateDots = dataBoundToDots.merge(this.enterDots);\n\n      this.enterSize = this.enterDots.size();\n      this.exitSize = this.exitDots.size();\n\n      const dataBoundToLabelChildren = this.updatingLabelGroups\n        .selectAll('.parallel-dataLabel')\n        .data(d => d.values, d => d[this.ordinalAccessor]);\n\n      this.enteringLabels = dataBoundToLabelChildren.enter().append('text');\n      this.exitingLabels = dataBoundToLabelChildren.exit();\n      this.updatingLabels = dataBoundToLabelChildren.merge(this.enteringLabels);\n    }\n  }\n\n  setTestingAttributes() {\n    if (this.unitTest) {\n      select(this.parallelChartEl)\n        .select('.visa-viz-d3-parallel-container')\n        .attr('data-testid', 'chart-container');\n      select(this.parallelChartEl)\n        .select('.parallel-main-title')\n        .attr('data-testid', 'main-title');\n      select(this.parallelChartEl)\n        .select('.parallel-sub-title')\n        .attr('data-testid', 'sub-title');\n      this.svg.attr('data-testid', 'root-svg');\n      this.root.attr('data-testid', 'margin-container');\n      this.rootG.attr('data-testid', 'padding-container');\n      this.legendG.attr('data-testid', 'legend-container');\n      this.tooltipG.attr('data-testid', 'tooltip-container');\n      this.gridG.attr('data-testid', 'grid-group');\n\n      // y axes for parallel (different from any other chart)\n      this.yGroup.attr('data-testid', 'y-scales-group');\n      this.yUpdate.attr('data-testid', 'y-scale-wrapper'); // may need to add data-id to this?\n\n      // add test attributes to lines and series labels\n      this.parallelLineG.attr('data-testid', 'parallel-line-group');\n      this.updateLines.attr('data-testid', 'parallel-line').attr('data-id', d => `parallel-line-${d.key}`);\n      this.seriesLabelG.attr('data-testid', 'parallel-series-label-container');\n      this.seriesLabelUpdate\n        .attr('data-testid', 'parallel-series-label')\n        .attr('data-id', d => `parallel-series-label-${d.key}`);\n\n      // add test atttributes to line colors\n      this.dotG.attr('data-testid', 'marker-group');\n      this.updateDotWrappers.attr('data-testid', 'marker-series-group').attr('data-id', d => `marker-series-${d.key}`);\n      this.updateDots\n        .attr('data-testid', 'marker')\n        .attr('data-id', d => `marker-${d[this.seriesAccessor]}-${d[this.ordinalAccessor]}`);\n\n      // add test attributes to labels\n      this.labels.attr('data-testid', 'dataLabel-group-container');\n      this.updatingLabelGroups.attr('data-testid', 'dataLabel-group').attr('data-id', d => `dataLabel-group-${d.key}`);\n      this.updatingLabels\n        .attr('data-testid', 'dataLabel')\n        .attr('data-id', d => `dataLabel-${d[this.seriesAccessor]}-${d[this.ordinalAccessor]}`);\n\n      this.svg.select('defs').attr('data-testid', 'pattern-defs');\n    } else {\n      select(this.parallelChartEl)\n        .select('.visa-viz-d3-parallel-container')\n        .attr('data-testid', null);\n      select(this.parallelChartEl)\n        .select('.parallel-main-title')\n        .attr('data-testid', null);\n      select(this.parallelChartEl)\n        .select('.parallel-sub-title')\n        .attr('data-testid', null);\n      this.svg.attr('data-testid', null);\n      this.root.attr('data-testid', null);\n      this.rootG.attr('data-testid', null);\n      this.legendG.attr('data-testid', null);\n      this.tooltipG.attr('data-testid', null);\n      this.gridG.attr('data-testid', null);\n\n      this.yGroup.attr('data-testid', null);\n      this.yUpdate.attr('data-testid', null); // may need to add data-id to this?\n\n      // add test attributes to lines and series labels\n      this.parallelLineG.attr('data-testid', null);\n      this.updateLines.attr('data-testid', null).attr('data-id', null);\n      this.seriesLabelG.attr('data-testid', null);\n      this.seriesLabelUpdate.attr('data-testid', null).attr('data-id', null);\n\n      // add test atttributes to line colors\n      this.dotG.attr('data-testid', null);\n      this.updateDotWrappers.attr('data-testid', null).attr('data-id', null);\n      this.updateDots.attr('data-testid', null).attr('data-id', null);\n\n      // add test attributes to labels\n      this.labels.attr('data-testid', null);\n      this.updatingLabelGroups.attr('data-testid', null).attr('data-id', null);\n      this.updatingLabels.attr('data-testid', null).attr('data-id', null);\n\n      this.svg.select('defs').attr('data-testid', null);\n    }\n  }\n\n  // draw axis line\n  drawXAxis() {\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.ordinalAccessor]\n        ? this.dataKeyNames[this.ordinalAccessor]\n        : this.xAxis.label;\n\n    const bandWidth = (this.innerPaddedWidth / this.nest[0].values.length) * 0.7;\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.x,\n      left: false,\n      wrapLabel: this.wrapLabel ? bandWidth : '',\n      format: this.xAxis.format,\n      tickInterval: this.xAxis.tickInterval,\n      label: axisLabel, // this.xAxis.label,\n      padding: this.padding,\n      hide: !this.xAxis.visible,\n      duration: this.duration,\n      hidePath: true\n    });\n  }\n\n  enterYAxis() {\n    this.yEnter\n      .attr('class', 'y-wrapper')\n      .attr('transform', d => 'translate(' + this.x(d) + ',0)')\n      .attr('opacity', 0);\n  }\n\n  exitYAxis() {\n    this.yExit\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  drawYAxis() {\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.valueAccessor]\n        ? this.dataKeyNames[this.valueAccessor]\n        : this.yAxis.label;\n\n    this.yUpdate\n      .each((d, i, n) => {\n        const ticks =\n          this.yAxis.scales === 'individual'\n            ? this.multiYScale[d].ticks\n            : !this.yAxis.onlyTickExtents\n            ? this.yAxis.onlyTickExtents\n            : [this.extent.minValue, this.extent.maxValue];\n        const domain = this.multiYScale[d].y.domain();\n        const hideMe =\n          domain[0] === domain[1] ? true : i === 0 || this.yAxis.scales === 'individual' ? !this.yAxis.visible : true;\n        drawAxis({\n          root: select(n[i]),\n          height: this.innerPaddedHeight,\n          width: this.innerPaddedWidth,\n          axisScale: this.yAxis.scales === 'individual' ? this.multiYScale[d].y : this.y,\n          left: true,\n          wrapLabel: this.wrapLabel ? this.padding.left : '',\n          format: this.yAxis.format,\n          tickInterval: ticks ? 1 : this.yAxis.tickInterval,\n          label: this.yAxis.scales === 'individual' || hideMe ? '' : axisLabel, // this.yAxis.label,\n          padding: this.padding,\n          hide: hideMe,\n          hidePath: true,\n          duration: this.duration,\n          ticks\n        });\n      })\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('transform', d => 'translate(' + this.x(d) + ',0)')\n      .attr('opacity', 1);\n  }\n\n  setXAxisAccessibility() {\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.ordinalAccessor]\n        ? this.dataKeyNames[this.ordinalAccessor]\n        : this.xAxis.label;\n\n    setAccessXAxis({\n      rootEle: this.parallelChartEl,\n      hasXAxis: this.xAxis ? this.xAxis.visible : false,\n      xAxis: this.x ? this.x : false, // this is optional for some charts, if hasXAxis is always false\n      xAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasXAxis is always false\n    });\n  }\n\n  setYAxisAccessibility() {\n    const axisLabelX =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.ordinalAccessor]\n        ? this.dataKeyNames[this.ordinalAccessor]\n        : this.xAxis.label;\n\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.valueAccessor]\n        ? this.dataKeyNames[this.valueAccessor]\n        : this.yAxis.label;\n\n    setAccessYAxis({\n      rootEle: this.parallelChartEl,\n      hasYAxis: this.yAxis ? this.yAxis.visible : false,\n      yAxis: this.y ? this.y : false, // this is optional for some charts, if hasXAxis is always false\n      yAxisLabel: axisLabel ? axisLabel : '', // this is optional for some charts, if hasXAxis is always false\n      xAxisLabel: axisLabelX ? axisLabelX : '' // parallel uses this to label all the y axes\n    });\n  }\n\n  drawBaseline() {\n    drawAxis({\n      root: this.gridG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.x,\n      left: false,\n      padding: this.padding,\n      markOffset: this.y(0),\n      hide: !this.showBaselineX,\n      duration: this.duration\n    });\n  }\n  // dashed line grid for chart\n  drawXGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.x,\n      false,\n      false,\n      this.xAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  drawYGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.y,\n      true,\n      !this.yAxis.gridVisible,\n      this.yAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  // lines based on data\n  enterChartLines() {\n    this.enterLines.interrupt();\n\n    this.enterLines\n      .attr('class', 'parallel-plot entering')\n      .attr('d', d => this.line(d.values))\n      .attr('data-d', d => this.line(d.values))\n      .attr('data-translate-x', this.margin.left + this.padding.left)\n      .attr('data-translate-y', this.margin.top + this.padding.top);\n\n    this.enterLines\n      .attr('cursor', !this.suppressEvents && this.seriesInteraction ? this.cursor : null)\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onHoverHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .attr('stroke-dasharray', (d, i, n) => {\n        d.linelength = n[i].getTotalLength();\n        return d.linelength + ' ' + d.linelength;\n      })\n      .attr('stroke', this.handleLineStroke)\n      .attr('fill', 'none')\n      .attr('stroke-width', 0.1);\n  }\n\n  updateChartLines() {\n    this.updateLines.interrupt();\n\n    this.updateLines\n      .transition()\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('stroke-dashoffset', 0)\n      .attr('stroke-width', d => this.calculateStrokeWidth(d, true))\n      .call(transitionEndAll, () => {\n        this.updateLines.attr('stroke-dasharray', this.handleStrokeDasharray);\n      });\n\n    this.updateLines\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', d => {\n        const lineOpacity = this.secondaryLines.keys.includes(d.key) ? this.secondaryLines.opacity : 1;\n        if (!this.seriesInteraction) {\n          return lineOpacity;\n        } else if (this.secondaryLines.keys.includes(d.key)) {\n          return checkInteraction(\n            d.values[0],\n            this.secondaryLines.opacity,\n            Math.min(this.secondaryLines.opacity, this.hoverOpacity),\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        } else {\n          return checkInteraction(\n            d.values[0], // use first data point of each line to decide interaction highlight\n            lineOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        }\n      });\n  }\n\n  exitChartLines() {\n    this.exitLines.interrupt();\n\n    this.exitLines\n      .attr('stroke-dasharray', (d, i, n) => {\n        d.linelength = n[i].getTotalLength();\n        return d.linelength + ' ' + d.linelength;\n      })\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', 0)\n      .attr('stroke-dashoffset', d => d.linelength)\n      .attr('stroke-width', 0.1)\n      .remove();\n  }\n\n  drawChartLines() {\n    if (this.interpolating) {\n      this.updateLines.attr('d', (d, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          return this.line(d.values);\n        }\n        return this.interpolating.line(d.interpolate.start);\n      });\n    }\n\n    this.updateLines\n      .attr('stroke-width', d => this.calculateStrokeWidth(d, true))\n      .attr('stroke-dashoffset', d => d.linelength)\n      .attr('data-d', d => (this.interpolating ? this.line(d.interpolate.end) : this.line(d.values)))\n      .attr('data-translate-x', this.margin.left + this.padding.left)\n      .attr('data-translate-y', this.margin.top + this.padding.top)\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('d', d => (this.interpolating ? this.line(d.interpolate.end) : this.line(d.values)))\n      .call(transitionEndAll, () => {\n        this.updateLines\n          .classed('entering', false)\n          .attr('data-d', d => this.line(d.values))\n          .attr('d', d => this.line(d.values))\n          .attr('stroke-dasharray', this.handleStrokeDasharray);\n      });\n  }\n\n  dynamicY = d => {\n    if (this.yAxis.scales === 'individual') {\n      return this.multiYScale[d[this.ordinalAccessor]].y(d[this.valueAccessor]);\n    }\n    return this.y(d[this.valueAccessor]);\n  };\n\n  interpolateDynamicY = d => {\n    if (this.yAxis.scales === 'individual') {\n      return this.interpolating.multiYScale[d[this.ordinalAccessor]].y(d[this.valueAccessor]);\n    }\n    return this.interpolating.y(d[this.valueAccessor]);\n  };\n\n  enterPoints() {\n    this.enterDots.interrupt();\n\n    this.enterDotWrappers\n      .attr('class', 'parallel-dot-wrapper')\n      .attr('opacity', 0)\n      .attr('fill', (_, i) => this.rawColors[i] || this.rawColors[0])\n      // bind interactivity for keyboard nav if series interactivity is enabled\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onSeriesHoverHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .each((_, i, n) => {\n        // we bind accessible interactivity and semantics here (role, tabindex, etc)\n        initializeElementAccess(n[i]);\n      });\n\n    this.enterDots\n      .each((_d, i, n) => {\n        initializeElementAccess(n[i]);\n      })\n      .attr('stroke', this.handleDotStroke)\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .attr('data-fill', true)\n      .attr('data-translate-x', this.margin.left + this.padding.left)\n      .attr('data-translate-y', this.margin.top + this.padding.top)\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    if (this.interpolating) {\n      this.enterDots\n        .attr('cx', d => this.interpolating.x(d[this.ordinalAccessor]))\n        .attr('cy', this.interpolateDynamicY)\n        .attr('r', d =>\n          d.enter\n            ? 0\n            : checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        )\n        .attr('stroke-width', d => this.calculateStrokeWidth(d));\n\n      this.enterDotWrappers\n        .selectAll('circle')\n        .attr('r', 0)\n        .attr('cx', d => this.x(d[this.ordinalAccessor]))\n        .attr('cy', this.dynamicY)\n        .attr('opacity', 0);\n    }\n    this.updateDotWrappers.order();\n    this.updateDots.order();\n  }\n\n  updatePoints() {\n    // this.updateDotWrappers.interrupt();\n    this.updateDots.interrupt();\n    const dotOpacity = this.showDots ? 1 : 0;\n\n    this.updateDots.attr('tabindex', (_, index) => (index === 0 ? '0' : '-1'));\n\n    this.updateDotWrappers.attr('opacity', d => {\n      const lineDotOpacity = this.secondaryLines.keys.includes(d.key) ? this.secondaryLines.opacity : dotOpacity;\n      return lineDotOpacity;\n    });\n\n    if (this.interpolating) {\n      this.updateDots.attr('opacity', d => {\n        this.exitSize += d.exit ? 1 : 0;\n        this.enterSize += d.enter ? 1 : 0;\n        return d.enter ? 0 : 1;\n      });\n      this.updateDots = this.updateDotWrappers\n        .selectAll('circle')\n        .data(d => d.interpolate.end)\n        .classed('exiting', d => d.exit);\n\n      this.enterDotWrappers.selectAll('circle').each(d => {\n        d.enterWholeGroup = true;\n      });\n\n      this.updateDots\n        .transition('opacity')\n        .ease(easeCircleIn)\n        .duration(d => {\n          if (d.enterWholeGroup) {\n            return this.duration / 2;\n          }\n          return this.duration;\n        })\n        .delay((d, i, n) => {\n          if (d.enterWholeGroup) {\n            return this.duration * 0.75 * (i / (n.length - 1));\n          }\n          return 0;\n        })\n        .attr('opacity', d => {\n          return checkInteraction(\n            d,\n            dotOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        });\n    } else {\n      this.updateDots\n        .transition('opacity')\n        .ease(easeCircleIn)\n        .duration(this.duration)\n        .attr('opacity', d => {\n          return checkInteraction(\n            d,\n            dotOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        });\n    }\n  }\n\n  exitPoints() {\n    this.exitDots.interrupt();\n\n    this.exitDots\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', 0)\n      .attr('r', 0);\n\n    this.exitDotWrappers\n      .selectAll('circle')\n      .each(d => {\n        d.exitWholeGroup = true;\n      })\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .delay((_, i, n) => {\n        return this.duration - this.duration * (i / (n.length - 1));\n      })\n      .attr('opacity', 0)\n      .attr('r', 0);\n\n    // this new transtition ensures that the chart counts and all labels\n    // correctly reflect the newest information\n    this.updateDots\n      .transition('accessibilityAfterExit')\n      .duration(this.duration / 2)\n      .delay((_, i, n) => {\n        return this.duration - this.duration * (i / (n.length - 1));\n      })\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        // before we exit geometries, we need to check if a focus exists or not\n        const focusDidExist = checkAccessFocus(this.rootG.node());\n        // then we must remove the exiting elements\n        this.exitDots.remove();\n        this.exitDotWrappers.remove();\n        this.svg.selectAll('.exiting').remove();\n        // updateDots/labels will keep references to the removed elements unless we reassign\n        this.updateDots = this.updateDotWrappers.selectAll('circle');\n        this.updatingLabels = this.updatingLabelGroups.selectAll('.parallel-dataLabel');\n        // then our util can count geometries\n        this.setChartCountAccessibility();\n        // our group's label should update with new counts too\n        this.setGroupAccessibilityID();\n        // since items exited, labels must receive updated values\n        this.setGeometryAriaLabels();\n        // and also make sure the user's focus isn't lost\n        retainAccessFocus({\n          parentGNode: this.rootG.node(),\n          focusDidExist\n          // recursive: true\n        });\n      });\n  }\n\n  // draw dots\n  drawPoints() {\n    let updateTransition;\n\n    if (this.interpolating) {\n      updateTransition = this.updateDots\n        .attr('data-cx', d => this.x(d[this.ordinalAccessor]))\n        .attr('data-cy', this.dynamicY)\n        .attr('data-translate-x', this.margin.left + this.padding.left)\n        .attr('data-translate-y', this.margin.top + this.padding.top)\n        .attr('data-r', d =>\n          d.exit\n            ? 0\n            : checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        )\n        .transition('update')\n        .ease(easeCircleIn)\n        .duration(d => {\n          if (d.enterWholeGroup) {\n            return this.duration / 2;\n          }\n          return this.duration;\n        })\n        .delay((d, i, n) => {\n          if (d.enterWholeGroup) {\n            return this.duration * 0.75 * (i / (n.length - 1));\n          }\n          return 0;\n        })\n        .attr('r', d =>\n          d.exit\n            ? 0\n            : checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        )\n        .attr('stroke-width', d => this.calculateStrokeWidth(d));\n    } else {\n      updateTransition = this.updateDots\n        .attr('data-cx', d => this.x(d[this.ordinalAccessor]))\n        .attr('data-cy', this.dynamicY)\n        .attr('data-translate-x', this.margin.left + this.padding.left)\n        .attr('data-translate-y', this.margin.top + this.padding.top)\n        .attr('data-r', d =>\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        )\n        .attr('r', d =>\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n            : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n            ? this.dotRadius +\n              (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n            : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n            ? this.dotRadius + 0.5\n            : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n        )\n        .attr('stroke-width', d => this.calculateStrokeWidth(d))\n        .transition('update')\n        .ease(easeCircleIn)\n        .duration(this.duration);\n    }\n    this.updateDots.attr('stroke', this.handleDotStroke);\n    updateTransition\n      .attr('cx', d => this.x(d[this.ordinalAccessor]))\n      .attr('cy', this.dynamicY)\n      .call(transitionEndAll, () => {\n        this.updateDots.each(d => {\n          d.enterWholeGroup = false;\n          d.enter = false;\n        });\n        // we must make sure if geometries move, that our focus indicator does too\n        retainAccessFocus({\n          parentGNode: this.rootG.node()\n        });\n\n        // now we can emit the event that transitions are complete\n        this.transitionEndEvent.emit({ chartID: this.chartID });\n      });\n  }\n\n  enterSeriesLabels() {\n    this.seriesLabelEnter.interrupt();\n\n    this.seriesLabelEnter\n      .attr('class', 'parallel-series-label')\n      .attr('cursor', !this.suppressEvents && this.seriesInteraction ? this.cursor : null)\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onSeriesHoverHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .attr('fill', this.handleSeriesTextFill)\n      .attr('x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n      .attr('y', d => {\n        if (this.yAxis.scales === 'individual') {\n          return this.isRight\n            ? this.multiYScale[d.values[d.values.length - 1][this.ordinalAccessor]].y(\n                d.values[d.values.length - 1][this.valueAccessor]\n              )\n            : this.multiYScale[d.values[0][this.ordinalAccessor]].y(d.values[0][this.valueAccessor]);\n        }\n        return this.isRight\n          ? this.y(d.values[d.values.length - 1][this.valueAccessor])\n          : this.y(d.values[0][this.valueAccessor]);\n      })\n      // .attr('dx', (_, i, n) => {\n      //   const textElement = n[i];\n      //   const style = getComputedStyle(textElement);\n      //   const fontSize = parseFloat(style.fontSize);\n      //   const textWidth = getTextWidth(textElement.textContent, fontSize, true, style.fontFamily);\n      //   return this.isRight ? 0 : -(textWidth + 5);\n      // })\n      .attr('dx', this.isRight ? '0.3em' : '-0.3em')\n      .attr('dy', this.dataLabel && this.dataLabel.placement === 'top-right' ? '0.9em' : '-0.5em')\n      .attr('text-anchor', this.isRight ? 'start' : 'end')\n      .attr('opacity', d => {\n        const seriesLabelOpacity = !this.seriesLabel.visible\n          ? 0\n          : this.secondaryLines.keys.includes(d.key)\n          ? this.secondaryLines.opacity\n          : 1;\n\n        return checkInteraction(\n          d.values[0],\n          seriesLabelOpacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        ) < 1\n          ? 0\n          : Number.EPSILON;\n      });\n  }\n\n  updateSeriesLabels() {\n    this.seriesLabelUpdate.interrupt();\n\n    this.seriesLabelUpdate\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', d => {\n        const seriesLabelOpacity = !this.seriesLabel.visible\n          ? 0\n          : this.secondaryLines.keys.includes(d.key)\n          ? this.secondaryLines.opacity\n          : 1;\n        // check if innerInteractionKeys includes seriesAccessor, if not then don't check seriesLabel for interaction\n        if (!this.seriesInteraction) {\n          return seriesLabelOpacity;\n        } else if (this.secondaryLines.keys.includes(d.key)) {\n          return checkInteraction(\n            d.values[0],\n            seriesLabelOpacity,\n            Math.min(this.secondaryLines.opacity, this.hoverOpacity),\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        } else {\n          return checkInteraction(\n            d.values[0],\n            seriesLabelOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        }\n      });\n  }\n\n  exitSeriesLabels() {\n    this.seriesLabelExit.interrupt();\n\n    this.seriesLabelExit\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  drawSeriesLabels() {\n    const hideOnly = this.labelDetails.placement !== 'auto' && this.labelDetails.collisionHideOnly;\n    const seriesUpdate = this.seriesLabelUpdate\n      .attr('fill', this.handleSeriesTextFill)\n      .text((d, i) =>\n        this.secondaryLines.keys.includes(d.key) && !this.secondaryLines.showSeriesLabel\n          ? ''\n          : this.labelDetails.label\n          ? this.labelDetails.label[i]\n          : !d.key || d.key === 'undefined'\n          ? ''\n          : d.key\n      )\n      .style('visibility', (_, i, n) =>\n        this.labelDetails.placement === 'auto' || this.labelDetails.collisionHideOnly\n          ? select(n[i]).style('visibility')\n          : null\n      )\n      .attr('data-x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n      .attr('data-y', (d, i, n) => {\n        const textElement = n[i];\n        const style = getComputedStyle(textElement);\n        const fontSize = parseFloat(style.fontSize);\n        const textHeight = Math.max(fontSize - 1, 1); // clone.getBBox().height;\n\n        if (this.yAxis.scales === 'individual') {\n          return this.isRight\n            ? this.multiYScale[d.values[d.values.length - 1][this.ordinalAccessor]].y(\n                d.values[d.values.length - 1][this.valueAccessor]\n              )\n            : this.multiYScale[d.values[0][this.ordinalAccessor]].y(d.values[0][this.valueAccessor]);\n        }\n        return this.isRight\n          ? this.y(d.values[d.values.length - 1][this.valueAccessor]) + 0.4 * textHeight\n          : this.y(d.values[0][this.valueAccessor]) + 0.4 * textHeight;\n      })\n      .attr('dx', this.isRight ? '0.3em' : '-0.3em')\n      .attr('dy', this.dataLabel && this.dataLabel.placement === 'top-right' ? '0.9em' : '-0.5em')\n      .attr('data-use-dx', hideOnly)\n      .attr('data-use-dy', hideOnly)\n      .attr('data-translate-x', this.margin.left + this.padding.left)\n      .attr('data-translate-y', this.margin.top + this.padding.top)\n      .attr('data-text-anchor', this.isRight ? 'start' : 'end')\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration);\n\n    if (this.labelDetails.visible && (this.labelDetails.placement === 'auto' || this.labelDetails.collisionHideOnly)) {\n      this.bitmaps = resolveLabelCollision({\n        bitmaps: this.bitmaps,\n        labelSelection: seriesUpdate,\n        avoidMarks: [this.updateDots], // this will link the series label to the last point in the line\n        validPositions: hideOnly ? ['middle'] : ['middle', 'top', 'bottom'],\n        offsets: hideOnly ? [1] : [1, 4, 4],\n        accessors: ['key'],\n        size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n        hideOnly: this.labelDetails.visible && hideOnly\n      });\n\n      // if we are in hide only we still need to place the labels\n      if (hideOnly) {\n        seriesUpdate\n          .attr('text-anchor', this.isRight ? 'start' : 'end')\n          .attr('x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n          .attr('y', d => {\n            if (this.yAxis.scales === 'individual') {\n              return this.isRight\n                ? this.multiYScale[d.values[d.values.length - 1][this.ordinalAccessor]].y(\n                    d.values[d.values.length - 1][this.valueAccessor]\n                  )\n                : this.multiYScale[d.values[0][this.ordinalAccessor]].y(d.values[0][this.valueAccessor]);\n            }\n            return this.isRight\n              ? this.y(d.values[d.values.length - 1][this.valueAccessor])\n              : this.y(d.values[0][this.valueAccessor]);\n          })\n          .attr('dx', this.isRight ? '0.3em' : '-0.3em')\n          .attr('dy', this.dataLabel && this.dataLabel.placement === 'top-right' ? '0.9em' : '-0.5em');\n      }\n    } else {\n      seriesUpdate\n        .attr('text-anchor', this.isRight ? 'start' : 'end')\n        .attr('x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n        .attr('y', d => {\n          if (this.yAxis.scales === 'individual') {\n            return this.isRight\n              ? this.multiYScale[d.values[d.values.length - 1][this.ordinalAccessor]].y(\n                  d.values[d.values.length - 1][this.valueAccessor]\n                )\n              : this.multiYScale[d.values[0][this.ordinalAccessor]].y(d.values[0][this.valueAccessor]);\n          }\n          return this.isRight\n            ? this.y(d.values[d.values.length - 1][this.valueAccessor])\n            : this.y(d.values[0][this.valueAccessor]);\n        })\n        .attr('dx', this.isRight ? '0.3em' : '-0.3em')\n        .attr('dy', this.dataLabel && this.dataLabel.placement === 'top-right' ? '0.9em' : '-0.5em');\n    }\n  }\n\n  enterDataLabels() {\n    this.enteringLabels.interrupt();\n\n    this.enteringLabelGroups\n      .attr('class', 'parallel-label-wrapper')\n      .attr('opacity', 0)\n      .attr('fill', (_, i) => this.rawColors[i] || this.rawColors[0]);\n\n    this.enteringLabels\n      .attr('opacity', 0)\n      .attr('fill', this.handleTextFill)\n      .attr('class', 'parallel-dataLabel')\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    if (this.interpolating) {\n      const childrenEnter = this.enteringLabels.attr('class', 'parallel-dataLabel').attr('opacity', Number.EPSILON);\n\n      placeDataLabels({\n        root: childrenEnter,\n        xScale: this.interpolating.x,\n        yScale: this.interpolateDynamicY,\n        ordinalAccessor: this.ordinalAccessor,\n        valueAccessor: this.valueAccessor,\n        placement: this.dataLabel.placement,\n        chartType: 'parallel'\n      });\n\n      this.updatingLabels.attr('opacity', d => (d.enter ? Number.EPSILON : 1));\n\n      const fullEnter = this.enteringLabelGroups.selectAll('.parallel-dataLabel').attr('opacity', Number.EPSILON);\n\n      placeDataLabels({\n        root: fullEnter,\n        xScale: this.x,\n        yScale: this.dynamicY,\n        ordinalAccessor: this.ordinalAccessor,\n        valueAccessor: this.valueAccessor,\n        placement: this.dataLabel.placement,\n        chartType: 'parallel'\n      });\n    } else {\n      const childrenEnter = this.enteringLabels.attr('opacity', Number.EPSILON).attr('class', 'parallel-dataLabel');\n\n      placeDataLabels({\n        root: childrenEnter,\n        xScale: this.x,\n        yScale: this.dynamicY,\n        ordinalAccessor: this.ordinalAccessor,\n        valueAccessor: this.valueAccessor,\n        placement: this.dataLabel.placement,\n        chartType: 'parallel'\n      });\n    }\n    // now we check whether we have auto collision to consider\n    if (this.dataLabel.placement === 'auto') {\n      this.updatingLabels.each((d, i, n) => {\n        // we check hash for each updated label, don't touch enter/exit/hidden stuff at all\n        if (\n          !d.enter &&\n          !d.exit &&\n          !d.hidden &&\n          (d['auto-x'] || d['auto-x'] === 0) &&\n          (d['auto-y'] || d['auto-y'] === 0)\n        ) {\n          select(n[i])\n            .attr('x', +select(n[i]).attr('x') + (+d['auto-x'] || 0))\n            .attr('y', +select(n[i]).attr('y') + (+d['auto-y'] || 0))\n            .attr('text-anchor', d['auto-text-anchor']);\n        }\n      });\n    }\n  }\n\n  updateDataLabels() {\n    this.updatingLabelGroups.interrupt();\n\n    this.updatingLabelGroups.attr('opacity', d => {\n      const labelOpacity = !this.dataLabel.visible\n        ? 0\n        : this.secondaryLines.keys.includes(d.key) && this.secondaryLines.showDataLabel\n        ? this.secondaryLines.opacity\n        : this.secondaryLines.keys.includes(d.key) && !this.secondaryLines.showDataLabel\n        ? 0\n        : 1;\n      return labelOpacity;\n    });\n\n    if (this.interpolating) {\n      this.updatingLabels = this.updatingLabelGroups\n        .selectAll('.parallel-dataLabel')\n        .data(d => d.interpolate.end)\n        .classed('exiting', d => d.exit);\n\n      this.enteringLabelGroups.each(d => (d.enterWholeGroup = true));\n\n      this.updatingLabels\n        .transition('opacity')\n        .ease(easeCircleIn)\n        .duration(d => {\n          if (d.enterWholeGroup) {\n            return this.duration / 2;\n          }\n          return this.duration;\n        })\n        .delay((d, i, n) => {\n          if (d.enterWholeGroup) {\n            return this.duration * 0.75 * (i / (n.length - 1));\n          }\n          return 0;\n        })\n        .attr('opacity', (d, i, n) => {\n          const targetOpacity = d.exit\n            ? 0\n            : checkInteraction(\n                d,\n                1,\n                this.hoverOpacity,\n                this.hoverHighlight,\n                this.clickHighlight,\n                this.innerInteractionKeys\n              ) < 1\n            ? 0\n            : 1;\n          const parentOpacity = +select(n[i].parentNode).attr('opacity');\n          select(n[i]).attr('data-hidden', parentOpacity === 0 || targetOpacity === 0 ? 'true' : null);\n          return targetOpacity;\n        });\n    } else {\n      this.updatingLabels.attr('opacity', (d, i, n) => {\n        const targetOpacity = d.exit\n          ? 0\n          : checkInteraction(\n              d,\n              1,\n              this.hoverOpacity,\n              this.hoverHighlight,\n              this.clickHighlight,\n              this.innerInteractionKeys\n            ) < 1\n          ? 0\n          : 1;\n        const parentOpacity = +select(n[i].parentNode).attr('opacity');\n        select(n[i]).attr('data-hidden', parentOpacity === 0 || targetOpacity === 0 ? 'true' : null);\n        return targetOpacity;\n      });\n    }\n  }\n\n  exitDataLabels() {\n    this.exitingLabels.interrupt();\n\n    this.exitingLabels\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', 0)\n      .remove();\n\n    this.exitingLabelGroups\n      .selectAll('.parallel-dataLabel')\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .delay((_, i, n) => {\n        return this.duration - this.duration * (i / (n.length - 1));\n      })\n      .attr('opacity', 0)\n      .call(transitionEndAll, () => {\n        this.exitingLabelGroups.remove();\n      });\n  }\n\n  drawDataLabels() {\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n\n    let updateChildren = this.updatingLabels.text(d => {\n      return formatDataLabel(d, this.innerLabelAccessor, this.dataLabel.format);\n    });\n    if (this.interpolating) {\n      updateChildren = this.updatingLabels\n        .style('visibility', (d, i, n) =>\n          this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly\n            ? d.hidden\n              ? 'hidden'\n              : select(n[i]).style('visibility')\n            : null\n        )\n        .attr('data-x', d => this.interpolating.x(d[this.ordinalAccessor]))\n        .attr('data-y', this.interpolateDynamicY)\n        .attr('data-translate-x', this.margin.left + this.padding.left)\n        .attr('data-translate-y', this.margin.top + this.padding.top)\n        .transition('update')\n        .ease(easeCircleIn)\n        .duration(d => {\n          if (d.enterWholeGroup) {\n            return this.duration / 2;\n          }\n          return this.duration;\n        })\n        .delay((d, i, n) => {\n          if (d.enterWholeGroup) {\n            return this.duration * 0.75 * (i / (n.length - 1));\n          }\n          return 0;\n        });\n    } else {\n      updateChildren = this.updatingLabels\n        .style('visibility', (d, i, n) =>\n          this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly\n            ? d.hidden\n              ? 'hidden'\n              : select(n[i]).style('visibility')\n            : null\n        )\n        .attr('data-x', d => this.x(d[this.ordinalAccessor]))\n        .attr('data-y', this.dynamicY)\n        .attr('data-translate-x', this.margin.left + this.padding.left)\n        .attr('data-translate-y', this.margin.top + this.padding.top)\n        .transition('update')\n        .ease(easeCircleIn)\n        .duration(this.duration);\n    }\n\n    const axisRules = this.gridG\n      .selectAll('line')\n      .attr('data-y2', this.innerPaddedHeight)\n      .attr('data-y1', 0)\n      .attr('data-translate-x', this.margin.left + this.padding.left)\n      .attr('data-translate-y', this.margin.top + this.padding.top)\n      .attr('data-x1', d => this.x(d))\n      .attr('data-x2', d => this.x(d));\n\n    const yAxisTexts = this.yUpdate\n      .selectAll('.y.axis')\n      .filter((_, i, n) => +select(n[i]).attr('opacity') >= 0.0001) // this filter has an issue with transitions\n      .selectAll('text')\n      .attr('data-fill', true)\n      .attr('data-y', d => this.y(d))\n      .attr('data-width', (_, i, n) => {\n        const textElement = n[i];\n        const style = getComputedStyle(textElement);\n        const fontSize = parseFloat(style.fontSize);\n        const textHeight = Math.max(fontSize - 1, 1); // clone.getBBox().height;\n        const textWidth = getTextWidth(textElement.textContent, fontSize, true, style.fontFamily);\n        select(textElement)\n          .attr('data-x', +select(textElement).attr('x'))\n          .attr('data-translate-x', this.margin.left + this.padding.left - textWidth)\n          .attr('data-translate-y', this.margin.top + this.padding.top - textHeight / 2)\n          .attr('data-height', textHeight);\n        return textWidth;\n      });\n\n    const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n    const validPositions = hideOnly\n      ? ['middle']\n      : collisionPlacement && this.collisionSettings[collisionPlacement] // check whether placement provided maps correctly\n      ? this.collisionSettings[collisionPlacement].validPositions\n      : this.collisionSettings['all'].validPositions;\n    const offsets = hideOnly\n      ? [1]\n      : collisionPlacement && this.collisionSettings[collisionPlacement] // check whether placement provided maps correctly\n      ? this.collisionSettings[collisionPlacement].offsets\n      : this.collisionSettings['all'].offsets;\n\n    this.bitmaps = placeDataLabels({\n      root: updateChildren,\n      xScale: this.x,\n      yScale: this.dynamicY,\n      ordinalAccessor: this.ordinalAccessor,\n      valueAccessor: this.valueAccessor,\n      placement: this.dataLabel.placement,\n      chartType: 'parallel',\n      avoidCollision: {\n        runOccupancyBitmap: this.dataLabel.visible && this.dataLabel.placement === 'auto',\n        labelSelection: updateChildren,\n        avoidMarks: [yAxisTexts, axisRules, this.updateLines, this.updateDots],\n        validPositions,\n        offsets,\n        accessors: [this.ordinalAccessor, this.seriesAccessor, 'key'], // key is created for lines by nesting done in line,\n        size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n        hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly\n      }\n    });\n\n    // we need to maintain some values since parallel has customized lifecycle setup\n    updateChildren.call(transitionEndAll, () => {\n      this.hiddenHash = {}; // empty out hash each time to be safe\n      this.updatingLabels.each((d, i, n) => {\n        // store results to hash so we can use them in lifecycle (specific to line/parallel lifecycle only)\n        this.hiddenHash[`${d[this.ordinalAccessor]}-${d[this.seriesAccessor] || 'b'}`] = {\n          'data-label-hidden': select(n[i]).attr('data-label-hidden') === 'true',\n          x: +select(n[i]).attr('x') - +select(n[i]).attr('data-x'),\n          y: +select(n[i]).attr('y') - +select(n[i]).attr('data-y'),\n          'text-anchor': select(n[i]).attr('text-anchor')\n        };\n      });\n    });\n  }\n\n  updateInteractionState() {\n    // we created an \"opacity\" transition namespace in update's transition\n    // we override it here to instantly display opacity state (below)\n    this.updateLines.interrupt('opacity');\n\n    // the lifecycle state does not matter (enter/update/exit)\n    // since interaction state can happen at any time\n    this.updateLines.attr('opacity', d => {\n      const lineOpacity = this.secondaryLines.keys.includes(d.key) ? this.secondaryLines.opacity : 1;\n      if (!this.seriesInteraction) {\n        return lineOpacity;\n      } else if (this.secondaryLines.keys.includes(d.key)) {\n        return checkInteraction(\n          d.values[0],\n          this.secondaryLines.opacity,\n          Math.min(this.secondaryLines.opacity, this.hoverOpacity),\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        );\n      } else {\n        return checkInteraction(\n          d.values[0], // use first data point of each line to decide interaction highlight\n          lineOpacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        );\n      }\n    });\n\n    const dotOpacity = this.showDots ? 1 : 0;\n    this.updateDotWrappers.attr('opacity', d => {\n      const lineDotOpacity = this.secondaryLines.keys.includes(d.key) ? this.secondaryLines.opacity : dotOpacity;\n      return lineDotOpacity;\n    });\n\n    this.updateDots.each((d, i, n) => {\n      if (!d.enter && !d.enterWholeGroup && !d.exit && !d.exitWholeGroup) {\n        select(n[i]).attr('opacity', () => {\n          return checkInteraction(\n            d,\n            dotOpacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          );\n        });\n      }\n    });\n\n    retainAccessFocus({\n      parentGNode: this.rootG.node()\n    });\n\n    setLegendInteractionState({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.seriesAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.hoverStyle,\n      clickStyle: this.clickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  setSeriesLabelOpacity() {\n    const hideOnly = this.labelDetails.placement !== 'auto' && this.labelDetails.collisionHideOnly;\n    const addCollisionClass = this.labelDetails.placement === 'auto' || hideOnly;\n\n    this.seriesLabelUpdate.each((d, i, n) => {\n      const me = select(n[i]);\n      const prevOpacity = +me.attr('opacity');\n      const styleVisibility = me.style('visibility');\n      if (!me.classed('entering')) {\n        me.attr('opacity', () => {\n          const seriesLabelOpacity =\n            (!this.seriesLabel.visible\n              ? 0\n              : this.secondaryLines.keys.includes(d.key)\n              ? this.secondaryLines.opacity\n              : 1) < 1\n              ? 0\n              : 1;\n          const parentOpacity = +select(n[i].parentNode).attr('opacity');\n          me.attr('data-hidden', parentOpacity === 0 || seriesLabelOpacity === 0 ? 'true' : null);\n          // check if innerInteractionKeys includes seriesAccessor, if not then don't check seriesLabel for interaction\n          if (!this.seriesInteraction) {\n            select(n[i]).attr('data-hidden', seriesLabelOpacity === 0 ? 'true' : null);\n            if (prevOpacity !== seriesLabelOpacity && (this.labelDetails.placement === 'auto' || hideOnly)) {\n              if (seriesLabelOpacity === 1) {\n                select(n[i])\n                  .classed('collision-added', true)\n                  .style('visibility', null);\n              } else {\n                select(n[i]).classed('collision-removed', true);\n              }\n            }\n            return seriesLabelOpacity;\n          } else if (this.secondaryLines.keys.includes(d.key)) {\n            const targetOpacity =\n              checkInteraction(\n                d.values[0],\n                seriesLabelOpacity,\n                Math.min(this.secondaryLines.opacity, this.hoverOpacity),\n                this.hoverHighlight,\n                this.clickHighlight,\n                this.innerInteractionKeys\n              ) < 1\n                ? 0\n                : 1;\n            select(n[i]).attr('data-hidden', targetOpacity === 0 ? 'true' : null);\n            if (\n              ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n              (this.labelDetails.placement === 'auto' || hideOnly)\n            ) {\n              if (targetOpacity === 1) {\n                select(n[i])\n                  .classed('collision-added', true)\n                  .style('visibility', null);\n              } else {\n                select(n[i]).classed('collision-removed', true);\n              }\n            }\n            return targetOpacity;\n          } else {\n            const targetOpacity =\n              checkInteraction(\n                d.values[0],\n                seriesLabelOpacity,\n                this.hoverOpacity,\n                this.hoverHighlight,\n                this.clickHighlight,\n                this.innerInteractionKeys\n              ) < 1\n                ? 0\n                : 1;\n            select(n[i]).attr('data-hidden', targetOpacity === 0 ? 'true' : null);\n            if (\n              ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n              (this.labelDetails.placement === 'auto' || hideOnly)\n            ) {\n              if (targetOpacity === 1) {\n                select(n[i])\n                  .classed('collision-added', true)\n                  .style('visibility', null);\n              } else {\n                select(n[i]).classed('collision-removed', true);\n              }\n            }\n            return targetOpacity;\n          }\n        });\n      }\n    });\n\n    if (addCollisionClass) {\n      const labelsAdded = this.seriesLabelUpdate\n        .filter((_, i, n) => select(n[i]).classed('collision-added'))\n        .attr(\n          'data-text-anchor',\n          (_, i, n) => select(n[i]).attr('collision-text-anchor') || select(n[i]).attr('data-text-anchor')\n        )\n        .attr('collision-text-anchor', null);\n      const labelsRemoved = this.seriesLabelUpdate\n        .filter((_, i, n) => select(n[i]).classed('collision-removed'))\n        .attr('data-use-dx', hideOnly)\n        .attr('data-use-dy', hideOnly)\n        .attr('keep-data-y', hideOnly)\n        .attr('collision-text-anchor', (_, i, n) => select(n[i]).attr('data-text-anchor'))\n        .attr('data-text-anchor', null); // need this for remove only\n\n      // we can now remove labels as well if we need to...\n      if (labelsRemoved.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsRemoved,\n          avoidMarks: [], // [this.updateDots], // this will link the series label to the last point in the line\n          validPositions: ['middle'],\n          offsets: [1],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n          hideOnly: false,\n          removeOnly: true\n        });\n\n        // remove temporary class now\n        labelsRemoved.classed('collision-removed', false).attr('keep-data-y', null);\n      }\n\n      // we can now add labels as well if we need to...\n      if (labelsAdded.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsAdded,\n          avoidMarks: [this.updateDots], // this will link the series label to the last point in the line\n          validPositions: hideOnly ? ['middle'] : ['middle', 'top', 'bottom'],\n          offsets: hideOnly ? [1] : [1, 4, 4],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n          hideOnly: this.labelDetails.visible && hideOnly\n        });\n\n        // if we are in hide only we still need to place the labels\n        if (hideOnly) {\n          labelsAdded\n            .attr('text-anchor', this.isRight ? 'start' : 'end')\n            .attr('x', this.isRight ? this.innerPaddedWidth + 10 : 0)\n            .attr('y', d => {\n              if (this.yAxis.scales === 'individual') {\n                return this.isRight\n                  ? this.multiYScale[d.values[d.values.length - 1][this.ordinalAccessor]].y(\n                      d.values[d.values.length - 1][this.valueAccessor]\n                    )\n                  : this.multiYScale[d.values[0][this.ordinalAccessor]].y(d.values[0][this.valueAccessor]);\n              }\n              return this.isRight\n                ? this.y(d.values[d.values.length - 1][this.valueAccessor])\n                : this.y(d.values[0][this.valueAccessor]);\n            })\n            .attr('dx', this.isRight ? '0.3em' : '-0.3em')\n            .attr('dy', this.dataLabel && this.dataLabel.placement === 'top-right' ? '0.9em' : '-0.5em');\n        }\n        // remove temporary class now\n        labelsAdded.classed('collision-added', false);\n      }\n    }\n  }\n\n  setLabelOpacity() {\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n    const addCollisionClass = this.dataLabel.placement === 'auto' || hideOnly;\n    const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n\n    this.updatingLabelGroups.attr('opacity', d => {\n      return (!this.dataLabel.visible\n        ? 0\n        : this.secondaryLines.keys.includes(d.key) && this.secondaryLines.showDataLabel\n        ? this.secondaryLines.opacity\n        : this.secondaryLines.keys.includes(d.key) && !this.secondaryLines.showDataLabel\n        ? 0\n        : 1) < 1\n        ? 0\n        : 1;\n    });\n    this.updatingLabels.each((d, i, n) => {\n      const prevOpacity = +select(n[i]).attr('opacity');\n      const styleVisibility = select(n[i]).style('visibility');\n      if (!d.enter && !d.enterWholeGroup && !d.exit && !d.exitWholeGroup) {\n        select(n[i]).attr('opacity', () => {\n          const targetOpacity =\n            checkInteraction(\n              d,\n              1,\n              this.hoverOpacity,\n              this.hoverHighlight,\n              this.clickHighlight,\n              this.innerInteractionKeys\n            ) < 1\n              ? 0\n              : 1;\n          const parentOpacity = +select(n[i].parentNode).attr('opacity');\n          select(n[i]).attr('data-hidden', parentOpacity === 0 || targetOpacity === 0 ? 'true' : null);\n          if (\n            ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n            (this.dataLabel.placement === 'auto' || hideOnly)\n          ) {\n            if (targetOpacity === 1) {\n              select(n[i])\n                .classed('collision-added', true)\n                .style('visibility', null);\n            } else {\n              select(n[i]).classed('collision-removed', true);\n            }\n          }\n          return targetOpacity;\n        });\n      }\n    });\n\n    if (addCollisionClass) {\n      const labelsAdded = this.updatingLabels\n        .filter((_, i, n) => select(n[i]).classed('collision-added'))\n        .transition()\n        .duration(0);\n      const labelsRemoved = this.updatingLabels\n        .filter((_, i, n) => select(n[i]).classed('collision-removed'))\n        .attr('data-use-dx', hideOnly)\n        .attr('data-use-dy', hideOnly);\n\n      const validPositions = hideOnly\n        ? ['middle']\n        : collisionPlacement && this.collisionSettings[collisionPlacement] // check whether placement provided maps correctly\n        ? this.collisionSettings[collisionPlacement].validPositions\n        : this.collisionSettings['all'].validPositions;\n      const offsets = hideOnly\n        ? [1]\n        : collisionPlacement && this.collisionSettings[collisionPlacement] // check whether placement provided maps correctly\n        ? this.collisionSettings[collisionPlacement].offsets\n        : this.collisionSettings['all'].offsets;\n\n      // we can now remove labels as well if we need to...\n      if (labelsRemoved.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsRemoved,\n          avoidMarks: [], // [this.updateDots], // this will link the series label to the last point in the line\n          validPositions: ['middle'],\n          offsets: [1],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n          hideOnly: false,\n          removeOnly: true\n        });\n\n        // remove temporary class now\n        labelsRemoved.classed('collision-removed', false);\n      }\n\n      // we can now add labels as well if we need to...\n      if (labelsAdded.size() > 0) {\n        this.bitmaps = placeDataLabels({\n          root: labelsAdded,\n          xScale: this.x,\n          yScale: this.dynamicY,\n          ordinalAccessor: this.ordinalAccessor,\n          valueAccessor: this.valueAccessor,\n          placement: this.dataLabel.placement,\n          chartType: 'parallel',\n          avoidCollision: {\n            runOccupancyBitmap: this.dataLabel.visible && this.dataLabel.placement === 'auto',\n            bitmaps: this.bitmaps,\n            labelSelection: labelsAdded,\n            avoidMarks: [this.updateLines, this.updateDots],\n            validPositions,\n            offsets,\n            accessors: [this.ordinalAccessor, this.seriesAccessor, 'key'], // key is created for lines by nesting done in line,\n            size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n            hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly,\n            suppressMarkDraw: true\n          }\n        });\n\n        // we need to maintain some values since line has customized lifecycle setup\n        labelsAdded.call(transitionEndAll, () => {\n          this.updatingLabels.each((d, i, n) => {\n            select(n[i]).classed('collision-added', false);\n            // store results to hash so we can use them in lifecycle (specific to line/parallel lifecycle only)\n            this.hiddenHash[`${d[this.ordinalAccessor]}-${d[this.seriesAccessor] || 'b'}`] = {\n              'data-label-hidden': select(n[i]).attr('data-label-hidden') === 'true',\n              x: +select(n[i]).attr('x') - +select(n[i]).attr('data-x'),\n              y: +select(n[i]).attr('y') - +select(n[i]).attr('data-y'),\n              'text-anchor': select(n[i]).attr('text-anchor')\n            };\n          });\n        });\n      }\n    }\n  }\n\n  bindInteractivity() {\n    this.updateLines\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onHoverHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    this.updateDots\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    // we bind the G for keyboard interactivity\n    // this does not effect mouse, but enables keyboard series selection to\n    // tap into series interactivity, if enabled\n    this.dotG\n      .selectAll('.parallel-dot-wrapper')\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onSeriesHoverHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    this.seriesLabelUpdate\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onSeriesHoverHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    this.updatingLabels\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  addStrokeUnder() {\n    const filter = createTextStrokeFilter({\n      root: this.svg.node(),\n      id: this.chartID,\n      color: '#ffffff'\n    });\n    this.labels.attr('filter', filter);\n    this.seriesLabelG.attr('filter', filter);\n  }\n\n  handleDotStroke = (d, i, n) => {\n    if (!this.accessibility.hideStrokes) {\n      const clicked =\n        this.clickHighlight &&\n        this.clickHighlight.length > 0 &&\n        checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n      const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n      const baseColor = select(n[i].parentNode).attr('fill');\n      const color =\n        clicked && this.clickStyle.color\n          ? visaColors[this.clickStyle.color] || this.clickStyle.color\n          : clicked\n          ? baseColor\n          : hovered && this.hoverStyle.color\n          ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n          : baseColor;\n      select(n[i]).attr('stroke-width', this.calculateStrokeWidth(d));\n      select(n[i]).attr('fill', color);\n      return this.strokes[color.toLowerCase()];\n    }\n    return null;\n  };\n\n  handleLineStroke = (data, i) => {\n    const baseColor = this.colorArr[i] || this.colorArr[0];\n    const d = data.values[0];\n    const clicked = checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n    const hovered = checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n    return this.seriesInteraction\n      ? clicked && this.clickStyle.color\n        ? this.strokes[(visaColors[this.clickStyle.color] || this.clickStyle.color).toLowerCase()]\n        : clicked\n        ? baseColor\n        : hovered && this.hoverStyle.color\n        ? this.strokes[(visaColors[this.hoverStyle.color] || this.hoverStyle.color).toLowerCase()]\n        : baseColor\n      : baseColor;\n  };\n\n  handleSeriesTextFill = (data, i) => {\n    const baseColor = this.rawColors[i] || this.rawColors[0];\n    const d = data.values[0];\n    const clicked = checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n    const hovered = checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n    const color = this.seriesInteraction\n      ? clicked && this.clickStyle.color\n        ? visaColors[this.clickStyle.color] || this.clickStyle.color\n        : clicked\n        ? baseColor\n        : hovered && this.hoverStyle.color\n        ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n        : baseColor\n      : baseColor;\n    return this.textColors[color.toLowerCase()];\n  };\n\n  handleTextFill = (d, i, n) => {\n    const clicked =\n      this.clickHighlight &&\n      this.clickHighlight.length > 0 &&\n      checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n    const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n    const baseColor = select(n[i].parentNode).attr('fill');\n    const color =\n      clicked && this.clickStyle.color\n        ? visaColors[this.clickStyle.color] || this.clickStyle.color\n        : clicked\n        ? baseColor\n        : hovered && this.hoverStyle.color\n        ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n        : baseColor;\n    return this.textColors[color.toLowerCase()];\n  };\n\n  updateColors() {\n    this.updateDotWrappers.attr('fill', (_, i) => this.rawColors[i] || this.rawColors[0]);\n    this.updateDots.attr('stroke', this.handleDotStroke);\n    this.updateLines.attr('stroke', this.handleLineStroke);\n    this.seriesLabelUpdate.attr('fill', this.handleSeriesTextFill);\n    this.updatingLabelGroups.attr('fill', (_, i) => this.rawColors[i] || this.rawColors[0]);\n    this.updatingLabels.attr('fill', this.handleTextFill);\n  }\n\n  updateCursor() {\n    this.updateLines.attr('cursor', !this.suppressEvents && this.seriesInteraction ? this.cursor : null);\n    this.updateDots.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    this.seriesLabelUpdate.attr('cursor', !this.suppressEvents && this.seriesInteraction ? this.cursor : null);\n    this.updatingLabels.attr('cursor', !this.suppressEvents ? this.cursor : null);\n  }\n\n  updateStrokeWidth() {\n    this.updateLines.attr('stroke-width', d => this.calculateStrokeWidth(d, true));\n    this.updateDots.attr('stroke', this.handleDotStroke);\n  }\n\n  calculateStrokeWidth = (data, useChildData?) => {\n    const d = !useChildData ? data : data.values[0];\n    return !useChildData || this.seriesInteraction\n      ? checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n        ? this.clickStyle.strokeWidth || this.strokeWidth\n        : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n        ? this.hoverStyle.strokeWidth || this.strokeWidth\n        : !this.secondaryLines.keys.includes(d[this.seriesAccessor])\n        ? this.strokeWidth\n        : 1\n      : !this.secondaryLines.keys.includes(d[this.seriesAccessor])\n      ? this.strokeWidth\n      : 1;\n  };\n\n  updateStrokePattern() {\n    this.updateLines.attr('stroke-dasharray', this.handleStrokeDasharray);\n  }\n\n  handleStrokeDasharray = (d, i) => {\n    return this.secondaryLines.keys.includes(d.key)\n      ? this.short\n      : !this.accessibility.hideTextures\n      ? this.dashPatterns[i]\n      : '';\n  };\n\n  updateDotRadius() {\n    this.updateDots\n      .each((d, i, n) => {\n        const me = select(n[i]);\n        if (!d.enter && !d.enterWholeGroup && !me.classed('entering') && !d.exit) {\n          me.attr('r', () =>\n            checkClicked(d, this.clickHighlight, this.innerInteractionKeys)\n              ? this.dotRadius +\n                (this.clickStyle && this.clickStyle.strokeWidth ? parseFloat('' + this.clickStyle.strokeWidth) / 2 : 1)\n              : checkHovered(d, this.hoverHighlight, this.innerInteractionKeys)\n              ? this.dotRadius +\n                (this.hoverStyle && this.hoverStyle.strokeWidth ? parseFloat('' + this.hoverStyle.strokeWidth) / 2 : 1)\n              : this.secondaryLines.keys.includes(d[this.seriesAccessor])\n              ? this.dotRadius + 0.5\n              : this.dotRadius + parseFloat('' + this.strokeWidth) / 2\n          );\n        }\n      })\n      .attr('stroke', this.handleDotStroke);\n  }\n\n  setSelectedClass() {\n    this.updateDots.classed('highlight', (d, i, n) => {\n      let selected = checkInteraction(d, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n      selected = this.clickHighlight && this.clickHighlight.length ? selected : false;\n      const selectable = this.accessibility.elementsAreInterface;\n      setElementInteractionAccessState(n[i], selected, selectable);\n      return selected;\n    });\n  }\n\n  drawAnnotations() {\n    annotate({\n      source: this.rootG.node(),\n      data: this.annotations,\n      xScale: this.x,\n      xAccessor: this.ordinalAccessor,\n      yScale: this.y,\n      yAccessor: this.valueAccessor,\n      width: this.width,\n      height: this.height,\n      padding: this.padding,\n      margin: this.margin,\n      bitmaps: this.bitmaps\n    });\n  }\n\n  setAnnotationAccessibility() {\n    setAccessAnnotation(this.getLanguageString(), this.parallelChartEl, this.annotations, undefined);\n  }\n\n  // new accessibility functions added here\n  setTagLevels() {\n    this.topLevel = findTagLevel(this.highestHeadingLevel);\n    this.bottomLevel = findTagLevel(this.highestHeadingLevel, 3);\n  }\n\n  setChartDescriptionWrapper() {\n    // this initializes the accessibility description section of the chart\n    initializeDescriptionRoot({\n      language: this.getLanguageString(),\n      rootEle: this.parallelChartEl,\n      title: this.accessibility.title || this.mainTitle,\n      chartTag: 'parallel-plot',\n      uniqueID: this.chartID,\n      highestHeadingLevel: this.highestHeadingLevel,\n      redraw: this.shouldRedrawWrapper,\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      hideDataTable: this.accessibility.hideDataTableButton\n    });\n    this.shouldRedrawWrapper = false;\n  }\n\n  setParentSVGAccessibility() {\n    // this sets the accessibility features of the root SVG element\n    setAccessibilityController({\n      chartTag: 'parallel-plot',\n      language: this.getLanguageString(),\n      node: this.svg.node(),\n      title: this.accessibility.title || this.mainTitle,\n      description: this.subTitle,\n      uniqueID: this.chartID,\n      geomType: 'point',\n      includeKeyNames: this.accessibility.includeDataKeyNames,\n      dataKeys: this.innerScopeDataKeys(),\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.seriesAccessor,\n      groupName: 'line',\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled\n    });\n  }\n\n  setGeometryAccessibilityAttributes() {\n    // this makes sure every geom element has correct event handlers + semantics (role, tabindex, etc)\n    this.updateDots.each((_d, i, n) => {\n      initializeElementAccess(n[i]);\n    });\n  }\n\n  setGeometryAriaLabels() {\n    // this adds an ARIA label to each geom (a description read by screen readers)\n    const keys = this.innerScopeDataKeys();\n    this.updateDots.each((_d, i, n) => {\n      setElementFocusHandler({\n        chartTag: 'parallel-plot',\n        language: this.getLanguageString(),\n        node: n[i],\n        geomType: 'point',\n        includeKeyNames: this.accessibility.includeDataKeyNames,\n        dataKeys: keys,\n        dataKeyNames: this.dataKeyNames,\n        groupName: 'line',\n        uniqueID: this.chartID,\n        disableKeyNav:\n          this.suppressEvents &&\n          this.accessibility.elementsAreInterface === false &&\n          this.accessibility.keyboardNavConfig &&\n          this.accessibility.keyboardNavConfig.disabled\n      });\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setGroupAccessibilityID() {\n    // this sets an ARIA label on all the g elements in the chart\n    this.updateDotWrappers.each((_, i, n) => {\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setChartAccessibilityTitle() {\n    setAccessTitle(this.getLanguageString(), this.parallelChartEl, this.accessibility.title || this.mainTitle);\n  }\n\n  setChartAccessibilitySubtitle() {\n    setAccessSubtitle(this.getLanguageString(), this.parallelChartEl, this.subTitle);\n  }\n\n  setChartAccessibilityLongDescription() {\n    setAccessLongDescription(this.getLanguageString(), this.parallelChartEl, this.accessibility.longDescription);\n  }\n\n  setChartAccessibilityExecutiveSummary() {\n    setAccessExecutiveSummary(this.getLanguageString(), this.parallelChartEl, this.accessibility.executiveSummary);\n  }\n\n  setChartAccessibilityPurpose() {\n    setAccessPurpose(this.getLanguageString(), this.parallelChartEl, this.accessibility.purpose);\n  }\n\n  setChartAccessibilityContext() {\n    setAccessContext(this.getLanguageString(), this.parallelChartEl, this.accessibility.contextExplanation);\n  }\n\n  setChartAccessibilityStatisticalNotes() {\n    setAccessStatistics(this.getLanguageString(), this.parallelChartEl, this.accessibility.statisticalNotes);\n  }\n\n  setChartCountAccessibility() {\n    // this is our automated section that describes the chart contents\n    // (like geometry and gorup counts, etc)\n    setAccessChartCounts({\n      rootEle: this.parallelChartEl,\n      parentGNode: this.dotG.node(), // pass the wrapper to <g> or geometries here, should be single node selection\n      chartTag: 'parallel-plot',\n      geomType: 'point',\n      groupName: 'line'\n      // recursive: true\n    });\n  }\n\n  setChartAccessibilityStructureNotes() {\n    setAccessStructure(this.getLanguageString(), this.parallelChartEl, this.accessibility.structureNotes);\n  }\n  // new accessibility stuff ends here\n\n  onChangeHandler() {\n    if (this.accessibility && typeof this.accessibility.onChangeFunc === 'function') {\n      const d = {\n        updated: this.updated,\n        added: this.enterSize,\n        removed: this.exitSize\n      };\n      this.accessibility.onChangeFunc(d);\n    }\n    this.interpolating = false;\n    this.updated = false;\n    this.enterSize = 0;\n    this.exitSize = 0;\n  }\n\n  onClickHandler(d, n) {\n    this.clickEvent.emit({ data: d, target: n });\n  }\n\n  onHoverHandler(d, n) {\n    overrideTitleTooltip(this.chartID, true);\n    this.hoverEvent.emit({ data: d, target: n });\n    if (this.showTooltip && d[this.ordinalAccessor]) {\n      this.eventsTooltip({ data: d, evt: event, isToShow: true });\n    }\n  }\n\n  onSeriesHoverHandler(d, n) {\n    this.hoverEvent.emit({ data: d, target: n });\n  }\n\n  onMouseOutHandler() {\n    overrideTitleTooltip(this.chartID, false);\n    this.mouseOutEvent.emit();\n    if (this.showTooltip) {\n      this.eventsTooltip({ isToShow: false });\n    }\n  }\n\n  // set initial style (instead of copying css class across the lib)\n  setTooltipInitialStyle() {\n    initTooltipStyle(this.tooltipG);\n  }\n\n  // tooltip\n  eventsTooltip({ data, evt, isToShow }: { data?: any; evt?: any; isToShow: boolean }) {\n    drawTooltip({\n      root: this.tooltipG,\n      data,\n      event: evt,\n      isToShow,\n      tooltipLabel: this.tooltipLabel,\n      xAxis: this.xAxis,\n      yAxis: this.yAxis,\n      dataLabel: this.dataLabel,\n      dataKeyNames: this.dataKeyNames,\n      ordinalAccessor: this.ordinalAccessor,\n      valueAccessor: this.valueAccessor,\n      groupAccessor: this.seriesAccessor,\n      chartType: 'parallel'\n    });\n  }\n\n  bindLegendInteractivity() {\n    select(this.parallelChartEl)\n      .selectAll('.legend')\n      .on(\n        'click',\n        !this.suppressEvents && this.seriesInteraction && this.legend.interactive\n          ? (d, i, n) => {\n              if (d.values) {\n                this.onClickHandler(d.values[0], n[i]);\n              }\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.seriesInteraction && this.legend.interactive\n          ? (d, i, n) => {\n              if (d.values) {\n                this.hoverEvent.emit({ data: d.values[0], target: n[i] });\n              }\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents && this.legend.interactive ? () => this.onMouseOutHandler() : null);\n  }\n\n  setLegendCursor() {\n    select(this.parallelChartEl)\n      .selectAll('.legend')\n      .style('cursor', !this.suppressEvents && this.legend.interactive && this.seriesInteraction ? this.cursor : null);\n  }\n\n  drawLegendElements() {\n    // if we have default series access and it is not in the data don't show legend\n    const noSeriesAccessor =\n      this.seriesAccessor === ParallelPlotDefaultValues.seriesAccessor &&\n      this.nest &&\n      this.nest.length === 1 &&\n      this.nest[0].key === 'undefined';\n\n    drawLegend({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      width: this.innerPaddedWidth,\n      height: this.margin.top + 20,\n      colorArr: this.colorArr,\n      dashPatterns: !this.accessibility.hideTextures ? this.dashPatterns : null,\n      margin: this.margin,\n      padding: this.padding,\n      duration: this.duration,\n      type: 'parallel',\n      secondary: this.secondaryLines.keys,\n      fontSize: 16,\n      data: this.nest,\n      label: this.legend.labels,\n      hide: !((this.legend.visible && !noSeriesAccessor) || !this.legend || !this.seriesAccessor),\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.seriesAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.hoverStyle,\n      clickStyle: this.clickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  render() {\n    this.drawStartEvent.emit({ chartID: this.chartID });\n    // everything between this comment and the third should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n    this.init();\n    if (this.shouldSetLocalizationConfig) {\n      this.setLocalizationConfig();\n      this.shouldSetLocalizationConfig = false;\n    }\n    if (this.shouldSetTagLevels) {\n      this.setTagLevels();\n      this.shouldSetTagLevels = false;\n    }\n    if (this.shouldSetDimensions) {\n      this.setDimensions();\n      this.shouldSetDimensions = false;\n    }\n    if (this.shouldSetScaleUsed) {\n      this.setScaleUsed();\n      this.shouldSetScaleUsed = false;\n    }\n    if (this.shouldUpdateScales) {\n      this.prepareScales();\n      this.shouldUpdateScales = false;\n    }\n    if (this.shouldUpdateData) {\n      this.prepareData();\n      this.shouldUpdateData = false;\n    }\n    if (this.shouldUpdateInterpolationData) {\n      this.updateInterpolationData();\n      this.shouldUpdateInterpolationData = false;\n    }\n    if (this.shouldValidateInteractionKeys) {\n      this.validateInteractionKeys();\n      this.shouldValidateInteractionKeys = false;\n    }\n    if (this.shouldUpdateTableData) {\n      this.setTableData();\n      this.shouldUpdateTableData = false;\n    }\n    if (this.shouldValidate) {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.shouldValidate = false;\n    }\n    if (this.shouldValidateDataLabelAccessor) {\n      this.validateDataLabelAccessor();\n      this.shouldValidateDataLabelAccessor = false;\n    }\n    if (this.shouldSetColors) {\n      this.setColors();\n      this.shouldSetColors = false;\n    }\n    if (this.shouldValidateSeriesLabels) {\n      this.validateSeriesLabels();\n      this.shouldValidateSeriesLabels = false;\n    }\n    // // Everything between this comment and the first should eventually\n    // // be moved into componentWillUpdate (if the Stencil bug is fixed)\n\n    return (\n      <div class=\"o-layout\">\n        <div class=\"o-layout--chart\">\n          <this.topLevel class=\"parallel-main-title vcl-main-title\">{this.mainTitle}</this.topLevel>\n          <this.bottomLevel class=\"visa-ui-text--instructions parallel-sub-title vcl-sub-title\" />\n          <div class=\"parallel-legend vcl-legend\" style={{ display: this.legend.visible ? 'block' : 'none' }} />\n          <keyboard-instructions\n            uniqueID={this.chartID}\n            geomType={'point'}\n            groupName={'line'} // taken from initializeDescriptionRoot, on bar this should be \"bar group\", stacked bar is \"stack\", and clustered is \"cluster\"\n            language={this.getLanguageString()}\n            chartTag={'parallel-plot'}\n            width={this.width - (this.margin ? this.margin.right || 0 : 0)}\n            isInteractive={this.accessibility.elementsAreInterface}\n            hasCousinNavigation\n            disabled={\n              this.suppressEvents &&\n              this.accessibility.elementsAreInterface === false &&\n              this.accessibility.keyboardNavConfig &&\n              this.accessibility.keyboardNavConfig.disabled\n            } // the chart is \"simple\"\n          />\n          <div class=\"visa-viz-d3-parallel-container\" />\n          <div class=\"parallel-tooltip vcl-tooltip\" style={{ display: this.showTooltip ? 'block' : 'none' }} />\n          <data-table\n            uniqueID={this.chartID}\n            isCompact\n            language={this.getLanguageString()}\n            tableColumns={this.tableColumns}\n            dataKeyNames={this.dataKeyNames}\n            data={this.tableData}\n            padding={this.padding}\n            margin={this.margin}\n            hideDataTable={this.accessibility.hideDataTableButton}\n            unitTest={this.unitTest}\n          />\n        </div>\n        {/* <canvas id=\"bitmap-render\" /> */}\n      </div>\n    );\n  }\n  private init() {\n    // reading properties\n    const keys = Object.keys(ParallelPlotDefaultValues);\n    let i = 0;\n    const exceptions = {\n      wrapLabel: {\n        exception: false\n      },\n      strokeWidth: {\n        exception: 0\n      },\n      showDots: {\n        exception: false\n      },\n      hoverOpacity: {\n        exception: 0\n      },\n      dotRadius: {\n        exception: 0\n      },\n      showTooltip: {\n        exception: false\n      },\n      mainTitle: {\n        exception: ''\n      },\n      subTitle: {\n        exception: ''\n      },\n      showBaselineX: {\n        exception: false\n      }\n    };\n    for (i = 0; i < keys.length; i++) {\n      const exception = !exceptions[keys[i]] ? false : this[keys[i]] === exceptions[keys[i]].exception;\n      this[keys[i]] = this[keys[i]] || exception ? this[keys[i]] : ParallelPlotDefaultValues[keys[i]];\n    }\n  }\n}\n\n// incorporate OSS licenses into build\nwindow['VisaChartsLibOSSLicenses'] = getLicenses(); // tslint:disable-line no-string-literal\n"],"mappings":"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","ignoreList":[]}