{"version":3,"names":["propDefaultValues","Utils","BarChartDefaultValues","mainTitle","subTitle","text","height","width","margin","top","bottom","right","left","padding","localization","ordinalAccessor","valueAccessor","groupAccessor","highestHeadingLevel","layout","accessibility","animationConfig","sortOrder","xAxis","xAxisBarChart","yAxis","yAxisBarChart","wrapLabel","colorPalette","colorPaletteSingle","hoverStyle","clickStyle","referenceStyle","cursor","roundedCorner","barIntervalRatio","hoverOpacity","dataLabel","dataLabelBar","legend","categoryLegend","tooltipLabel","showTooltip","suppressEvents","referenceLines","annotations","clickHighlight","barChartCss","BarChartStyle0","getGlobalInstances","configLocalization","getActiveLanguageString","prepareStrokeColorsFromScheme","calculateLuminance","verifyTextHasSpace","checkAttributeTransitions","createTextStrokeFilter","drawHoverStrokes","removeHoverStrokes","buildStrokes","convertColorsToTextures","initializeElementAccess","initializeDescriptionRoot","setElementFocusHandler","setElementAccessID","setAccessibilityController","hideNonessentialGroups","setAccessTitle","setAccessSubtitle","setAccessLongDescription","setAccessExecutiveSummary","setAccessPurpose","setAccessContext","setAccessStatistics","setAccessChartCounts","setAccessXAxis","setAccessYAxis","setAccessStructure","setAccessAnnotation","retainAccessFocus","checkAccessFocus","setElementInteractionAccessState","setAccessibilityDescriptionWidth","autoTextColor","annotate","chartAccessors","checkInteraction","checkClicked","checkHovered","checkLabelDisplayOnly","convertVisaColor","drawAxis","drawGrid","drawLegend","setSubTitle","setReferenceLine","setLegendInteractionState","drawTooltip","formatDataLabel","getColors","getLicenses","getPadding","getScopedData","initTooltipStyle","placeDataLabels","overrideTitleTooltip","transitionEndAll","scopeDataKeys","visaColors","validateAccessibilityProps","validateLocalizationProps","findTagLevel","prepareRenderChange","roundTo","resolveLabelCollision","halve","BarChart","this","shouldValidateAccessibility","shouldValidateLocalization","updated","shouldUpdateXAxis","shouldUpdateYAxis","shouldUpdateXGrid","shouldUpdateYGrid","shouldValidate","shouldUpdateData","shouldUpdateLayoutVariables","shouldUpdateScales","shouldUpdateTableData","shouldUpdateAnnotations","shouldDrawInteractionState","shouldValidateClickStyle","shouldValidateHoverStyle","shouldSetSelectionClass","shouldUpdateCursor","shouldSetColors","shouldSetSubTitle","shouldUpdateGeometries","shouldUpdateLegend","shouldUpdateReferenceLines","shouldBindInteractivity","shouldUpdateLegendInteractivity","shouldResetRoot","shouldUpdateBaseline","shouldValidateInteractionKeys","shouldUpdateLabelData","shouldUpdateLegendData","shouldCheckValueAxis","shouldCheckLabelAxis","shouldUpdateCorners","shouldEnterUpdateExit","shouldSetGlobalSelections","shouldSetTestingAttributes","shouldValidateLabelPlacement","shouldValidateDataLabelAccessor","shouldCheckLabelColor","shouldSetLabelOpacity","shouldSetLabelPosition","shouldSetLabelContent","shouldUpdateDescriptionWrapper","shouldSetChartAccessibilityTitle","shouldSetChartAccessibilitySubtitle","shouldSetChartAccessibilityLongDescription","shouldSetChartAccessibilityExecutiveSummary","shouldSetChartAccessibilityStatisticalNotes","shouldSetChartAccessibilityStructureNotes","shouldSetParentSVGAccessibility","shouldSetGeometryAccessibilityAttributes","shouldSetGeometryAriaLabels","shouldSetGroupAccessibilityAttributes","shouldSetGroupAccessibilityLabel","shouldSetChartAccessibilityPurpose","shouldSetChartAccessibilityContext","shouldSetLegendCursor","shouldRedrawWrapper","shouldSetTagLevels","shouldSetChartAccessibilityCount","shouldSetYAxisAccessibility","shouldSetXAxisAccessibility","shouldSetAnnotationAccessibility","shouldSetStrokes","shouldSetTextures","shouldSetLocalizationConfig","topLevel","bottomLevel","strokes","textTreatmentHandler","d","i","n","colorsArray","_this","preparedColors","range","scheme","length","includes","colorScale","hideTextures","showExperimentalTextures","bgColor","innerInteractionKeys","innerClickStyle","color","hoverHighlight","innerHoverStyle","me","select","autoPlacementBackgroundColor","placement","collisionPlacement","attr","y","dark_text","classed","root","svg","node","id","chartID","prototype","dataWatcher","_newVal","_oldVal","sortWatcher","groupAccessorWatcher","interactionKeys","ordinalAccessorWatcher","valueAccessorWatcher","valueOverrideWatcher","headingWatcher","titleWatcher","subtitleWatcher","xAxisWatcher","newGridVal","gridVisible","oldGridVal","newTickInterval","tickInterval","oldTickInterval","newCenterBaseline","centerBaseline","oldCenterBaseline","yAxisWatcher","wrapLabelWatcher","colorsWatcher","layoutWatcher","dimensionWatcher","cornerWatcher","intervalRatioWatcher","labelWatcher","newPlacementVal","oldPlacementVal","newCollisionPlacementVal","oldCollisionPlacementVal","newVisibleVal","visible","oldVisibleVal","newAccessor","labelAccessor","oldAccessor","newFormatVal","format","oldFormatVal","newCollisionHideOnlyVal","collisionHideOnly","oldCollisionHideOnlyVal","newDisplayOnlyVal","displayOnly","oldDisplayOnlyVal","legendWatcher","newInteractiveVal","interactive","oldInteractiveVal","tooltipLabelWatcher","showTooltipWatcher","hoverOpacityWatcher","clickStyleWatcher","hoverStyleWatcher","clickWatcher","hoverWatcher","interactionWatcher","dataKeyNamesWatcher","cursorWatcher","accessibilityWatcher","newTitle","title","oldTitle","newExecutiveSummary","executiveSummary","oldExecutiveSummary","newPurpose","purpose","oldPurpose","newLongDescription","longDescription","oldLongDescription","newContext","contextExplanation","oldContext","newStatisticalNotes","statisticalNotes","oldStatisticalNotes","newStructureNotes","structureNotes","oldStructureNotes","newincludeDataKeyNames","includeDataKeyNames","oldincludeDataKeyNames","newElementDescriptionAccessor","elementDescriptionAccessor","oldElementDescriptionAccessor","newTextures","oldTextures","newExTextures","oldExTextures","newSmallValue","showSmallLabels","oldSmallValue","newStrokes","hideStrokes","oldStrokes","newKeyNav","keyboardNavConfig","disabled","oldKeyNav","newInterface","elementsAreInterface","oldInterface","referenceLinesWatcher","annotationsWatcher","localizationWatcher","newLanguage","language","oldLanguage","newNumeralLocale","numeralLocale","oldNumeralLocale","idWatcher","newVal","console","error","suppressWatcher","unitTestWatcher","componentWillLoad","uniqueID","uuid","initialLoadEvent","emit","Promise","resolve","duration","defaults","barChartEl","setLocalizationConfig","setTagLevels","prepareData","prepareLegendData","prepareLabelData","updateChartVariable","prepareScales","validateInteractionKeys","setTableData","shouldValidateAccessibilityProps","shouldValidateLocalizationProps","validateClickStyle","validateHoverStyle","setColors","componentWillUpdate","componentDidLoad","renderRootElements","setTooltipInitialStyle","setChartDescriptionWrapper","setChartAccessibilityTitle","setChartAccessibilitySubtitle","setChartAccessibilityLongDescription","setChartAccessibilityExecutiveSummary","setChartAccessibilityPurpose","setChartAccessibilityContext","setChartAccessibilityStatisticalNotes","setChartAccessibilityStructureNotes","setParentSVGAccessibility","reSetRoot","setTextures","setStrokes","setSubTitleElements","drawXGrid","drawYGrid","setGlobalSelections","setTestingAttributes","validateDataLabelAccessor","enterGeometries","updateGeometries","exitGeometries","enterLabels","updateLabels","exitLabels","drawGeometries","setChartCountAccessibility","setGeometryAccessibilityAttributes","setGeometryAriaLabels","setRoundedCorners","drawLegendElements","validateLabelPlacement","setLabelContent","processLabelPosition","updatingLabels","drawReferenceLines","setSelectedClass","checkLabelColorAgainstBackground","updateCursor","bindInteractivity","bindLegendInteractivity","drawXAxis","setXAxisAccessibility","drawYAxis","setYAxisAccessibility","drawAnnotations","setAnnotationAccessibility","drawBaseline","onChangeHandler","bars","setGroupAccessibilityAttributes","setGroupAccessibilityID","then","initialLoadEndEvent","componentDidUpdate","setLabelPosition","updateInteractionState","setLabelOpacity","setLegendCursor","drawEndEvent","windowInstances","languageString","i18Next","languageObject","getResourceBundle","numeralObject","numeral","localeData","skipValidation","Object","assign","disableValidation","data","context","onClickEvent","undefined","clickEvent","innerLabelAccessor","getLanguageString","innerHeight","innerWidth","innerPaddedHeight","innerPaddedWidth","preppedData","__spreadArray","sort","a","b","parseFloat","map","nested","nest","key","entries","legendData","forEach","el","push","values","minIdx","minIndex","minItem","maxIdx","maxIndex","maxItem","firstItem","find","val","lastItem","reverse","displayOnlyLabelData","first","last","min","max","subTitleG","colorFromProps","colors","minValue","maxValue","scaleOrdinal","domain","strokeColors","backgroundColors","half","Math","ceil","isDiverging","isDark","colorsMatchingScheme","fillLuminance","fillColor","strokeLuminance","textureColor","darkerColor","lighterColor","fillColors","copy","colorArr","textures","rootSVG","disableTransitions","strokeOverride","keys","tableData","tableColumns","shouldCenterBaseline","minBarValue","maxValueOverride","minValueOverride","maxBarValue","scaleLinear","x","scaleBand","changeSvg","selection","namespace","easing","easeCircleIn","changeRoot","concat","changeRootG","rootG","checkHideAxisState","axisName","relevantLayout","axisAccessor","axisLabel","label","dataKeyNames","axisScale","dateFormat","hide","markOffset","rootEle","hasXAxis","xAxisLabel","hasYAxis","yAxisLabel","gridG","enter","interrupt","ordinalAxis","ordinalDimension","innerPaddedOrdinalDimension","toUpperCase","substring","valueAxis","valueDimension","choice","on","onClickHandler","onHoverHandler","onMouseOutHandler","abs","each","_d","bandwidth","shift","update","order","transition","ease","exit","axisOfShift","dimensionOfShift","innerPaddedDimension","self","call","focusDidExist","remove","parentGNode","geometryIsUpdating","numeric","newValue","transitionEndEvent","dataBoundToGeometries","selectAll","append","merge","exitSize","size","enterSize","dataBoundToLabels","labels","enteringLabels","exitingLabels","unitTest","legendG","tooltipG","referencesG","strokeWidth","clicked","hovered","baseColor","state","inputElement","fill","addCollisionClass","hideOnly","processLabelOpacity","labelsAdded","filter","_","labelsRemoved","bitmaps","labelSelection","avoidMarks","validPositions","offsets","accessors","removeOnly","fullBandwidth","prevOpacity","styleVisibility","style","dimensions","hasRoom","fontSize","targetOpacity","selected","selectable","Number","EPSILON","enterTransition","enteringOnly","updatingOnly","runTransition","redrawBitmap","suppressMarkDraw","textHeight","collisionSettings","vertical","middle","horizontal","boundsScope","textElement","getComputedStyle","changeLabels","xScale","yScale","labelOffset","chartType","avoidCollision","runOccupancyBitmap","groupName","baseColorArr","type","labelKey","source","xAccessor","yAccessor","chartTag","redraw","disableKeyNav","hideDataTable","hideDataTableButton","description","geomType","includeKeyNames","dataKeys","onChangeFunc","added","removed","target","isLegend","hoverEvent","eventsTooltip","evt","event","isToShow","mouseOutEvent","_a","render","drawStartEvent","theme","init","h","class","display","isInteractive","hasCousinNavigation","isCompact","exceptions","exception","window"],"sources":["src/components/bar-chart/bar-chart-default-values.ts","src/components/bar-chart/bar-chart.scss?tag=bar-chart","src/components/bar-chart/bar-chart.tsx"],"sourcesContent":["/**\n * Copyright (c) 2020, 2021, 2022, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport Utils from '@visa/visa-charts-utils';\n\nconst { propDefaultValues } = Utils;\n\nexport class BarChartDefaultValues {\n  static readonly mainTitle = 'This is bar chart title';\n  static readonly subTitle = propDefaultValues.subTitle.text;\n  static readonly height = 325;\n  static readonly width = 675;\n  static readonly margin = {\n    top: 325 * 0.01,\n    bottom: 325 * 0.01,\n    right: 675 * 0.01,\n    left: 675 * 0.01\n  };\n  static readonly padding = {\n    top: 20,\n    bottom: 50,\n    right: 60,\n    left: 60\n  };\n\n  static readonly localization = propDefaultValues.localization;\n\n  static readonly ordinalAccessor = 'label';\n  static readonly valueAccessor = 'value';\n  static readonly groupAccessor = '';\n\n  static readonly highestHeadingLevel = propDefaultValues.highestHeadingLevel;\n  static readonly layout = propDefaultValues.layout;\n  static readonly accessibility = propDefaultValues.accessibility;\n  static readonly animationConfig = propDefaultValues.animationConfig;\n  static readonly sortOrder = propDefaultValues.sortOrder;\n  static readonly xAxis = propDefaultValues.xAxisBarChart;\n\n  static readonly yAxis = propDefaultValues.yAxisBarChart;\n  static readonly wrapLabel = propDefaultValues.wrapLabel;\n  static readonly colorPalette = propDefaultValues.colorPaletteSingle;\n\n  static readonly hoverStyle = propDefaultValues.hoverStyle;\n  static readonly clickStyle = propDefaultValues.clickStyle;\n\n  static readonly referenceStyle = propDefaultValues.referenceStyle;\n  static readonly cursor = propDefaultValues.cursor;\n  static readonly roundedCorner = propDefaultValues.roundedCorner;\n  static readonly barIntervalRatio = propDefaultValues.barIntervalRatio;\n  static readonly hoverOpacity = propDefaultValues.hoverOpacity;\n\n  static readonly dataLabel = propDefaultValues.dataLabelBar;\n  static readonly dataKeyNames;\n  static readonly legend = propDefaultValues.categoryLegend;\n  static readonly tooltipLabel = propDefaultValues.tooltipLabel;\n\n  static readonly showTooltip = propDefaultValues.showTooltip;\n  static readonly suppressEvents = propDefaultValues.suppressEvents;\n  static readonly referenceLines = propDefaultValues.referenceLines;\n  static readonly annotations = propDefaultValues.annotations;\n\n  static readonly hoverHighlight;\n  static readonly clickHighlight = propDefaultValues.clickHighlight;\n}\n","/**\n * Copyright (c) 2020, 2021, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nbar-chart {\n  .annotations {\n    pointer-events: none;\n    .handle {\n      pointer-events: all;\n    }\n  }\n\n  .screen-reader-info {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n\n  .data-table-link {\n    color: #767676;\n    text-decoration: none;\n    font-size: 12px;\n    margin-left: 5%;\n  }\n\n  .hidden {\n    display: none;\n  }\n\n  cursor: default;\n  .light {\n    .grid {\n      line {\n        stroke: #c9c9c9;\n        stroke-opacity: 1;\n        stroke-width: 0.8;\n        // shape-rendering: crispEdges;\n        // stroke-dasharray: 4, 4;\n      }\n      path {\n        stroke-width: 0;\n      }\n    }\n    .axis {\n      font-size: 12px;\n      .tick {\n        text {\n          fill: #767676;\n        }\n        line {\n          stroke: #767676;\n        }\n      }\n\n      &-label {\n        // axis label\n        text-anchor: middle;\n        font: 1rem sans-serif;\n      }\n      &-mark {\n        // axis mark\n        color: #949494;\n        stroke-width: 2px;\n      }\n    }\n\n    .y.axis {\n      path {\n        stroke: #767676;\n        opacity: 0;\n      }\n    }\n    .x.axis {\n      path {\n        stroke: transparent;\n      }\n    }\n\n    .o-layout--chart {\n      .bar-dataLabel-vertical {\n        // fill: #767676;\n        text-anchor: middle;\n      }\n      .bar-dataLabel-horizontal {\n        // fill: #767676;\n        text-anchor: start;\n      }\n    }\n  }\n  .dark {\n    .grid {\n      line {\n        stroke: lightgrey;\n        stroke-opacity: 0.7;\n        shape-rendering: crispEdges;\n      }\n      path {\n        stroke-width: 0;\n      }\n    }\n    .axis {\n      font-size: 12px;\n      .tick {\n        line {\n          stroke: lightgrey;\n        }\n        text {\n          fill: grey;\n        }\n      }\n      path {\n        stroke: black;\n      }\n\n      &-label {\n        text-anchor: middle;\n        font: 1rem sans-serif;\n      }\n    }\n    .o-layout--chart svg {\n      background: black;\n      .bar-dataLabel-vertical {\n        text-anchor: middle;\n      }\n      .bar-dataLabel-horizontal {\n        text-anchor: start;\n      }\n    }\n  }\n\n  //TBD: add color based on scheme\n  // .r.axis circle {\n  //   stroke: #cccccc;\n  //   stroke-width: 1px;\n  //   fill: none;\n  // }\n\n  //Text alignment, not impacted by color theme\n  // .a.axis text {\n  //   text-anchor: middle;\n  //   font-size: 10pt;\n  // }\n  //\n  // .r.axis text {\n  //   text-anchor: end;\n  //   font-size: 8pt;\n  // }\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport { Component, Element, Prop, Watch, h, Event, EventEmitter } from '@stencil/core';\nimport { select, event } from 'd3-selection';\nimport { max, min, minIndex, maxIndex } from 'd3-array';\nimport { scaleBand, scaleLinear, scaleOrdinal } from 'd3-scale';\nimport { easeCircleIn } from 'd3-ease';\nimport { nest } from 'd3-collection';\nimport {\n  IBoxModelType,\n  ILocalizationType,\n  IHoverStyleType,\n  IClickStyleType,\n  IAxisType,\n  IReferenceStyleType,\n  IDataLabelType,\n  ITooltipLabelType,\n  IAccessibilityType,\n  IAnimationConfig,\n  ILegendType,\n  ISubTitleType\n} from '@visa/charts-types';\nimport { BarChartDefaultValues } from './bar-chart-default-values';\nimport { v4 as uuid } from 'uuid';\nimport 'd3-transition';\nimport Utils from '@visa/visa-charts-utils';\n\nconst {\n  getGlobalInstances,\n  configLocalization,\n  getActiveLanguageString,\n  prepareStrokeColorsFromScheme,\n  calculateLuminance,\n  verifyTextHasSpace,\n  checkAttributeTransitions,\n  createTextStrokeFilter,\n  drawHoverStrokes,\n  removeHoverStrokes,\n  buildStrokes,\n  convertColorsToTextures,\n  initializeElementAccess,\n  initializeDescriptionRoot,\n  setElementFocusHandler,\n  setElementAccessID,\n  setAccessibilityController,\n  hideNonessentialGroups,\n  setAccessTitle,\n  setAccessSubtitle,\n  setAccessLongDescription,\n  setAccessExecutiveSummary,\n  setAccessPurpose,\n  setAccessContext,\n  setAccessStatistics,\n  setAccessChartCounts,\n  setAccessXAxis,\n  setAccessYAxis,\n  setAccessStructure,\n  setAccessAnnotation,\n  retainAccessFocus,\n  checkAccessFocus,\n  setElementInteractionAccessState,\n  setAccessibilityDescriptionWidth,\n  autoTextColor,\n  annotate,\n  chartAccessors,\n  checkInteraction,\n  checkClicked,\n  checkHovered,\n  checkLabelDisplayOnly,\n  convertVisaColor,\n  drawAxis,\n  drawGrid,\n  drawLegend,\n  setSubTitle,\n  setReferenceLine,\n  setLegendInteractionState,\n  drawTooltip,\n  formatDataLabel,\n  getColors,\n  getLicenses,\n  getPadding,\n  getScopedData,\n  initTooltipStyle,\n  placeDataLabels,\n  overrideTitleTooltip,\n  transitionEndAll,\n  scopeDataKeys,\n  visaColors,\n  validateAccessibilityProps,\n  validateLocalizationProps,\n  findTagLevel,\n  prepareRenderChange,\n  roundTo,\n  resolveLabelCollision,\n  halve\n} = Utils;\n\n@Component({\n  tag: 'bar-chart',\n  styleUrl: 'bar-chart.scss'\n})\nexport class BarChart {\n  @Event() clickEvent: EventEmitter;\n  @Event() hoverEvent: EventEmitter;\n  @Event() mouseOutEvent: EventEmitter;\n  @Event() initialLoadEvent: EventEmitter;\n  @Event() initialLoadEndEvent: EventEmitter;\n  @Event() drawStartEvent: EventEmitter;\n  @Event() drawEndEvent: EventEmitter;\n  @Event() transitionEndEvent: EventEmitter;\n\n  // Chart Attributes (1/7)\n  @Prop({ mutable: true }) localization: ILocalizationType = BarChartDefaultValues.localization;\n  @Prop({ mutable: true }) mainTitle: string = BarChartDefaultValues.mainTitle;\n  @Prop({ mutable: true }) subTitle: string | ISubTitleType = BarChartDefaultValues.subTitle;\n  @Prop({ mutable: true }) height: number = BarChartDefaultValues.height;\n  @Prop({ mutable: true }) width: number = BarChartDefaultValues.width;\n  @Prop({ mutable: true }) layout: string = BarChartDefaultValues.layout;\n  @Prop({ mutable: true }) highestHeadingLevel: string | number = BarChartDefaultValues.highestHeadingLevel;\n\n  @Prop({ mutable: true }) margin: IBoxModelType = BarChartDefaultValues.margin;\n  @Prop({ mutable: true }) padding: IBoxModelType = BarChartDefaultValues.padding;\n\n  // Data (2/6)\n  @Prop() data: object[];\n  @Prop() uniqueID: string;\n  @Prop({ mutable: true }) ordinalAccessor: string = BarChartDefaultValues.ordinalAccessor;\n  @Prop({ mutable: true }) valueAccessor: string = BarChartDefaultValues.valueAccessor;\n  @Prop({ mutable: true }) groupAccessor: string = BarChartDefaultValues.groupAccessor;\n  @Prop({ mutable: true }) sortOrder: string = BarChartDefaultValues.sortOrder;\n\n  // Axis (3/3)\n  @Prop({ mutable: true }) xAxis: IAxisType = BarChartDefaultValues.xAxis;\n  @Prop({ mutable: true }) yAxis: IAxisType = BarChartDefaultValues.yAxis;\n  @Prop({ mutable: true }) wrapLabel: boolean = BarChartDefaultValues.wrapLabel;\n\n  // Color & Shape (4/10)\n  @Prop({ mutable: true }) colorPalette: string = BarChartDefaultValues.colorPalette;\n  @Prop({ mutable: true }) colors: string[];\n  @Prop({ mutable: true }) hoverStyle: IHoverStyleType = BarChartDefaultValues.hoverStyle;\n  @Prop({ mutable: true }) clickStyle: IClickStyleType = BarChartDefaultValues.clickStyle;\n  @Prop({ mutable: true }) referenceStyle: IReferenceStyleType = BarChartDefaultValues.referenceStyle;\n  @Prop({ mutable: true }) cursor: string = BarChartDefaultValues.cursor;\n  @Prop({ mutable: true }) roundedCorner: number = BarChartDefaultValues.roundedCorner;\n  @Prop({ mutable: true }) barIntervalRatio: number = BarChartDefaultValues.barIntervalRatio;\n  @Prop({ mutable: true }) hoverOpacity: number = BarChartDefaultValues.hoverOpacity;\n  @Prop({ mutable: true }) animationConfig: IAnimationConfig = BarChartDefaultValues.animationConfig;\n\n  // Data label (5/7)\n  @Prop({ mutable: true }) dataLabel: IDataLabelType = BarChartDefaultValues.dataLabel;\n  @Prop({ mutable: true }) dataKeyNames: object;\n  @Prop({ mutable: true }) showTooltip: boolean = BarChartDefaultValues.showTooltip;\n  @Prop({ mutable: true }) tooltipLabel: ITooltipLabelType = BarChartDefaultValues.tooltipLabel;\n  @Prop({ mutable: true }) accessibility: IAccessibilityType = BarChartDefaultValues.accessibility;\n  @Prop({ mutable: true }) legend: ILegendType = BarChartDefaultValues.legend;\n  @Prop({ mutable: true }) annotations: object[] = BarChartDefaultValues.annotations;\n\n  // Calculation (6/7)\n  @Prop() maxValueOverride: number;\n  @Prop() minValueOverride: number;\n  @Prop({ mutable: true }) referenceLines: object[] = BarChartDefaultValues.referenceLines;\n\n  // Interactivity (7/7)\n  @Prop({ mutable: true }) suppressEvents: boolean = BarChartDefaultValues.suppressEvents;\n  @Prop({ mutable: true }) hoverHighlight: object;\n  @Prop({ mutable: true }) clickHighlight: object[] = BarChartDefaultValues.clickHighlight;\n  @Prop({ mutable: true }) interactionKeys: string[];\n\n  // Testing (8/7)\n  @Prop() unitTest: boolean = false;\n  //  @Prop() debugMode: boolean = false;\n\n  // Element\n  @Element()\n  barChartEl: HTMLElement;\n  shouldValidateAccessibility: boolean = true;\n  shouldValidateLocalization: boolean = true;\n  svg: any;\n  root: any;\n  rootG: any;\n  gridG: any;\n  bars: any;\n  labels: any;\n  nest: any;\n  referencesG: any;\n  defaults: boolean;\n  duration: number;\n  enter: any;\n  exit: any;\n  update: any;\n  enteringLabels: any;\n  exitingLabels: any;\n  updatingLabels: any;\n  x: any;\n  y: any;\n  innerHeight: number;\n  innerWidth: number;\n  innerPaddedHeight: number;\n  innerPaddedWidth: number;\n  colorArr: any;\n  preppedData: any;\n  displayOnlyLabelData: any;\n  placement: string;\n  legendG: any;\n  subTitleG: any;\n  tooltipG: any;\n  legendData: any;\n  // these are added for accessibility\n  updated: boolean = true;\n  enterSize: number;\n  exitSize: number;\n  tableData: any;\n  tableColumns: any;\n  chartID: string;\n  innerClickStyle: any;\n  innerHoverStyle: any;\n  innerInteractionKeys: any;\n  preparedColors: any;\n  fillColors: any;\n  strokeColors: any;\n  innerLabelAccessor: string;\n  shouldUpdateXAxis: boolean = false;\n  shouldUpdateYAxis: boolean = false;\n  shouldUpdateXGrid: boolean = false;\n  shouldUpdateYGrid: boolean = false;\n  shouldValidate: boolean = false;\n  shouldUpdateData: boolean = false;\n  shouldUpdateLayoutVariables: boolean = false;\n  shouldUpdateScales: boolean = false;\n  shouldUpdateTableData: boolean = false;\n  shouldUpdateAnnotations: boolean = false;\n  shouldDrawInteractionState: boolean = false;\n  shouldValidateClickStyle: boolean = false;\n  shouldValidateHoverStyle: boolean = false;\n  shouldSetSelectionClass: boolean = false;\n  shouldUpdateCursor: boolean = false;\n  shouldSetColors: boolean = false;\n  shouldSetSubTitle: boolean = false;\n  shouldUpdateGeometries: boolean = false;\n  shouldUpdateLegend: boolean = false;\n  shouldUpdateReferenceLines: boolean = false;\n  shouldBindInteractivity: boolean = false;\n  shouldUpdateLegendInteractivity: boolean = false;\n  shouldResetRoot: boolean = false;\n  shouldUpdateBaseline: boolean = false;\n  shouldValidateInteractionKeys: boolean = false;\n  shouldUpdateLabelData: boolean = false;\n  shouldUpdateLegendData: boolean = false;\n  shouldCheckValueAxis: boolean = false;\n  shouldCheckLabelAxis: boolean = false;\n  shouldUpdateCorners: boolean = false;\n  shouldEnterUpdateExit: boolean = false;\n  shouldSetGlobalSelections: boolean = false;\n  shouldSetTestingAttributes: boolean = false;\n  shouldValidateLabelPlacement: boolean = false;\n  shouldValidateDataLabelAccessor: boolean = false;\n  shouldCheckLabelColor: boolean = false;\n  shouldSetLabelOpacity: boolean = false;\n  shouldSetLabelPosition: boolean = false;\n  shouldSetLabelContent: boolean = false;\n  shouldUpdateDescriptionWrapper: boolean = false;\n  shouldSetChartAccessibilityTitle: boolean = false;\n  shouldSetChartAccessibilitySubtitle: boolean = false;\n  shouldSetChartAccessibilityLongDescription: boolean = false;\n  shouldSetChartAccessibilityExecutiveSummary: boolean = false;\n  shouldSetChartAccessibilityStatisticalNotes: boolean = false;\n  shouldSetChartAccessibilityStructureNotes: boolean = false;\n  shouldSetParentSVGAccessibility: boolean = false;\n  shouldSetGeometryAccessibilityAttributes: boolean = false;\n  shouldSetGeometryAriaLabels: boolean = false;\n  shouldSetGroupAccessibilityAttributes: boolean = false;\n  shouldSetGroupAccessibilityLabel: boolean = false;\n  shouldSetChartAccessibilityPurpose: boolean = false;\n  shouldSetChartAccessibilityContext: boolean = false;\n  shouldSetLegendCursor: boolean = false;\n  shouldRedrawWrapper: boolean = false;\n  shouldSetTagLevels: boolean = false;\n  shouldSetChartAccessibilityCount: boolean = false;\n  shouldSetYAxisAccessibility: boolean = false;\n  shouldSetXAxisAccessibility: boolean = false;\n  shouldSetAnnotationAccessibility: boolean = false;\n  shouldSetStrokes: boolean = false;\n  shouldSetTextures: boolean = false;\n  shouldSetLocalizationConfig: boolean = false;\n  topLevel: string = 'h2';\n  bottomLevel: string = 'p';\n  strokes: any = {};\n  bitmaps: any;\n\n  @Watch('data')\n  dataWatcher(_newVal, _oldVal) {\n    this.updated = true;\n    this.shouldUpdateData = true;\n    this.shouldUpdateLabelData = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldSetColors = true;\n    this.shouldSetTextures = true;\n    // this.shouldDrawInteractionState = true; // called from updateGeometries\n    // this.shouldCheckLabelColor = true; // called from updateGeometries\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldSetLabelContent = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateLegendData = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldValidate = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('sortOrder')\n  sortWatcher(_newVal, _oldVal) {\n    this.updated = true;\n    this.shouldUpdateData = true;\n    this.shouldUpdateLabelData = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldSetLabelContent = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('groupAccessor')\n  groupAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLegendData = true;\n    this.shouldSetColors = true;\n    this.shouldSetTextures = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateLegend = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetStrokes = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('ordinalAccessor')\n  ordinalAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldCheckLabelAxis = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetStrokes = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('valueAccessor')\n  valueAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetColors = true;\n    this.shouldSetTextures = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckValueAxis = true;\n    this.shouldValidateDataLabelAccessor = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelContent = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('maxValueOverride')\n  @Watch('minValueOverride')\n  valueOverrideWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldCheckValueAxis = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('highestHeadingLevel')\n  headingWatcher(_newVal, _oldVal) {\n    this.shouldRedrawWrapper = true;\n    this.shouldSetTagLevels = true;\n    this.shouldSetChartAccessibilityCount = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('mainTitle')\n  titleWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('subTitle')\n  subtitleWatcher(_newVal, _oldVal) {\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('xAxis')\n  xAxisWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateXGrid = true;\n    }\n    const newCenterBaseline = _newVal && _newVal.centerBaseline;\n    const oldCenterBaseline = _oldVal && _oldVal.centerBaseline;\n    if (newCenterBaseline !== oldCenterBaseline) {\n      this.shouldValidateLabelPlacement = true;\n      this.shouldUpdateScales = true;\n      this.shouldResetRoot = true;\n      this.shouldUpdateGeometries = true;\n      this.shouldSetGeometryAccessibilityAttributes = true;\n      this.shouldUpdateXAxis = true;\n      this.shouldUpdateYAxis = true;\n      this.shouldUpdateXGrid = true;\n      this.shouldUpdateYGrid = true;\n      this.shouldSetLabelPosition = true;\n      this.shouldCheckLabelColor = true;\n      this.shouldUpdateLegend = true;\n      this.shouldUpdateReferenceLines = true;\n      this.shouldUpdateBaseline = true;\n      this.shouldUpdateAnnotations = true;\n    }\n  }\n\n  @Watch('yAxis')\n  yAxisWatcher(_newVal, _oldVal) {\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateYGrid = true;\n    }\n    const newCenterBaseline = _newVal && _newVal.centerBaseline;\n    const oldCenterBaseline = _oldVal && _oldVal.centerBaseline;\n    if (newCenterBaseline !== oldCenterBaseline) {\n      this.shouldValidateLabelPlacement = true;\n      this.shouldUpdateScales = true;\n      this.shouldResetRoot = true;\n      this.shouldUpdateGeometries = true;\n      this.shouldSetGeometryAccessibilityAttributes = true;\n      this.shouldUpdateXAxis = true;\n      this.shouldUpdateYAxis = true;\n      this.shouldUpdateXGrid = true;\n      this.shouldUpdateYGrid = true;\n      this.shouldSetLabelPosition = true;\n      this.shouldCheckLabelColor = true;\n      this.shouldUpdateLegend = true;\n      this.shouldUpdateReferenceLines = true;\n      this.shouldUpdateBaseline = true;\n      this.shouldUpdateAnnotations = true;\n    }\n  }\n\n  @Watch('wrapLabel')\n  wrapLabelWatcher(_newVal, _oldVal) {\n    this.shouldCheckLabelAxis = true;\n  }\n\n  @Watch('colors')\n  @Watch('colorPalette')\n  colorsWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldSetTextures = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateLegend = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('layout')\n  layoutWatcher(_newVal, _oldVal) {\n    this.shouldValidateLabelPlacement = true;\n    this.shouldUpdateScales = true;\n    this.shouldResetRoot = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('height')\n  @Watch('width')\n  @Watch('padding')\n  @Watch('margin')\n  dimensionWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLayoutVariables = true;\n    this.shouldUpdateScales = true;\n    this.shouldResetRoot = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('roundedCorner')\n  cornerWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCorners = true;\n  }\n\n  @Watch('barIntervalRatio')\n  intervalRatioWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldCheckLabelAxis = true;\n    this.shouldSetLabelPosition = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('dataLabel')\n  labelWatcher(_newVal, _oldVal) {\n    const newPlacementVal = _newVal && _newVal.placement ? _newVal.placement : false;\n    const oldPlacementVal = _oldVal && _oldVal.placement ? _oldVal.placement : false;\n    const newCollisionPlacementVal = _newVal && _newVal.collisionPlacement ? _newVal.collisionPlacement : false;\n    const oldCollisionPlacementVal = _oldVal && _oldVal.collisionPlacement ? _oldVal.collisionPlacement : false;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    const newAccessor = _newVal && _newVal.labelAccessor ? _newVal.labelAccessor : false;\n    const oldAccessor = _oldVal && _oldVal.labelAccessor ? _oldVal.labelAccessor : false;\n    const newFormatVal = _newVal && _newVal.format ? _newVal.format : false;\n    const oldFormatVal = _oldVal && _oldVal.format ? _oldVal.format : false;\n    const newCollisionHideOnlyVal = _newVal && _newVal.collisionHideOnly ? _newVal.collisionHideOnly : false;\n    const oldCollisionHideOnlyVal = _oldVal && _oldVal.collisionHideOnly ? _oldVal.collisionHideOnly : false;\n    const newDisplayOnlyVal = _newVal && _newVal.displayOnly;\n    const oldDisplayOnlyVal = _oldVal && _oldVal.displayOnly;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetLabelOpacity = true;\n    }\n    if (newDisplayOnlyVal !== oldDisplayOnlyVal) {\n      this.shouldUpdateLabelData = true;\n      this.shouldSetLabelOpacity = true;\n    }\n    if (\n      newPlacementVal !== oldPlacementVal ||\n      newCollisionPlacementVal !== oldCollisionPlacementVal ||\n      newCollisionHideOnlyVal !== oldCollisionHideOnlyVal\n    ) {\n      this.shouldValidateLabelPlacement = true;\n      this.shouldSetLabelPosition = true;\n      this.shouldCheckLabelColor = true;\n    }\n    if (newAccessor !== oldAccessor || newFormatVal !== oldFormatVal) {\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldSetLabelContent = true;\n      this.shouldCheckLabelColor = true;\n    }\n  }\n\n  @Watch('legend')\n  legendWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLegend = true;\n    const newInteractiveVal = _newVal && _newVal.interactive;\n    const oldInteractiveVal = _oldVal && _oldVal.interactive;\n    if (newInteractiveVal !== oldInteractiveVal) {\n      this.shouldSetLegendCursor = true;\n      this.shouldUpdateLegendInteractivity = true;\n    }\n  }\n\n  @Watch('tooltipLabel')\n  tooltipLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('showTooltip')\n  showTooltipWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('hoverOpacity')\n  hoverOpacityWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n  }\n\n  @Watch('clickStyle')\n  clickStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldValidateClickStyle = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('hoverStyle')\n  hoverStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldValidateHoverStyle = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('clickHighlight')\n  clickWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetSelectionClass = true;\n  }\n\n  @Watch('hoverHighlight')\n  hoverWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n  }\n\n  @Watch('interactionKeys')\n  interactionWatcher(_newVal, _oldVal) {\n    this.shouldValidateInteractionKeys = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateTableData = true;\n  }\n\n  @Watch('dataKeyNames')\n  dataKeyNamesWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('cursor')\n  cursorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCursor = true;\n    this.shouldSetLegendCursor = true;\n  }\n\n  @Watch('accessibility')\n  accessibilityWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    const newTitle = _newVal && _newVal.title ? _newVal.title : false;\n    const oldTitle = _oldVal && _oldVal.title ? _oldVal.title : false;\n    if (newTitle !== oldTitle) {\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newExecutiveSummary = _newVal && _newVal.executiveSummary ? _newVal.executiveSummary : false;\n    const oldExecutiveSummary = _oldVal && _oldVal.executiveSummary ? _oldVal.executiveSummary : false;\n    if (newExecutiveSummary !== oldExecutiveSummary) {\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n    }\n    const newPurpose = _newVal && _newVal.purpose ? _newVal.purpose : false;\n    const oldPurpose = _oldVal && _oldVal.purpose ? _oldVal.purpose : false;\n    if (newPurpose !== oldPurpose) {\n      this.shouldSetChartAccessibilityPurpose = true;\n    }\n    const newLongDescription = _newVal && _newVal.longDescription ? _newVal.longDescription : false;\n    const oldLongDescription = _oldVal && _oldVal.longDescription ? _oldVal.longDescription : false;\n    if (newLongDescription !== oldLongDescription) {\n      this.shouldSetChartAccessibilityLongDescription = true;\n    }\n    const newContext = _newVal && _newVal.contextExplanation ? _newVal.contextExplanation : false;\n    const oldContext = _oldVal && _oldVal.contextExplanation ? _oldVal.contextExplanation : false;\n    if (newContext !== oldContext) {\n      this.shouldSetChartAccessibilityContext = true;\n    }\n    const newStatisticalNotes = _newVal && _newVal.statisticalNotes ? _newVal.statisticalNotes : false;\n    const oldStatisticalNotes = _oldVal && _oldVal.statisticalNotes ? _oldVal.statisticalNotes : false;\n    if (newStatisticalNotes !== oldStatisticalNotes) {\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n    }\n    const newStructureNotes = _newVal && _newVal.structureNotes ? _newVal.structureNotes : false;\n    const oldStructureNotes = _oldVal && _oldVal.structureNotes ? _oldVal.structureNotes : false;\n    if (newStructureNotes !== oldStructureNotes) {\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    const newincludeDataKeyNames = _newVal && _newVal.includeDataKeyNames;\n    const oldincludeDataKeyNames = _oldVal && _oldVal.includeDataKeyNames;\n    const newElementDescriptionAccessor =\n      _newVal && _newVal.elementDescriptionAccessor ? _newVal.elementDescriptionAccessor : false;\n    const oldElementDescriptionAccessor =\n      _oldVal && _oldVal.elementDescriptionAccessor ? _oldVal.elementDescriptionAccessor : false;\n    if (\n      newincludeDataKeyNames !== oldincludeDataKeyNames ||\n      newElementDescriptionAccessor !== oldElementDescriptionAccessor\n    ) {\n      if (newincludeDataKeyNames !== oldincludeDataKeyNames) {\n        // this one is tricky because it needs to run after the lifecycle\n        // AND it could run in the off-chance this prop is changed\n        this.shouldSetGroupAccessibilityLabel = true;\n      }\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newTextures = _newVal && _newVal.hideTextures ? _newVal.hideTextures : false;\n    const oldTextures = _oldVal && _oldVal.hideTextures ? _oldVal.hideTextures : false;\n    const newExTextures = _newVal && _newVal.showExperimentalTextures ? _newVal.showExperimentalTextures : false;\n    const oldExTextures = _oldVal && _oldVal.showExperimentalTextures ? _oldVal.showExperimentalTextures : false;\n    if (newTextures !== oldTextures || newExTextures !== oldExTextures) {\n      this.shouldSetTextures = true;\n      this.shouldUpdateLegend = true;\n      this.shouldDrawInteractionState = true;\n      this.shouldCheckLabelColor = true;\n    }\n    const newSmallValue = _newVal && _newVal.showSmallLabels ? _newVal.showSmallLabels : false;\n    const oldSmallValue = _oldVal && _oldVal.showSmallLabels ? _oldVal.showSmallLabels : false;\n    if (newSmallValue !== oldSmallValue) {\n      this.shouldSetLabelOpacity = true;\n    }\n    const newStrokes = _newVal && _newVal.hideStrokes ? _newVal.hideStrokes : false;\n    const oldStrokes = _oldVal && _oldVal.hideStrokes ? _oldVal.hideStrokes : false;\n    if (newStrokes !== oldStrokes) {\n      this.shouldSetStrokes = true;\n      this.shouldUpdateLegend = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newKeyNav =\n      _newVal && _newVal.keyboardNavConfig && _newVal.keyboardNavConfig.disabled\n        ? _newVal.keyboardNavConfig.disabled\n        : false;\n    const oldKeyNav =\n      _oldVal && _oldVal.keyboardNavConfig && _oldVal.keyboardNavConfig.disabled\n        ? _oldVal.keyboardNavConfig.disabled\n        : false;\n    const newInterface = _newVal && _newVal.elementsAreInterface ? _newVal.elementsAreInterface : false;\n    const oldInterface = _oldVal && _oldVal.elementsAreInterface ? _oldVal.elementsAreInterface : false;\n    if (newKeyNav !== oldKeyNav || newInterface !== oldInterface) {\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetChartAccessibilitySubtitle = true;\n      this.shouldSetChartAccessibilityLongDescription = true;\n      this.shouldSetChartAccessibilityContext = true;\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n      this.shouldSetChartAccessibilityPurpose = true;\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    if (newInterface !== oldInterface) {\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('referenceLines')\n  @Watch('referenceStyle')\n  referenceLinesWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetAnnotationAccessibility = true;\n  }\n\n  @Watch('annotations')\n  annotationsWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetAnnotationAccessibility = true;\n  }\n\n  @Watch('localization')\n  localizationWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n\n    // language\n    const newLanguage = _newVal && _newVal.language ? _newVal.language : false;\n    const oldLanguage = _oldVal && _oldVal.language ? _oldVal.language : false;\n    if (newLanguage !== oldLanguage) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldSetLabelContent = true;\n      this.shouldCheckLabelColor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n\n    // numeralLocale\n    const newNumeralLocale = _newVal && _newVal.numeralLocale ? _newVal.numeralLocale : false;\n    const oldNumeralLocale = _oldVal && _oldVal.numeralLocale ? _oldVal.numeralLocale : false;\n    if (newNumeralLocale !== oldNumeralLocale) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldSetLabelContent = true;\n      this.shouldCheckLabelColor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n  }\n\n  @Watch('uniqueID')\n  idWatcher(newVal, _oldVal) {\n    console.error(\n      'Change detected in prop uniqueID from value ' +\n        _oldVal +\n        ' to value ' +\n        newVal +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // we have removed the ability to change this prop post load\n    // this.chartID = newVal || 'bar-chart-' + uuid();\n    // this.barChartEl.id = this.chartID;\n    // this.shouldValidate = true;\n    // this.shouldUpdateDescriptionWrapper = true;\n    // this.shouldSetParentSVGAccessibility = true;\n    // this.shouldUpdateLegend = true;\n    // this.shouldSetTextures = true;\n    // this.shouldCheckLabelColor = true;\n    // this.shouldDrawInteractionState = true;\n    // this.shouldSetStrokes = true;\n  }\n\n  @Watch('suppressEvents')\n  suppressWatcher(_newVal, _oldVal) {\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldSetLegendCursor = true;\n    this.shouldUpdateLegendInteractivity = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldValidate = true;\n    this.shouldRedrawWrapper = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('unitTest')\n  unitTestWatcher(_newVal, _oldVal) {\n    this.shouldSetTestingAttributes = true;\n  }\n\n  componentWillLoad() {\n    const chartID = this.uniqueID || 'bar-chart-' + uuid();\n    this.initialLoadEvent.emit({ chartID: chartID });\n    // contrary to componentWillUpdate, this method appears safe to use for\n    // any calculations we need. Keeping them here reduces future refactor,\n    // since componentWillUpdate should eventually mirror this method\n    return new Promise(resolve => {\n      this.duration = 0;\n      this.defaults = true;\n      this.chartID = chartID;\n      this.barChartEl.id = this.chartID;\n      this.setLocalizationConfig();\n      this.setTagLevels();\n      this.prepareData();\n      this.prepareLegendData();\n      this.prepareLabelData();\n      this.updateChartVariable();\n      this.prepareScales();\n      this.validateInteractionKeys();\n      this.setTableData();\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.validateClickStyle();\n      this.validateHoverStyle();\n      this.setColors();\n      resolve('component will load');\n    });\n  }\n\n  componentWillUpdate() {\n    // NEVER put items in this method that rely on props (until stencil bug is resolved)\n    // All items that belong here are currently at the top of render\n    // see: https://github.com/ionic-team/stencil/issues/2061#issuecomment-578282178\n    return new Promise(resolve => {\n      resolve('component will update');\n    });\n  }\n\n  componentDidLoad() {\n    return new Promise(resolve => {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.renderRootElements();\n      this.setTooltipInitialStyle();\n      this.setChartDescriptionWrapper();\n      this.setChartAccessibilityTitle();\n      this.setChartAccessibilitySubtitle();\n      this.setChartAccessibilityLongDescription();\n      this.setChartAccessibilityExecutiveSummary();\n      this.setChartAccessibilityPurpose();\n      this.setChartAccessibilityContext();\n      this.setChartAccessibilityStatisticalNotes();\n      this.setChartAccessibilityStructureNotes();\n      this.setParentSVGAccessibility();\n      this.reSetRoot();\n      this.setTextures();\n      this.setStrokes();\n      this.setSubTitleElements();\n      this.drawXGrid();\n      this.drawYGrid();\n      this.setGlobalSelections();\n      this.setTestingAttributes();\n      this.validateClickStyle();\n      this.validateHoverStyle();\n      this.validateDataLabelAccessor();\n      this.enterGeometries();\n      this.updateGeometries();\n      this.exitGeometries();\n      this.enterLabels();\n      this.updateLabels();\n      this.exitLabels();\n      this.drawGeometries();\n      this.setChartCountAccessibility();\n      this.setGeometryAccessibilityAttributes();\n      this.setGeometryAriaLabels();\n      this.setRoundedCorners();\n      this.drawLegendElements();\n      this.validateLabelPlacement();\n      this.setLabelContent();\n      this.processLabelPosition(this.updatingLabels, false, true, false);\n      this.drawReferenceLines();\n      this.setSelectedClass();\n      this.checkLabelColorAgainstBackground();\n      this.updateCursor();\n      this.bindInteractivity();\n      this.bindLegendInteractivity();\n      this.drawXAxis();\n      this.setXAxisAccessibility();\n      this.drawYAxis();\n      this.setYAxisAccessibility();\n      this.drawAnnotations();\n      this.setAnnotationAccessibility();\n      this.drawBaseline();\n      this.onChangeHandler();\n      // we want to hide all child <g> of this.root BUT we want to make sure not to hide the\n      // parent<g> that contains our geometries! In a subGroup chart (like stacked bars),\n      // we want to pass the PARENT of all the <g>s that contain bars\n      hideNonessentialGroups(this.root.node(), this.bars.node());\n      this.setGroupAccessibilityAttributes();\n      this.setGroupAccessibilityID();\n      this.defaults = false;\n      // catch all to remove entering class from labels once we have loaded component\n      this.updatingLabels.classed('entering', false);\n      resolve('component did load');\n    }).then(() => this.initialLoadEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  componentDidUpdate() {\n    return new Promise(resolve => {\n      this.duration = !this.animationConfig || !this.animationConfig.disabled ? 750 : 0;\n      if (this.shouldUpdateDescriptionWrapper) {\n        this.setChartDescriptionWrapper();\n        this.shouldUpdateDescriptionWrapper = false;\n      }\n      if (this.shouldSetChartAccessibilityCount) {\n        this.setChartCountAccessibility();\n        this.shouldSetChartAccessibilityCount = false;\n      }\n      if (this.shouldSetChartAccessibilityTitle) {\n        this.setChartAccessibilityTitle();\n        this.shouldSetChartAccessibilityTitle = false;\n      }\n      if (this.shouldSetChartAccessibilitySubtitle) {\n        this.setChartAccessibilitySubtitle();\n        this.shouldSetChartAccessibilitySubtitle = false;\n      }\n      if (this.shouldSetChartAccessibilityLongDescription) {\n        this.setChartAccessibilityLongDescription();\n        this.shouldSetChartAccessibilityLongDescription = false;\n      }\n      if (this.shouldSetChartAccessibilityExecutiveSummary) {\n        this.setChartAccessibilityExecutiveSummary();\n        this.shouldSetChartAccessibilityExecutiveSummary = false;\n      }\n      if (this.shouldSetChartAccessibilityPurpose) {\n        this.setChartAccessibilityPurpose();\n        this.shouldSetChartAccessibilityPurpose = false;\n      }\n      if (this.shouldSetChartAccessibilityContext) {\n        this.setChartAccessibilityContext();\n        this.shouldSetChartAccessibilityContext = false;\n      }\n      if (this.shouldSetChartAccessibilityStatisticalNotes) {\n        this.setChartAccessibilityStatisticalNotes();\n        this.shouldSetChartAccessibilityStatisticalNotes = false;\n      }\n      if (this.shouldSetChartAccessibilityStructureNotes) {\n        this.setChartAccessibilityStructureNotes();\n        this.shouldSetChartAccessibilityStructureNotes = false;\n      }\n      if (this.shouldSetParentSVGAccessibility) {\n        this.setParentSVGAccessibility();\n        this.shouldSetParentSVGAccessibility = false;\n      }\n      if (this.shouldResetRoot) {\n        this.reSetRoot();\n        this.shouldResetRoot = false;\n      }\n      if (this.shouldSetTextures) {\n        this.setTextures();\n        this.shouldSetTextures = false;\n      }\n      if (this.shouldSetStrokes) {\n        this.setStrokes();\n        this.shouldSetStrokes = false;\n      }\n      if (this.shouldSetGlobalSelections) {\n        this.setGlobalSelections();\n        this.shouldSetGlobalSelections = false;\n      }\n      if (this.shouldSetTestingAttributes) {\n        this.setTestingAttributes();\n        this.shouldSetTestingAttributes = false;\n      }\n      if (this.shouldSetSubTitle) {\n        this.setSubTitleElements();\n        this.shouldSetSubTitle = false;\n      }\n      if (this.shouldUpdateXGrid) {\n        this.drawXGrid();\n        this.shouldUpdateXGrid = false;\n      }\n      if (this.shouldUpdateYGrid) {\n        this.drawYGrid();\n        this.shouldUpdateYGrid = false;\n      }\n      if (this.shouldEnterUpdateExit) {\n        this.enterGeometries();\n        this.updateGeometries();\n        this.exitGeometries();\n        this.enterLabels();\n        this.updateLabels();\n        this.exitLabels();\n        this.shouldEnterUpdateExit = false;\n      }\n      if (this.shouldUpdateGeometries) {\n        this.drawGeometries();\n        this.shouldUpdateGeometries = false;\n      }\n      if (this.shouldSetGeometryAccessibilityAttributes) {\n        this.setGeometryAccessibilityAttributes();\n        this.shouldSetGeometryAccessibilityAttributes = false;\n      }\n      if (this.shouldSetGeometryAriaLabels) {\n        this.setGeometryAriaLabels();\n        this.shouldSetGeometryAriaLabels = false;\n      }\n      // if a component's <g> elements can enter/exit, this will need to be called\n      // in the lifecycle more than just initially\n      // if (this.shouldSetGroupAccessibilityAttributes) {\n      //   this.setGroupAccessibilityAttributes()\n      //   this.shouldSetGroupAccessibilityAttributes = false\n      // }\n      if (this.shouldSetGroupAccessibilityLabel) {\n        this.setGroupAccessibilityID();\n        this.shouldSetGroupAccessibilityLabel = false;\n      }\n      if (this.shouldUpdateCorners) {\n        this.setRoundedCorners();\n        this.shouldUpdateCorners = false;\n      }\n      if (this.shouldUpdateLegend) {\n        this.drawLegendElements();\n        this.shouldUpdateLegend = false;\n      }\n      if (this.shouldSetLabelContent) {\n        this.setLabelContent();\n        this.shouldSetLabelContent = false;\n      }\n      if (this.shouldSetLabelPosition) {\n        this.setLabelPosition();\n        this.shouldSetLabelPosition = false;\n      }\n      if (this.shouldUpdateReferenceLines) {\n        this.drawReferenceLines();\n        this.shouldUpdateReferenceLines = false;\n      }\n      if (this.shouldDrawInteractionState) {\n        this.updateInteractionState();\n        this.shouldDrawInteractionState = false;\n      }\n      if (this.shouldSetLabelOpacity) {\n        this.setLabelOpacity();\n        this.shouldSetLabelOpacity = false;\n      }\n      if (this.shouldCheckLabelColor) {\n        this.checkLabelColorAgainstBackground();\n        this.shouldCheckLabelColor = false;\n      }\n      if (this.shouldSetSelectionClass) {\n        this.setSelectedClass();\n        this.shouldSetSelectionClass = false;\n      }\n      if (this.shouldUpdateLegendInteractivity) {\n        this.bindLegendInteractivity();\n        this.shouldUpdateLegendInteractivity = false;\n      }\n      if (this.shouldSetLegendCursor) {\n        this.setLegendCursor();\n        this.shouldSetLegendCursor = false;\n      }\n      if (this.shouldUpdateCursor) {\n        this.updateCursor();\n        this.shouldUpdateCursor = false;\n      }\n      if (this.shouldBindInteractivity) {\n        this.bindInteractivity();\n        this.shouldBindInteractivity = false;\n      }\n      if (this.shouldUpdateXAxis) {\n        this.drawXAxis();\n        this.shouldUpdateXAxis = false;\n      }\n      if (this.shouldSetXAxisAccessibility) {\n        this.setXAxisAccessibility();\n        this.shouldSetXAxisAccessibility = false;\n      }\n      if (this.shouldUpdateYAxis) {\n        this.drawYAxis();\n        this.shouldUpdateYAxis = false;\n      }\n      if (this.shouldSetYAxisAccessibility) {\n        this.setYAxisAccessibility();\n        this.shouldSetYAxisAccessibility = false;\n      }\n      if (this.shouldUpdateAnnotations) {\n        this.drawAnnotations();\n        this.shouldUpdateAnnotations = false;\n      }\n      if (this.shouldSetAnnotationAccessibility) {\n        this.setAnnotationAccessibility();\n        this.shouldSetAnnotationAccessibility = false;\n      }\n      if (this.shouldUpdateBaseline) {\n        this.drawBaseline();\n        this.shouldUpdateBaseline = false;\n      }\n      this.onChangeHandler();\n      this.updatingLabels.classed('entering', false);\n      resolve('component did update');\n    }).then(() => this.drawEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  shouldValidateLocalizationProps() {\n    const windowInstances = getGlobalInstances();\n    const languageString = windowInstances.i18Next.language;\n    const languageObject = windowInstances.i18Next.getResourceBundle(languageString);\n    const numeralObject = windowInstances.numeral.localeData();\n    if (this.shouldValidateLocalization && !this.localization.skipValidation) {\n      this.shouldValidateLocalization = false;\n      validateLocalizationProps(this.chartID, {\n        ...this.localization,\n        language: languageObject,\n        numeralLocale: numeralObject\n      });\n    }\n  }\n\n  shouldValidateAccessibilityProps() {\n    if (this.shouldValidateAccessibility && !this.accessibility.disableValidation) {\n      this.shouldValidateAccessibility = false;\n      validateAccessibilityProps(\n        this.chartID,\n        { ...this.accessibility },\n        {\n          annotations: this.annotations,\n          data: this.data,\n          uniqueID: this.uniqueID,\n          context: {\n            mainTitle: this.mainTitle,\n            onClickEvent: this.suppressEvents ? undefined : this.clickEvent.emit\n          }\n        }\n      );\n    }\n  }\n\n  validateInteractionKeys() {\n    this.innerInteractionKeys =\n      this.interactionKeys && this.interactionKeys.length\n        ? this.interactionKeys\n        : [this.groupAccessor || this.ordinalAccessor];\n  }\n\n  validateDataLabelAccessor() {\n    this.innerLabelAccessor = this.dataLabel.labelAccessor ? this.dataLabel.labelAccessor : this.valueAccessor;\n  }\n\n  getLanguageString() {\n    return getActiveLanguageString(this.localization);\n  }\n\n  setLocalizationConfig() {\n    configLocalization(this.localization);\n  }\n\n  setTagLevels() {\n    this.topLevel = findTagLevel(this.highestHeadingLevel);\n    this.bottomLevel = findTagLevel(this.highestHeadingLevel, 3);\n  }\n\n  updateChartVariable() {\n    this.padding = typeof this.padding === 'string' ? getPadding(this.padding) : this.padding;\n\n    // before we render/load we need to set our height and width based on props\n    this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n    this.innerWidth = this.width - this.margin.left - this.margin.right;\n\n    this.innerPaddedHeight = this.innerHeight - this.padding.top - this.padding.bottom;\n    this.innerPaddedWidth = this.innerWidth - this.padding.left - this.padding.right;\n  }\n\n  prepareData() {\n    if (this.data) {\n      if (this.sortOrder === 'asc') {\n        this.preppedData = [...this.data].sort((a, b) => {\n          a[this.valueAccessor] = parseFloat(a[this.valueAccessor]);\n          b[this.valueAccessor] = parseFloat(b[this.valueAccessor]);\n          return a[this.valueAccessor] - b[this.valueAccessor];\n        });\n      } else if (this.sortOrder === 'desc') {\n        this.preppedData = [...this.data].sort((a, b) => {\n          a[this.valueAccessor] = parseFloat(a[this.valueAccessor]);\n          b[this.valueAccessor] = parseFloat(b[this.valueAccessor]);\n          return b[this.valueAccessor] - a[this.valueAccessor];\n        });\n      } else {\n        this.preppedData = this.data;\n        this.preppedData.map(d => {\n          d[this.valueAccessor] = parseFloat(d[this.valueAccessor]);\n        });\n      }\n    }\n  }\n\n  prepareLegendData() {\n    const nested = nest()\n      .key(d => d[this.groupAccessor])\n      .entries(this.preppedData);\n\n    this.legendData = [];\n    nested.forEach(el => {\n      this.legendData.push(el.values[0]);\n    });\n  }\n\n  prepareLabelData() {\n    if (this.preppedData) {\n      // min\n      const minIdx = minIndex(this.preppedData, d => d[this.valueAccessor]);\n      const minItem = this.preppedData[minIdx];\n      // max\n      const maxIdx = maxIndex(this.preppedData, d => d[this.valueAccessor]);\n      const maxItem = this.preppedData[maxIdx];\n      // first\n      const firstItem = this.preppedData.find(val => val[this.valueAccessor] != null);\n      // last\n      const lastItem = [...this.preppedData].reverse().find(val => val[this.valueAccessor] != null);\n\n      this.displayOnlyLabelData = {\n        first: [firstItem],\n        last: [lastItem],\n        min: [minItem],\n        max: [maxItem]\n      };\n    }\n  }\n\n  setSubTitleElements() {\n    setSubTitle({\n      root: this.subTitleG,\n      subTitle: this.subTitle\n    });\n  }\n\n  setColors() {\n    const colorFromProps = this.colors ? convertVisaColor(this.colors) : this.colorPalette;\n\n    const minValue = min(this.preppedData, d => d[this.valueAccessor]);\n    const maxValue = max(this.preppedData, d => d[this.valueAccessor]);\n\n    this.preparedColors = this.groupAccessor\n      ? getColors(\n          colorFromProps,\n          scaleOrdinal()\n            .domain(this.data.map(d => d[this.groupAccessor]))\n            .domain()\n        )\n      : getColors(colorFromProps, [minValue, maxValue]);\n\n    const colors = this.preparedColors.range ? this.preparedColors.range() : this.preparedColors;\n    const strokeColors = [];\n    const backgroundColors = [];\n    let i = 0;\n    const half = Math.ceil(colors.length / 2);\n    const isDiverging = this.colorPalette && this.colorPalette.includes('diverging');\n    const isDark = this.colorPalette && this.colorPalette.includes('dark');\n    const scheme = this.groupAccessor || colors.length === 1 ? 'categorical' : isDiverging ? 'diverging' : 'sequential';\n    colors.forEach(color => {\n      const colorsMatchingScheme = prepareStrokeColorsFromScheme(color, i, colors, scheme);\n      if (scheme === 'diverging') {\n        const fillLuminance = calculateLuminance(colorsMatchingScheme.fillColor);\n        const strokeLuminance = calculateLuminance(colorsMatchingScheme.textureColor);\n        const darkerColor =\n          fillLuminance > strokeLuminance ? colorsMatchingScheme.textureColor : colorsMatchingScheme.fillColor;\n        const lighterColor =\n          fillLuminance < strokeLuminance ? colorsMatchingScheme.textureColor : colorsMatchingScheme.fillColor;\n        if (colors.length % 2 && i === (colors.length - 1) / 2) {\n          backgroundColors.push(isDark ? darkerColor : lighterColor);\n          strokeColors.push(isDark ? lighterColor : darkerColor);\n        } else {\n          strokeColors.push(isDark ? darkerColor : lighterColor);\n          backgroundColors.push(isDark ? lighterColor : darkerColor);\n        }\n      } else {\n        if (i + 1 < half) {\n          backgroundColors.push(colors[0]);\n          strokeColors.push(colors[colors.length - 1]);\n        } else {\n          strokeColors.push(colors[0]);\n          backgroundColors.push(colors[colors.length - 1]);\n        }\n      }\n      i++;\n    });\n\n    this.fillColors = this.preparedColors.copy().range(backgroundColors);\n\n    this.strokeColors = this.preparedColors.copy().range(strokeColors);\n  }\n\n  setTextures() {\n    const colorsArray = this.preparedColors.range ? this.preparedColors.range() : this.preparedColors;\n    const scheme =\n      this.groupAccessor || colorsArray.length === 1\n        ? 'categorical'\n        : this.colorPalette && this.colorPalette.includes('diverging')\n        ? 'diverging'\n        : 'sequential';\n    if (\n      this.accessibility.hideTextures ||\n      (scheme === 'categorical' && colorsArray.length > 6) ||\n      (scheme !== 'categorical' && !this.accessibility.showExperimentalTextures)\n    ) {\n      this.colorArr = this.preparedColors;\n    } else {\n      const textures = convertColorsToTextures({\n        colors: colorsArray,\n        rootSVG: this.svg.node(),\n        id: this.chartID,\n        scheme,\n        disableTransitions: !this.duration\n      });\n      this.colorArr = this.preparedColors.copy().range(textures);\n    }\n  }\n\n  setStrokes() {\n    const colorsArray = this.preparedColors.range ? this.preparedColors.range() : this.preparedColors;\n    const scheme =\n      this.groupAccessor || colorsArray.length === 1\n        ? 'categorical'\n        : this.colorPalette && this.colorPalette.includes('diverging')\n        ? 'diverging'\n        : 'sequential';\n    this.strokes = buildStrokes({\n      root: this.svg.node(),\n      id: this.chartID,\n      colors:\n        !this.accessibility.hideTextures && scheme !== 'categorical' && this.accessibility.showExperimentalTextures\n          ? this.fillColors.range()\n          : colorsArray,\n      clickStyle: this.innerClickStyle,\n      hoverStyle: this.innerHoverStyle,\n      strokeOverride:\n        !this.accessibility.hideTextures && scheme !== 'categorical' && this.accessibility.showExperimentalTextures\n          ? this.strokeColors.range()\n          : undefined\n    });\n  }\n\n  setTableData() {\n    // generate scoped and formatted data for data-table component\n    const keys = scopeDataKeys(this, chartAccessors, 'bar-chart');\n    this.tableData = getScopedData(this.preppedData, keys);\n    this.tableColumns = Object.keys(keys);\n  }\n\n  validateLabelPlacement() {\n    // check data label placement assignment based on layout\n    this.placement = this.dataLabel.placement;\n    if (this.layout === 'vertical') {\n      if (this.placement !== 'top' && this.placement !== 'bottom' && this.placement !== 'auto') {\n        this.placement = 'top';\n      }\n    } else {\n      if (!this.placement || this.placement === 'top' || this.placement === 'bottom') {\n        this.placement = 'right';\n      }\n    }\n  }\n\n  // scale band based on layout of chart, called in mulitple places to reduce code repetition\n  shouldCenterBaseline() {\n    return (\n      ((this.xAxis.centerBaseline && this.layout === 'horizontal') ||\n        (this.yAxis.centerBaseline && this.layout === 'vertical')) &&\n      min(this.preppedData, d => d[this.valueAccessor]) >= 0\n    );\n  }\n\n  prepareScales() {\n    // if center baseline then (1) use maxOverride halved or (2) use data halved\n    // else (1) use minOverride or (2) use data\n    const minBarValue = this.shouldCenterBaseline()\n      ? this.maxValueOverride && this.maxValueOverride > max(this.preppedData, d => d[this.valueAccessor])\n        ? -halve(this.maxValueOverride)\n        : -halve(max(this.preppedData, d => d[this.valueAccessor]))\n      : this.minValueOverride && this.minValueOverride < min(this.preppedData, d => d[this.valueAccessor])\n      ? this.minValueOverride\n      : min(this.preppedData, d => d[this.valueAccessor]);\n\n    const maxBarValue = this.shouldCenterBaseline()\n      ? this.maxValueOverride && this.maxValueOverride > max(this.preppedData, d => d[this.valueAccessor])\n        ? halve(this.maxValueOverride)\n        : halve(max(this.preppedData, d => d[this.valueAccessor]))\n      : this.maxValueOverride && this.maxValueOverride > max(this.preppedData, d => d[this.valueAccessor])\n      ? this.maxValueOverride\n      : max(this.preppedData, d => d[this.valueAccessor]);\n\n    if (this.layout === 'vertical') {\n      this.y = scaleLinear()\n        .domain([Math.min(0, minBarValue), Math.max(0, maxBarValue)])\n        .range([this.innerPaddedHeight, 0]);\n      this.x = scaleBand()\n        .domain(this.preppedData.map(d => d[this.ordinalAccessor]))\n        .range([0, this.innerPaddedWidth])\n        .padding(this.barIntervalRatio);\n    } else if (this.layout === 'horizontal') {\n      this.x = scaleLinear()\n        .domain([Math.min(0, minBarValue), Math.max(0, maxBarValue)])\n        .range([0, this.innerPaddedWidth]);\n\n      this.y = scaleBand()\n        .domain(this.preppedData.map(d => d[this.ordinalAccessor]))\n        .range([0, this.innerPaddedHeight])\n        .padding(this.barIntervalRatio);\n    }\n  }\n\n  // reset graph size based on window size\n  reSetRoot() {\n    const changeSvg = prepareRenderChange({\n      selection: this.svg,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeSvg\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    const changeRoot = prepareRenderChange({\n      selection: this.root,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRoot.attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n\n    const changeRootG = prepareRenderChange({\n      selection: this.rootG,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRootG.attr('transform', `translate(${this.padding.left}, ${this.padding.top})`);\n\n    setAccessibilityDescriptionWidth(this.chartID, this.width);\n  }\n\n  // this function is used in drawAxis and setAccessAxis functions to determine (inverse) visible\n  // of the relevant axis + layout combination\n  checkHideAxisState(axisName: string, relevantLayout: string, minValue: number) {\n    return this[axisName].centerBaseline && this.layout === relevantLayout && minValue >= 0\n      ? true\n      : !this[axisName].visible;\n  }\n\n  // draw axis line\n  drawXAxis() {\n    const axisAccessor = this.layout === 'vertical' ? this.ordinalAccessor : this.valueAccessor;\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.xAxis.label;\n\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.x,\n      left: false,\n      wrapLabel: this.wrapLabel && this.layout === 'vertical' ? this.innerPaddedWidth / this.data.length : '',\n      format: this.xAxis.format,\n      dateFormat: this.xAxis.format,\n      tickInterval: this.xAxis.tickInterval,\n      label: axisLabel, // this.xAxis.label,\n      padding: this.padding,\n      hide: this.checkHideAxisState('xAxis', 'horizontal', min(this.preppedData, d => d[this.valueAccessor])),\n      duration: this.duration\n    });\n  }\n\n  drawYAxis() {\n    const axisAccessor = this.layout === 'vertical' ? this.valueAccessor : this.ordinalAccessor;\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.yAxis.label;\n\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.y,\n      left: true,\n      wrapLabel: this.wrapLabel ? this.padding.left || 100 : '',\n      format: this.yAxis.format,\n      dateFormat: this.yAxis.format,\n      tickInterval: this.yAxis.tickInterval,\n      label: axisLabel, // this.yAxis.label,\n      padding: this.padding,\n      hide: this.checkHideAxisState('yAxis', 'vertical', min(this.preppedData, d => d[this.valueAccessor])),\n      duration: this.duration\n    });\n  }\n\n  drawBaseline() {\n    // add baseline at 0\n    if (this.layout === 'vertical' && !this.shouldCenterBaseline()) {\n      drawAxis({\n        root: this.rootG,\n        height: this.innerPaddedHeight,\n        width: this.innerPaddedWidth,\n        axisScale: this.x,\n        left: false,\n        padding: this.padding,\n        markOffset: this.y(0) || -1,\n        duration: this.duration\n      });\n    }\n    if (this.layout === 'horizontal') {\n      drawAxis({\n        root: this.rootG,\n        height: this.innerPaddedHeight,\n        width: this.innerPaddedWidth,\n        axisScale: this.y,\n        left: true,\n        padding: this.padding,\n        markOffset: this.shouldCenterBaseline()\n          ? this.maxValueOverride && this.maxValueOverride > max(this.preppedData, d => d[this.valueAccessor])\n            ? -halve(this.maxValueOverride)\n            : -halve(max(this.preppedData, d => d[this.valueAccessor]))\n          : this.minValueOverride && this.minValueOverride < min(this.preppedData, d => d[this.valueAccessor])\n          ? this.minValueOverride\n          : this.x(0) || -1,\n        duration: this.duration\n      });\n    }\n  }\n\n  setXAxisAccessibility() {\n    const axisAccessor = this.layout === 'vertical' ? this.ordinalAccessor : this.valueAccessor;\n    const axisLabel =\n      this.xAxis.label && this.xAxis.label !== ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.xAxis.label;\n\n    setAccessXAxis({\n      rootEle: this.barChartEl,\n      hasXAxis: !this.checkHideAxisState('xAxis', 'horizontal', min(this.preppedData, d => d[this.valueAccessor])), // this is inverse of how drawAxis works\n      xAxis: this.x ? this.x : false, // this is optional for some charts, if hasXAxis is always false\n      xAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasXAxis is always false\n    });\n  }\n\n  setYAxisAccessibility() {\n    const axisAccessor = this.layout === 'vertical' ? this.valueAccessor : this.ordinalAccessor;\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.yAxis.label;\n\n    setAccessYAxis({\n      rootEle: this.barChartEl,\n      hasYAxis: !this.checkHideAxisState('yAxis', 'vertical', min(this.preppedData, d => d[this.valueAccessor])), // this is inverse of how drawAxis works\n      yAxis: this.y ? this.y : false, // this is optional for some charts, if hasXAxis is always false\n      yAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasXAxis is always false\n      // secondaryYAxis?: any, // pareto uses this\n      // secondaryYAxisLabel?: string, // pareto uses this\n      // xAxisLabel: this.xAxis.label ? this.xAxis.label : '' // parallel uses this to label all the y axes\n    });\n  }\n\n  // dashed line grid for chart\n  drawXGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.x,\n      false,\n      this.shouldCenterBaseline() && this.xAxis.gridVisible\n        ? !(this.layout === 'vertical')\n        : !(!(this.layout === 'vertical') && this.xAxis.gridVisible),\n      this.xAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  drawYGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.y,\n      true,\n      this.shouldCenterBaseline() && this.yAxis.gridVisible\n        ? !(this.layout === 'horizontal')\n        : !(this.layout === 'vertical' && this.yAxis.gridVisible),\n      this.yAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  enterGeometries() {\n    this.enter.interrupt();\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const innerPaddedOrdinalDimension =\n      'innerPadded' + ordinalDimension[0].toUpperCase() + ordinalDimension.substring(1);\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    const choice = this.layout === 'vertical' ? 'max' : 'min';\n\n    this.enter\n      .attr('class', 'bar')\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .attr('rx', this.roundedCorner)\n      .attr('ry', this.roundedCorner)\n      .attr('fill', d => {\n        // the following line could be added back in to improve performance, but it is visually quite jarring\n        // const fillSource = !select(n[i]).classed('geometryIsMoving') ? this.colorArr : this.preparedColors\n        return this.clickHighlight &&\n          this.clickHighlight.length > 0 &&\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys) &&\n          this.innerClickStyle.color\n          ? visaColors[this.innerClickStyle.color] || this.innerClickStyle.color\n          : this.hoverHighlight &&\n            checkHovered(d, this.hoverHighlight, this.innerInteractionKeys) &&\n            this.innerHoverStyle.color\n          ? visaColors[this.innerHoverStyle.color] || this.innerHoverStyle.color\n          : this.groupAccessor\n          ? this.colorArr(d[this.groupAccessor])\n          : this.colorArr(d[this.valueAccessor]);\n      })\n      .attr(valueAxis, d =>\n        this.shouldCenterBaseline()\n          ? this[valueAxis](halve(d[this.valueAccessor]) * (this.layout === 'vertical' ? 1 : -1))\n          : this[valueAxis](Math[choice](0, d[this.valueAccessor]))\n      )\n      .attr(valueDimension, d =>\n        Math.abs(\n          this.layout === 'vertical'\n            ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n            : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n        )\n      )\n      .each((_d, i, n) => {\n        initializeElementAccess(n[i]);\n      });\n    if (this.defaults) {\n      this.enter\n        .attr('opacity', d =>\n          checkInteraction(d, 1, this.hoverOpacity, this.hoverHighlight, this.clickHighlight, this.innerInteractionKeys)\n        )\n        .attr(ordinalAxis, d => this[ordinalAxis](d[this.ordinalAccessor]))\n        .attr(ordinalDimension, this[ordinalAxis].bandwidth());\n    } else {\n      this.enter\n        .attr('opacity', 0)\n        .attr(ordinalAxis, d => {\n          let shift = this[ordinalAxis](d[this.ordinalAccessor]) + this[ordinalAxis].bandwidth() / 2;\n          shift =\n            this[ordinalAxis](d[this.ordinalAccessor]) +\n            (this[ordinalAxis].bandwidth() / 2) * (shift / (this[innerPaddedOrdinalDimension] / 2));\n          return shift;\n        })\n        .attr(ordinalDimension, 0);\n    }\n    this.update.order();\n  }\n\n  updateGeometries() {\n    this.update.interrupt();\n\n    this.update\n      .transition('opacity')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('opacity', d =>\n        checkInteraction(d, 1, this.hoverOpacity, this.hoverHighlight, this.clickHighlight, this.innerInteractionKeys)\n      );\n  }\n\n  exitGeometries() {\n    this.exit.interrupt();\n    const axisOfShift = this.layout === 'vertical' ? 'x' : 'y';\n    const dimensionOfShift = this.layout === 'vertical' ? 'width' : 'height';\n    const innerPaddedDimension = 'innerPadded' + dimensionOfShift[0].toUpperCase() + dimensionOfShift.substring(1);\n\n    this.exit\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr(axisOfShift, (_d, i, n) => {\n        const self = select(n[i]);\n        let shift = +self.attr(axisOfShift) + +self.attr(dimensionOfShift) / 2;\n        shift =\n          +self.attr(axisOfShift) + (+self.attr(dimensionOfShift) / 2) * (shift / (this[innerPaddedDimension] / 2));\n        return shift;\n      })\n      .attr(dimensionOfShift, 0)\n      .attr('opacity', 0);\n\n    // We use this.update instead of this.exit to ensure the functions at the end\n    // of our lifecycle run, even though we are removing the exiting elements from\n    // inside this transition's endAll.\n    // (If we put this in this.exit, it will only run if elements exit.\n    // We want this to run every lifecycle.)\n    this.update\n      .transition('accessibilityAfterExit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        // before we exit geometries, we need to check if a focus exists or not\n        const focusDidExist = checkAccessFocus(this.rootG.node());\n        // then we must remove the exiting elements\n        this.exit.remove();\n        // then our util can count geometries\n        this.setChartCountAccessibility();\n        // our group's label should update with new counts too\n        this.setGroupAccessibilityID();\n        // since items exited, labels must receive updated values\n        this.setGeometryAriaLabels();\n        // and also make sure the user's focus isn't lost\n        retainAccessFocus({\n          parentGNode: this.rootG.node(),\n          focusDidExist\n          // recursive: true\n        });\n      });\n  }\n\n  drawGeometries() {\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    const choice = this.layout === 'vertical' ? 'max' : 'min';\n    this.update\n      .classed('geometryIsMoving', (d, i, n) => {\n        const geometryIsUpdating = checkAttributeTransitions(select(n[i]), [\n          {\n            attr: ordinalAxis,\n            numeric: true,\n            newValue: this[ordinalAxis](d[this.ordinalAccessor])\n          },\n          {\n            attr: ordinalDimension,\n            numeric: true,\n            newValue: this[ordinalAxis].bandwidth()\n          },\n          {\n            attr: valueAxis,\n            numeric: true,\n            newValue: this.shouldCenterBaseline()\n              ? this[valueAxis](halve(d[this.valueAccessor]) * (this.layout === 'vertical' ? 1 : -1))\n              : this[valueAxis](Math[choice](0, d[this.valueAccessor]))\n          },\n          {\n            attr: valueDimension,\n            numeric: true,\n            newValue: Math.abs(\n              this.layout === 'vertical'\n                ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n                : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n            )\n          }\n        ]);\n        return geometryIsUpdating;\n      })\n      .attr('data-translate-x', this.padding.left + this.margin.left)\n      .attr('data-translate-y', this.padding.top + this.margin.top)\n      .attr(`data-${ordinalAxis}`, d => this[ordinalAxis](d[this.ordinalAccessor]))\n      .attr(`data-${ordinalDimension}`, this[ordinalAxis].bandwidth())\n      .attr(`data-${valueAxis}`, d =>\n        this.shouldCenterBaseline()\n          ? this[valueAxis](halve(d[this.valueAccessor]) * (this.layout === 'vertical' ? 1 : -1))\n          : this[valueAxis](Math[choice](0, d[this.valueAccessor]))\n      )\n      .attr(`data-${valueDimension}`, d =>\n        Math.abs(\n          this.layout === 'vertical'\n            ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n            : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n        )\n      )\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr(ordinalAxis, d => this[ordinalAxis](d[this.ordinalAccessor]))\n      .attr(ordinalDimension, this[ordinalAxis].bandwidth())\n      .attr(valueAxis, d =>\n        this.shouldCenterBaseline()\n          ? this[valueAxis](halve(d[this.valueAccessor]) * (this.layout === 'vertical' ? 1 : -1))\n          : this[valueAxis](Math[choice](0, d[this.valueAccessor]))\n      )\n      .attr(valueDimension, d =>\n        Math.abs(\n          this.layout === 'vertical'\n            ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n            : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n        )\n      )\n      .call(transitionEndAll, () => {\n        this.update.classed('geometryIsMoving', false);\n\n        this.updateInteractionState();\n        this.checkLabelColorAgainstBackground();\n\n        // we must make sure if geometries move, that our focus indicator does too\n        retainAccessFocus({\n          parentGNode: this.rootG.node()\n          // focusDidExist // this only matters for exiting selections\n          // recursive: true // this only matters for\n        });\n\n        // now we can emit the event that transitions are complete\n        this.transitionEndEvent.emit({ chartID: this.chartID });\n      });\n  }\n\n  setGlobalSelections() {\n    const dataBoundToGeometries = this.bars.selectAll('.bar').data(this.preppedData, d => d[this.ordinalAccessor]);\n\n    this.enter = dataBoundToGeometries.enter().append('rect');\n    this.exit = dataBoundToGeometries.exit();\n    this.update = dataBoundToGeometries.merge(this.enter);\n\n    this.exitSize = this.exit.size();\n    this.enterSize = this.enter.size();\n\n    const dataBoundToLabels = this.labels.selectAll('text').data(this.preppedData, d => d[this.ordinalAccessor]);\n    this.enteringLabels = dataBoundToLabels.enter().append('text');\n    this.exitingLabels = dataBoundToLabels.exit();\n    this.updatingLabels = dataBoundToLabels.merge(this.enteringLabels);\n  }\n\n  setTestingAttributes() {\n    if (this.unitTest) {\n      select(this.barChartEl)\n        .select('.visa-viz-d3-bar-container')\n        .attr('data-testid', 'chart-container');\n      select(this.barChartEl)\n        .select('.bar-main-title')\n        .attr('data-testid', 'main-title');\n      select(this.barChartEl)\n        .select('.bar-sub-title')\n        .attr('data-testid', 'sub-title');\n      this.svg.attr('data-testid', 'root-svg');\n      this.root.attr('data-testid', 'margin-container');\n      this.rootG.attr('data-testid', 'padding-container');\n      this.legendG.attr('data-testid', 'legend-container');\n      this.tooltipG.attr('data-testid', 'tooltip-container');\n      this.bars.attr('data-testid', 'bar-group');\n      this.labels.attr('data-testid', 'dataLabel-group');\n      this.referencesG.attr('data-testid', 'reference-line-group');\n      this.svg.select('defs').attr('data-testid', 'pattern-defs');\n\n      this.updatingLabels.attr('data-testid', 'dataLabel').attr('data-id', d => `label-${d[this.ordinalAccessor]}`);\n      this.update.attr('data-testid', 'bar').attr('data-id', d => `bar-${d[this.ordinalAccessor]}`);\n\n      // reference lines do not have global selections\n      this.referencesG.selectAll('.bar-reference-line').attr('data-testid', 'reference-line');\n\n      this.referencesG.selectAll('.bar-reference-line-label').attr('data-testid', 'reference-line-label');\n    } else {\n      select(this.barChartEl)\n        .select('.visa-viz-d3-bar-container')\n        .attr('data-testid', null);\n      select(this.barChartEl)\n        .select('.bar-main-title')\n        .attr('data-testid', null);\n      select(this.barChartEl)\n        .select('.bar-sub-title')\n        .attr('data-testid', null);\n      this.svg.attr('data-testid', null);\n      this.root.attr('data-testid', null);\n      this.rootG.attr('data-testid', null);\n      this.legendG.attr('data-testid', null);\n      this.tooltipG.attr('data-testid', null);\n      this.bars.attr('data-testid', null);\n      this.labels.attr('data-testid', null);\n      this.referencesG.attr('data-testid', null);\n      this.svg.select('defs').attr('data-testid', null);\n\n      this.updatingLabels.attr('data-testid', null).attr('data-id', null);\n      this.update.attr('data-testid', null).attr('data-id', null);\n\n      this.referencesG.selectAll('.bar-reference-line').attr('data-testid', null);\n\n      this.referencesG.selectAll('.bar-reference-line-label').attr('data-testid', null);\n    }\n  }\n\n  renderRootElements() {\n    this.svg = select(this.barChartEl)\n      .select('.visa-viz-d3-bar-container')\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    this.root = this.svg.append('g').attr('id', 'visa-viz-margin-container-g-' + this.chartID);\n\n    this.rootG = this.root.append('g').attr('id', 'visa-viz-padding-container-g-' + this.chartID);\n\n    this.gridG = this.rootG.append('g').attr('class', 'grid-group');\n\n    this.bars = this.rootG.append('g').attr('class', 'bar-group');\n\n    this.labels = this.rootG.append('g').attr('class', 'bar-dataLabel-group');\n\n    this.legendG = select(this.barChartEl)\n      .select('.bar-legend')\n      .append('svg');\n\n    this.subTitleG = select(this.barChartEl).select('.bar-sub-title');\n\n    this.tooltipG = select(this.barChartEl).select('.bar-tooltip');\n\n    this.referencesG = this.rootG.append('g').attr('class', 'bar-reference-line-group');\n  }\n\n  setRoundedCorners() {\n    this.update\n      .transition('corners')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('rx', this.roundedCorner)\n      .attr('ry', this.roundedCorner);\n  }\n\n  validateClickStyle() {\n    this.innerClickStyle = this.clickStyle\n      ? this.clickStyle\n      : {\n          strokeWidth: 2\n        };\n  }\n\n  validateHoverStyle() {\n    // interaction style default\n    this.innerHoverStyle = this.hoverStyle\n      ? this.hoverStyle\n      : {\n          strokeWidth: 2\n        };\n  }\n\n  updateInteractionState() {\n    removeHoverStrokes(this.svg.node());\n    // we created an \"opacity\" transition namespace in update's transition\n    // we override it here to instantly display opacity state (below)\n    this.update.interrupt('opacity');\n\n    // we use this.update and this.labelCurrent from setGlobalSelection here\n    // the lifecycle state does not matter (enter/update/exit)\n    // since interaction state can happen at any time\n    // first we address interaction state on marks/bars\n    this.update\n      .attr('opacity', d =>\n        checkInteraction(d, 1, this.hoverOpacity, this.hoverHighlight, this.clickHighlight, this.innerInteractionKeys)\n      )\n      .attr('fill', d => {\n        // the following line could be added back in to improve performance, but it is visually quite jarring\n        // const fillSource = !select(n[i]).classed('geometryIsMoving') ? this.colorArr : this.preparedColors\n        return this.clickHighlight &&\n          this.clickHighlight.length > 0 &&\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys) &&\n          this.innerClickStyle.color\n          ? visaColors[this.innerClickStyle.color] || this.innerClickStyle.color\n          : this.hoverHighlight &&\n            checkHovered(d, this.hoverHighlight, this.innerInteractionKeys) &&\n            this.innerHoverStyle.color\n          ? visaColors[this.innerHoverStyle.color] || this.innerHoverStyle.color\n          : this.groupAccessor\n          ? this.colorArr(d[this.groupAccessor])\n          : this.colorArr(d[this.valueAccessor]);\n      })\n      .attr('filter', (d, i, n) => {\n        if (!this.accessibility.hideStrokes && !select(n[i]).classed('geometryIsMoving')) {\n          const colorsArray = this.preparedColors.range ? this.preparedColors.range() : this.preparedColors;\n          const scheme =\n            this.groupAccessor || colorsArray.length === 1\n              ? 'categorical'\n              : this.colorPalette && this.colorPalette.includes('diverging')\n              ? 'diverging'\n              : 'sequential';\n          const colorScale =\n            !this.accessibility.hideTextures && scheme !== 'categorical' && this.accessibility.showExperimentalTextures\n              ? 'fillColors'\n              : 'preparedColors';\n\n          const clicked =\n            this.clickHighlight &&\n            this.clickHighlight.length > 0 &&\n            checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n          const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n          const baseColor = this.groupAccessor\n            ? this[colorScale](d[this.groupAccessor])\n            : this[colorScale](d[this.valueAccessor]);\n          const state = clicked ? 'click' : hovered && !select(n[i]).classed('geometryIsMoving') ? 'hover' : 'rest';\n          const color =\n            clicked && this.innerClickStyle.color\n              ? visaColors[this.innerClickStyle.color] || this.innerClickStyle.color\n              : clicked\n              ? baseColor\n              : hovered && this.innerHoverStyle.color\n              ? visaColors[this.innerHoverStyle.color] || this.innerHoverStyle.color\n              : baseColor;\n          const strokeOverride =\n            !this.accessibility.hideTextures &&\n            scheme !== 'categorical' &&\n            this.accessibility.showExperimentalTextures &&\n            color === baseColor\n              ? this.strokeColors(d[this.groupAccessor || this.valueAccessor])\n              : undefined;\n          if (state === 'hover') {\n            drawHoverStrokes({\n              inputElement: n[i],\n              id: this.chartID,\n              key: d[this.ordinalAccessor], // this must match whatever is used to bind the data, otherwise i\n              strokeWidth: this.innerHoverStyle.strokeWidth,\n              fill: color,\n              strokeOverride\n            });\n          }\n          return this.strokes[state + color];\n        }\n        return null;\n      });\n    retainAccessFocus({\n      parentGNode: this.rootG.node()\n    });\n\n    // then we set the legend interactive state\n    setLegendInteractionState({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.groupAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.innerHoverStyle,\n      clickStyle: this.innerClickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n\n    // and lastly we have to check for labels, especially when auto placement is in place\n    this.updatingLabels.interrupt('opacity');\n    const addCollisionClass = this.placement === 'auto' || this.dataLabel.collisionHideOnly;\n    const hideOnly = this.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n\n    this.processLabelOpacity(this.updatingLabels, addCollisionClass);\n\n    // if we have collision on, we need to update the bitmap on interaction\n    if (addCollisionClass) {\n      const labelsAdded = this.updatingLabels.filter((_, i, n) => select(n[i]).classed('collision-added'));\n      const labelsRemoved = this.updatingLabels\n        .filter((_, i, n) => select(n[i]).classed('collision-removed'))\n        .attr('data-use-dx', hideOnly) // need to add this for remove piece of collision below\n        .attr('data-use-dy', hideOnly); // .transition().duration(0);\n\n      // we can now remove labels as well if we need to...\n      if (labelsRemoved.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsRemoved,\n          avoidMarks: [],\n          validPositions: ['middle'],\n          offsets: [1],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n          hideOnly: false,\n          removeOnly: true\n        });\n\n        // remove temporary class now\n        labelsRemoved.classed('collision-removed', false);\n      }\n\n      // we can now add labels as well if we need to...\n      if (labelsAdded.size() > 0) {\n        this.processLabelPosition(labelsAdded, false, false, true);\n\n        // remove temporary class now\n        labelsAdded.classed('collision-added', false);\n      }\n    }\n  }\n\n  setLabelOpacity() {\n    this.processLabelOpacity(this.updatingLabels);\n  }\n\n  processLabelOpacity(selection, addCollisionClass?) {\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    const fullBandwidth =\n      this.layout === 'vertical' ? this.innerPaddedWidth / this.data.length : this.innerPaddedHeight / this.data.length;\n\n    selection.attr('opacity', (d, i, n) => {\n      const prevOpacity = +select(n[i]).attr('opacity');\n      const styleVisibility = select(n[i]).style('visibility');\n      const dimensions = {};\n      dimensions[ordinalDimension] =\n        this.placement === 'left' || this.placement === 'bottom' ? this[ordinalAxis].bandwidth() : fullBandwidth;\n      if (this.placement === 'left' || this.placement === 'bottom') {\n        dimensions[valueDimension] = Math.abs(\n          this.layout === 'vertical'\n            ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n            : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n        );\n      }\n      const hasRoom =\n        this.placement === 'auto' ||\n        this.dataLabel.collisionHideOnly ||\n        this.accessibility.showSmallLabels ||\n        verifyTextHasSpace({\n          text: formatDataLabel(d, this.innerLabelAccessor, this.dataLabel.format),\n          dimensions,\n          fontSize: 14\n        });\n      const targetOpacity = hasRoom\n        ? checkInteraction(\n            d,\n            checkLabelDisplayOnly(this.dataLabel.visible, this.dataLabel.displayOnly, d, this.displayOnlyLabelData, [\n              this.ordinalAccessor\n            ]),\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n          ? 0\n          : 1\n        : 0;\n      if (\n        ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n        addCollisionClass\n      ) {\n        if (targetOpacity === 1) {\n          select(n[i])\n            .classed('collision-added', true)\n            .style('visibility', null);\n        } else {\n          select(n[i]).classed('collision-removed', true);\n        }\n      }\n      return targetOpacity;\n    });\n  }\n\n  checkLabelColorAgainstBackground() {\n    this.updatingLabels.attr('fill', this.textTreatmentHandler);\n  }\n\n  textTreatmentHandler = (d, i, n) => {\n    const colorsArray = this.preparedColors.range ? this.preparedColors.range() : this.preparedColors;\n    const scheme =\n      this.groupAccessor || colorsArray.length === 1\n        ? 'categorical'\n        : this.colorPalette && this.colorPalette.includes('diverging')\n        ? 'diverging'\n        : 'sequential';\n\n    const colorScale =\n      !this.accessibility.hideTextures && scheme !== 'categorical' && this.accessibility.showExperimentalTextures\n        ? 'fillColors'\n        : 'preparedColors';\n\n    const bgColor =\n      this.clickHighlight &&\n      this.clickHighlight.length > 0 &&\n      checkClicked(d, this.clickHighlight, this.innerInteractionKeys) &&\n      this.innerClickStyle.color\n        ? visaColors[this.innerClickStyle.color] || this.innerClickStyle.color\n        : this.hoverHighlight &&\n          checkHovered(d, this.hoverHighlight, this.innerInteractionKeys) &&\n          this.innerHoverStyle.color\n        ? visaColors[this.innerHoverStyle.color] || this.innerHoverStyle.color\n        : this.groupAccessor\n        ? this[colorScale](d[this.groupAccessor])\n        : this[colorScale](d[this.valueAccessor]);\n    const me = select(n[i]);\n    const autoPlacementBackgroundColor =\n      this.placement === 'auto' // can ignore this for collisionHideOnly\n        ? this.layout === 'vertical'\n          ? (this.dataLabel.collisionPlacement === 'top' && me.attr('data-baseline') !== 'bottom') ||\n            (this.dataLabel.collisionPlacement === 'middle' && me.attr('data-baseline') !== 'bottom') ||\n            (this.dataLabel.collisionPlacement === 'bottom' &&\n              me.attr('data-baseline') === 'bottom' &&\n              ((d[this.valueAccessor] >= 0 && this.y(0) - this.y(d[this.valueAccessor]) > 20) ||\n                (d[this.valueAccessor] < 0 && this.y(0) - this.y(d[this.valueAccessor]) < -20))) // if bottom we can check against baseline value of 0, helps to handle charts with negative values\n          : (this.dataLabel.collisionPlacement === 'right' && me.attr('data-align') !== 'left') ||\n            (this.dataLabel.collisionPlacement === 'middle' && me.attr('data-align') !== 'left') ||\n            (this.dataLabel.collisionPlacement === 'left' && me.attr('data-align') !== 'right')\n        : false;\n    const color =\n      autoPlacementBackgroundColor || this.placement === 'bottom' || this.placement === 'left'\n        ? autoTextColor(bgColor)\n        : visaColors.dark_text;\n    me.attr(\n      'filter',\n      !me.classed('textIsMoving')\n        ? createTextStrokeFilter({\n            root: this.svg.node(),\n            id: this.chartID,\n            color:\n              autoPlacementBackgroundColor || this.placement === 'bottom' || this.placement === 'left'\n                ? bgColor\n                : '#ffffff'\n          })\n        : null\n    );\n    return color;\n  };\n\n  setSelectedClass() {\n    this.update\n      .classed('highlight', d => {\n        const selected = checkInteraction(d, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n        return this.clickHighlight && this.clickHighlight.length ? selected : false;\n      })\n      .each((d, i, n) => {\n        let selected = checkInteraction(d, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n        selected = this.clickHighlight && this.clickHighlight.length ? selected : false;\n        const selectable = this.accessibility.elementsAreInterface;\n        setElementInteractionAccessState(n[i], selected, selectable);\n      });\n  }\n\n  updateCursor() {\n    this.update.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    this.updatingLabels.attr('cursor', !this.suppressEvents ? this.cursor : null);\n  }\n\n  bindLegendInteractivity() {\n    select(this.barChartEl)\n      .selectAll('.legend')\n      .on('click', this.legend.interactive && !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on(\n        'mouseover',\n        this.legend.interactive && !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i], true) : null\n      )\n      .on('mouseout', this.legend.interactive && !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  setLegendCursor() {\n    select(this.barChartEl)\n      .selectAll('.legend')\n      .style('cursor', this.legend.interactive && !this.suppressEvents ? this.cursor : null);\n  }\n\n  bindInteractivity() {\n    this.update\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n    this.updatingLabels\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  enterLabels() {\n    this.enteringLabels\n      .attr('opacity', d => {\n        return checkInteraction(\n          d,\n          checkLabelDisplayOnly(this.dataLabel.visible, this.dataLabel.displayOnly, d, this.displayOnlyLabelData, [\n            this.ordinalAccessor\n          ]),\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        ) < 1\n          ? 0\n          : Number.EPSILON; // we need this to be epsilon initially to enable auto placement algorithm to run on load\n      })\n      .attr('class', 'bar-dataLabel entering') // entering class is used by collision\n      .attr('fill', this.textTreatmentHandler)\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    // placeDataLabels({\n    //   root: this.enteringLabels,\n    //   xScale: this.x,\n    //   yScale: this.y,\n    //   ordinalAccessor: this.ordinalAccessor,\n    //   valueAccessor: this.valueAccessor,\n    //   placement: this.placement,\n    //   layout: this.layout,\n    //   chartType: 'bar'\n    // });\n  }\n\n  updateLabels() {\n    const enterTransition = this.updatingLabels\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration(this.duration);\n\n    this.processLabelOpacity(enterTransition);\n  }\n\n  exitLabels() {\n    this.exitingLabels\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  setLabelContent() {\n    this.updatingLabels.text(d => formatDataLabel(d, this.innerLabelAccessor, this.dataLabel.format));\n  }\n\n  setLabelPosition() {\n    const enteringOnly = this.enteringLabels.filter((_, i, n) => {\n      return select(n[i]).classed('entering');\n    });\n    const updatingOnly = this.updatingLabels.filter((_, i, n) => {\n      return !select(n[i]).classed('entering');\n    });\n    // if we have enter and update we need to process them separately\n    // enter with no transition, update with transition\n    if (enteringOnly.size() > 0) {\n      this.processLabelPosition(enteringOnly, false, true, false);\n      this.processLabelPosition(updatingOnly, true, false, true);\n    } else {\n      // otherwise we can just process update and do it all in one step with transition\n      this.processLabelPosition(updatingOnly, true, true, false);\n    }\n  }\n\n  processLabelPosition(selection, runTransition?, redrawBitmap?, suppressMarkDraw?) {\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    const choice = this.layout === 'vertical' ? 'max' : 'min';\n    let textHeight = 15; // default label is usually 15\n    const hideOnly = this.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n\n    const collisionSettings = {\n      vertical: {\n        top: {\n          validPositions: ['top', 'bottom'],\n          offsets: [5, 1]\n        },\n        middle: {\n          validPositions: ['middle', 'top'],\n          offsets: [1, textHeight / 2]\n        },\n        bottom: {\n          validPositions: ['middle', 'top'],\n          offsets: [1, textHeight / 2]\n        }\n      },\n      horizontal: {\n        right: {\n          validPositions: ['right', 'left'],\n          offsets: [4, 8]\n        },\n        middle: {\n          validPositions: ['middle', 'right'],\n          offsets: [1, 15]\n        },\n        left: {\n          validPositions: ['left', 'right'],\n          offsets: [4, 20]\n        }\n      }\n    };\n\n    const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n    const boundsScope =\n      collisionPlacement && collisionSettings[this.layout][collisionPlacement] // check whether placement provided maps correctly\n        ? this.dataLabel.collisionPlacement\n        : this.layout === 'vertical'\n        ? 'top' // if we don't have collisionPlacement\n        : 'right';\n\n    selection\n      .style('visibility', (_, i, n) => {\n        if (i === 0) {\n          // we just need to check this on one element\n          const textElement = n[i];\n          const style = getComputedStyle(textElement);\n          const fontSize = parseFloat(style.fontSize);\n          textHeight = Math.max(fontSize - 1, 1); // clone.getBBox().height;\n        }\n\n        return this.placement === 'auto' || this.dataLabel.collisionHideOnly ? select(n[i]).style('visibility') : null;\n      })\n      .attr(`data-${ordinalAxis}`, d => this[ordinalAxis](d[this.ordinalAccessor]))\n      .attr(`data-${ordinalDimension}`, this[ordinalAxis].bandwidth())\n      .attr(`data-${valueAxis}`, d =>\n        this.shouldCenterBaseline()\n          ? this[valueAxis](halve(d[this.valueAccessor]) * (this.layout === 'vertical' ? 1 : -1))\n          : this[valueAxis](Math[choice](0, d[this.valueAccessor]))\n      )\n      .attr(`data-${valueDimension}`, d =>\n        Math.abs(\n          this.layout === 'vertical'\n            ? this[valueAxis](0) - this[valueAxis](d[this.valueAccessor])\n            : this[valueAxis](d[this.valueAccessor]) - this[valueAxis](0)\n        )\n      )\n      .attr('data-translate-x', this.padding.left + this.margin.left)\n      .attr('data-translate-y', this.padding.top + this.margin.top);\n\n    const changeLabels = prepareRenderChange({\n      selection: selection,\n      duration: !runTransition ? 0 : this.duration,\n      namespace: 'position-labels',\n      easing: easeCircleIn\n    });\n\n    this.bitmaps = placeDataLabels({\n      root: changeLabels,\n      xScale: this.x,\n      yScale: this.y,\n      ordinalAccessor: this.ordinalAccessor,\n      valueAccessor: this.valueAccessor,\n      placement: this.placement,\n      layout: this.layout,\n      labelOffset: this.shouldCenterBaseline() ? halve(1) : undefined,\n      chartType: 'bar',\n      avoidCollision: {\n        runOccupancyBitmap: this.dataLabel.visible && this.placement === 'auto',\n        bitmaps: !redrawBitmap ? this.bitmaps : undefined,\n        labelSelection: changeLabels,\n        avoidMarks: [this.update],\n        validPositions: hideOnly ? ['middle'] : collisionSettings[this.layout][boundsScope].validPositions,\n        offsets: hideOnly ? [1] : collisionSettings[this.layout][boundsScope].offsets,\n        accessors: [this.ordinalAccessor, this.groupAccessor], // key is created for lines by nesting done in line,\n        size: [roundTo(this.width, 0), roundTo(this.height, 0)], // for some reason the bitmap needs width instead of inner padded width here\n        boundsScope: hideOnly ? undefined : boundsScope,\n        hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly,\n        suppressMarkDraw: suppressMarkDraw\n      }\n    });\n  }\n\n  drawReferenceLines() {\n    setReferenceLine({\n      groupName: 'bar',\n      root: this.referencesG,\n      referenceLines: this.referenceLines,\n      referenceStyle: this.referenceStyle,\n      innerPaddedWidth: this.innerPaddedWidth,\n      innerPaddedHeight: this.innerPaddedHeight,\n      duration: this.duration,\n      layout: this.layout,\n      x: this.x,\n      y: this.y,\n      unitTest: this.unitTest\n    });\n  }\n\n  drawLegendElements() {\n    drawLegend({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      width: this.innerPaddedWidth,\n      height: this.margin.top + 20,\n      colorArr: this.colorArr,\n      baseColorArr: this.preparedColors,\n      hideStrokes: this.accessibility.hideStrokes,\n      margin: this.margin,\n      padding: this.padding,\n      duration: this.duration,\n      type: 'bar',\n      fontSize: 16,\n      data: this.legendData,\n      labelKey: this.groupAccessor,\n      label: this.legend.labels,\n      format: this.legend.format,\n      hide: !this.legend.visible || !this.groupAccessor, // only allow legend when there is groupAccessor\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.groupAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.innerHoverStyle,\n      clickStyle: this.innerClickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  drawAnnotations() {\n    annotate({\n      source: this.rootG.node(),\n      data: this.annotations,\n      xScale: this.x,\n      xAccessor: this.layout !== 'horizontal' ? this.ordinalAccessor : this.valueAccessor,\n      yScale: this.y,\n      yAccessor: this.layout !== 'horizontal' ? this.valueAccessor : this.ordinalAccessor,\n      width: this.width,\n      height: this.height,\n      padding: this.padding,\n      margin: this.margin,\n      bitmaps: this.bitmaps\n    });\n  }\n\n  setAnnotationAccessibility() {\n    setAccessAnnotation(this.getLanguageString(), this.barChartEl, this.annotations, this.referenceLines);\n  }\n\n  // new accessibility functions added here\n  setChartDescriptionWrapper() {\n    initializeDescriptionRoot({\n      language: this.getLanguageString(),\n      rootEle: this.barChartEl,\n      title: this.accessibility.title || this.mainTitle,\n      chartTag: 'bar-chart',\n      uniqueID: this.chartID,\n      highestHeadingLevel: this.highestHeadingLevel,\n      redraw: this.shouldRedrawWrapper,\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      hideDataTable: this.accessibility.hideDataTableButton\n    });\n    this.shouldRedrawWrapper = false;\n  }\n\n  setParentSVGAccessibility() {\n    setAccessibilityController({\n      chartTag: 'bar-chart',\n      language: this.getLanguageString(),\n      node: this.svg.node(),\n      title: this.accessibility.title || this.mainTitle,\n      description: this.subTitle,\n      uniqueID: this.chartID,\n      geomType: 'bar',\n      includeKeyNames: this.accessibility.includeDataKeyNames,\n      dataKeys: scopeDataKeys(this, chartAccessors, 'bar-chart'),\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.groupAccessor,\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled\n      // groupName: 'node', // bar chart does not include these\n      // groupKeys: [], // bar chart does not include these\n      // nested: '', // bar chart does not include these\n      // recursive: true // bar chart does not include these\n    });\n  }\n\n  setGeometryAccessibilityAttributes() {\n    this.update.each((_d, i, n) => {\n      initializeElementAccess(n[i]);\n    });\n  }\n\n  setGeometryAriaLabels() {\n    const keys = scopeDataKeys(this, chartAccessors, 'bar-chart');\n    this.update.each((_d, i, n) => {\n      setElementFocusHandler({\n        chartTag: 'bar-chart',\n        language: this.getLanguageString(),\n        node: n[i],\n        geomType: 'bar',\n        includeKeyNames: this.accessibility.includeDataKeyNames,\n        dataKeys: keys,\n        dataKeyNames: this.dataKeyNames,\n        uniqueID: this.chartID,\n        disableKeyNav:\n          this.suppressEvents &&\n          this.accessibility.elementsAreInterface === false &&\n          this.accessibility.keyboardNavConfig &&\n          this.accessibility.keyboardNavConfig.disabled\n      });\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setGroupAccessibilityAttributes() {\n    // if a component's <g> elements can enter/exit, this will need to be called in the\n    // lifecycle more than just initially, like how setGeometryAccessibilityAttributes works\n    initializeElementAccess(this.bars.node());\n  }\n\n  setGroupAccessibilityID() {\n    this.bars.each((_, i, n) => {\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setChartAccessibilityTitle() {\n    setAccessTitle(this.getLanguageString(), this.barChartEl, this.accessibility.title || this.mainTitle);\n  }\n\n  setChartAccessibilitySubtitle() {\n    setAccessSubtitle(this.getLanguageString(), this.barChartEl, this.subTitle);\n  }\n\n  setChartAccessibilityLongDescription() {\n    setAccessLongDescription(this.getLanguageString(), this.barChartEl, this.accessibility.longDescription);\n  }\n\n  setChartAccessibilityExecutiveSummary() {\n    setAccessExecutiveSummary(this.getLanguageString(), this.barChartEl, this.accessibility.executiveSummary);\n  }\n\n  setChartAccessibilityPurpose() {\n    setAccessPurpose(this.getLanguageString(), this.barChartEl, this.accessibility.purpose);\n  }\n\n  setChartAccessibilityContext() {\n    setAccessContext(this.getLanguageString(), this.barChartEl, this.accessibility.contextExplanation);\n  }\n\n  setChartAccessibilityStatisticalNotes() {\n    setAccessStatistics(this.getLanguageString(), this.barChartEl, this.accessibility.statisticalNotes);\n  }\n\n  setChartCountAccessibility() {\n    setAccessChartCounts({\n      rootEle: this.barChartEl,\n      parentGNode: this.bars.node(), // pass the wrapper to <g> or geometries here, should be single node selection\n      chartTag: 'bar-chart',\n      geomType: 'bar'\n      // groupName: 'line', // bar chart doesn't use this, so it is omitted\n      // recursive: true // bar chart doesn't use this, so it is omitted\n    });\n  }\n\n  setChartAccessibilityStructureNotes() {\n    setAccessStructure(this.getLanguageString(), this.barChartEl, this.accessibility.structureNotes);\n  }\n  // new accessibility stuff ends here\n\n  onChangeHandler() {\n    if (this.accessibility && typeof this.accessibility.onChangeFunc === 'function') {\n      const d = {\n        updated: this.updated,\n        added: this.enterSize,\n        removed: this.exitSize\n      };\n      this.accessibility.onChangeFunc(d);\n    }\n    this.updated = false;\n    this.enterSize = 0;\n    this.exitSize = 0;\n  }\n\n  onClickHandler(d, n) {\n    this.clickEvent.emit({ data: d, target: n });\n  }\n\n  onHoverHandler(d, n, isLegend?) {\n    overrideTitleTooltip(this.chartID, true);\n    this.hoverEvent.emit({ data: d, target: n });\n    if (this.showTooltip && !isLegend) {\n      this.eventsTooltip({ data: d, evt: event, isToShow: true });\n    }\n  }\n\n  onMouseOutHandler() {\n    overrideTitleTooltip(this.chartID, false);\n    this.mouseOutEvent.emit();\n    if (this.showTooltip) {\n      this.eventsTooltip({ isToShow: false });\n    }\n  }\n\n  // set initial style (instead of copying css class across the lib)\n  setTooltipInitialStyle() {\n    initTooltipStyle(this.tooltipG);\n  }\n\n  // tooltip\n  eventsTooltip({ data, evt, isToShow }: { data?: any; evt?: any; isToShow: boolean }) {\n    drawTooltip({\n      root: this.tooltipG,\n      data,\n      event: evt,\n      isToShow,\n      tooltipLabel: this.tooltipLabel,\n      dataKeyNames: this.dataKeyNames,\n      xAxis: this.xAxis,\n      yAxis: this.yAxis,\n      dataLabel: this.dataLabel,\n      layout: this.layout,\n      ordinalAccessor: this.ordinalAccessor,\n      valueAccessor: this.valueAccessor,\n      groupAccessor: this.groupAccessor,\n      chartType: 'bar'\n    });\n  }\n\n  render() {\n    this.drawStartEvent.emit({ chartID: this.chartID });\n\n    // theme hardcoded until we re-enable it\n    const theme = 'light';\n    // everything between this comment and the third should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n    this.init();\n    if (this.shouldSetLocalizationConfig) {\n      this.setLocalizationConfig();\n      this.shouldSetLocalizationConfig = false;\n    }\n    if (this.shouldSetTagLevels) {\n      this.setTagLevels();\n      this.shouldSetTagLevels = false;\n    }\n    if (this.shouldCheckValueAxis) {\n      if (this.layout === 'horizontal') {\n        this.shouldUpdateXAxis = true;\n        this.shouldSetXAxisAccessibility = true;\n        this.shouldUpdateXGrid = true;\n      } else if (this.layout === 'vertical') {\n        this.shouldUpdateYAxis = true;\n        this.shouldSetYAxisAccessibility = true;\n        this.shouldUpdateYGrid = true;\n      }\n      this.shouldCheckValueAxis = false;\n    }\n    if (this.shouldCheckLabelAxis) {\n      if (this.layout === 'vertical') {\n        this.shouldUpdateXAxis = true;\n        this.shouldSetXAxisAccessibility = true;\n      } else if (this.layout === 'horizontal') {\n        this.shouldUpdateYAxis = true;\n        this.shouldSetYAxisAccessibility = true;\n      }\n      this.shouldCheckLabelAxis = false;\n    }\n    if (this.shouldUpdateData) {\n      this.prepareData();\n      this.shouldUpdateData = false;\n    }\n    if (this.shouldUpdateLegendData) {\n      this.prepareLegendData();\n      this.shouldUpdateLegendData = false;\n    }\n    if (this.shouldUpdateLabelData) {\n      this.prepareLabelData();\n      this.shouldUpdateLabelData = false;\n    }\n    if (this.shouldUpdateLayoutVariables) {\n      this.updateChartVariable();\n      this.shouldUpdateLayoutVariables = false;\n    }\n    if (this.shouldUpdateScales) {\n      this.prepareScales();\n      this.shouldUpdateScales = false;\n    }\n    if (this.shouldValidateInteractionKeys) {\n      this.validateInteractionKeys();\n      this.shouldValidateInteractionKeys = false;\n    }\n    if (this.shouldUpdateTableData) {\n      this.setTableData();\n      this.shouldUpdateTableData = false;\n    }\n    if (this.shouldValidate) {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.shouldValidate = false;\n    }\n    if (this.shouldValidateClickStyle) {\n      this.validateClickStyle();\n      this.shouldValidateClickStyle = false;\n    }\n    if (this.shouldValidateHoverStyle) {\n      this.validateHoverStyle();\n      this.shouldValidateHoverStyle = false;\n    }\n    if (this.shouldValidateDataLabelAccessor) {\n      this.validateDataLabelAccessor();\n      this.shouldValidateDataLabelAccessor = false;\n    }\n    if (this.shouldSetColors) {\n      this.setColors();\n      this.shouldSetColors = false;\n    }\n    if (this.shouldValidateLabelPlacement) {\n      this.validateLabelPlacement();\n      this.shouldValidateLabelPlacement = false;\n    }\n\n    // Everything between this comment and the first should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n    return (\n      <div class={`o-layout is--${this.layout} ${theme}`}>\n        <div class=\"o-layout--chart\">\n          <this.topLevel class=\"bar-main-title vcl-main-title\">{this.mainTitle}</this.topLevel>\n          <this.bottomLevel class=\"visa-ui-text--instructions bar-sub-title vcl-sub-title\" />\n          <div\n            class=\"bar-legend vcl-legend\"\n            style={{ display: this.legend.visible && this.groupAccessor ? 'block' : 'none' }}\n          />\n          <keyboard-instructions\n            uniqueID={this.chartID}\n            geomType={'bar'}\n            groupName={'bar group'} // taken from initializeDescriptionRoot, on bar this should be \"bar group\", stacked bar is \"stack\", and clustered is \"cluster\"\n            language={this.getLanguageString()}\n            chartTag={'bar-chart'}\n            width={this.width - (this.margin ? this.margin.right || 0 : 0)}\n            isInteractive={this.accessibility.elementsAreInterface}\n            hasCousinNavigation={this.groupAccessor ? true : false} // on bar this requires checking for groupAccessor\n            disabled={\n              this.suppressEvents &&\n              this.accessibility.elementsAreInterface === false &&\n              this.accessibility.keyboardNavConfig &&\n              this.accessibility.keyboardNavConfig.disabled\n            } // the chart is \"simple\"\n          />\n          <div class=\"visa-viz-d3-bar-container\" />\n          <div class=\"bar-tooltip vcl-tooltip\" style={{ display: this.showTooltip ? 'block' : 'none' }} />\n          <data-table\n            uniqueID={this.chartID}\n            isCompact\n            language={this.getLanguageString()}\n            tableColumns={this.tableColumns}\n            dataKeyNames={this.dataKeyNames}\n            data={this.tableData}\n            padding={this.padding}\n            margin={this.margin}\n            hideDataTable={this.accessibility.hideDataTableButton}\n            unitTest={this.unitTest}\n          />\n        </div>\n        {/* <canvas id=\"bitmap-render\" /> */}\n      </div>\n    );\n  }\n  private init() {\n    // reading properties\n    const keys = Object.keys(BarChartDefaultValues);\n    let i = 0;\n    const exceptions = {\n      showTooltip: {\n        exception: false\n      },\n      mainTitle: {\n        exception: ''\n      },\n      subTitle: {\n        exception: ''\n      },\n      barIntervalRatio: {\n        exception: 0\n      },\n      wrapLabel: {\n        exception: false\n      },\n      hoverOpacity: {\n        exception: 0\n      }\n    };\n    for (i = 0; i < keys.length; i++) {\n      const exception = !exceptions[keys[i]] ? false : this[keys[i]] === exceptions[keys[i]].exception;\n      this[keys[i]] = this[keys[i]] || exception ? this[keys[i]] : BarChartDefaultValues[keys[i]];\n    }\n  }\n}\n\n// incorporate OSS licenses into build\nwindow['VisaChartsLibOSSLicenses'] = getLicenses(); // tslint:disable-line no-string-literal\n"],"mappings":"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","ignoreList":[]}