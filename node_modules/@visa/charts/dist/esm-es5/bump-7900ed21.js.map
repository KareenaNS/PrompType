{"version":3,"names":["Bump","context","x","this","_context","_x","prototype","areaStart","_line","areaEnd","NaN","lineStart","_point","lineEnd","closePath","point","y","lineTo","moveTo","bezierCurveTo","_x0","_y0","bumpX","bumpY"],"sources":["node_modules/d3-shape/src/curve/bump.js"],"sourcesContent":["import pointRadial from \"../pointRadial.js\";\n\nclass Bump {\n  constructor(context, x) {\n    this._context = context;\n    this._x = x;\n  }\n  areaStart() {\n    this._line = 0;\n  }\n  areaEnd() {\n    this._line = NaN;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  }\n  point(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: {\n        this._point = 1;\n        if (this._line) this._context.lineTo(x, y);\n        else this._context.moveTo(x, y);\n        break;\n      }\n      case 1: this._point = 2; // falls through\n      default: {\n        if (this._x) this._context.bezierCurveTo(this._x0 = (this._x0 + x) / 2, this._y0, this._x0, y, x, y);\n        else this._context.bezierCurveTo(this._x0, this._y0 = (this._y0 + y) / 2, x, this._y0, x, y);\n        break;\n      }\n    }\n    this._x0 = x, this._y0 = y;\n  }\n}\n\nclass BumpRadial {\n  constructor(context) {\n    this._context = context;\n  }\n  lineStart() {\n    this._point = 0;\n  }\n  lineEnd() {}\n  point(x, y) {\n    x = +x, y = +y;\n    if (this._point === 0) {\n      this._point = 1;\n    } else {\n      const p0 = pointRadial(this._x0, this._y0);\n      const p1 = pointRadial(this._x0, this._y0 = (this._y0 + y) / 2);\n      const p2 = pointRadial(x, this._y0);\n      const p3 = pointRadial(x, y);\n      this._context.moveTo(...p0);\n      this._context.bezierCurveTo(...p1, ...p2, ...p3);\n    }\n    this._x0 = x, this._y0 = y;\n  }\n}\n\nexport function bumpX(context) {\n  return new Bump(context, true);\n}\n\nexport function bumpY(context) {\n  return new Bump(context, false);\n}\n\nexport function bumpRadial(context) {\n  return new BumpRadial(context);\n}\n"],"mappings":"AAEA,IAAAA,KAAA,WACE,SAAAA,EAAYC,EAASC,GACnBC,KAAKC,SAAWH,EAChBE,KAAKE,GAAKH,CACd,CACEF,EAAAM,UAAAC,UAAA,WACEJ,KAAKK,MAAQ,CACjB,EACER,EAAAM,UAAAG,QAAA,WACEN,KAAKK,MAAQE,GACjB,EACEV,EAAAM,UAAAK,UAAA,WACER,KAAKS,OAAS,CAClB,EACEZ,EAAAM,UAAAO,QAAA,WACE,GAAIV,KAAKK,OAAUL,KAAKK,QAAU,GAAKL,KAAKS,SAAW,EAAIT,KAAKC,SAASU,YACzEX,KAAKK,MAAQ,EAAIL,KAAKK,KAC1B,EACER,EAAAM,UAAAS,MAAA,SAAMb,EAAGc,GACPd,GAAKA,EAAGc,GAAKA,EACb,OAAQb,KAAKS,QACX,KAAK,EAAG,CACNT,KAAKS,OAAS,EACd,GAAIT,KAAKK,MAAOL,KAAKC,SAASa,OAAOf,EAAGc,QACnCb,KAAKC,SAASc,OAAOhB,EAAGc,GAC7B,KACR,CACM,KAAK,EAAGb,KAAKS,OAAS,EACtB,QAAS,CACP,GAAIT,KAAKE,GAAIF,KAAKC,SAASe,cAAchB,KAAKiB,KAAOjB,KAAKiB,IAAMlB,GAAK,EAAGC,KAAKkB,IAAKlB,KAAKiB,IAAKJ,EAAGd,EAAGc,QAC7Fb,KAAKC,SAASe,cAAchB,KAAKiB,IAAKjB,KAAKkB,KAAOlB,KAAKkB,IAAML,GAAK,EAAGd,EAAGC,KAAKkB,IAAKnB,EAAGc,GAC1F,KACR,EAEIb,KAAKiB,IAAMlB,EAAGC,KAAKkB,IAAML,CAC7B,EACA,OAAAhB,CAAA,CApCA,GA8DO,SAASsB,MAAMrB,GACpB,OAAO,IAAID,KAAKC,EAAS,KAC3B,CAEO,SAASsB,MAAMtB,GACpB,OAAO,IAAID,KAAKC,EAAS,MAC3B,Q","ignoreList":[]}