{"version":3,"names":["transformer","x0","x1","t0","t1","k10","transform","interpolator","identity","clamp","unknown","scale","x","isNaN","Math","max","min","domain","_","arguments","length","t","copy","source","target","sequentialPow","powish","exponent","initInterpolator","apply","sequentialSqrt","propDefaultValues","Utils","ScatterPlotDefaultValues","mainTitle","subTitle","text","height","width","margin","top","bottom","right","left","padding","localization","xAccessor","yAccessor","groupAccessor","sizeConfig","accessibility","animationConfig","highestHeadingLevel","sortOrder","xAxis","yAxis","showBaselineX","showBaselineTrue","showBaselineY","showBaselineFalse","colorPalette","colorPaletteCategorical","dotRadius","dotRadius6","dotOpacity","dotSymbols","referenceStyle","showFitLine","fitLineStyle","cursor","hoverOpacity","hoverStyle","symbolHoverStyle","clickStyle","symbolClickStyle","dataLabel","legend","categoryLegend","tooltipLabel","showTooltip","suppressEvents","referenceLines","annotations","clickHighlight","scatterPlotCss","ScatterPlotStyle0","getGlobalInstances","configLocalization","getActiveLanguageString","getAccessibleStrokes","ensureTextContrast","createTextStrokeFilter","initializeDescriptionRoot","initializeElementAccess","setElementFocusHandler","setElementAccessID","setAccessibilityController","hideNonessentialGroups","setAccessTitle","setAccessSubtitle","setAccessLongDescription","setAccessExecutiveSummary","setAccessPurpose","setAccessContext","setAccessStatistics","setAccessChartCounts","setAccessXAxis","setAccessYAxis","setAccessStructure","setAccessAnnotation","retainAccessFocus","checkAccessFocus","setElementInteractionAccessState","setAccessibilityDescriptionWidth","annotate","chartAccessors","checkInteraction","checkClicked","checkHovered","convertVisaColor","drawAxis","drawGrid","drawLegend","setLegendInteractionState","drawTooltip","formatDataLabel","getColors","getLicenses","getPadding","getScopedData","initTooltipStyle","leastSquares","overrideTitleTooltip","placeDataLabels","scopeDataKeys","symbols","transitionEndAll","visaColors","validateAccessibilityProps","validateLocalizationProps","findTagLevel","prepareRenderChange","roundTo","resolveLabelCollision","setSubTitle","setReferenceLine","ScatterPlot","this","shouldValidateAccessibility","shouldValidateLocalization","updated","shouldUpdateAnnotations","shouldResetRoot","shouldUpdateTableData","shouldSetColors","shouldSetSubTitle","shouldUpdateData","shouldUpdateScales","shouldValidate","shouldUpdateLayout","shouldEnterUpdateExit","shouldSetGlobalSelections","shouldSetTestingAttributes","shouldUpdateGeometries","shouldUpdateXAxis","shouldUpdateYAxis","shouldUpdateBaselineX","shouldUpdateBaselineY","shouldUpdateXGrid","shouldUpdateYGrid","shouldUpdateLegend","shouldUpdateReferenceLines","shouldDrawFitLine","shouldUpdateLabels","shouldAddStrokeUnder","shouldValidateClickStyle","shouldValidateHoverStyle","shouldValidateInteractionKeys","shouldValidateDataLabelAccessor","shouldSetSelectionClass","shouldUpdateCursor","shouldDrawInteractionState","shouldSetDotRadius","shouldBindInteractivity","shouldUpdateLegendInteractivity","shouldSetLegendCursor","shouldSetLabelOpacity","shouldSetPointOpacity","shouldUpdateDescriptionWrapper","shouldSetChartAccessibilityTitle","shouldSetChartAccessibilitySubtitle","shouldSetChartAccessibilityLongDescription","shouldSetChartAccessibilityExecutiveSummary","shouldSetChartAccessibilityStatisticalNotes","shouldSetChartAccessibilityStructureNotes","shouldSetParentSVGAccessibility","shouldSetGeometryAccessibilityAttributes","shouldSetGeometryAriaLabels","shouldSetGroupAccessibilityAttributes","shouldSetGroupAccessibilityLabel","shouldSetChartAccessibilityPurpose","shouldSetChartAccessibilityContext","shouldRedrawWrapper","shouldSetTagLevels","shouldSetChartAccessibilityCount","shouldSetYAxisAccessibility","shouldSetXAxisAccessibility","shouldSetAnnotationAccessibility","shouldSetStrokes","shouldSetLocalizationConfig","topLevel","bottomLevel","strokes","setColors","_this","rawColors","colors","nest","textColorArr","adjustedColors","getStrokeColor","color","hideStrokes","innerClickStyle","toLowerCase","innerHoverStyle","forEach","adjusted","push","colorArr","textFillHandler","d","clicked","innerInteractionKeys","hovered","hoverHighlight","baseColor","dotColor","textColor","handleDotStyle","i","n","dualEncodeColor","scaleSequentialSqrt","sizeMin","sizeMax","interpolate","sizeAccessor","strokeWidth","parseFloat","size","shapeArea","select","attr","prototype","dataWatcher","_newData","_oldData","idWatcher","newID","_oldID","console","error","headingWatcher","_newVal","_oldVal","titleWatcher","subtitleWatcher","layoutWatcher","xAccessorWatcher","yAccessorWatcher","sizeConfigWatcher","groupAccessorWatcher","interactionKeys","xAxisWatcher","newGridVal","gridVisible","oldGridVal","newTickInterval","tickInterval","oldTickInterval","yAxisWatcher","showBaselineXWatcher","showBaselineYWatcher","colorsWatcher","dotRadiusWatcher","dotOpacityWatcher","dotSymbolsWatcher","hoverStyleWatcher","clickStyleWatcher","referenceWatcher","fitLineStyleWatcher","cursorWatcher","hoverOpacityWatcher","labelWatcher","newVisibleVal","visible","oldVisibleVal","newAccessor","labelAccessor","oldAccessor","newFormat","format","oldFormat","showTooltipWatcher","tooltipLabelWatcher","legendWatcher","newInteractiveVal","interactive","oldInteractiveVal","suppressWatcher","annotationsWatcher","accessibilityWatcher","newTitle","title","oldTitle","newExecutiveSummary","executiveSummary","oldExecutiveSummary","newPurpose","purpose","oldPurpose","newLongDescription","longDescription","oldLongDescription","newContext","contextExplanation","oldContext","newStatisticalNotes","statisticalNotes","oldStatisticalNotes","newStructureNotes","structureNotes","oldStructureNotes","newincludeDataKeyNames","includeDataKeyNames","oldincludeDataKeyNames","newElementDescriptionAccessor","elementDescriptionAccessor","oldElementDescriptionAccessor","newStrokes","oldStrokes","newKeyNav","keyboardNavConfig","disabled","oldKeyNav","newInterface","elementsAreInterface","oldInterface","localizationWatcher","newLanguage","language","oldLanguage","newNumeralLocale","numeralLocale","oldNumeralLocale","xValueOverrideWatcher","yValueOverrideWatcher","showFitLineWatcher","clickWatcher","hoverWatcher","interactionWatcher","dataKeyNamesWatcher","unitTestWatcher","componentWillLoad","chartID","uniqueID","uuid","initialLoadEvent","emit","Promise","resolve","duration","defaults","scatterChartEl","id","setLocalizationConfig","setTagLevels","prepareData","setLayoutData","validateClickStyle","validateHoverStyle","prepareScales","validateInteractionKeys","validateDataLabelAccessor","setTableData","shouldValidateAccessibilityProps","shouldValidateLocalizationProps","componentWillUpdate","componentDidLoad","renderRootElements","setTooltipInitialStyle","setChartDescriptionWrapper","setChartAccessibilityTitle","setChartAccessibilitySubtitle","setChartAccessibilityLongDescription","setChartAccessibilityExecutiveSummary","setChartAccessibilityPurpose","setChartAccessibilityContext","setChartAccessibilityStatisticalNotes","setChartAccessibilityStructureNotes","setParentSVGAccessibility","reSetRoot","setStrokes","setSubTitleElements","drawXGrid","drawYGrid","setGlobalSelections","setTestingAttributes","enterPointGroups","exitPointGroups","enterDataLabels","updateDataLabels","exitDataLabels","setPointOpacity","drawPointGroups","setChartCountAccessibility","setGeometryAccessibilityAttributes","setGeometryAriaLabels","drawLegendElements","drawDataLabels","addStrokeUnder","drawFitLine","drawReferenceLines","setSelectedClass","updateCursor","setLegendCursor","bindInteractivity","bindLegendInteractivity","drawAnnotations","setAnnotationAccessibility","drawXAxis","setXAxisAccessibility","drawYAxis","setYAxisAccessibility","drawBaselineX","drawBaselineY","onChangeHandler","root","node","dotG","setGroupAccessibilityID","then","initialLoadEndEvent","componentDidUpdate","setDotRadius","updateInteractionState","setLabelOpacity","drawEndEvent","windowInstances","languageString","i18Next","languageObject","getResourceBundle","numeralObject","numeral","localeData","skipValidation","Object","assign","disableValidation","data","context","onClickEvent","undefined","clickEvent","innerHeight","innerWidth","innerPaddedHeight","innerPaddedWidth","groupInteraction","innerLabelAccessor","innerLabelFormat","innerScopeDataKeys","innerChartSingleAccessors","singleAccessors","accessor","innerChartAccessors","keys","tableData","tableColumns","getLanguageString","key","entries","values","subTitleG","xMinValue","xMaxValue","yMinValue","yMaxValue","zMinValue","zMaxValue","xMin","xMinValueOverride","xMax","xMaxValueOverride","yMin","yMinValueOverride","yMax","yMaxValueOverride","sizeMinTruthy","minValueOverride","sizeMaxTruthy","maxValueOverride","map","param","scaleLinear","range","y","scaleSqrt","minSizeOverride","maxSizeOverride","symbol","scaleOrdinal","path_arr","shape","general","split","j","xs","ys","k","z","reduce","a","b","area","toCircle","PI","baseColors","__spreadArray","textFilter","svg","filter","strokeSizeOverride","updateLabels","updatePoints","classed","updateStrokeWidth","append","rootG","gridG","style","fitLine","labelG","legendG","tooltipG","referencesG","dataBoundToGroups","selectAll","enterPointWrappers","enter","exitPointWrappers","exit","updatePointWrappers","merge","exitSize","dataBoundToGeometries","enterPoints","exitPoints","dataBoundToLabelGroups","enteringLabelGroups","exitingLabelGroups","updatingLabelGroups","dataBoundToLabels","enterLabels","exitLabels","unitTest","concat","interrupt","on","onHoverHandler","onMouseOutHandler","each","_d","onClickHandler","order","transition","ease","easeCircleIn","index","indexOf","substring","call","remove","focusDidExist","parentGNode","me","xChange","yChange","rChange","base","setTimeout","transitionEndEvent","selected","selectable","changeSvg","selection","namespace","easing","changeRoot","changeRootG","axisLabel","label","dataKeyNames","axisScale","hide","rootEle","hasXAxis","xAxisLabel","hasYAxis","yAxisLabel","markOffset","opacity","Number","EPSILON","xScale","yScale","sizeScale","ordinalAccessor","valueAccessor","placement","chartType","labelOffset","hideOnly","collisionHideOnly","labelSettingUpdate","bitmaps","avoidCollision","runOccupancyBitmap","labelSelection","avoidMarks","validPositions","offsets","accessors","addCollisionClass","prevOpacity","styleVisibility","targetOpacity","labelsAdded","labelsRemoved","removeOnly","suppressMarkDraw","fitlineOpacity","xSeries","ySeries","leastSquaresCoeff","slope","intercept","currentFitLine","enterFitLine","dashed","groupName","chartTag","redraw","disableKeyNav","hideDataTable","hideDataTableButton","description","geomType","includeKeyNames","dataKeys","noGroupAccessor","baseColorArr","type","fontSize","labels","onChangeFunc","added","enterSize","removed","isLegend","hoverEvent","eventsTooltip","evt","event","isToShow","mouseOutEvent","_a","render","drawStartEvent","init","h","class","display","isInteractive","hasCousinNavigation","isCompact","exceptions","exception","window"],"sources":["node_modules/d3-scale/src/sequential.js","src/components/scatter-plot/scatter-plot-default-values.ts","src/components/scatter-plot/scatter-plot.scss?tag=scatter-plot","src/components/scatter-plot/scatter-plot.tsx"],"sourcesContent":["import {identity} from \"./continuous\";\nimport {initInterpolator} from \"./init\";\nimport {linearish} from \"./linear\";\nimport {loggish} from \"./log\";\nimport {symlogish} from \"./symlog\";\nimport {powish} from \"./pow\";\n\nfunction transformer() {\n  var x0 = 0,\n      x1 = 1,\n      t0,\n      t1,\n      k10,\n      transform,\n      interpolator = identity,\n      clamp = false,\n      unknown;\n\n  function scale(x) {\n    return isNaN(x = +x) ? unknown : interpolator(k10 === 0 ? 0.5 : (x = (transform(x) - t0) * k10, clamp ? Math.max(0, Math.min(1, x)) : x));\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (t0 = transform(x0 = +_[0]), t1 = transform(x1 = +_[1]), k10 = t0 === t1 ? 0 : 1 / (t1 - t0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  return function(t) {\n    transform = t, t0 = t(x0), t1 = t(x1), k10 = t0 === t1 ? 0 : 1 / (t1 - t0);\n    return scale;\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .interpolator(source.interpolator())\n      .clamp(source.clamp())\n      .unknown(source.unknown());\n}\n\nexport default function sequential() {\n  var scale = linearish(transformer()(identity));\n\n  scale.copy = function() {\n    return copy(scale, sequential());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialLog() {\n  var scale = loggish(transformer()).domain([1, 10]);\n\n  scale.copy = function() {\n    return copy(scale, sequentialLog()).base(scale.base());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSymlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialSymlog()).constant(scale.constant());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialPow() {\n  var scale = powish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, sequentialPow()).exponent(scale.exponent());\n  };\n\n  return initInterpolator.apply(scale, arguments);\n}\n\nexport function sequentialSqrt() {\n  return sequentialPow.apply(null, arguments).exponent(0.5);\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport Utils from '@visa/visa-charts-utils';\n\nconst { propDefaultValues } = Utils;\n\nexport class ScatterPlotDefaultValues {\n  static readonly mainTitle = 'Scatter Plot Title';\n  static readonly subTitle = propDefaultValues.subTitle.text;\n  static readonly height = 300;\n  static readonly width = 650;\n  static readonly margin = {\n    top: 300 * 0.01,\n    bottom: 300 * 0.01,\n    right: 650 * 0.01,\n    left: 650 * 0.01\n  };\n  static readonly padding = {\n    top: 20,\n    bottom: 50,\n    right: 50,\n    left: 60\n  };\n\n  static readonly localization = propDefaultValues.localization;\n\n  static readonly xAccessor = 'metric';\n  static readonly yAccessor = 'value';\n  static readonly groupAccessor = 'category';\n\n  static readonly sizeConfig = propDefaultValues.sizeConfig;\n  static readonly accessibility = propDefaultValues.accessibility;\n  static readonly animationConfig = propDefaultValues.animationConfig;\n  static readonly highestHeadingLevel = propDefaultValues.highestHeadingLevel;\n  static readonly sortOrder = propDefaultValues.sortOrder;\n  static readonly xAxis = propDefaultValues.xAxis;\n\n  static readonly yAxis = propDefaultValues.yAxis;\n  static readonly showBaselineX = propDefaultValues.showBaselineTrue;\n  static readonly showBaselineY = propDefaultValues.showBaselineFalse;\n\n  static readonly colorPalette = propDefaultValues.colorPaletteCategorical;\n  static readonly dotRadius = propDefaultValues.dotRadius6;\n  static readonly dotOpacity = propDefaultValues.dotOpacity;\n  static readonly dotSymbols = propDefaultValues.dotSymbols;\n\n  static readonly referenceStyle = propDefaultValues.referenceStyle;\n  static readonly showFitLine = propDefaultValues.showFitLine;\n  static readonly fitLineStyle = propDefaultValues.referenceStyle;\n\n  static readonly cursor = propDefaultValues.cursor;\n  static readonly hoverOpacity = propDefaultValues.hoverOpacity;\n  static readonly hoverStyle = propDefaultValues.symbolHoverStyle;\n  static readonly clickStyle = propDefaultValues.symbolClickStyle;\n\n  static readonly dataLabel = propDefaultValues.dataLabel;\n  static readonly dataKeyNames;\n  static readonly legend = propDefaultValues.categoryLegend;\n  static readonly tooltipLabel = propDefaultValues.tooltipLabel;\n\n  static readonly showTooltip = propDefaultValues.showTooltip;\n  static readonly suppressEvents = propDefaultValues.suppressEvents;\n  static readonly referenceLines = propDefaultValues.referenceLines;\n  static readonly annotations = propDefaultValues.annotations;\n\n  static readonly hoverHighlight;\n  static readonly clickHighlight = propDefaultValues.clickHighlight;\n}\n","/**\n * Copyright (c) 2020, 2021, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nscatter-plot {\n  .annotations {\n    pointer-events: none;\n    .handle {\n      pointer-events: all;\n    }\n  }\n\n  .screen-reader-info {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n\n  .data-table-link {\n    color: #767676;\n    text-decoration: none;\n    font-size: 12px;\n    margin-left: 5%;\n  }\n\n  .hidden {\n    display: none;\n  }\n\n  .axis {\n    font-size: 12px;\n    text {\n      font: 0.65rem;\n      fill: #767676;\n    }\n\n    &-label {\n      text-anchor: middle;\n      font: 1rem sans-serif;\n    }\n\n    &-mark {\n      path {\n        color: #949494;\n        stroke-width: 0px;\n      }\n    }\n\n    path {\n      color: #949494;\n      stroke-width: 2px;\n    }\n  }\n\n  .axis-mark {\n    path {\n      stroke: #767676;\n      stroke-opacity: 1;\n    }\n  }\n\n  .grid {\n    line {\n      stroke: #c9c9c9;\n      stroke-opacity: 0.6;\n      // shape-rendering: crispEdges;\n      // stroke-dasharray: 4, 4;\n    }\n\n    path {\n      stroke-width: 0;\n      stroke: #767676;\n    }\n  }\n\n  .scatter-legend {\n    font-size: 1em;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n\n    .legend {\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n    }\n  }\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport { Component, Element, Prop, Watch, h, Event, EventEmitter } from '@stencil/core';\n\nimport { select, event } from 'd3-selection';\nimport { max, min } from 'd3-array';\nimport { scaleLinear, scaleOrdinal, scaleSqrt, scaleSequentialSqrt } from 'd3-scale';\nimport { interpolate } from 'd3-interpolate';\nimport { easeCircleIn } from 'd3-ease';\nimport { nest } from 'd3-collection';\nimport 'd3-transition';\nimport { v4 as uuid } from 'uuid';\nimport {\n  IBoxModelType,\n  ILocalizationType,\n  IClickStyleType,\n  IHoverStyleType,\n  IAxisType,\n  IReferenceStyleType,\n  IDataLabelType,\n  ITooltipLabelType,\n  IAccessibilityType,\n  IAnimationConfig,\n  ILegendType,\n  ISubTitleType\n} from '@visa/charts-types';\nimport { ScatterPlotDefaultValues } from './scatter-plot-default-values';\nimport Utils from '@visa/visa-charts-utils';\n\nconst {\n  getGlobalInstances,\n  configLocalization,\n  getActiveLanguageString,\n  getAccessibleStrokes,\n  ensureTextContrast,\n  createTextStrokeFilter,\n  initializeDescriptionRoot,\n  initializeElementAccess,\n  setElementFocusHandler,\n  setElementAccessID,\n  setAccessibilityController,\n  hideNonessentialGroups,\n  setAccessTitle,\n  setAccessSubtitle,\n  setAccessLongDescription,\n  setAccessExecutiveSummary,\n  setAccessPurpose,\n  setAccessContext,\n  setAccessStatistics,\n  setAccessChartCounts,\n  setAccessXAxis,\n  setAccessYAxis,\n  setAccessStructure,\n  setAccessAnnotation,\n  retainAccessFocus,\n  checkAccessFocus,\n  setElementInteractionAccessState,\n  setAccessibilityDescriptionWidth,\n  annotate,\n  chartAccessors,\n  checkInteraction,\n  checkClicked,\n  checkHovered,\n  convertVisaColor,\n  drawAxis,\n  drawGrid,\n  drawLegend,\n  setLegendInteractionState,\n  drawTooltip,\n  formatDataLabel,\n  getColors,\n  getLicenses,\n  getPadding,\n  getScopedData,\n  initTooltipStyle,\n  leastSquares,\n  overrideTitleTooltip,\n  placeDataLabels,\n  scopeDataKeys,\n  symbols,\n  transitionEndAll,\n  visaColors,\n  validateAccessibilityProps,\n  validateLocalizationProps,\n  findTagLevel,\n  prepareRenderChange,\n  roundTo,\n  resolveLabelCollision,\n  setSubTitle,\n  setReferenceLine\n} = Utils;\n\n@Component({\n  tag: 'scatter-plot',\n  styleUrl: 'scatter-plot.scss'\n})\nexport class ScatterPlot {\n  @Event() clickEvent: EventEmitter;\n  @Event() hoverEvent: EventEmitter;\n  @Event() mouseOutEvent: EventEmitter;\n  @Event() initialLoadEvent: EventEmitter;\n  @Event() initialLoadEndEvent: EventEmitter;\n  @Event() drawStartEvent: EventEmitter;\n  @Event() drawEndEvent: EventEmitter;\n  @Event() transitionEndEvent: EventEmitter;\n\n  // Chart Attributes (1/7)\n  @Prop({ mutable: true }) localization: ILocalizationType = ScatterPlotDefaultValues.localization;\n  @Prop({ mutable: true }) mainTitle: string = ScatterPlotDefaultValues.mainTitle;\n  @Prop({ mutable: true }) subTitle: string | ISubTitleType = ScatterPlotDefaultValues.subTitle;\n  @Prop({ mutable: true }) height: number = ScatterPlotDefaultValues.height;\n  @Prop({ mutable: true }) width: number = ScatterPlotDefaultValues.width;\n  @Prop({ mutable: true }) margin: IBoxModelType = ScatterPlotDefaultValues.margin;\n  @Prop({ mutable: true }) padding: IBoxModelType = ScatterPlotDefaultValues.padding;\n  @Prop({ mutable: true }) highestHeadingLevel: string | number = ScatterPlotDefaultValues.highestHeadingLevel;\n\n  // Data (2/7)\n  @Prop() data: object[];\n  @Prop() uniqueID: string;\n  @Prop({ mutable: true }) xAccessor: string = ScatterPlotDefaultValues.xAccessor;\n  @Prop({ mutable: true }) yAccessor: string = ScatterPlotDefaultValues.yAccessor;\n  @Prop({ mutable: true }) sizeConfig: any = ScatterPlotDefaultValues.sizeConfig;\n  @Prop({ mutable: true }) groupAccessor: string = ScatterPlotDefaultValues.groupAccessor;\n\n  // Axis (3/7)\n  @Prop({ mutable: true }) xAxis: IAxisType = ScatterPlotDefaultValues.xAxis;\n  @Prop({ mutable: true }) yAxis: IAxisType = ScatterPlotDefaultValues.yAxis;\n  @Prop({ mutable: true }) showBaselineX: boolean = ScatterPlotDefaultValues.showBaselineX;\n  @Prop({ mutable: true }) showBaselineY: boolean = ScatterPlotDefaultValues.showBaselineY;\n\n  // Color & Shape (4/7)\n  @Prop({ mutable: true }) colorPalette: string = ScatterPlotDefaultValues.colorPalette;\n  @Prop({ mutable: true }) colors: string[];\n  @Prop({ mutable: true }) dotRadius: number = ScatterPlotDefaultValues.dotRadius;\n  @Prop({ mutable: true }) dotOpacity: number = ScatterPlotDefaultValues.dotOpacity;\n  @Prop({ mutable: true }) hoverStyle: IHoverStyleType = ScatterPlotDefaultValues.hoverStyle;\n  @Prop({ mutable: true }) clickStyle: IClickStyleType = ScatterPlotDefaultValues.clickStyle;\n  @Prop({ mutable: true }) referenceStyle: IReferenceStyleType = ScatterPlotDefaultValues.referenceStyle;\n  @Prop({ mutable: true }) cursor: string = ScatterPlotDefaultValues.cursor;\n  @Prop({ mutable: true }) hoverOpacity: number = ScatterPlotDefaultValues.hoverOpacity;\n  @Prop({ mutable: true }) animationConfig: IAnimationConfig = ScatterPlotDefaultValues.animationConfig;\n  @Prop({ mutable: true }) fitLineStyle: IReferenceStyleType = ScatterPlotDefaultValues.fitLineStyle;\n  @Prop({ mutable: true }) dotSymbols: string[] = ScatterPlotDefaultValues.dotSymbols;\n\n  // Data label (5/7)\n  @Prop({ mutable: true }) dataLabel: IDataLabelType = ScatterPlotDefaultValues.dataLabel;\n  @Prop({ mutable: true }) dataKeyNames: object;\n  @Prop({ mutable: true }) showTooltip: boolean = ScatterPlotDefaultValues.showTooltip;\n  @Prop({ mutable: true }) tooltipLabel: ITooltipLabelType = ScatterPlotDefaultValues.tooltipLabel;\n  @Prop({ mutable: true }) accessibility: IAccessibilityType = ScatterPlotDefaultValues.accessibility;\n  @Prop({ mutable: true }) legend: ILegendType = ScatterPlotDefaultValues.legend;\n  @Prop({ mutable: true }) annotations: object[] = ScatterPlotDefaultValues.annotations;\n\n  // Calculation (6/7)\n  @Prop() xMaxValueOverride: number;\n  @Prop() xMinValueOverride: number;\n  @Prop() yMaxValueOverride: number;\n  @Prop() yMinValueOverride: number;\n  @Prop({ mutable: true }) showFitLine: boolean = ScatterPlotDefaultValues.showFitLine;\n  @Prop({ mutable: true }) referenceLines: object[] = ScatterPlotDefaultValues.referenceLines;\n\n  // Interactivity (7/7)\n  @Prop({ mutable: true }) suppressEvents: boolean = ScatterPlotDefaultValues.suppressEvents;\n  @Prop({ mutable: true }) hoverHighlight: object;\n  @Prop({ mutable: true }) clickHighlight: object[] = ScatterPlotDefaultValues.clickHighlight;\n  @Prop({ mutable: true }) interactionKeys: string[];\n\n  // Testing (8/7)\n  @Prop() unitTest: boolean = false;\n  //  @Prop() debugMode: boolean = false;\n\n  @Element()\n  scatterChartEl: HTMLElement;\n  shouldValidateAccessibility: boolean = true;\n  shouldValidateLocalization: boolean = true;\n  svg: any;\n  root: any;\n  rootG: any;\n  dotG: any;\n  gridG: any;\n  fitLine: any;\n  referencesG: any;\n  legendG: any;\n  tooltipG: any;\n  colorArr: any;\n  x: any;\n  y: any;\n  size: any;\n  shapeArea: any;\n  nest: any;\n  symbol: any;\n  innerHeight: number;\n  innerWidth: number;\n  innerPaddedHeight: number;\n  innerPaddedWidth: number;\n  xMin: any;\n  xMax: any;\n  yMin: any;\n  yMax: any;\n  sizeMin: any;\n  sizeMax: any;\n  defaults: boolean;\n  current: any;\n  enterPointWrappers: any;\n  exitPointWrappers: any;\n  updatePointWrappers: any;\n  enterPoints: any;\n  exitPoints: any;\n  updatePoints: any;\n  enteringLabelGroups: any;\n  exitingLabelGroups: any;\n  updatingLabelGroups: any;\n  enterLabels: any;\n  updateLabels: any;\n  exitLabels: any;\n  innerClickStyle: any;\n  innerHoverStyle: any;\n  innerLabelAccessor: string;\n  innerLabelFormat: string;\n  duration: any;\n  labels: any;\n  labelG: any;\n  subTitleG: any;\n  tableData: any;\n  tableColumns: any;\n  // these are added for accessibility\n  updated: boolean = true;\n  enterSize: number;\n  exitSize: number;\n  chartID: string;\n  dotColor: any;\n  textColor: any;\n  rawColors: any;\n  textColorArr: any;\n  innerInteractionKeys: string[];\n  groupInteraction: boolean;\n  shouldUpdateAnnotations: boolean = false;\n  shouldResetRoot: boolean = false;\n  shouldUpdateTableData: boolean = false;\n  shouldSetColors: boolean = false;\n  shouldSetSubTitle: boolean = false;\n  shouldUpdateData: boolean = false;\n  shouldUpdateScales: boolean = false;\n  shouldValidate: boolean = false;\n  shouldUpdateLayout: boolean = false;\n  shouldEnterUpdateExit: boolean = false;\n  shouldSetGlobalSelections: boolean = false;\n  shouldSetTestingAttributes: boolean = false;\n  shouldUpdateGeometries: boolean = false;\n  shouldUpdateXAxis: boolean = false;\n  shouldUpdateYAxis: boolean = false;\n  shouldUpdateBaselineX: boolean = false;\n  shouldUpdateBaselineY: boolean = false;\n  shouldUpdateXGrid: boolean = false;\n  shouldUpdateYGrid: boolean = false;\n  shouldUpdateLegend: boolean = false;\n  shouldUpdateReferenceLines: boolean = false;\n  shouldDrawFitLine: boolean = false;\n  shouldUpdateLabels: boolean = false;\n  shouldAddStrokeUnder: boolean = false;\n  shouldValidateClickStyle: boolean = false;\n  shouldValidateHoverStyle: boolean = false;\n  shouldValidateInteractionKeys: boolean = false;\n  shouldValidateDataLabelAccessor: boolean = false;\n  shouldSetSelectionClass: boolean = false;\n  shouldUpdateCursor: boolean = false;\n  shouldDrawInteractionState: boolean = false;\n  shouldSetDotRadius: boolean = false;\n  shouldBindInteractivity: boolean = false;\n  shouldUpdateLegendInteractivity: boolean = false;\n  shouldSetLegendCursor: boolean = false;\n  shouldSetLabelOpacity: boolean = false;\n  shouldSetPointOpacity: boolean = false;\n  // shouldUpdateStrokeWidth: boolean = false;\n  shouldUpdateDescriptionWrapper: boolean = false;\n  shouldSetChartAccessibilityTitle: boolean = false;\n  shouldSetChartAccessibilitySubtitle: boolean = false;\n  shouldSetChartAccessibilityLongDescription: boolean = false;\n  shouldSetChartAccessibilityExecutiveSummary: boolean = false;\n  shouldSetChartAccessibilityStatisticalNotes: boolean = false;\n  shouldSetChartAccessibilityStructureNotes: boolean = false;\n  shouldSetParentSVGAccessibility: boolean = false;\n  shouldSetGeometryAccessibilityAttributes: boolean = false;\n  shouldSetGeometryAriaLabels: boolean = false;\n  shouldSetGroupAccessibilityAttributes: boolean = false;\n  shouldSetGroupAccessibilityLabel: boolean = false;\n  shouldSetChartAccessibilityPurpose: boolean = false;\n  shouldSetChartAccessibilityContext: boolean = false;\n  shouldRedrawWrapper: boolean = false;\n  shouldSetTagLevels: boolean = false;\n  shouldSetChartAccessibilityCount: boolean = false;\n  shouldSetYAxisAccessibility: boolean = false;\n  shouldSetXAxisAccessibility: boolean = false;\n  shouldSetAnnotationAccessibility: boolean = false;\n  shouldSetStrokes: boolean = false;\n  shouldSetLocalizationConfig: boolean = false;\n  topLevel: string = 'h2';\n  bottomLevel: string = 'p';\n  filter: any;\n  textFilter: any;\n  strokes: any = {};\n  bitmaps: any;\n\n  @Watch('data')\n  dataWatcher(_newData, _oldData) {\n    this.updated = true;\n    this.shouldUpdateData = true;\n    this.shouldSetColors = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldUpdateScales = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetPointOpacity = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateTableData = true;\n    this.shouldValidate = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateLabels = true;\n    this.shouldAddStrokeUnder = true;\n    this.shouldDrawFitLine = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaselineX = true;\n    this.shouldUpdateBaselineY = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('uniqueID')\n  idWatcher(newID, _oldID) {\n    console.error(\n      'Change detected in prop uniqueID from value ' +\n        _oldID +\n        ' to value ' +\n        newID +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.chartID = newID || 'scatter-plot-' + uuid();\n    // this.scatterChartEl.id = this.chartID;\n    // this.shouldValidate = true;\n    // this.shouldUpdateDescriptionWrapper = true;\n    // this.shouldSetParentSVGAccessibility = true;\n    // this.shouldUpdateLegend = true;\n    // this.shouldSetStrokes = true;\n    // this.shouldAddStrokeUnder = true;\n  }\n\n  @Watch('highestHeadingLevel')\n  headingWatcher(_newVal, _oldVal) {\n    this.shouldRedrawWrapper = true;\n    this.shouldSetTagLevels = true;\n    this.shouldSetChartAccessibilityCount = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('mainTitle')\n  titleWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('subTitle')\n  subtitleWatcher(_newVal, _oldVal) {\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('height')\n  @Watch('width')\n  @Watch('padding')\n  @Watch('margin')\n  layoutWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLayout = true;\n    this.shouldUpdateScales = true;\n    this.shouldResetRoot = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldDrawFitLine = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaselineX = true;\n    this.shouldUpdateBaselineY = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('xAccessor')\n  xAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateLabels = true;\n    this.shouldDrawFitLine = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaselineX = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('yAccessor')\n  yAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldValidateDataLabelAccessor = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateLabels = true;\n    this.shouldDrawFitLine = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaselineY = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('sizeConfig')\n  sizeConfigWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldUpdateLabels = true;\n    this.shouldDrawFitLine = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldValidateDataLabelAccessor = true;\n    this.shouldUpdateTableData = true;\n  }\n\n  @Watch('groupAccessor')\n  groupAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldSetColors = true;\n    this.shouldSetPointOpacity = true;\n    this.shouldValidateHoverStyle = true;\n    this.shouldValidateClickStyle = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetGroupAccessibilityAttributes = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('xAxis')\n  xAxisWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateXGrid = true;\n    }\n  }\n\n  @Watch('yAxis')\n  yAxisWatcher(_newVal, _oldVal) {\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateYGrid = true;\n    }\n  }\n\n  @Watch('showBaselineX')\n  showBaselineXWatcher(_newVal, _oldVal) {\n    this.shouldUpdateBaselineX = true;\n  }\n\n  @Watch('showBaselineY')\n  showBaselineYWatcher(_newVal, _oldVal) {\n    this.shouldUpdateBaselineY = true;\n  }\n\n  @Watch('colors')\n  @Watch('colorPalette')\n  colorsWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldUpdateScales = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n  }\n\n  @Watch('dotRadius')\n  dotRadiusWatcher(_newVal, _oldVal) {\n    this.shouldValidateHoverStyle = true;\n    this.shouldValidateClickStyle = true;\n    this.shouldSetDotRadius = true;\n    this.shouldUpdateGeometries = true; // this is need for auto placement\n    this.shouldUpdateLabels = true;\n  }\n\n  @Watch('dotOpacity')\n  dotOpacityWatcher(_newVal, _oldVal) {\n    this.shouldSetPointOpacity = true;\n  }\n\n  @Watch('dotSymbols')\n  dotSymbolsWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n  }\n\n  @Watch('hoverStyle')\n  hoverStyleWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldSetPointOpacity = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldValidateHoverStyle = true;\n  }\n\n  @Watch('clickStyle')\n  clickStyleWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldSetPointOpacity = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldValidateClickStyle = true;\n  }\n\n  @Watch('referenceLines')\n  @Watch('referenceStyle')\n  referenceWatcher(_newVal, _oldVal) {\n    this.shouldUpdateReferenceLines = true;\n  }\n\n  @Watch('fitLineStyle')\n  fitLineStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawFitLine = true;\n  }\n\n  @Watch('cursor')\n  cursorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCursor = true;\n    this.shouldSetLegendCursor = true;\n  }\n\n  @Watch('hoverOpacity')\n  hoverOpacityWatcher(_newVal, _oldVal) {\n    this.shouldSetPointOpacity = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('dataLabel')\n  labelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateGeometries = true; // this is need for auto placement\n    this.shouldUpdateTableData = true; // this is needed for data table formatting\n    this.shouldSetParentSVGAccessibility = true; // this is needed for aria label formatting\n    this.shouldSetGeometryAriaLabels = true; // this is needed for aria label formatting\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    const newAccessor = _newVal && _newVal.labelAccessor ? _newVal.labelAccessor : false;\n    const oldAccessor = _oldVal && _oldVal.labelAccessor ? _oldVal.labelAccessor : false;\n    const newFormat = _newVal && _newVal.format ? _newVal.format : false;\n    const oldFormat = _oldVal && _oldVal.format ? _oldVal.format : false;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetLabelOpacity = true;\n    }\n    if (newAccessor !== oldAccessor || newFormat !== oldFormat) {\n      this.shouldValidateDataLabelAccessor = true;\n    }\n  }\n\n  @Watch('showTooltip')\n  showTooltipWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('tooltipLabel')\n  tooltipLabelWatcher(_newVal, _oldVal) {\n    // we need to call anywhere that innerDataKeys is used\n    this.shouldUpdateTableData = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('legend')\n  legendWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLegend = true;\n    const newInteractiveVal = _newVal && _newVal.interactive;\n    const oldInteractiveVal = _oldVal && _oldVal.interactive;\n    if (newInteractiveVal !== oldInteractiveVal) {\n      this.shouldSetLegendCursor = true;\n      this.shouldUpdateLegendInteractivity = true;\n    }\n  }\n\n  @Watch('suppressEvents')\n  suppressWatcher(_newVal, _oldVal) {\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldUpdateLegend = true;\n    this.shouldSetLegendCursor = true;\n    this.shouldUpdateLegendInteractivity = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldRedrawWrapper = true;\n    this.shouldValidate = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('annotations')\n  annotationsWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetAnnotationAccessibility = true;\n  }\n\n  @Watch('accessibility')\n  accessibilityWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    const newTitle = _newVal && _newVal.title ? _newVal.title : false;\n    const oldTitle = _oldVal && _oldVal.title ? _oldVal.title : false;\n    if (newTitle !== oldTitle) {\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newExecutiveSummary = _newVal && _newVal.executiveSummary ? _newVal.executiveSummary : false;\n    const oldExecutiveSummary = _oldVal && _oldVal.executiveSummary ? _oldVal.executiveSummary : false;\n    if (newExecutiveSummary !== oldExecutiveSummary) {\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n    }\n    const newPurpose = _newVal && _newVal.purpose ? _newVal.purpose : false;\n    const oldPurpose = _oldVal && _oldVal.purpose ? _oldVal.purpose : false;\n    if (newPurpose !== oldPurpose) {\n      this.shouldSetChartAccessibilityPurpose = true;\n    }\n    const newLongDescription = _newVal && _newVal.longDescription ? _newVal.longDescription : false;\n    const oldLongDescription = _oldVal && _oldVal.longDescription ? _oldVal.longDescription : false;\n    if (newLongDescription !== oldLongDescription) {\n      this.shouldSetChartAccessibilityLongDescription = true;\n    }\n    const newContext = _newVal && _newVal.contextExplanation ? _newVal.contextExplanation : false;\n    const oldContext = _oldVal && _oldVal.contextExplanation ? _oldVal.contextExplanation : false;\n    if (newContext !== oldContext) {\n      this.shouldSetChartAccessibilityContext = true;\n    }\n    const newStatisticalNotes = _newVal && _newVal.statisticalNotes ? _newVal.statisticalNotes : false;\n    const oldStatisticalNotes = _oldVal && _oldVal.statisticalNotes ? _oldVal.statisticalNotes : false;\n    if (newStatisticalNotes !== oldStatisticalNotes) {\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n    }\n    const newStructureNotes = _newVal && _newVal.structureNotes ? _newVal.structureNotes : false;\n    const oldStructureNotes = _oldVal && _oldVal.structureNotes ? _oldVal.structureNotes : false;\n    if (newStructureNotes !== oldStructureNotes) {\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    const newincludeDataKeyNames = _newVal && _newVal.includeDataKeyNames;\n    const oldincludeDataKeyNames = _oldVal && _oldVal.includeDataKeyNames;\n    const newElementDescriptionAccessor =\n      _newVal && _newVal.elementDescriptionAccessor ? _newVal.elementDescriptionAccessor : false;\n    const oldElementDescriptionAccessor =\n      _oldVal && _oldVal.elementDescriptionAccessor ? _oldVal.elementDescriptionAccessor : false;\n    if (\n      newincludeDataKeyNames !== oldincludeDataKeyNames ||\n      newElementDescriptionAccessor !== oldElementDescriptionAccessor\n    ) {\n      if (newincludeDataKeyNames !== oldincludeDataKeyNames) {\n        // this one is tricky because it needs to run after the lifecycle\n        // AND it could run in the off-chance this prop is changed\n        this.shouldSetGroupAccessibilityLabel = true;\n      }\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newStrokes = _newVal && _newVal.hideStrokes ? _newVal.hideStrokes : false;\n    const oldStrokes = _oldVal && _oldVal.hideStrokes ? _oldVal.hideStrokes : false;\n    if (newStrokes !== oldStrokes) {\n      this.shouldSetColors = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newKeyNav =\n      _newVal && _newVal.keyboardNavConfig && _newVal.keyboardNavConfig.disabled\n        ? _newVal.keyboardNavConfig.disabled\n        : false;\n    const oldKeyNav =\n      _oldVal && _oldVal.keyboardNavConfig && _oldVal.keyboardNavConfig.disabled\n        ? _oldVal.keyboardNavConfig.disabled\n        : false;\n    const newInterface = _newVal && _newVal.elementsAreInterface ? _newVal.elementsAreInterface : false;\n    const oldInterface = _oldVal && _oldVal.elementsAreInterface ? _oldVal.elementsAreInterface : false;\n    if (newKeyNav !== oldKeyNav || newInterface !== oldInterface) {\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetChartAccessibilitySubtitle = true;\n      this.shouldSetChartAccessibilityLongDescription = true;\n      this.shouldSetChartAccessibilityContext = true;\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n      this.shouldSetChartAccessibilityPurpose = true;\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    if (newInterface !== oldInterface) {\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('localization')\n  localizationWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n\n    // language\n    const newLanguage = _newVal && _newVal.language ? _newVal.language : false;\n    const oldLanguage = _oldVal && _oldVal.language ? _oldVal.language : false;\n    if (newLanguage !== oldLanguage) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n\n    // numeralLocale\n    const newNumeralLocale = _newVal && _newVal.numeralLocale ? _newVal.numeralLocale : false;\n    const oldNumeralLocale = _oldVal && _oldVal.numeralLocale ? _oldVal.numeralLocale : false;\n    if (newNumeralLocale !== oldNumeralLocale) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n  }\n\n  @Watch('xMaxValueOverride')\n  @Watch('xMinValueOverride')\n  xValueOverrideWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldDrawFitLine = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaselineX = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('yMaxValueOverride')\n  @Watch('yMinValueOverride')\n  yValueOverrideWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldDrawFitLine = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaselineY = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('showFitLine')\n  showFitLineWatcher(_newVal, _oldVal) {\n    this.shouldDrawFitLine = true;\n  }\n\n  @Watch('clickHighlight')\n  clickWatcher(_newVal, _oldVal) {\n    this.shouldSetPointOpacity = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n  }\n\n  @Watch('hoverHighlight')\n  hoverWatcher(_newVal, _oldVal) {\n    this.shouldSetPointOpacity = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('interactionKeys')\n  interactionWatcher(_newVal, _oldVal) {\n    this.shouldValidateInteractionKeys = true;\n    this.shouldSetPointOpacity = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateLegendInteractivity = true;\n  }\n\n  @Watch('dataKeyNames')\n  dataKeyNamesWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('unitTest')\n  unitTestWatcher(_newVal, _oldVal) {\n    this.shouldSetTestingAttributes = true;\n  }\n\n  componentWillLoad() {\n    // contrary to componentWillUpdate, this method appears safe to use for\n    // any calculations we need. Keeping them here reduces future refactor,\n    // since componentWillUpdate should eventually mirror this method\n    const chartID = this.uniqueID || 'scatter-plot-' + uuid();\n    this.initialLoadEvent.emit({ chartID: chartID });\n    return new Promise(resolve => {\n      this.duration = 0;\n      this.defaults = true;\n      this.chartID = chartID;\n      this.scatterChartEl.id = this.chartID;\n      this.setLocalizationConfig();\n      this.setTagLevels();\n      this.prepareData();\n      this.setLayoutData();\n      this.validateClickStyle();\n      this.validateHoverStyle();\n      this.setColors();\n      this.prepareScales();\n      this.validateInteractionKeys();\n      this.validateDataLabelAccessor();\n      this.setTableData();\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      resolve('component will load');\n    });\n  }\n\n  componentWillUpdate() {\n    // NEVER put items in this method that rely on props (until stencil bug is resolved)\n    // All items that belong here are currently at the top of render\n    // see: https://github.com/ionic-team/stencil/issues/2061#issuecomment-578282178\n    return new Promise(resolve => {\n      resolve('component will update');\n    });\n  }\n\n  componentDidLoad() {\n    return new Promise(resolve => {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.renderRootElements();\n      this.setTooltipInitialStyle();\n      this.setChartDescriptionWrapper();\n      this.setChartAccessibilityTitle();\n      this.setChartAccessibilitySubtitle();\n      this.setChartAccessibilityLongDescription();\n      this.setChartAccessibilityExecutiveSummary();\n      this.setChartAccessibilityPurpose();\n      this.setChartAccessibilityContext();\n      this.setChartAccessibilityStatisticalNotes();\n      this.setChartAccessibilityStructureNotes();\n      this.setParentSVGAccessibility();\n      this.reSetRoot();\n      this.setStrokes();\n      this.setSubTitleElements();\n      this.drawXGrid();\n      this.drawYGrid();\n      this.setGlobalSelections();\n      this.setTestingAttributes();\n      this.enterPointGroups();\n      // this.updatePointGroups();\n      this.exitPointGroups();\n      this.enterDataLabels();\n      this.updateDataLabels();\n      this.exitDataLabels();\n      this.setPointOpacity();\n      this.drawPointGroups();\n      this.setChartCountAccessibility();\n      this.setGeometryAccessibilityAttributes();\n      this.setGeometryAriaLabels();\n      this.drawLegendElements();\n      this.drawDataLabels();\n      this.addStrokeUnder();\n      this.drawFitLine();\n      this.drawReferenceLines();\n      this.setSelectedClass();\n      this.updateCursor();\n      this.setLegendCursor();\n      this.bindInteractivity();\n      this.bindLegendInteractivity();\n      this.drawAnnotations();\n      this.setAnnotationAccessibility();\n      this.drawXAxis();\n      this.setXAxisAccessibility();\n      this.drawYAxis();\n      this.setYAxisAccessibility();\n      this.drawBaselineX();\n      this.drawBaselineY();\n      this.onChangeHandler();\n      // we want to hide all child <g> of this.root BUT we want to make sure not to hide the\n      // parent<g> that contains our geometries! In a subGroup chart (like stacked bars),\n      // we want to pass the PARENT of all the <g>s that contain bars\n      hideNonessentialGroups(this.root.node(), this.dotG.node());\n      this.setGroupAccessibilityID();\n      this.defaults = false;\n      resolve('component did load');\n    }).then(() => this.initialLoadEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  componentDidUpdate() {\n    return new Promise(resolve => {\n      this.duration = !this.animationConfig || !this.animationConfig.disabled ? 750 : 0;\n      if (this.shouldUpdateDescriptionWrapper) {\n        this.setChartDescriptionWrapper();\n        this.shouldUpdateDescriptionWrapper = false;\n      }\n      if (this.shouldSetChartAccessibilityCount) {\n        this.setChartCountAccessibility();\n        this.shouldSetChartAccessibilityCount = false;\n      }\n      if (this.shouldSetChartAccessibilityTitle) {\n        this.setChartAccessibilityTitle();\n        this.shouldSetChartAccessibilityTitle = false;\n      }\n      if (this.shouldSetChartAccessibilitySubtitle) {\n        this.setChartAccessibilitySubtitle();\n        this.shouldSetChartAccessibilitySubtitle = false;\n      }\n      if (this.shouldSetChartAccessibilityLongDescription) {\n        this.setChartAccessibilityLongDescription();\n        this.shouldSetChartAccessibilityLongDescription = false;\n      }\n      if (this.shouldSetChartAccessibilityExecutiveSummary) {\n        this.setChartAccessibilityExecutiveSummary();\n        this.shouldSetChartAccessibilityExecutiveSummary = false;\n      }\n      if (this.shouldSetChartAccessibilityPurpose) {\n        this.setChartAccessibilityPurpose();\n        this.shouldSetChartAccessibilityPurpose = false;\n      }\n      if (this.shouldSetChartAccessibilityContext) {\n        this.setChartAccessibilityContext();\n        this.shouldSetChartAccessibilityContext = false;\n      }\n      if (this.shouldSetChartAccessibilityStatisticalNotes) {\n        this.setChartAccessibilityStatisticalNotes();\n        this.shouldSetChartAccessibilityStatisticalNotes = false;\n      }\n      if (this.shouldSetChartAccessibilityStructureNotes) {\n        this.setChartAccessibilityStructureNotes();\n        this.shouldSetChartAccessibilityStructureNotes = false;\n      }\n      if (this.shouldSetParentSVGAccessibility) {\n        this.setParentSVGAccessibility();\n        this.shouldSetParentSVGAccessibility = false;\n      }\n      if (this.shouldResetRoot) {\n        this.reSetRoot();\n        this.shouldResetRoot = false;\n      }\n      if (this.shouldSetStrokes) {\n        this.setStrokes();\n        this.shouldSetStrokes = false;\n      }\n      if (this.shouldSetGlobalSelections) {\n        this.setGlobalSelections();\n        this.shouldSetGlobalSelections = false;\n      }\n      if (this.shouldSetTestingAttributes) {\n        this.setTestingAttributes();\n        this.shouldSetTestingAttributes = false;\n      }\n      if (this.shouldSetSubTitle) {\n        this.setSubTitleElements();\n        this.shouldSetSubTitle = false;\n      }\n      if (this.shouldUpdateXGrid) {\n        this.drawXGrid();\n        this.shouldUpdateXGrid = false;\n      }\n      if (this.shouldUpdateYGrid) {\n        this.drawYGrid();\n        this.shouldUpdateYGrid = false;\n      }\n      if (this.shouldEnterUpdateExit) {\n        this.enterPointGroups();\n        // this.updatePointGroups();\n        this.exitPointGroups();\n        this.enterDataLabels();\n        this.updateDataLabels();\n        this.exitDataLabels();\n        this.shouldEnterUpdateExit = false;\n      }\n      if (this.shouldUpdateGeometries) {\n        this.drawPointGroups();\n        this.shouldUpdateGeometries = false;\n      }\n      if (this.shouldSetDotRadius) {\n        this.setDotRadius();\n        this.shouldSetDotRadius = false;\n      }\n      if (this.shouldSetGeometryAccessibilityAttributes) {\n        this.setGeometryAccessibilityAttributes();\n        this.shouldSetGeometryAccessibilityAttributes = false;\n      }\n      if (this.shouldSetGeometryAriaLabels) {\n        this.setGeometryAriaLabels();\n        this.shouldSetGeometryAriaLabels = false;\n      }\n      if (this.shouldSetGroupAccessibilityLabel) {\n        this.setGroupAccessibilityID();\n        this.shouldSetGroupAccessibilityLabel = false;\n      }\n      if (this.shouldUpdateLegend) {\n        this.drawLegendElements();\n        this.shouldUpdateLegend = false;\n      }\n      if (this.shouldUpdateLabels) {\n        this.drawDataLabels();\n        this.shouldUpdateLabels = false;\n      }\n      if (this.addStrokeUnder) {\n        this.addStrokeUnder();\n        this.shouldAddStrokeUnder = false;\n      }\n      if (this.shouldDrawFitLine) {\n        this.drawFitLine();\n        this.shouldDrawFitLine = false;\n      }\n      if (this.shouldUpdateReferenceLines) {\n        this.drawReferenceLines();\n        this.shouldUpdateReferenceLines = false;\n      }\n      if (this.shouldDrawInteractionState) {\n        this.updateInteractionState();\n        this.shouldDrawInteractionState = false;\n      }\n      if (this.shouldSetPointOpacity) {\n        this.setPointOpacity();\n        this.shouldSetPointOpacity = false;\n      }\n      if (this.shouldSetLabelOpacity) {\n        this.setLabelOpacity();\n        this.shouldSetLabelOpacity = false;\n      }\n      if (this.shouldSetSelectionClass) {\n        this.setSelectedClass();\n        this.shouldSetSelectionClass = false;\n      }\n      if (this.shouldUpdateCursor) {\n        this.updateCursor();\n        this.shouldUpdateCursor = false;\n      }\n      if (this.shouldUpdateLegendInteractivity) {\n        this.bindLegendInteractivity();\n        this.shouldUpdateLegendInteractivity = false;\n      }\n      if (this.shouldSetLegendCursor) {\n        this.setLegendCursor();\n        this.shouldSetLegendCursor = false;\n      }\n      if (this.shouldBindInteractivity) {\n        this.bindInteractivity();\n        this.shouldBindInteractivity = false;\n      }\n      if (this.shouldUpdateAnnotations) {\n        this.drawAnnotations();\n        this.shouldUpdateAnnotations = false;\n      }\n      if (this.shouldSetAnnotationAccessibility) {\n        this.setAnnotationAccessibility();\n        this.shouldSetAnnotationAccessibility = false;\n      }\n      if (this.shouldUpdateXAxis) {\n        this.drawXAxis();\n        this.shouldUpdateXAxis = false;\n      }\n      if (this.shouldSetXAxisAccessibility) {\n        this.setXAxisAccessibility();\n        this.shouldSetXAxisAccessibility = false;\n      }\n      if (this.shouldUpdateYAxis) {\n        this.drawYAxis();\n        this.shouldUpdateYAxis = false;\n      }\n      if (this.shouldSetYAxisAccessibility) {\n        this.setYAxisAccessibility();\n        this.shouldSetYAxisAccessibility = false;\n      }\n      if (this.shouldUpdateBaselineX) {\n        this.drawBaselineX();\n        this.shouldUpdateBaselineX = false;\n      }\n      if (this.shouldUpdateBaselineY) {\n        this.drawBaselineY();\n        this.shouldUpdateBaselineY = false;\n      }\n      this.onChangeHandler();\n      resolve('component did update');\n    }).then(() => this.drawEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  shouldValidateLocalizationProps() {\n    const windowInstances = getGlobalInstances();\n    const languageString = windowInstances.i18Next.language;\n    const languageObject = windowInstances.i18Next.getResourceBundle(languageString);\n    const numeralObject = windowInstances.numeral.localeData();\n    if (this.shouldValidateLocalization && !this.localization.skipValidation) {\n      this.shouldValidateLocalization = false;\n      validateLocalizationProps(this.chartID, {\n        ...this.localization,\n        language: languageObject,\n        numeralLocale: numeralObject\n      });\n    }\n  }\n\n  shouldValidateAccessibilityProps() {\n    if (this.shouldValidateAccessibility && !this.accessibility.disableValidation) {\n      this.shouldValidateAccessibility = false;\n      validateAccessibilityProps(\n        this.chartID,\n        { ...this.accessibility },\n        {\n          annotations: this.annotations,\n          data: this.data,\n          uniqueID: this.uniqueID,\n          context: {\n            mainTitle: this.mainTitle,\n            onClickEvent: this.suppressEvents ? undefined : this.clickEvent.emit\n          }\n        }\n      );\n    }\n  }\n\n  setLayoutData() {\n    this.padding = typeof this.padding === 'string' ? getPadding(this.padding) : this.padding;\n\n    this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n    this.innerWidth = this.width - this.margin.left - this.margin.right;\n\n    this.innerPaddedHeight = this.innerHeight - this.padding.top - this.padding.bottom;\n    this.innerPaddedWidth = this.innerWidth - this.padding.left - this.padding.right;\n  }\n\n  validateInteractionKeys() {\n    this.innerInteractionKeys =\n      this.interactionKeys && this.interactionKeys.length\n        ? this.interactionKeys\n        : this.groupAccessor\n        ? [this.groupAccessor]\n        : [this.xAccessor, this.yAccessor];\n\n    this.groupInteraction =\n      this.innerInteractionKeys.length === 1 && this.innerInteractionKeys[0] === this.groupAccessor;\n  }\n\n  validateDataLabelAccessor() {\n    this.innerLabelAccessor = this.dataLabel.labelAccessor\n      ? this.dataLabel.labelAccessor\n      : this.sizeConfig.sizeAccessor\n      ? this.sizeConfig.sizeAccessor\n      : this.yAccessor;\n\n    this.innerLabelFormat = this.dataLabel.labelAccessor\n      ? this.dataLabel.format\n      : this.sizeConfig.sizeAccessor\n      ? this.sizeConfig.format\n      : this.yAxis.format;\n  }\n\n  innerScopeDataKeys() {\n    // generate scoped and formatted data for data-table component\n    // we also scope singleAccessor array in chartAccessors based on what is actually in the data\n    const innerChartSingleAccessors = [];\n    chartAccessors.singleAccessors.forEach(accessor => {\n      if (this[accessor] && min(this.data, d => d[this[accessor]]) !== undefined) {\n        innerChartSingleAccessors.push(accessor);\n      }\n    });\n    const innerChartAccessors = { ...chartAccessors, singleAccessors: innerChartSingleAccessors };\n    return scopeDataKeys(this, innerChartAccessors, 'scatter-plot');\n  }\n\n  setTableData() {\n    // generate scoped and formatted data for data-table component\n    const keys = this.innerScopeDataKeys();\n    this.tableData = getScopedData(this.data, keys);\n    this.tableColumns = Object.keys(keys);\n  }\n\n  getLanguageString() {\n    return getActiveLanguageString(this.localization);\n  }\n\n  setLocalizationConfig() {\n    configLocalization(this.localization);\n  }\n\n  prepareData() {\n    this.nest = this.groupAccessor\n      ? nest()\n          .key(d => d[this.groupAccessor])\n          .entries(this.data)\n      : [{ key: '', values: this.data }];\n  }\n\n  setSubTitleElements() {\n    setSubTitle({\n      root: this.subTitleG,\n      subTitle: this.subTitle\n    });\n  }\n\n  setColors = () => {\n    this.rawColors = this.colors ? convertVisaColor(this.colors) : getColors(this.colorPalette, this.nest.length || 1);\n    this.textColorArr = [];\n    let adjustedColors = this.rawColors;\n    function getStrokeColor(color) {\n      const strokes = getAccessibleStrokes(color);\n      return strokes.length === 2 ? strokes[1] : strokes[0];\n    }\n    if (!this.accessibility.hideStrokes) {\n      this.strokes = {};\n      if (this.innerClickStyle.color) {\n        const color = visaColors[this.innerClickStyle.color] || this.innerClickStyle.color;\n        this.strokes[color.toLowerCase()] = getStrokeColor(color);\n      }\n      if (this.innerHoverStyle.color) {\n        const color = visaColors[this.innerHoverStyle.color] || this.innerHoverStyle.color;\n        this.strokes[color.toLowerCase()] = getStrokeColor(color);\n      }\n      adjustedColors = [];\n    }\n    this.rawColors.forEach(color => {\n      if (!this.accessibility.hideStrokes) {\n        const adjusted = getStrokeColor(color);\n        this.strokes[color.toLowerCase()] = adjusted;\n        adjustedColors.push(adjusted);\n      }\n      this.textColorArr.push(ensureTextContrast(color, '#ffffff', 4.5));\n    });\n    if (this.innerClickStyle.color) {\n      const color = visaColors[this.innerClickStyle.color] || this.innerClickStyle.color;\n      this.textColorArr.push(ensureTextContrast(color, '#ffffff', 4.5));\n    }\n    if (this.innerHoverStyle.color) {\n      const color = visaColors[this.innerHoverStyle.color] || this.innerHoverStyle.color;\n      this.textColorArr.push(ensureTextContrast(color, '#ffffff', 4.5));\n    }\n    this.colorArr = adjustedColors;\n  };\n\n  prepareScales() {\n    const xMinValue = min(this.data, d => parseFloat(d[this.xAccessor]));\n    const xMaxValue = max(this.data, d => parseFloat(d[this.xAccessor]));\n    const yMinValue = min(this.data, d => parseFloat(d[this.yAccessor]));\n    const yMaxValue = max(this.data, d => parseFloat(d[this.yAccessor]));\n    const zMinValue = min(this.data, d => parseFloat(d[this.sizeConfig.sizeAccessor]));\n    const zMaxValue = max(this.data, d => parseFloat(d[this.sizeConfig.sizeAccessor]));\n\n    this.xMin = this.xMinValueOverride === 0 ? 0 : this.xMinValueOverride || xMinValue - (xMaxValue - xMinValue) * 0.1;\n    this.xMax = this.xMaxValueOverride === 0 ? 0 : this.xMaxValueOverride || xMaxValue + (xMaxValue - xMinValue) * 0.1;\n    this.yMin = this.yMinValueOverride === 0 ? 0 : this.yMinValueOverride || yMinValue - (yMaxValue - yMinValue) * 0.1;\n    this.yMax = this.yMaxValueOverride === 0 ? 0 : this.yMaxValueOverride || yMaxValue + (yMaxValue - yMinValue) * 0.1;\n\n    // for size we need to check\n    // 1. if sizeConfig is falsy we need to check for 0 as that is also falsy, but a valid value\n    // 2. if we have a valid value (truthy or 0) then if it is smaller than the data use it, otherwise use the data\n    // 3. we use some simple math to calc 10% of the range below the min\n    const sizeMinTruthy = this.sizeConfig.minValueOverride || this.sizeConfig.minValueOverride === 0;\n    const sizeMaxTruthy = this.sizeConfig.maxValueOverride || this.sizeConfig.maxValueOverride === 0;\n    this.sizeMin =\n      sizeMinTruthy && this.sizeConfig.minValueOverride < zMinValue ? this.sizeConfig.minValueOverride : zMinValue;\n    this.sizeMax =\n      sizeMaxTruthy && this.sizeConfig.maxValueOverride > zMaxValue ? this.sizeConfig.maxValueOverride : zMaxValue; // zMaxValue + (zMaxValue - zMinValue) * 0.1; // for the size scale we don't need a buffer like we do for axes\n\n    const keys = [];\n    this.nest.map(param => {\n      keys.push(param.key);\n    });\n\n    if (this.xMax === this.xMin) {\n      this.xMax = Math.max(0, this.xMax);\n      this.xMin = Math.min(0, this.xMin);\n    }\n\n    if (this.yMax === this.yMin) {\n      this.yMax = Math.max(0, this.yMax);\n      this.yMin = Math.min(0, this.yMin);\n    }\n\n    if (this.sizeMax === this.sizeMin) {\n      this.sizeMax = Math.max(0, this.sizeMax);\n      this.sizeMin = Math.min(0, this.sizeMin);\n    }\n\n    this.x = scaleLinear()\n      .domain([this.xMin, this.xMax])\n      .range([0, this.innerPaddedWidth]);\n\n    this.y = scaleLinear()\n      .domain([this.yMin, this.yMax])\n      .range([this.innerPaddedHeight, 0]);\n\n    // for the range() of this scale we default to dotRadius for minimum\n    // and scale up based on the dimenions of the chart, unless of course\n    // size overrides are sent, then we will respect those as provided\n    this.size = scaleSqrt()\n      .domain([this.sizeMin, this.sizeMax])\n      .range([\n        this.sizeConfig.minSizeOverride || this.sizeConfig.minSizeOverride === 0\n          ? this.sizeConfig.minSizeOverride\n          : ScatterPlotDefaultValues.dotRadius,\n        this.sizeConfig.maxSizeOverride || this.sizeConfig.maxSizeOverride === 0\n          ? this.sizeConfig.maxSizeOverride\n          : (this.innerPaddedWidth + this.innerPaddedHeight) / 2.5 / 10\n      ]);\n\n    this.symbol = scaleOrdinal()\n      .domain(keys)\n      .range(this.dotSymbols);\n\n    this.shapeArea = {};\n    keys.forEach(key => {\n      let path_arr = [];\n      let shape = symbols[this.symbol(key)].general;\n      shape.split(/[A-Z]/g).forEach(j => {\n        if (j.split(',').length === 2) {\n          path_arr.push(j.split(','));\n        }\n      });\n      let xs = [];\n      let ys = [];\n      path_arr.forEach((j, k) => {\n        if (path_arr[k + 1]) {\n          xs.push(parseFloat(j[0]) * parseFloat(path_arr[k + 1][1]));\n          ys.push(parseFloat(j[1]) * parseFloat(path_arr[k + 1][0]));\n        } else {\n          xs.push(parseFloat(j[0]) * parseFloat(path_arr[0][1]));\n          ys.push(parseFloat(j[1]) * parseFloat(path_arr[0][0]));\n        }\n      });\n      let z = (xs.reduce((a, b) => a + b) - ys.reduce((a, b) => a + b)) / 2;\n      this.shapeArea[key] = {\n        shape: this.symbol(key),\n        area: z,\n        toCircle: Math.PI / z\n      };\n    });\n\n    this.dotColor = scaleOrdinal()\n      .domain(keys)\n      .range(this.rawColors);\n\n    const baseColors = [...this.rawColors];\n\n    if (this.innerClickStyle.color) {\n      baseColors.push(visaColors[this.innerClickStyle.color] || this.innerClickStyle.color);\n    }\n    if (this.innerHoverStyle.color) {\n      baseColors.push(visaColors[this.innerHoverStyle.color] || this.innerHoverStyle.color);\n    }\n    this.textColor = scaleOrdinal()\n      .domain(baseColors)\n      .range(this.textColorArr);\n  }\n\n  validateHoverStyle() {\n    this.innerHoverStyle = this.hoverStyle\n      ? {\n          color: this.hoverStyle.color,\n          strokeWidth: this.hoverStyle.strokeWidth || 2\n        }\n      : {\n          strokeWidth: 2\n        };\n  }\n\n  validateClickStyle() {\n    this.innerClickStyle = this.clickStyle\n      ? {\n          color: this.clickStyle.color,\n          strokeWidth: this.clickStyle.strokeWidth || 3\n        }\n      : {\n          strokeWidth: 3\n        };\n  }\n\n  setStrokes() {\n    this.textFilter = createTextStrokeFilter({\n      root: this.svg.node(),\n      id: this.chartID,\n      color: '#ffffff'\n    });\n    this.filter = !this.accessibility.hideStrokes\n      ? createTextStrokeFilter({\n          root: this.svg.node(),\n          id: this.chartID,\n          color: '#ffffff',\n          strokeSizeOverride: 1 / (this.dotRadius || 1)\n        })\n      : null;\n  }\n\n  addStrokeUnder() {\n    this.updateLabels.attr('filter', this.textFilter);\n    this.updatePoints.attr('filter', (_, i, n) => (!select(n[i]).classed('moving') ? this.filter : null));\n  }\n\n  textFillHandler = d => {\n    const clicked =\n      this.clickHighlight &&\n      this.clickHighlight.length > 0 &&\n      checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n    const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n    const baseColor = clicked\n      ? visaColors[this.innerClickStyle.color] ||\n        this.innerClickStyle.color ||\n        (this.groupAccessor ? this.dotColor(d[this.groupAccessor]) : this.rawColors[0])\n      : hovered\n      ? visaColors[this.innerHoverStyle.color] ||\n        this.innerHoverStyle.color ||\n        (this.groupAccessor ? this.dotColor(d[this.groupAccessor]) : this.rawColors[0])\n      : this.groupAccessor\n      ? this.dotColor(d[this.groupAccessor])\n      : this.rawColors[0];\n    const color = this.textColor(baseColor);\n    return color;\n  };\n\n  updateStrokeWidth() {\n    this.updatePoints.attr('stroke', this.handleDotStyle);\n  }\n\n  handleDotStyle = (d, i, n) => {\n    let color = null;\n    const clicked =\n      this.clickHighlight &&\n      this.clickHighlight.length > 0 &&\n      checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n    const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n    const baseColor = clicked\n      ? visaColors[this.innerClickStyle.color] ||\n        this.innerClickStyle.color ||\n        (this.groupAccessor ? this.dotColor(d[this.groupAccessor]) : this.rawColors[0])\n      : hovered\n      ? visaColors[this.innerHoverStyle.color] ||\n        this.innerHoverStyle.color ||\n        (this.groupAccessor ? this.dotColor(d[this.groupAccessor]) : this.rawColors[0])\n      : this.groupAccessor && this.sizeConfig.dualEncodeColor\n      ? scaleSequentialSqrt(\n          [Math.max(0, this.sizeMin), this.sizeMax],\n          interpolate('#fff', this.dotColor(d[this.groupAccessor]))\n        )(d[this.sizeConfig.sizeAccessor]) || this.dotColor(d[this.groupAccessor])\n      : this.groupAccessor && this.sizeConfig && !this.sizeConfig.dualEncodeColor\n      ? this.dotColor(d[this.groupAccessor])\n      : !this.groupAccessor && this.sizeConfig.dualEncodeColor\n      ? scaleSequentialSqrt([Math.max(0, this.sizeMin), this.sizeMax], interpolate('#fff', this.rawColors[0]))(\n          d[this.sizeConfig.sizeAccessor]\n        ) || this.rawColors[0]\n      : this.rawColors[0];\n    if (!this.accessibility.hideStrokes) {\n      const strokeWidth =\n        (clicked\n          ? parseFloat(this.innerClickStyle.strokeWidth) || 1\n          : hovered\n          ? parseFloat(this.innerHoverStyle.strokeWidth) || 1\n          : 1) /\n        (this.size(\n          d[this.sizeConfig.sizeAccessor] * this.shapeArea[this.groupAccessor ? d[this.groupAccessor] : '']['toCircle']\n        ) ||\n          this.dotRadius ||\n          1);\n\n      select(n[i]).attr('stroke-width', strokeWidth);\n\n      // we need to handle the following scenarios for stroke now\n      // 1. clicked - use baseColor.toLowerCase()\n      // 2. hovered - use baseColor.toLowerCase()\n      // 3. groupAccessor - use this.dotColor(d[this.groupAccessor]).toLowerCase()\n      // 4. no groupAccessor - use this.rawColors[0].toLowerCase()\n      // strokes object was created with lowercase hex codes, so need to ensure lower case\n      color = this.strokes[\n        clicked || hovered\n          ? baseColor.toLowerCase()\n          : this.groupAccessor\n          ? this.dotColor(d[this.groupAccessor]).toLowerCase()\n          : this.rawColors[0].toLowerCase()\n      ];\n    }\n\n    select(n[i]).attr('fill', baseColor);\n    return color;\n  };\n\n  renderRootElements() {\n    this.svg = select(this.scatterChartEl)\n      .select('.visa-viz-d3-scatter-container')\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    this.root = this.svg.append('g').attr('id', 'visa-viz-margin-container-g-' + this.chartID);\n    this.rootG = this.root.append('g').attr('id', 'visa-viz-padding-container-g-' + this.chartID);\n    this.gridG = this.rootG.append('g').attr('class', 'scatter-grid-group');\n    this.dotG = this.rootG\n      .append('g')\n      .attr('class', 'scatter-dot-group')\n      .attr('isolation', 'isolate')\n      .style('isolation', 'isolate');\n    this.fitLine = this.rootG.append('g').attr('class', 'scatter-fit-line-group');\n    this.labelG = this.rootG.append('g').attr('class', 'scatter-dataLabel-group');\n    this.legendG = select(this.scatterChartEl)\n      .select('.scatter-legend')\n      .append('svg');\n    this.subTitleG = select(this.scatterChartEl).select('.scatter-sub-title');\n    this.tooltipG = select(this.scatterChartEl).select('.scatter-tooltip');\n    this.referencesG = this.rootG.append('g').attr('class', 'scatter-reference-line-group');\n  }\n\n  setGlobalSelections() {\n    const dataBoundToGroups = this.dotG.selectAll('.series-point-group').data(this.nest, d => d.key);\n\n    this.enterPointWrappers = dataBoundToGroups.enter().append('g');\n    this.exitPointWrappers = dataBoundToGroups.exit();\n    this.updatePointWrappers = dataBoundToGroups.merge(this.enterPointWrappers);\n\n    this.exitSize = this.exitPointWrappers.selectAll('.data-point').size();\n    this.exitSize += this.exitPointWrappers.size();\n\n    const dataBoundToGeometries = this.updatePointWrappers.selectAll('.data-point').data(d => d.values);\n\n    this.enterPoints = dataBoundToGeometries.enter().append('path');\n    this.exitPoints = dataBoundToGeometries.exit();\n    this.updatePoints = dataBoundToGeometries.merge(this.enterPoints);\n\n    const dataBoundToLabelGroups = this.labelG.selectAll('.series-dataLabel-group').data(this.nest, d => d.key);\n\n    this.enteringLabelGroups = dataBoundToLabelGroups.enter().append('g');\n    this.exitingLabelGroups = dataBoundToLabelGroups.exit();\n    this.updatingLabelGroups = dataBoundToLabelGroups.merge(this.enteringLabelGroups);\n\n    const dataBoundToLabels = this.updatingLabelGroups.selectAll('text').data(d => d.values);\n    this.enterLabels = dataBoundToLabels.enter().append('text');\n    this.exitLabels = dataBoundToLabels.exit();\n    this.updateLabels = dataBoundToLabels.merge(this.enterLabels);\n  }\n\n  setTestingAttributes() {\n    if (this.unitTest) {\n      select(this.scatterChartEl)\n        .select('.visa-viz-d3-scatter-container')\n        .attr('data-testid', 'chart-container');\n      select(this.scatterChartEl)\n        .select('.scatter-main-title')\n        .attr('data-testid', 'main-title');\n      select(this.scatterChartEl)\n        .select('.scatter-sub-title')\n        .attr('data-testid', 'sub-title');\n      this.svg.attr('data-testid', 'root-svg');\n      this.root.attr('data-testid', 'margin-container');\n      this.rootG.attr('data-testid', 'padding-container');\n      this.legendG.attr('data-testid', 'legend-container');\n      this.tooltipG.attr('data-testid', 'tooltip-container');\n      this.gridG.attr('data-testid', 'scatter-grid-group');\n\n      this.fitLine.attr('data-testid', 'scatter-fit-line-group');\n      this.referencesG.attr('data-testid', 'reference-line-group');\n\n      this.dotG.attr('data-testid', 'marker-group-container');\n      this.updatePointWrappers\n        .attr('data-testid', 'marker-series-group')\n        .attr('data-id', d => `marker-series-${d.key}`);\n      this.updatePoints\n        .attr('data-testid', 'marker')\n        .attr('data-id', d => `marker-${d[this.groupAccessor]}-${d[this.xAccessor]}-${d[this.yAccessor]}`);\n\n      this.labelG.attr('data-testid', 'dataLabel-group-container');\n      this.updatingLabelGroups\n        .attr('data-testid', 'dataLabel-series-group')\n        .attr('data-id', d => `label-series-${d.key}`);\n      this.updateLabels\n        .attr('data-testid', 'dataLabel')\n        .attr('data-id', d => `label-${d[this.groupAccessor]}-${d[this.xAccessor]}-${d[this.yAccessor]}`);\n\n      this.svg.select('defs').attr('data-testid', 'pattern-defs');\n    } else {\n      select(this.scatterChartEl)\n        .select('.visa-viz-d3-scatter-container')\n        .attr('data-testid', null);\n      select(this.scatterChartEl)\n        .select('.scatter-main-title')\n        .attr('data-testid', null);\n      select(this.scatterChartEl)\n        .select('.scatter-sub-title')\n        .attr('data-testid', null);\n      this.svg.attr('data-testid', null);\n      this.root.attr('data-testid', null);\n      this.rootG.attr('data-testid', null);\n      this.legendG.attr('data-testid', null);\n      this.tooltipG.attr('data-testid', null);\n      this.gridG.attr('data-testid', null);\n\n      this.fitLine.attr('data-testid', null);\n      this.referencesG.attr('data-testid', null);\n\n      this.dotG.attr('data-testid', null);\n      this.updatePointWrappers.attr('data-testid', null).attr('data-id', null);\n      this.updatePoints.attr('data-testid', null).attr('data-id', null);\n\n      this.labelG.attr('data-testid', null);\n      this.updatingLabelGroups.attr('data-testid', null).attr('data-id', null);\n      this.updateLabels.attr('data-testid', null).attr('data-id', null);\n\n      this.svg.select('defs').attr('data-testid', null);\n    }\n  }\n\n  enterPointGroups() {\n    this.enterPointWrappers.interrupt();\n    this.enterPoints.interrupt();\n\n    this.enterPointWrappers\n      .attr('class', 'series-point-group')\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .on(\n        'mouseover',\n        this.groupInteraction && !this.suppressEvents\n          ? (d, i, n) => this.onHoverHandler(d.values ? d.values[0] : d, n[i], true)\n          : null\n      )\n      .on('mouseout', this.groupInteraction && !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .each((_, i, n) => {\n        initializeElementAccess(n[i]);\n      });\n\n    this.enterPoints\n      .attr('class', 'data-point entering')\n      .style('mix-blend-mode', 'multiply')\n      .attr('filter', this.filter)\n      .each((_d, i, n) => {\n        initializeElementAccess(n[i]);\n      })\n      .on('click', (d, i, n) => this.onClickHandler(d, n[i]))\n      .on('mouseover', (d, i, n) => this.onHoverHandler(d, n[i]))\n      .on('mouseout', () => this.onMouseOutHandler())\n      .attr('opacity', 0)\n      .attr('stroke', this.handleDotStyle)\n      .attr('d', d =>\n        this.groupAccessor ? symbols[this.symbol(d[this.groupAccessor])].general : symbols[this.dotSymbols[0]].general\n      )\n      .attr(\n        'transform',\n        d => 'translate(' + this.x(d[this.xAccessor]) + ',' + this.y(d[this.yAccessor]) + ') scale(1)'\n      );\n    this.updatePointWrappers.order();\n    this.updatePoints.order();\n  }\n\n  // updatePointGroups() {\n  //   this.updatePointWrappers.interrupt();\n  // }\n\n  exitPointGroups() {\n    this.exitPointWrappers.interrupt();\n    this.exitPoints.interrupt();\n\n    this.exitPointWrappers\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn);\n\n    this.exitPointWrappers\n      .selectAll('.data-point')\n      .attr('filter', null)\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .attr('transform', (_, i, n) => {\n        const transform = select(n[i]).attr('transform');\n        const index = transform.indexOf('scale(');\n        return transform.substring(0, index) + 'scale(1)';\n      })\n      .call(transitionEndAll, () => {\n        this.exitPointWrappers.remove();\n      });\n\n    this.exitPoints\n      .attr('filter', null)\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .attr('transform', (_, i, n) => {\n        const transform = select(n[i]).attr('transform');\n        const index = transform.indexOf('scale(');\n        return transform.substring(0, index) + 'scale(1)';\n      });\n\n    this.updatePoints\n      .transition('accessibilityAfterExit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        // before we exit geometries, we need to check if a focus exists or not\n        const focusDidExist = checkAccessFocus(this.rootG.node());\n        // then we must remove the exiting elements\n        this.exitPoints.remove();\n        this.exitPointWrappers.remove();\n        // then our util can count geometries\n        this.setChartCountAccessibility();\n        // our group's label should update with new counts too\n        this.setGroupAccessibilityID();\n        // since items exited, labels must receive updated values\n        this.setGeometryAriaLabels();\n        // and also make sure the user's focus isn't lost\n        retainAccessFocus({\n          parentGNode: this.rootG.node(),\n          focusDidExist\n          // recursive: true\n        });\n      });\n  }\n\n  drawPointGroups() {\n    this.updatePoints\n      .each((d, i, n) => {\n        const me = select(n[i]);\n        const xChange = +me.attr('data-x') !== this.x(d[this.xAccessor]);\n        const yChange = +me.attr('data-y') !== this.y(d[this.yAccessor]);\n        const rChange =\n          +me.attr('data-r') !==\n            this.size(\n              d[this.sizeConfig.sizeAccessor] *\n                this.shapeArea[this.groupAccessor ? d[this.groupAccessor] : '']['toCircle']\n            ) ||\n          this.dotRadius ||\n          1;\n        if (xChange || yChange || rChange) {\n          me.attr('filter', null);\n          me.classed('moving', true);\n        }\n      })\n      .attr('data-r', d => {\n        return (\n          this.size(\n            d[this.sizeConfig.sizeAccessor] *\n              this.shapeArea[this.groupAccessor ? d[this.groupAccessor] : '']['toCircle']\n          ) ||\n          this.dotRadius ||\n          1\n        );\n      })\n      .attr('data-x', d => this.x(d[this.xAccessor]))\n      .attr('data-y', d => this.y(d[this.yAccessor]))\n      .attr('data-translate-x', this.padding.left + this.margin.left)\n      .attr('data-translate-y', this.padding.top + this.margin.top)\n      .attr('data-d', (\n        d // we can use base symbol here, it is much simplier and more performant\n      ) => (this.groupAccessor ? symbols[this.symbol(d[this.groupAccessor])].base : symbols[this.dotSymbols[0]].base))\n      .transition('update_d')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('d', d =>\n        this.groupAccessor ? symbols[this.symbol(d[this.groupAccessor])].general : symbols[this.dotSymbols[0]].general\n      )\n      .attr(\n        'transform',\n        d =>\n          'translate(' +\n          this.x(d[this.xAccessor]) +\n          ',' +\n          this.y(d[this.yAccessor]) +\n          ') scale(' +\n          (this.size(\n            d[this.sizeConfig.sizeAccessor] *\n              this.shapeArea[this.groupAccessor ? d[this.groupAccessor] : '']['toCircle']\n          ) ||\n            this.dotRadius ||\n            1) +\n          ')'\n      )\n      .call(transitionEndAll, () => {\n        setTimeout(() => {\n          this.updatePointWrappers\n            .selectAll('.moving')\n            .classed('moving', false)\n            .attr('filter', this.filter);\n\n          // this.updatingLabelGroups\n          //   .selectAll('.moving')\n          //   .classed('moving', false)\n          //   .attr('filter', this.textFilter);\n        }, 0);\n\n        // we must make sure if geometries move, that our focus indicator does too\n        retainAccessFocus({\n          parentGNode: this.rootG.node()\n        });\n\n        // now we can emit the event that transitions are complete\n        this.transitionEndEvent.emit({ chartID: this.chartID });\n      });\n  }\n\n  setDotRadius() {\n    this.updatePoints\n      .transition('radius')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr(\n        'transform',\n        d =>\n          'translate(' +\n          this.x(d[this.xAccessor]) +\n          ',' +\n          this.y(d[this.yAccessor]) +\n          ') scale(' +\n          (this.size(\n            d[this.sizeConfig.sizeAccessor] *\n              this.shapeArea[this.groupAccessor ? d[this.groupAccessor] : '']['toCircle']\n          ) ||\n            this.dotRadius ||\n            1) +\n          ')'\n      )\n      .call(transitionEndAll, () => {\n        // we must make sure if geometries move, that our focus indicator does too\n        retainAccessFocus({\n          parentGNode: this.rootG.node()\n        });\n      });\n  }\n\n  setSelectedClass() {\n    this.updatePoints.classed('highlight', (d, i, n) => {\n      let selected = checkInteraction(d, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n      selected = this.clickHighlight && this.clickHighlight.length ? selected : false;\n      const selectable = this.accessibility.elementsAreInterface;\n      setElementInteractionAccessState(n[i], selected, selectable);\n      return selected;\n    });\n  }\n\n  updateCursor() {\n    this.updatePointWrappers.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    this.updatingLabelGroups.attr('cursor', !this.suppressEvents && this.dataLabel.visible ? this.cursor : null);\n  }\n\n  // reset graph size based on window size\n  reSetRoot() {\n    const changeSvg = prepareRenderChange({\n      selection: this.svg,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeSvg\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    const changeRoot = prepareRenderChange({\n      selection: this.root,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRoot.attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n\n    const changeRootG = prepareRenderChange({\n      selection: this.rootG,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRootG.attr('transform', `translate(${this.padding.left}, ${this.padding.top})`);\n\n    setAccessibilityDescriptionWidth(this.chartID, this.width);\n  }\n\n  drawXAxis() {\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.xAccessor]\n        ? this.dataKeyNames[this.xAccessor]\n        : this.xAxis.label;\n\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.x,\n      left: false,\n      format: this.xAxis.format,\n      tickInterval: this.xAxis.tickInterval,\n      label: axisLabel, // this.xAxis.label,\n      padding: this.padding,\n      hide: !this.xAxis.visible,\n      duration: this.duration\n    });\n  }\n\n  drawYAxis() {\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.yAccessor]\n        ? this.dataKeyNames[this.yAccessor]\n        : this.yAxis.label;\n\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.y,\n      left: true,\n      format: this.yAxis.format,\n      tickInterval: this.yAxis.tickInterval,\n      label: axisLabel, // this.yAxis.label,\n      padding: this.padding,\n      hide: !this.yAxis.visible,\n      duration: this.duration\n    });\n  }\n\n  setXAxisAccessibility() {\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.xAccessor]\n        ? this.dataKeyNames[this.xAccessor]\n        : this.xAxis.label;\n\n    setAccessXAxis({\n      rootEle: this.scatterChartEl,\n      hasXAxis: this.xAxis ? this.xAxis.visible : false,\n      xAxis: this.x,\n      xAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasXAxis is always false\n    });\n  }\n\n  setYAxisAccessibility() {\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.yAccessor]\n        ? this.dataKeyNames[this.yAccessor]\n        : this.yAxis.label;\n\n    setAccessYAxis({\n      rootEle: this.scatterChartEl,\n      hasYAxis: this.yAxis ? this.yAxis.visible : false,\n      yAxis: this.y,\n      yAxisLabel: axisLabel ? axisLabel : ''\n    });\n  }\n\n  drawBaselineY() {\n    drawAxis({\n      root: this.gridG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.y,\n      left: true,\n      padding: this.padding,\n      markOffset: this.x(0) || -1,\n      hide: !this.showBaselineY,\n      duration: this.duration\n    });\n  }\n\n  drawBaselineX() {\n    drawAxis({\n      root: this.gridG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.x,\n      left: false,\n      padding: this.padding,\n      markOffset: this.y(0) || -1,\n      hide: !this.showBaselineX,\n      duration: this.duration\n    });\n  }\n\n  drawXGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.x,\n      false,\n      !this.xAxis.gridVisible,\n      this.xAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  drawYGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.y,\n      true,\n      !this.yAxis.gridVisible,\n      this.yAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  bindLegendInteractivity() {\n    select(this.scatterChartEl)\n      .selectAll('.legend')\n      .on(\n        'click',\n        this.legend.interactive && !this.suppressEvents\n          ? (d, i, n) => this.onClickHandler(d.values ? d.values[0] : d, n[i])\n          : null\n      )\n      .on(\n        'mouseover',\n        this.legend.interactive && !this.suppressEvents\n          ? (d, i, n) => this.onHoverHandler(d.values ? d.values[0] : d, n[i], true)\n          : null\n      )\n      .on('mouseout', this.legend.interactive && !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  setLegendCursor() {\n    select(this.scatterChartEl)\n      .selectAll('.legend')\n      .style('cursor', this.legend.interactive && !this.suppressEvents ? this.cursor : null);\n  }\n\n  bindInteractivity() {\n    this.enterPointWrappers\n      .on(\n        'mouseover',\n        this.groupInteraction && !this.suppressEvents\n          ? (d, i, n) => this.onHoverHandler(d.values ? d.values[0] : d, n[i], true)\n          : null\n      )\n      .on('mouseout', this.groupInteraction && !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n    this.updatePoints\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n    this.updateLabels\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  enterDataLabels() {\n    const opacity = this.dataLabel.visible ? 1 : 0;\n\n    this.enteringLabelGroups\n      .attr('class', 'series-dataLabel-group')\n      .attr('cursor', !this.suppressEvents && this.dataLabel.visible ? this.cursor : null);\n\n    this.enterLabels\n      .attr('filter', this.textFilter)\n      .attr('opacity', d => {\n        return checkInteraction(\n          d,\n          opacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        ) < 1\n          ? 0\n          : Number.EPSILON; // we need this to be epsilon initially to enable auto placement algorithm to run on load\n      })\n      .attr('class', 'scatter-dataLabel entering')\n      .attr('fill', this.textFillHandler)\n      .on('click', !this.suppressEvents && this.dataLabel.visible ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.dataLabel.visible ? (d, i, n) => this.onHoverHandler(d, n[i]) : null\n      )\n      .on('mouseout', !this.suppressEvents && this.dataLabel.visible ? () => this.onMouseOutHandler() : null);\n\n    placeDataLabels({\n      root: this.enterLabels,\n      xScale: this.x,\n      yScale: this.y,\n      sizeScale: this.size,\n      ordinalAccessor: this.xAccessor,\n      valueAccessor: this.yAccessor,\n      groupAccessor: this.groupAccessor,\n      sizeAccessor: this.sizeConfig.sizeAccessor,\n      shapeArea: this.shapeArea,\n      placement: this.dataLabel.placement,\n      chartType: 'scatter',\n      labelOffset: this.dotRadius\n    });\n  }\n\n  updateDataLabels() {\n    this.updateLabels.interrupt();\n\n    const opacity = this.dataLabel.visible ? 1 : 0;\n\n    // this.updatingLabelGroups\n    //   .transition('opacity_g')\n    //   .duration(this.duration)\n    //   .ease(easeCircleIn)\n    //   .call(transitionEndAll, () => {\n    //     this.updatingLabelGroups.classed('entering', false);\n    //   });\n\n    this.updateLabels\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      // .duration((_, i, n) => {\n      //   if (select(n[i]).classed('entering')) {\n      //     select(n[i]).classed('entering', false);\n      //     return this.duration;\n      //   } else {\n      //     return 0;\n      //   }\n      // })\n      .attr('opacity', d => {\n        return checkInteraction(\n          d,\n          opacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        ) < 1\n          ? 0\n          : 1;\n      }) // ensure that entering class is getting removed after enter\n      .call(transitionEndAll, (_, i, n) => {\n        select(n[i]).classed('entering', false);\n      });\n  }\n\n  exitDataLabels() {\n    // this.exitingLabelGroups\n    //   .transition('exit')\n    //   .duration(this.duration)\n    //   .ease(easeCircleIn)\n    //   .remove();\n\n    this.exitingLabelGroups\n      .selectAll('.scatter-dataLabel')\n      .attr('filter', null)\n      .transition('exit')\n      .duration(this.duration / 3)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .call(transitionEndAll, () => {\n        this.exitingLabelGroups.remove();\n      });\n\n    this.exitLabels\n      .attr('filter', null)\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  drawDataLabels() {\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n\n    this.updateLabels.text(d => {\n      return formatDataLabel(d, this.innerLabelAccessor, this.innerLabelFormat);\n    });\n\n    const labelSettingUpdate = this.updateLabels\n      // .each((d, i, n) => {\n      //   const me = select(n[i]);\n      //   const xOffset =\n      //     this.dataLabel.placement === 'left'\n      //       ? -this.dotRadius\n      //       : this.dataLabel.placement === 'right'\n      //       ? this.dotRadius\n      //       : 0;\n      //   const yOffset =\n      //     this.dataLabel.placement === 'top'\n      //       ? -this.dotRadius\n      //       : this.dataLabel.placement === 'bottom'\n      //       ? this.dotRadius\n      //       : 0;\n      //   const xChange = +me.attr('x') !== this.x(d[this.xAccessor]) + xOffset;\n      //   const yChange = +me.attr('y') !== this.y(d[this.yAccessor]) + yOffset;\n      //   if (xChange || yChange) {\n      //     me.attr('filter', null);\n      //     me.classed('moving', true);\n      //   }\n      // })\n      .style('visibility', (_, i, n) =>\n        this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly\n          ? select(n[i]).style('visibility')\n          : null\n      )\n      .attr('data-x', d => this.x(d[this.xAccessor]))\n      .attr('data-y', d => this.y(d[this.yAccessor]))\n      .attr('data-translate-x', this.padding.left + this.margin.left)\n      .attr('data-translate-y', this.padding.top + this.margin.top)\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration);\n\n    this.bitmaps = placeDataLabels({\n      root: labelSettingUpdate,\n      xScale: this.x,\n      yScale: this.y,\n      sizeScale: this.size,\n      ordinalAccessor: this.xAccessor,\n      valueAccessor: this.yAccessor,\n      groupAccessor: this.groupAccessor,\n      sizeAccessor: this.sizeConfig.sizeAccessor,\n      shapeArea: this.shapeArea,\n      placement: this.dataLabel.placement,\n      chartType: 'scatter',\n      labelOffset: this.dotRadius + this.dotRadius * 0.25,\n      avoidCollision: {\n        runOccupancyBitmap: this.dataLabel.visible && this.dataLabel.placement === 'auto',\n        labelSelection: labelSettingUpdate,\n        avoidMarks: [this.updatePoints],\n        validPositions: hideOnly\n          ? ['middle']\n          : ['middle', 'top', 'bottom', 'left', 'right', 'bottom-right', 'bottom-left', 'top-left', 'top-right'],\n        offsets: hideOnly ? [1] : [1, 5, 4, 4, 1, 1, 1, 1, 1],\n        accessors: [this.xAccessor, this.yAccessor, this.groupAccessor, 'key'], // key is created for lines by nesting done in line,\n        size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n        hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly\n      }\n    });\n  }\n\n  updateInteractionState() {\n    // we created an \"opacity\" transition namespace in update's transition\n    // we override it here to instantly display opacity state (below)\n    this.updatePoints.interrupt('opacity');\n    // this.updateLabels.interrupt('opacity');\n\n    // we use this.update and this.labelCurrent from setGlobalSelection here\n    // the lifecycle state does not matter (enter/update/exit)\n    // since interaction state can happen at any time\n    this.updatePoints.attr('stroke', this.handleDotStyle);\n    this.updateLabels.attr('fill', this.textFillHandler);\n    retainAccessFocus({\n      parentGNode: this.rootG.node()\n    });\n\n    setLegendInteractionState({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.groupAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.innerHoverStyle,\n      clickStyle: this.innerClickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  setPointOpacity() {\n    this.updatePoints.interrupt();\n\n    this.updatePoints\n      .transition('opacity')\n      // .duration(this.duration)\n      .duration((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          select(n[i]).classed('entering', false);\n          return this.duration;\n        } else {\n          return 0;\n        }\n      })\n      .ease(easeCircleIn)\n      .attr('opacity', d =>\n        checkInteraction(\n          d,\n          this.dotOpacity,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        )\n      )\n      .call(transitionEndAll, (_, i, n) => {\n        select(n[i]).classed('entering', false);\n      });\n  }\n\n  setLabelOpacity() {\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n    const addCollisionClass = this.dataLabel.placement === 'auto' || hideOnly;\n\n    this.updateLabels\n      .attr('data-use-dx', hideOnly) // need this for direct resolveCollision call\n      .attr('data-use-dy', hideOnly)\n      .attr('opacity', (d, i, n) => {\n        const prevOpacity = +select(n[i]).attr('opacity');\n        const styleVisibility = select(n[i]).style('visibility');\n        const targetOpacity =\n          checkInteraction(\n            d,\n            this.dataLabel.visible ? 1 : 0,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n            ? 0\n            : 1;\n        if (\n          ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n          (this.dataLabel.placement === 'auto' || hideOnly)\n        ) {\n          if (targetOpacity === 1) {\n            select(n[i])\n              .classed('collision-added', true)\n              .style('visibility', null);\n          } else {\n            select(n[i]).classed('collision-removed', true);\n          }\n        }\n        return targetOpacity;\n      });\n\n    if (addCollisionClass) {\n      const labelsAdded = this.updateLabels.filter((_, i, n) => select(n[i]).classed('collision-added'));\n      const labelsRemoved = this.updateLabels.filter((_, i, n) => select(n[i]).classed('collision-removed')); // .transition().duration(0);\n\n      // we can now remove labels as well if we need to...\n      if (labelsRemoved.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsRemoved,\n          avoidMarks: [], // [this.updateDots], // this will link the series label to the last point in the line\n          validPositions: ['middle'],\n          offsets: [1],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n          hideOnly: false,\n          removeOnly: true\n        });\n\n        // remove temporary class now\n        labelsRemoved.classed('collision-removed', false);\n      }\n\n      // we can now add labels as well if we need to...\n      if (labelsAdded.size() > 0) {\n        this.bitmaps = placeDataLabels({\n          root: labelsAdded,\n          xScale: this.x,\n          yScale: this.y,\n          sizeScale: this.size,\n          ordinalAccessor: this.xAccessor,\n          valueAccessor: this.yAccessor,\n          groupAccessor: this.groupAccessor,\n          sizeAccessor: this.sizeConfig.sizeAccessor,\n          shapeArea: this.shapeArea,\n          placement: this.dataLabel.placement,\n          chartType: 'scatter',\n          labelOffset: this.dotRadius + this.dotRadius * 0.25,\n          avoidCollision: {\n            runOccupancyBitmap: this.dataLabel.visible && this.dataLabel.placement === 'auto',\n            bitmaps: this.bitmaps,\n            labelSelection: labelsAdded,\n            avoidMarks: [this.updatePoints],\n            validPositions: hideOnly\n              ? ['middle']\n              : ['middle', 'top', 'bottom', 'left', 'right', 'bottom-right', 'bottom-left', 'top-left', 'top-right'],\n            offsets: hideOnly ? [1] : [1, 5, 4, 4, 1, 1, 1, 1, 1],\n            accessors: [this.xAccessor, this.yAccessor, this.groupAccessor, 'key'], // key is created for lines by nesting done in line,\n            size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n            hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly,\n            suppressMarkDraw: true\n          }\n        });\n\n        // remove temporary class now\n        labelsAdded.classed('collision-added', false);\n      }\n    }\n  }\n\n  drawFitLine() {\n    const fitlineOpacity = this.showFitLine ? this.fitLineStyle.opacity : 0;\n\n    const xSeries = this.data.map(d => parseFloat(d[this.xAccessor]));\n    const ySeries = this.data.map(d => parseFloat(d[this.yAccessor]));\n    const leastSquaresCoeff = leastSquares(xSeries, ySeries);\n\n    const slope = leastSquaresCoeff[0];\n    const intercept = leastSquaresCoeff[1];\n\n    const currentFitLine = this.fitLine.selectAll('line').data(leastSquaresCoeff);\n\n    const enterFitLine = currentFitLine\n      .enter()\n      .append('line')\n      .attr('class', 'trendline')\n      .attr('opacity', 0);\n\n    currentFitLine\n      .merge(enterFitLine)\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('x1', this.x(this.xMin))\n      .attr('y1', this.y(intercept)) // intercept\n      .attr('x2', this.x(this.xMax))\n      .attr('y2', this.y(this.xMax * slope + intercept)) // this.xMax * slope + intercept\n      .style('stroke', visaColors[this.fitLineStyle.color] || this.fitLineStyle.color)\n      .style('stroke-width', this.fitLineStyle.strokeWidth)\n      .attr('stroke-dasharray', this.fitLineStyle.dashed ? this.fitLineStyle.dashed : '')\n      .attr('opacity', fitlineOpacity);\n\n    currentFitLine.exit().remove();\n  }\n\n  drawReferenceLines() {\n    setReferenceLine({\n      groupName: 'scatter',\n      root: this.referencesG,\n      referenceLines: this.referenceLines,\n      referenceStyle: this.referenceStyle,\n      innerPaddedWidth: this.innerPaddedWidth,\n      innerPaddedHeight: this.innerPaddedHeight,\n      duration: this.duration,\n      x: this.x,\n      y: this.y,\n      unitTest: this.unitTest\n    });\n  }\n\n  drawAnnotations() {\n    annotate({\n      source: this.rootG.node(),\n      data: this.annotations,\n      xScale: this.x,\n      xAccessor: this.xAccessor,\n      yScale: this.y,\n      yAccessor: this.yAccessor,\n      width: this.width,\n      height: this.height,\n      padding: this.padding,\n      margin: this.margin,\n      bitmaps: this.bitmaps\n    });\n  }\n\n  setAnnotationAccessibility() {\n    setAccessAnnotation(this.getLanguageString(), this.scatterChartEl, this.annotations, this.referenceLines);\n  }\n\n  // new accessibility functions added here\n  setTagLevels() {\n    this.topLevel = findTagLevel(this.highestHeadingLevel);\n    this.bottomLevel = findTagLevel(this.highestHeadingLevel, 3);\n  }\n\n  setChartDescriptionWrapper() {\n    initializeDescriptionRoot({\n      language: this.getLanguageString(),\n      rootEle: this.scatterChartEl,\n      title: this.accessibility.title || this.mainTitle,\n      chartTag: 'scatter-plot',\n      uniqueID: this.chartID,\n      highestHeadingLevel: this.highestHeadingLevel,\n      redraw: this.shouldRedrawWrapper,\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      hideDataTable: this.accessibility.hideDataTableButton\n    });\n    this.shouldRedrawWrapper = false;\n  }\n\n  setParentSVGAccessibility() {\n    setAccessibilityController({\n      chartTag: 'scatter-plot',\n      language: this.getLanguageString(),\n      node: this.svg.node(),\n      title: this.accessibility.title || this.mainTitle,\n      description: this.subTitle,\n      uniqueID: this.chartID,\n      geomType: 'point',\n      includeKeyNames: this.accessibility.includeDataKeyNames,\n      dataKeys: this.innerScopeDataKeys(),\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.groupAccessor,\n      groupName: 'scatter-group',\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled\n      // groupKeys: [],\n      // nested: '',\n      // recursive: true\n    });\n  }\n\n  setGeometryAccessibilityAttributes() {\n    this.updatePoints.each((_d, i, n) => {\n      initializeElementAccess(n[i]);\n    });\n  }\n\n  setGeometryAriaLabels() {\n    const keys = this.innerScopeDataKeys();\n    this.updatePoints.each((_d, i, n) => {\n      setElementFocusHandler({\n        chartTag: 'scatter-plot',\n        language: this.getLanguageString(),\n        node: n[i],\n        geomType: 'point',\n        includeKeyNames: this.accessibility.includeDataKeyNames,\n        dataKeys: keys,\n        dataKeyNames: this.dataKeyNames,\n        groupName: 'scatter-group',\n        uniqueID: this.chartID,\n        disableKeyNav:\n          this.suppressEvents &&\n          this.accessibility.elementsAreInterface === false &&\n          this.accessibility.keyboardNavConfig &&\n          this.accessibility.keyboardNavConfig.disabled\n      });\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setGroupAccessibilityID() {\n    this.updatePointWrappers.each((_, i, n) => {\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setChartAccessibilityTitle() {\n    setAccessTitle(this.getLanguageString(), this.scatterChartEl, this.accessibility.title || this.mainTitle);\n  }\n\n  setChartAccessibilitySubtitle() {\n    setAccessSubtitle(this.getLanguageString(), this.scatterChartEl, this.subTitle);\n  }\n\n  setChartAccessibilityLongDescription() {\n    setAccessLongDescription(this.getLanguageString(), this.scatterChartEl, this.accessibility.longDescription);\n  }\n\n  setChartAccessibilityExecutiveSummary() {\n    setAccessExecutiveSummary(this.getLanguageString(), this.scatterChartEl, this.accessibility.executiveSummary);\n  }\n\n  setChartAccessibilityPurpose() {\n    setAccessPurpose(this.getLanguageString(), this.scatterChartEl, this.accessibility.purpose);\n  }\n\n  setChartAccessibilityContext() {\n    setAccessContext(this.getLanguageString(), this.scatterChartEl, this.accessibility.contextExplanation);\n  }\n\n  setChartAccessibilityStatisticalNotes() {\n    setAccessStatistics(this.getLanguageString(), this.scatterChartEl, this.accessibility.statisticalNotes);\n  }\n\n  setChartCountAccessibility() {\n    setAccessChartCounts({\n      rootEle: this.scatterChartEl,\n      parentGNode: this.dotG.node(), // pass the wrapper to <g> or geometries here, should be single node selection\n      chartTag: 'scatter-plot',\n      geomType: 'point',\n      groupName: 'scatter group'\n      // recursive: true\n    });\n  }\n\n  setChartAccessibilityStructureNotes() {\n    setAccessStructure(this.getLanguageString(), this.scatterChartEl, this.accessibility.structureNotes);\n  }\n  // new accessibility stuff ends here\n\n  drawLegendElements() {\n    // if we have default series access and it is not in the data don't show legend\n    const noGroupAccessor =\n      this.groupAccessor === ScatterPlotDefaultValues.groupAccessor &&\n      this.nest &&\n      this.nest.length === 1 &&\n      this.nest[0].key === 'undefined';\n\n    drawLegend({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      width: this.innerPaddedWidth,\n      height: this.margin.top + 20,\n      colorArr: this.rawColors,\n      baseColorArr: this.colorArr,\n      hideStrokes: this.accessibility.hideStrokes,\n      margin: this.margin,\n      padding: this.padding,\n      duration: this.duration,\n      type: 'scatter',\n      fontSize: 16,\n      data: this.nest,\n      label: this.legend.labels,\n      symbol: this.dotSymbols,\n      hide: !((this.legend.visible && !noGroupAccessor) || !this.legend || !this.groupAccessor),\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.groupAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.innerHoverStyle,\n      clickStyle: this.innerClickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  onChangeHandler() {\n    if (this.accessibility && typeof this.accessibility.onChangeFunc === 'function') {\n      const d = {\n        updated: this.updated,\n        added: this.enterSize,\n        removed: this.exitSize\n      };\n      this.accessibility.onChangeFunc(d);\n    }\n    this.updated = false;\n    this.enterSize = 0;\n    this.exitSize = 0;\n  }\n\n  onClickHandler(d, n) {\n    this.clickEvent.emit({ data: d, target: n });\n  }\n\n  onHoverHandler(d, n, isLegend?) {\n    overrideTitleTooltip(this.chartID, true);\n    this.hoverEvent.emit({ data: d, target: n });\n    if (this.showTooltip && !isLegend) {\n      this.eventsTooltip({ data: d, evt: event, isToShow: true });\n    }\n  }\n\n  onMouseOutHandler() {\n    overrideTitleTooltip(this.chartID, false);\n    this.mouseOutEvent.emit();\n    if (this.showTooltip) {\n      this.eventsTooltip({ isToShow: false });\n    }\n  }\n\n  // set initial style (instead of copying css class across the lib)\n  setTooltipInitialStyle() {\n    initTooltipStyle(this.tooltipG);\n  }\n\n  // tooltip\n  eventsTooltip({ data, evt, isToShow }: { data?: any; evt?: any; isToShow: boolean }) {\n    drawTooltip({\n      root: this.tooltipG,\n      data,\n      event: evt,\n      isToShow,\n      tooltipLabel: this.tooltipLabel,\n      xAxis: this.xAxis,\n      yAxis: this.yAxis,\n      dataLabel: this.dataLabel,\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.groupAccessor,\n      sizeConfig: this.sizeConfig,\n      xAccessor: this.xAccessor,\n      yAccessor: this.yAccessor,\n      chartType: 'scatter'\n    });\n  }\n\n  render() {\n    this.drawStartEvent.emit({ chartID: this.chartID });\n    // everything between this comment and the third should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n    this.init();\n    if (this.shouldSetLocalizationConfig) {\n      this.setLocalizationConfig();\n      this.shouldSetLocalizationConfig = false;\n    }\n    if (this.shouldSetTagLevels) {\n      this.setTagLevels();\n      this.shouldSetTagLevels = false;\n    }\n    if (this.shouldUpdateData) {\n      this.prepareData();\n      this.shouldUpdateData = false;\n    }\n    if (this.shouldUpdateLayout) {\n      this.setLayoutData();\n      this.shouldUpdateLayout = false;\n    }\n    if (this.shouldValidateClickStyle) {\n      this.validateClickStyle();\n      this.shouldValidateClickStyle = false;\n    }\n    if (this.shouldValidateHoverStyle) {\n      this.validateHoverStyle();\n      this.shouldValidateHoverStyle = false;\n    }\n    if (this.shouldSetColors) {\n      this.setColors();\n      this.shouldSetColors = false;\n    }\n    if (this.shouldUpdateScales) {\n      this.prepareScales();\n      this.shouldUpdateScales = false;\n    }\n    if (this.shouldValidateInteractionKeys) {\n      this.validateInteractionKeys();\n      this.shouldValidateInteractionKeys = false;\n    }\n    if (this.shouldValidateDataLabelAccessor) {\n      this.validateDataLabelAccessor();\n      this.shouldValidateDataLabelAccessor = false;\n    }\n    if (this.shouldUpdateTableData) {\n      this.setTableData();\n      this.shouldUpdateTableData = false;\n    }\n    if (this.shouldValidate) {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.shouldValidate = false;\n    }\n    // Everything between this comment and the first should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n\n    return (\n      <div class=\"o-layout\">\n        <div class=\"o-layout--chart\">\n          <this.topLevel class=\"scatter-main-title vcl-main-title\">{this.mainTitle}</this.topLevel>\n          <this.bottomLevel class=\"visa-ui-text--instructions scatter-sub-title vcl-sub-title\" />\n          <div class=\"scatter-legend vcl-legend\" style={{ display: this.legend.visible ? 'block' : 'none' }} />\n          <keyboard-instructions\n            uniqueID={this.chartID}\n            geomType={'point'}\n            groupName={'scatter group'} // taken from initializeDescriptionRoot, on bar this should be \"bar group\", stacked bar is \"stack\", and clustered is \"cluster\"\n            language={this.getLanguageString()}\n            chartTag={'scatter-plot'}\n            width={this.width - (this.margin ? this.margin.right || 0 : 0)}\n            isInteractive={this.accessibility.elementsAreInterface}\n            hasCousinNavigation\n            disabled={\n              this.suppressEvents &&\n              this.accessibility.elementsAreInterface === false &&\n              this.accessibility.keyboardNavConfig &&\n              this.accessibility.keyboardNavConfig.disabled\n            } // the chart is \"simple\"\n          />\n          <div class=\"visa-viz-d3-scatter-container\" />\n          <div class=\"scatter-tooltip vcl-tooltip\" style={{ display: this.showTooltip ? 'block' : 'none' }} />\n          <data-table\n            uniqueID={this.chartID}\n            isCompact\n            language={this.getLanguageString()}\n            tableColumns={this.tableColumns}\n            data={this.tableData}\n            dataKeyNames={this.dataKeyNames}\n            padding={this.padding}\n            margin={this.margin}\n            hideDataTable={this.accessibility.hideDataTableButton}\n            unitTest={this.unitTest}\n          />\n        </div>\n        {/* <canvas id=\"bitmap-render\" /> */}\n      </div>\n    );\n  }\n\n  private init() {\n    const keys = Object.keys(ScatterPlotDefaultValues);\n    let i = 0;\n    const exceptions = {\n      showFitLine: {\n        exception: false\n      },\n      showTooltip: {\n        exception: false\n      },\n      mainTitle: {\n        exception: ''\n      },\n      subTitle: {\n        exception: ''\n      },\n      showBaselineX: {\n        exception: false\n      },\n      groupAccessor: {\n        exception: ''\n      },\n      hoverOpacity: {\n        exception: 0\n      }\n    };\n    for (i = 0; i < keys.length; i++) {\n      const exception = !exceptions[keys[i]] ? false : this[keys[i]] === exceptions[keys[i]].exception;\n      this[keys[i]] = this[keys[i]] || exception ? this[keys[i]] : ScatterPlotDefaultValues[keys[i]];\n    }\n  }\n}\n\n// incorporate OSS licenses into build\nwindow['VisaChartsLibOSSLicenses'] = getLicenses(); // tslint:disable-line no-string-literal\n"],"mappings":"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","ignoreList":[]}