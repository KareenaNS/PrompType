{"version":3,"names":["propDefaultValues","Utils","HeatMapDefaultValues","mainTitle","subTitle","text","height","width","margin","top","bottom","right","left","padding","localization","xAccessor","yAccessor","valueAccessor","shape","hideAxisPath","showBaselineFalse","accessibility","animationConfig","highestHeadingLevel","xAxis","yAxis","wrapLabel","strokeWidth","strokeWidth2","colorPalette","colorPaletteSequential","colorSteps","colorSteps5","hoverStyle","clickStyle","cursor","hoverOpacity","dataLabel","legend","tooltipLabel","showTooltip","suppressEvents","referenceLines","annotations","clickHighlight","heatMapCss","HeatMapStyle0","getGlobalInstances","configLocalization","getActiveLanguageString","calculateLuminance","prepareStrokeColorsFromScheme","verifyTextHasSpace","checkAttributeTransitions","createTextStrokeFilter","drawHoverStrokes","removeHoverStrokes","buildStrokes","convertColorsToTextures","findTagLevel","prepareRenderChange","initializeDescriptionRoot","initializeElementAccess","setElementFocusHandler","setElementAccessID","setAccessibilityController","hideNonessentialGroups","setAccessTitle","setAccessSubtitle","setAccessLongDescription","setAccessExecutiveSummary","setAccessPurpose","setAccessContext","setAccessStatistics","setAccessChartCounts","setAccessXAxis","setAccessYAxis","setAccessStructure","setAccessAnnotation","retainAccessFocus","checkAccessFocus","setElementInteractionAccessState","setAccessibilityDescriptionWidth","autoTextColor","annotate","chartAccessors","checkInteraction","checkClicked","checkHovered","convertVisaColor","drawAxis","drawLegend","drawTooltip","formatStats","formatDate","getColors","getLicenses","getPadding","getScopedData","initTooltipStyle","overrideTitleTooltip","placeDataLabels","scopeDataKeys","transitionEndAll","validateAccessibilityProps","validateLocalizationProps","setSubTitle","HeatMap","this","shouldValidateAccessibility","shouldValidateLocalization","nest","datakeys","updated","shouldValidate","shouldUpdateData","shouldSetDimensions","shouldUpdateTableData","shouldUpdateScales","shouldResetRoot","shouldSetColors","shouldSetSubTitle","shouldValidateInteractionKeys","shouldFormatClickHighlight","shouldFormatHoverHighlight","shouldUpdateAnnotations","shouldUpdateXAxis","shouldUpdateYAxis","shouldSetGlobalSelections","shouldSetTestingAttributes","shouldEnterUpdateExit","shouldUpdateGeometries","shouldSetSelectionClass","shouldDrawInteractionState","shouldUpdateLegend","shouldUpdateCursor","shouldBindInteractivity","shouldUpdateLabels","shouldSetLabelOpacity","shouldSwapXAxis","shouldSwapYAxis","shouldUpdateDescriptionWrapper","shouldSetChartAccessibilityTitle","shouldSetChartAccessibilitySubtitle","shouldSetChartAccessibilityLongDescription","shouldSetChartAccessibilityExecutiveSummary","shouldSetChartAccessibilityStatisticalNotes","shouldSetChartAccessibilityStructureNotes","shouldSetParentSVGAccessibility","shouldSetGeometryAccessibilityAttributes","shouldSetGeometryAriaLabels","shouldSetGroupAccessibilityLabel","shouldSetChartAccessibilityPurpose","shouldSetChartAccessibilityContext","shouldRedrawWrapper","shouldSetTagLevels","shouldSetChartAccessibilityCount","shouldSetYAxisAccessibility","shouldSetXAxisAccessibility","shouldSetAnnotationAccessibility","shouldSetTextures","shouldSetStrokes","shouldSetLocalizationConfig","strokes","topLevel","bottomLevel","textTreatmentHandler","d","i","n","bgColor","_this","hideTextures","showExperimentalTextures","fillColors","rawHeat","color","me","select","attr","classed","root","svg","node","id","chartID","prototype","dataWatcher","_newData","_oldData","idWatcher","newID","_oldID","console","error","headingWatcher","_newVal","_oldVal","titleWatcher","subtitleWatcher","layoutWatcher","xAccessorWatcher","yAccessorWatcher","groupAccessorWatcher","interactionKeys","length","xKeyOrderWatcher","yKeyOrderWatcher","xAxisWatcher","newFormatVal","format","oldFormatVal","newPlacementVal","placement","oldPlacementVal","yAxisWatcher","wrapLabelWatcher","hideAxisPathWatcher","colorsWatcher","hoverStyleWatcher","clickStyleWatcher","shapeWatcher","cursorWatcher","strokeWidthWatcher","hoverOpacityWatcher","labelWatcher","newVisibleVal","visible","oldVisibleVal","showTooltipWatcher","tooltipLabelWatcher","legendWatcher","suppressWatcher","annotationsWatcher","accessibilityWatcher","newTitle","title","oldTitle","newExecutiveSummary","executiveSummary","oldExecutiveSummary","newPurpose","purpose","oldPurpose","newLongDescription","longDescription","oldLongDescription","newContext","contextExplanation","oldContext","newStatisticalNotes","statisticalNotes","oldStatisticalNotes","newStructureNotes","structureNotes","oldStructureNotes","newincludeDataKeyNames","includeDataKeyNames","oldincludeDataKeyNames","newElementDescriptionAccessor","elementDescriptionAccessor","oldElementDescriptionAccessor","newTextures","oldTextures","newExTextures","oldExTextures","newSmallValue","showSmallLabels","oldSmallValue","newStrokes","hideStrokes","oldStrokes","newKeyNav","keyboardNavConfig","disabled","oldKeyNav","newInterface","elementsAreInterface","oldInterface","localizationWatcher","newLanguage","language","oldLanguage","newNumeralLocale","numeralLocale","oldNumeralLocale","valueOverrideWatcher","clickWatcher","hoverWatcher","interactionWatcher","dataKeyNamesWatcher","unitTestWatcher","componentWillLoad","uniqueID","uuid","initialLoadEvent","emit","Promise","resolve","duration","defaults","heatMapEl","setLocalizationConfig","setTagLevels","prepareData","setDimensions","setColors","prepareScales","validateInteractionKeys","setTableData","shouldValidateAccessibilityProps","shouldValidateLocalizationProps","formatClickHighlight","formatHoverHighlight","componentWillUpdate","componentDidLoad","renderRootElements","setTooltipInitialStyle","setChartDescriptionWrapper","setChartAccessibilityTitle","setChartAccessibilitySubtitle","setChartAccessibilityLongDescription","setChartAccessibilityExecutiveSummary","setChartAccessibilityPurpose","setChartAccessibilityContext","setChartAccessibilityStatisticalNotes","setChartAccessibilityStructureNotes","setParentSVGAccessibility","reSetRoot","setTextures","setStrokes","setSubTitleElements","setGlobalSelections","setTestingAttributes","enterGeometries","updateGeometries","exitGeometries","enterDataLabels","updateDataLabels","exitDataLabels","drawGeometries","setChartCountAccessibility","setGeometryAccessibilityAttributes","setGeometryAriaLabels","drawDataLabels","drawLegendElements","setSelectedClass","updateInteractionState","bindInteractivity","drawAnnotations","setAnnotationAccessibility","drawXAxis","setXAxisAccessibility","drawYAxis","setYAxisAccessibility","map","setGroupAccessibilityID","onChangeHandler","then","initialLoadEndEvent","componentDidUpdate","setLabelOpacity","updateCursor","drawEndEvent","windowInstances","languageString","i18Next","languageObject","getResourceBundle","numeralObject","numeral","localeData","skipValidation","Object","assign","disableValidation","data","context","onClickEvent","undefined","clickEvent","Date","date","offsetTimezone","hoverHighlight","getLanguageString","innerHeight","innerWidth","innerPaddedHeight","innerPaddedWidth","includes","checkInteractionKeys_1","k","newKey","push","innerInteractionKeys","minMapValue","minValueOverride","min","preppedData","maxMapValue","maxValueOverride","max","x","scaleBand","domain","xKeyOrder","range","bandwidth","y","yKeyOrder","heat","scaleQuantize","strokeColors","backgroundColors","half","Math","ceil","preparedColors","isDiverging","isDark","forEach","colorsMatchingScheme","fillLuminance","fillColor","strokeLuminance","textureColor","darkerColor","lighterColor","updateCheck","subTitleG","colors","scheme","limit","colorArr","textures","rootSVG","disableTransitions","strokeOverride","keys","tableData","tableColumns","interpolating","oldXDomain","oldXRange","oldYDomain","oldYRange","newRow","parseFloat","key","entries","changeSvg","selection","namespace","easing","easeCircleIn","changeRoot","concat","changeRootG","rootG","swapping","axisLabel","label","dataKeyNames","axisScale","tickInterval","hide","hidePath","rootEle","hasXAxis","xAxisLabel","hasYAxis","yAxisLabel","append","labelG","legendG","tooltipG","xAxisElement","selectAll","dataBoundToGroups","enterRowWrappers","enter","exitRowWrappers","exit","updateRowWrappers","merge","dataBoundToGeometries","values","update","exitSize","size","enterSize","dataBoundToLabelGroups","enteringLabelGroups","exitingLabelGroups","updatingLabelGroups","dataBoundToLabels","enterLabels","exitLabels","updateLabels","unitTest","interrupt","each","_","_d","on","onClickHandler","onHoverHandler","onMouseOutHandler","shift","order","transition","ease","self","call","focusDidExist","remove","parentGNode","updateTransition","geometryIsUpdating","numeric","newValue","transitionEndEvent","clicked","hovered","baseColor","state","inputElement","fill","processLabelOpacity","isATransition","opacity","dimensions","parseText","labelAccessor","hasRoom","fontSize","selected","selectable","xScale","yScale","ordinalAccessor","chartType","delay","placeLabels","type","baseColorArr","scale","steps","labels","source","chartTag","redraw","disableKeyNav","hideDataTable","hideDataTableButton","description","geomType","includeKeyNames","dataKeys","groupAccessor","groupName","onChangeFunc","added","removed","target","hoverEvent","eventsTooltip","evt","event","isToShow","mouseOutEvent","_a","render","drawStartEvent","init","h","class","style","display","isInteractive","hasCousinNavigation","isCompact","exceptions","exception","window"],"sources":["src/components/heat-map/heat-map-default-values.ts","src/components/heat-map/heat-map.scss?tag=heat-map","src/components/heat-map/heat-map.tsx"],"sourcesContent":["/**\n * Copyright (c) 2020, 2021, 2022, 2023 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport Utils from '@visa/visa-charts-utils';\n\nconst { propDefaultValues } = Utils;\n\nexport class HeatMapDefaultValues {\n  static readonly mainTitle = 'Heat Map Title';\n  static readonly subTitle = propDefaultValues.subTitle.text;\n  static readonly height = 250;\n  static readonly width = 500;\n  static readonly margin = {\n    top: 250 * 0.01,\n    bottom: 250 * 0.01,\n    right: 500 * 0.01,\n    left: 500 * 0.01\n  };\n  static readonly padding = {\n    top: 20,\n    bottom: 30,\n    right: 60,\n    left: 80\n  };\n\n  static readonly localization = propDefaultValues.localization;\n\n  static readonly xAccessor = 'date';\n  static readonly yAccessor = 'category';\n  static readonly valueAccessor = 'value';\n\n  static readonly shape = 'rect';\n  static readonly hideAxisPath = propDefaultValues.showBaselineFalse;\n\n  static readonly accessibility = propDefaultValues.accessibility;\n  static readonly animationConfig = propDefaultValues.animationConfig;\n  static readonly highestHeadingLevel = propDefaultValues.highestHeadingLevel;\n\n  static readonly xAxis = propDefaultValues.xAxis;\n  static readonly yAxis = propDefaultValues.yAxis;\n  static readonly wrapLabel = propDefaultValues.wrapLabel;\n  static readonly strokeWidth = propDefaultValues.strokeWidth2;\n\n  static readonly colorPalette = propDefaultValues.colorPaletteSequential;\n  static readonly colorSteps = propDefaultValues.colorSteps5;\n\n  static readonly hoverStyle = propDefaultValues.hoverStyle;\n  static readonly clickStyle = propDefaultValues.clickStyle;\n\n  static readonly cursor = propDefaultValues.cursor;\n  static readonly hoverOpacity = propDefaultValues.hoverOpacity;\n\n  static readonly dataLabel = propDefaultValues.dataLabel;\n  static readonly dataKeyNames;\n  static readonly legend = propDefaultValues.legend;\n  static readonly tooltipLabel = propDefaultValues.tooltipLabel;\n\n  static readonly showTooltip = propDefaultValues.showTooltip;\n  static readonly suppressEvents = propDefaultValues.suppressEvents;\n  static readonly referenceLines = propDefaultValues.referenceLines;\n  static readonly annotations = propDefaultValues.annotations;\n\n  static readonly hoverHighlight;\n  static readonly clickHighlight = propDefaultValues.clickHighlight;\n}\n","/**\n * Copyright (c) 2020, 2021, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nheat-map {\n  .annotations {\n    pointer-events: none;\n    .handle {\n      pointer-events: all;\n    }\n  }\n\n  .screen-reader-info {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n\n  .data-table-link {\n    color: #767676;\n    text-decoration: none;\n    font-size: 12px;\n    margin-left: 5%;\n  }\n\n  .hidden {\n    display: none;\n  }\n\n  cursor: default;\n  .axis {\n    font-size: 12px;\n    text {\n      //font: 0.65rem;\n      fill: #767676;\n    }\n\n    &-label {\n      text-anchor: middle;\n      font: 1rem sans-serif;\n    }\n    path {\n      stroke: #767676;\n    }\n    .hidden {\n      visibility: hidden;\n    }\n  }\n  .heat-map-legend {\n    font-size: 1em;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n\n    .legend {\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n    }\n  }\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport { Component, Element, Prop, Watch, Event, EventEmitter, h } from '@stencil/core';\nimport { select, event } from 'd3-selection';\nimport { min, max } from 'd3-array';\nimport { scaleBand, scaleQuantize } from 'd3-scale';\nimport { easeCircleIn } from 'd3-ease';\nimport { nest } from 'd3-collection';\nimport {\n  IBoxModelType,\n  ILocalizationType,\n  IHoverStyleType,\n  IClickStyleType,\n  IAxisType,\n  IDataLabelType,\n  ITooltipLabelType,\n  IAccessibilityType,\n  IAnimationConfig,\n  ILegendType,\n  ISubTitleType\n} from '@visa/charts-types';\nimport { HeatMapDefaultValues } from './heat-map-default-values';\nimport 'd3-transition';\nimport { v4 as uuid } from 'uuid';\nimport Utils from '@visa/visa-charts-utils';\n\nconst {\n  getGlobalInstances,\n  configLocalization,\n  getActiveLanguageString,\n  calculateLuminance,\n  prepareStrokeColorsFromScheme,\n  verifyTextHasSpace,\n  checkAttributeTransitions,\n  createTextStrokeFilter,\n  drawHoverStrokes,\n  removeHoverStrokes,\n  buildStrokes,\n  convertColorsToTextures,\n  findTagLevel,\n  prepareRenderChange,\n  initializeDescriptionRoot,\n  initializeElementAccess,\n  setElementFocusHandler,\n  setElementAccessID,\n  setAccessibilityController,\n  hideNonessentialGroups,\n  setAccessTitle,\n  setAccessSubtitle,\n  setAccessLongDescription,\n  setAccessExecutiveSummary,\n  setAccessPurpose,\n  setAccessContext,\n  setAccessStatistics,\n  setAccessChartCounts,\n  setAccessXAxis,\n  setAccessYAxis,\n  setAccessStructure,\n  setAccessAnnotation,\n  retainAccessFocus,\n  checkAccessFocus,\n  setElementInteractionAccessState,\n  setAccessibilityDescriptionWidth,\n  autoTextColor,\n  annotate,\n  chartAccessors,\n  checkInteraction,\n  checkClicked,\n  checkHovered,\n  convertVisaColor,\n  drawAxis,\n  drawLegend,\n  drawTooltip,\n  formatStats,\n  formatDate,\n  getColors,\n  getLicenses,\n  getPadding,\n  getScopedData,\n  initTooltipStyle,\n  overrideTitleTooltip,\n  placeDataLabels,\n  scopeDataKeys,\n  transitionEndAll,\n  validateAccessibilityProps,\n  validateLocalizationProps,\n  setSubTitle\n} = Utils;\n\n@Component({\n  tag: 'heat-map',\n  styleUrl: 'heat-map.scss'\n})\nexport class HeatMap {\n  @Event() clickEvent: EventEmitter;\n  @Event() hoverEvent: EventEmitter;\n  @Event() mouseOutEvent: EventEmitter;\n  @Event() initialLoadEvent: EventEmitter;\n  @Event() initialLoadEndEvent: EventEmitter;\n  @Event() drawStartEvent: EventEmitter;\n  @Event() drawEndEvent: EventEmitter;\n  @Event() transitionEndEvent: EventEmitter;\n\n  // Chart Attributes (1/7)\n  @Prop({ mutable: true }) localization: ILocalizationType = HeatMapDefaultValues.localization;\n  @Prop({ mutable: true }) mainTitle: string = HeatMapDefaultValues.mainTitle;\n  @Prop({ mutable: true }) subTitle: string | ISubTitleType = HeatMapDefaultValues.subTitle;\n  @Prop({ mutable: true }) height: number = HeatMapDefaultValues.height;\n  @Prop({ mutable: true }) width: number = HeatMapDefaultValues.width;\n  @Prop({ mutable: true }) highestHeadingLevel: string | number = HeatMapDefaultValues.highestHeadingLevel;\n  @Prop({ mutable: true }) margin: IBoxModelType = HeatMapDefaultValues.margin;\n  @Prop({ mutable: true }) padding: IBoxModelType = HeatMapDefaultValues.padding;\n\n  // Data (2/7)\n  @Prop() data: object[];\n  @Prop() uniqueID: string;\n  @Prop({ mutable: true }) xAccessor: string = HeatMapDefaultValues.xAccessor;\n  @Prop({ mutable: true }) yAccessor: string = HeatMapDefaultValues.yAccessor;\n  @Prop({ mutable: true }) valueAccessor: string = HeatMapDefaultValues.valueAccessor;\n  @Prop({ mutable: true }) xKeyOrder: string[];\n  @Prop({ mutable: true }) yKeyOrder: string[];\n\n  // Axis (3/7)\n  @Prop({ mutable: true }) xAxis: IAxisType = HeatMapDefaultValues.xAxis;\n  @Prop({ mutable: true }) yAxis: IAxisType = HeatMapDefaultValues.yAxis;\n  @Prop({ mutable: true }) wrapLabel: boolean = HeatMapDefaultValues.wrapLabel;\n  @Prop({ mutable: true }) hideAxisPath: boolean = HeatMapDefaultValues.hideAxisPath;\n\n  // Color & Shape (4/7)\n  @Prop({ mutable: true }) colorPalette: string = HeatMapDefaultValues.colorPalette;\n  @Prop({ mutable: true }) colors: string[];\n  @Prop({ mutable: true }) colorSteps: number = HeatMapDefaultValues.colorSteps;\n  @Prop({ mutable: true }) hoverStyle: IHoverStyleType = HeatMapDefaultValues.hoverStyle;\n  @Prop({ mutable: true }) clickStyle: IClickStyleType = HeatMapDefaultValues.clickStyle;\n  @Prop({ mutable: true }) cursor: string = HeatMapDefaultValues.cursor;\n  @Prop({ mutable: true }) shape: string = HeatMapDefaultValues.shape;\n  @Prop({ mutable: true }) hoverOpacity: number = HeatMapDefaultValues.hoverOpacity;\n  @Prop({ mutable: true }) animationConfig: IAnimationConfig = HeatMapDefaultValues.animationConfig;\n  @Prop({ mutable: true }) strokeWidth: number = HeatMapDefaultValues.strokeWidth;\n\n  // Data label (5/7)\n  @Prop({ mutable: true }) dataLabel: IDataLabelType = HeatMapDefaultValues.dataLabel;\n  @Prop({ mutable: true }) dataKeyNames: object;\n  @Prop({ mutable: true }) showTooltip: boolean = HeatMapDefaultValues.showTooltip;\n  @Prop({ mutable: true }) tooltipLabel: ITooltipLabelType = HeatMapDefaultValues.tooltipLabel;\n  @Prop({ mutable: true }) accessibility: IAccessibilityType = HeatMapDefaultValues.accessibility;\n  @Prop({ mutable: true }) legend: ILegendType = HeatMapDefaultValues.legend;\n  @Prop({ mutable: true }) annotations: object[] = HeatMapDefaultValues.annotations;\n\n  // Calculation (6/7)\n  @Prop({ mutable: true }) maxValueOverride: number;\n  @Prop({ mutable: true }) minValueOverride: number;\n\n  // Interactivity (7/7)\n  @Prop({ mutable: true }) hoverHighlight: object;\n  @Prop({ mutable: true }) clickHighlight: object[] = HeatMapDefaultValues.clickHighlight;\n  @Prop({ mutable: true }) interactionKeys: string[];\n  @Prop({ mutable: true }) suppressEvents: boolean = HeatMapDefaultValues.suppressEvents;\n\n  // Testing (8/7)\n  @Prop() unitTest: boolean = false;\n  //  @Prop() debugMode: boolean = false;\n\n  // Element\n  @Element()\n  heatMapEl: HTMLElement;\n  shouldValidateAccessibility: boolean = true;\n  shouldValidateLocalization: boolean = true;\n  svg: any;\n  root: any;\n  rootG: any;\n  tooltipG: any;\n  subTitleG: any;\n  map: any;\n  row: any;\n  labelG: any;\n  labels: any;\n  defaults: boolean;\n  current: any;\n  enter: any;\n  exit: any;\n  update: any;\n  enterRowWrappers: any;\n  updateRowWrappers: any;\n  exitRowWrappers: any;\n  enteringLabelGroups: any;\n  exitingLabelGroups: any;\n  updatingLabelGroups: any;\n  enterLabels: any;\n  updateLabels: any;\n  exitLabels: any;\n  heat: any;\n  rawHeat: any;\n  fillColors: any;\n  strokeColors: any;\n  y: any;\n  x: any;\n  innerHeight: number;\n  innerWidth: number;\n  innerPaddedHeight: number;\n  innerPaddedWidth: number;\n  nest: any = [];\n  datakeys: any = [];\n  colorArr: any;\n  preparedColors: any;\n  duration: number;\n  legendG: any;\n  preppedData: any;\n  interpolating: any;\n  tableData: any;\n  tableColumns: any;\n  updateCheck: any;\n  // these are added for accessibility\n  updated: boolean = true;\n  enterSize: number;\n  exitSize: number;\n  chartID: string;\n  xAxisElement: any;\n  innerInteractionKeys: any;\n  shouldValidate: boolean = false;\n  shouldUpdateData: boolean = false;\n  shouldSetDimensions: boolean = false;\n  shouldUpdateTableData: boolean = false;\n  shouldUpdateScales: boolean = false;\n  shouldResetRoot: boolean = false;\n  shouldSetColors: boolean = false;\n  shouldSetSubTitle: boolean = false;\n  shouldValidateInteractionKeys: boolean = false;\n  shouldFormatClickHighlight: boolean = false;\n  shouldFormatHoverHighlight: boolean = false;\n  shouldUpdateAnnotations: boolean = false;\n  shouldUpdateXAxis: boolean = false;\n  shouldUpdateYAxis: boolean = false;\n  shouldSetGlobalSelections: boolean = false;\n  shouldSetTestingAttributes: boolean = false;\n  shouldEnterUpdateExit: boolean = false;\n  shouldUpdateGeometries: boolean = false;\n  shouldSetSelectionClass: boolean = false;\n  shouldDrawInteractionState: boolean = false;\n  shouldUpdateLegend: boolean = false;\n  shouldUpdateCursor: boolean = false;\n  shouldBindInteractivity: boolean = false;\n  shouldUpdateLabels: boolean = false;\n  shouldSetLabelOpacity: boolean = false;\n  shouldSwapXAxis: boolean = false;\n  shouldSwapYAxis: boolean = false;\n  shouldUpdateDescriptionWrapper: boolean = false;\n  shouldSetChartAccessibilityTitle: boolean = false;\n  shouldSetChartAccessibilitySubtitle: boolean = false;\n  shouldSetChartAccessibilityLongDescription: boolean = false;\n  shouldSetChartAccessibilityExecutiveSummary: boolean = false;\n  shouldSetChartAccessibilityStatisticalNotes: boolean = false;\n  shouldSetChartAccessibilityStructureNotes: boolean = false;\n  shouldSetParentSVGAccessibility: boolean = false;\n  shouldSetGeometryAccessibilityAttributes: boolean = false;\n  shouldSetGeometryAriaLabels: boolean = false;\n  shouldSetGroupAccessibilityLabel: boolean = false;\n  shouldSetChartAccessibilityPurpose: boolean = false;\n  shouldSetChartAccessibilityContext: boolean = false;\n  shouldRedrawWrapper: boolean = false;\n  shouldSetTagLevels: boolean = false;\n  shouldSetChartAccessibilityCount: boolean = false;\n  shouldSetYAxisAccessibility: boolean = false;\n  shouldSetXAxisAccessibility: boolean = false;\n  shouldSetAnnotationAccessibility: boolean = false;\n  shouldSetTextures: boolean = false;\n  shouldSetStrokes: boolean = false;\n  shouldSetLocalizationConfig: boolean = false;\n  strokes: any = {};\n  topLevel: string = 'h2';\n  bottomLevel: string = 'p';\n\n  @Watch('data')\n  dataWatcher(_newData, _oldData) {\n    this.updated = true;\n    this.shouldUpdateData = true;\n    this.shouldSetColors = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldUpdateScales = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateTableData = true;\n    this.shouldValidate = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetTextures = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('uniqueID')\n  idWatcher(newID, _oldID) {\n    console.error(\n      'Change detected in prop uniqueID from value ' +\n        _oldID +\n        ' to value ' +\n        newID +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.chartID = newID;\n    // this.heatMapEl.id = this.chartID;\n    // this.shouldValidate = true;\n    // this.shouldUpdateDescriptionWrapper = true;\n    // this.shouldSetParentSVGAccessibility = true;\n    // this.shouldUpdateLegend = true;\n    // this.shouldSetTextures = true;\n    // this.shouldDrawInteractionState = true;\n    // this.shouldSetStrokes = true;\n  }\n\n  @Watch('highestHeadingLevel')\n  headingWatcher(_newVal, _oldVal) {\n    this.shouldRedrawWrapper = true;\n    this.shouldSetTagLevels = true;\n    this.shouldSetChartAccessibilityCount = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('mainTitle')\n  titleWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('subTitle')\n  subtitleWatcher(_newVal, _oldVal) {\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('height')\n  @Watch('width')\n  @Watch('padding')\n  @Watch('margin')\n  layoutWatcher(_newVal, _oldVal) {\n    this.shouldSetDimensions = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetTextures = true;\n    this.shouldResetRoot = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('xAccessor')\n  xAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldSetColors = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldFormatClickHighlight = true;\n    this.shouldFormatHoverHighlight = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldSetTextures = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('yAccessor')\n  yAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldSetColors = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldFormatClickHighlight = true;\n    this.shouldFormatHoverHighlight = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetTextures = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('valueAccessor')\n  groupAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetColors = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldUpdateLabels = true;\n    this.shouldSetGeometryAriaLabels = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n    this.shouldSetTextures = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('xKeyOrder')\n  xKeyOrderWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldSetTextures = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('yKeyOrder')\n  yKeyOrderWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetTextures = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('xAxis')\n  xAxisWatcher(_newVal, _oldVal) {\n    const newFormatVal = _newVal && _newVal.format ? _newVal.format : false;\n    const oldFormatVal = _oldVal && _oldVal.format ? _oldVal.format : false;\n    const newPlacementVal = _newVal && _newVal.placement ? _newVal.placement : false;\n    const oldPlacementVal = _oldVal && _oldVal.placement ? _oldVal.placement : false;\n    if (newFormatVal !== oldFormatVal) {\n      this.shouldUpdateData = true;\n      this.shouldSetColors = true;\n      this.shouldUpdateScales = true;\n      this.shouldSetTextures = true;\n      this.shouldSetGlobalSelections = true;\n      this.shouldFormatClickHighlight = true;\n      this.shouldFormatHoverHighlight = true;\n      this.shouldDrawInteractionState = true;\n      this.shouldEnterUpdateExit = true;\n      this.shouldUpdateTableData = true;\n      this.shouldUpdateGeometries = true;\n      this.shouldUpdateLabels = true;\n      this.shouldUpdateLegend = true;\n      this.shouldUpdateAnnotations = true;\n    }\n    if (newPlacementVal !== oldPlacementVal) {\n      this.shouldSwapXAxis = true;\n    }\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n  }\n\n  @Watch('yAxis')\n  yAxisWatcher(_newVal, _oldVal) {\n    const newFormatVal = _newVal && _newVal.format ? _newVal.format : false;\n    const oldFormatVal = _oldVal && _oldVal.format ? _oldVal.format : false;\n    const newPlacementVal = _newVal && _newVal.placement ? _newVal.placement : false;\n    const oldPlacementVal = _oldVal && _oldVal.placement ? _oldVal.placement : false;\n    if (newFormatVal !== oldFormatVal) {\n      this.shouldUpdateData = true;\n      this.shouldSetColors = true;\n      this.shouldUpdateScales = true;\n      this.shouldSetTextures = true;\n      this.shouldSetGlobalSelections = true;\n      this.shouldFormatClickHighlight = true;\n      this.shouldFormatHoverHighlight = true;\n      this.shouldDrawInteractionState = true;\n      this.shouldEnterUpdateExit = true;\n      this.shouldUpdateTableData = true;\n      this.shouldUpdateGeometries = true;\n      this.shouldUpdateLabels = true;\n      this.shouldUpdateLegend = true;\n      this.shouldUpdateAnnotations = true;\n    }\n    if (newPlacementVal !== oldPlacementVal) {\n      this.shouldSwapYAxis = true;\n    }\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n  }\n\n  @Watch('wrapLabel')\n  wrapLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n  }\n\n  @Watch('hideAxisPath')\n  hideAxisPathWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n  }\n\n  @Watch('colorPalette')\n  @Watch('colors')\n  @Watch('colorSteps')\n  colorsWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateLegend = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetTextures = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('hoverStyle')\n  hoverStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('clickStyle')\n  clickStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('shape')\n  shapeWatcher(_newVal, _oldVal) {\n    this.shouldUpdateGeometries = true;\n  }\n\n  @Watch('cursor')\n  cursorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCursor = true;\n  }\n\n  @Watch('strokeWidth')\n  strokeWidthWatcher(_newVal, _oldVal) {\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetTextures = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('hoverOpacity')\n  hoverOpacityWatcher(_newVal, _oldVal) {\n    this.shouldSetLabelOpacity = true;\n    this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('dataLabel')\n  labelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTableData = true;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetLabelOpacity = true;\n    }\n  }\n\n  @Watch('showTooltip')\n  showTooltipWatcher(_newVal, _oldVal) {\n    // this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('tooltipLabel')\n  tooltipLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('legend')\n  legendWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLegend = true;\n  }\n\n  @Watch('suppressEvents')\n  suppressWatcher(_newVal, _oldVal) {\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldRedrawWrapper = true;\n    this.shouldValidate = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('annotations')\n  annotationsWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetAnnotationAccessibility = true;\n  }\n\n  @Watch('accessibility')\n  accessibilityWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    const newTitle = _newVal && _newVal.title ? _newVal.title : false;\n    const oldTitle = _oldVal && _oldVal.title ? _oldVal.title : false;\n    if (newTitle !== oldTitle) {\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newExecutiveSummary = _newVal && _newVal.executiveSummary ? _newVal.executiveSummary : false;\n    const oldExecutiveSummary = _oldVal && _oldVal.executiveSummary ? _oldVal.executiveSummary : false;\n    if (newExecutiveSummary !== oldExecutiveSummary) {\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n    }\n    const newPurpose = _newVal && _newVal.purpose ? _newVal.purpose : false;\n    const oldPurpose = _oldVal && _oldVal.purpose ? _oldVal.purpose : false;\n    if (newPurpose !== oldPurpose) {\n      this.shouldSetChartAccessibilityPurpose = true;\n    }\n    const newLongDescription = _newVal && _newVal.longDescription ? _newVal.longDescription : false;\n    const oldLongDescription = _oldVal && _oldVal.longDescription ? _oldVal.longDescription : false;\n    if (newLongDescription !== oldLongDescription) {\n      this.shouldSetChartAccessibilityLongDescription = true;\n    }\n    const newContext = _newVal && _newVal.contextExplanation ? _newVal.contextExplanation : false;\n    const oldContext = _oldVal && _oldVal.contextExplanation ? _oldVal.contextExplanation : false;\n    if (newContext !== oldContext) {\n      this.shouldSetChartAccessibilityContext = true;\n    }\n    const newStatisticalNotes = _newVal && _newVal.statisticalNotes ? _newVal.statisticalNotes : false;\n    const oldStatisticalNotes = _oldVal && _oldVal.statisticalNotes ? _oldVal.statisticalNotes : false;\n    if (newStatisticalNotes !== oldStatisticalNotes) {\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n    }\n    const newStructureNotes = _newVal && _newVal.structureNotes ? _newVal.structureNotes : false;\n    const oldStructureNotes = _oldVal && _oldVal.structureNotes ? _oldVal.structureNotes : false;\n    if (newStructureNotes !== oldStructureNotes) {\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    const newincludeDataKeyNames = _newVal && _newVal.includeDataKeyNames;\n    const oldincludeDataKeyNames = _oldVal && _oldVal.includeDataKeyNames;\n    const newElementDescriptionAccessor =\n      _newVal && _newVal.elementDescriptionAccessor ? _newVal.elementDescriptionAccessor : false;\n    const oldElementDescriptionAccessor =\n      _oldVal && _oldVal.elementDescriptionAccessor ? _oldVal.elementDescriptionAccessor : false;\n    if (\n      newincludeDataKeyNames !== oldincludeDataKeyNames ||\n      newElementDescriptionAccessor !== oldElementDescriptionAccessor\n    ) {\n      if (newincludeDataKeyNames !== oldincludeDataKeyNames) {\n        // this one is tricky because it needs to run after the lifecycle\n        // AND it could run in the off-chance this prop is changed\n        this.shouldSetGroupAccessibilityLabel = true;\n      }\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newTextures = _newVal && _newVal.hideTextures ? _newVal.hideTextures : false;\n    const oldTextures = _oldVal && _oldVal.hideTextures ? _oldVal.hideTextures : false;\n    const newExTextures = _newVal && _newVal.showExperimentalTextures ? _newVal.showExperimentalTextures : false;\n    const oldExTextures = _oldVal && _oldVal.showExperimentalTextures ? _oldVal.showExperimentalTextures : false;\n    if (newTextures !== oldTextures || newExTextures !== oldExTextures) {\n      this.shouldSetTextures = true;\n      this.shouldUpdateLegend = true;\n      this.shouldSetStrokes = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newSmallValue = _newVal && _newVal.showSmallLabels ? _newVal.showSmallLabels : false;\n    const oldSmallValue = _oldVal && _oldVal.showSmallLabels ? _oldVal.showSmallLabels : false;\n    if (newSmallValue !== oldSmallValue) {\n      this.shouldSetLabelOpacity = true;\n    }\n    const newStrokes = _newVal && _newVal.hideStrokes ? _newVal.hideStrokes : false;\n    const oldStrokes = _oldVal && _oldVal.hideStrokes ? _oldVal.hideStrokes : false;\n    if (newStrokes !== oldStrokes) {\n      this.shouldUpdateLegend = true;\n      this.shouldSetStrokes = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newKeyNav =\n      _newVal && _newVal.keyboardNavConfig && _newVal.keyboardNavConfig.disabled\n        ? _newVal.keyboardNavConfig.disabled\n        : false;\n    const oldKeyNav =\n      _oldVal && _oldVal.keyboardNavConfig && _oldVal.keyboardNavConfig.disabled\n        ? _oldVal.keyboardNavConfig.disabled\n        : false;\n    const newInterface = _newVal && _newVal.elementsAreInterface ? _newVal.elementsAreInterface : false;\n    const oldInterface = _oldVal && _oldVal.elementsAreInterface ? _oldVal.elementsAreInterface : false;\n    if (newKeyNav !== oldKeyNav || newInterface !== oldInterface) {\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetChartAccessibilitySubtitle = true;\n      this.shouldSetChartAccessibilityLongDescription = true;\n      this.shouldSetChartAccessibilityContext = true;\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n      this.shouldSetChartAccessibilityPurpose = true;\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    if (newInterface !== oldInterface) {\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('localization')\n  localizationWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n\n    // language\n    const newLanguage = _newVal && _newVal.language ? _newVal.language : false;\n    const oldLanguage = _oldVal && _oldVal.language ? _oldVal.language : false;\n    if (newLanguage !== oldLanguage) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n\n    // numeralLocale\n    const newNumeralLocale = _newVal && _newVal.numeralLocale ? _newVal.numeralLocale : false;\n    const oldNumeralLocale = _oldVal && _oldVal.numeralLocale ? _oldVal.numeralLocale : false;\n    if (newNumeralLocale !== oldNumeralLocale) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n  }\n\n  @Watch('maxValueOverride')\n  @Watch('minValueOverride')\n  valueOverrideWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetTextures = true;\n  }\n\n  @Watch('clickHighlight')\n  clickWatcher(_newVal, _oldVal) {\n    this.shouldFormatClickHighlight = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n  }\n\n  @Watch('hoverHighlight')\n  hoverWatcher(_newVal, _oldVal) {\n    this.shouldFormatHoverHighlight = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('interactionKeys')\n  interactionWatcher(_newVal, _oldVal) {\n    this.shouldValidateInteractionKeys = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('dataKeyNames')\n  dataKeyNamesWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('unitTest')\n  unitTestWatcher(_newVal, _oldVal) {\n    this.shouldSetTestingAttributes = true;\n  }\n\n  componentWillLoad() {\n    const chartID = this.uniqueID || 'heat-map-' + uuid();\n    this.initialLoadEvent.emit({ chartID: chartID });\n    // contrary to componentWillUpdate, this method appears safe to use for\n    // any calculations we need. Keeping them here reduces future refactor,\n    // since componentWillUpdate should eventually mirror this method\n    return new Promise(resolve => {\n      this.duration = 0;\n      this.defaults = true;\n      this.chartID = chartID;\n      this.heatMapEl.id = this.chartID;\n      this.setLocalizationConfig();\n      this.setTagLevels();\n      this.prepareData();\n      this.setDimensions();\n      this.setColors();\n      this.prepareScales();\n      this.validateInteractionKeys();\n      this.setTableData();\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.formatClickHighlight();\n      this.formatHoverHighlight();\n      resolve('component will load');\n    });\n  }\n\n  componentWillUpdate() {\n    // NEVER put items in this method that rely on props (until stencil bug is resolved)\n    // All items that belong here are currently at the top of render\n    // see: https://github.com/ionic-team/stencil/issues/2061#issuecomment-578282178\n    return new Promise(resolve => {\n      resolve('component will update');\n    });\n  }\n\n  componentDidLoad() {\n    return new Promise(resolve => {\n      this.renderRootElements();\n      this.setTooltipInitialStyle();\n      this.setChartDescriptionWrapper();\n      this.setChartAccessibilityTitle();\n      this.setChartAccessibilitySubtitle();\n      this.setChartAccessibilityLongDescription();\n      this.setChartAccessibilityExecutiveSummary();\n      this.setChartAccessibilityPurpose();\n      this.setChartAccessibilityContext();\n      this.setChartAccessibilityStatisticalNotes();\n      this.setChartAccessibilityStructureNotes();\n      this.setParentSVGAccessibility();\n      this.reSetRoot();\n      this.setTextures();\n      this.setStrokes();\n      this.setSubTitleElements();\n      this.setGlobalSelections();\n      this.setTestingAttributes();\n      this.enterGeometries();\n      this.updateGeometries();\n      this.exitGeometries();\n      this.enterDataLabels();\n      this.updateDataLabels();\n      this.exitDataLabels();\n      this.drawGeometries();\n      this.setChartCountAccessibility();\n      this.setGeometryAccessibilityAttributes();\n      this.setGeometryAriaLabels();\n      this.drawDataLabels();\n      this.drawLegendElements();\n      this.setSelectedClass();\n      this.updateInteractionState();\n      this.bindInteractivity();\n      this.drawAnnotations();\n      this.setAnnotationAccessibility();\n      this.drawXAxis();\n      this.setXAxisAccessibility();\n      this.drawYAxis();\n      this.setYAxisAccessibility();\n      // we want to hide all child <g> of this.root BUT we want to make sure not to hide the\n      // parent<g> that contains our geometries! In a subGroup chart (like stacked bars),\n      // we want to pass the PARENT of all the <g>s that contain bars\n      hideNonessentialGroups(this.root.node(), this.map.node());\n      this.setGroupAccessibilityID();\n      this.onChangeHandler();\n      this.defaults = false;\n      resolve('component did load');\n    }).then(() => this.initialLoadEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  componentDidUpdate() {\n    return new Promise(resolve => {\n      this.duration = !this.animationConfig || !this.animationConfig.disabled ? 750 : 0;\n      if (this.shouldUpdateDescriptionWrapper) {\n        this.setChartDescriptionWrapper();\n        this.shouldUpdateDescriptionWrapper = false;\n      }\n      if (this.shouldSetChartAccessibilityCount) {\n        this.setChartCountAccessibility();\n        this.shouldSetChartAccessibilityCount = false;\n      }\n      if (this.shouldSetChartAccessibilityTitle) {\n        this.setChartAccessibilityTitle();\n        this.shouldSetChartAccessibilityTitle = false;\n      }\n      if (this.shouldSetChartAccessibilitySubtitle) {\n        this.setChartAccessibilitySubtitle();\n        this.shouldSetChartAccessibilitySubtitle = false;\n      }\n      if (this.shouldSetChartAccessibilityLongDescription) {\n        this.setChartAccessibilityLongDescription();\n        this.shouldSetChartAccessibilityLongDescription = false;\n      }\n      if (this.shouldSetChartAccessibilityExecutiveSummary) {\n        this.setChartAccessibilityExecutiveSummary();\n        this.shouldSetChartAccessibilityExecutiveSummary = false;\n      }\n      if (this.shouldSetChartAccessibilityPurpose) {\n        this.setChartAccessibilityPurpose();\n        this.shouldSetChartAccessibilityPurpose = false;\n      }\n      if (this.shouldSetChartAccessibilityContext) {\n        this.setChartAccessibilityContext();\n        this.shouldSetChartAccessibilityContext = false;\n      }\n      if (this.shouldSetChartAccessibilityStatisticalNotes) {\n        this.setChartAccessibilityStatisticalNotes();\n        this.shouldSetChartAccessibilityStatisticalNotes = false;\n      }\n      if (this.shouldSetChartAccessibilityStructureNotes) {\n        this.setChartAccessibilityStructureNotes();\n        this.shouldSetChartAccessibilityStructureNotes = false;\n      }\n      if (this.shouldSetParentSVGAccessibility) {\n        this.setParentSVGAccessibility();\n        this.shouldSetParentSVGAccessibility = false;\n      }\n      if (this.shouldResetRoot) {\n        this.reSetRoot();\n        this.shouldResetRoot = false;\n      }\n      if (this.shouldSetTextures) {\n        this.setTextures();\n        this.shouldSetTextures = false;\n      }\n      if (this.shouldSetStrokes) {\n        this.setStrokes();\n        this.shouldSetStrokes = false;\n      }\n      if (this.shouldSetGlobalSelections) {\n        this.setGlobalSelections();\n        this.shouldSetGlobalSelections = false;\n      }\n      if (this.shouldSetTestingAttributes) {\n        this.setTestingAttributes();\n        this.shouldSetTestingAttributes = false;\n      }\n      if (this.shouldSetSubTitle) {\n        this.setSubTitleElements();\n        this.shouldSetSubTitle = false;\n      }\n      if (this.shouldEnterUpdateExit) {\n        this.enterGeometries();\n        this.updateGeometries();\n        this.exitGeometries();\n        this.enterDataLabels();\n        this.updateDataLabels();\n        this.exitDataLabels();\n        this.shouldEnterUpdateExit = false;\n      }\n      if (this.shouldUpdateGeometries) {\n        this.drawGeometries();\n        this.shouldUpdateGeometries = false;\n      }\n      if (this.shouldSetGeometryAccessibilityAttributes) {\n        this.setGeometryAccessibilityAttributes();\n        this.shouldSetGeometryAccessibilityAttributes = false;\n      }\n      if (this.shouldSetGeometryAriaLabels) {\n        this.setGeometryAriaLabels();\n        this.shouldSetGeometryAriaLabels = false;\n      }\n      if (this.shouldSetGroupAccessibilityLabel) {\n        this.setGroupAccessibilityID();\n        this.shouldSetGroupAccessibilityLabel = false;\n      }\n      if (this.shouldUpdateLegend) {\n        this.drawLegendElements();\n        this.shouldUpdateLegend = false;\n      }\n      if (this.shouldUpdateLabels) {\n        this.drawDataLabels();\n        this.shouldUpdateLabels = false;\n      }\n      if (this.shouldDrawInteractionState) {\n        this.updateInteractionState();\n        this.shouldDrawInteractionState = false;\n      }\n      if (this.shouldSetLabelOpacity) {\n        this.setLabelOpacity();\n        this.shouldSetLabelOpacity = false;\n      }\n      if (this.shouldSetSelectionClass) {\n        this.setSelectedClass();\n        this.shouldSetSelectionClass = false;\n      }\n      if (this.shouldUpdateCursor) {\n        this.updateCursor();\n        this.shouldUpdateCursor = false;\n      }\n      if (this.shouldBindInteractivity) {\n        this.bindInteractivity();\n        this.shouldBindInteractivity = false;\n      }\n      if (this.shouldUpdateAnnotations) {\n        this.drawAnnotations();\n        this.shouldUpdateAnnotations = false;\n      }\n      if (this.shouldSetAnnotationAccessibility) {\n        this.setAnnotationAccessibility();\n        this.shouldSetAnnotationAccessibility = false;\n      }\n      if (this.shouldSwapXAxis) {\n        this.drawXAxis(true);\n        this.shouldSwapXAxis = false;\n      }\n      if (this.shouldSwapYAxis) {\n        this.drawYAxis(true);\n        this.shouldSwapYAxis = false;\n      }\n      if (this.shouldUpdateXAxis) {\n        this.drawXAxis();\n        this.shouldUpdateXAxis = false;\n      }\n      if (this.shouldSetXAxisAccessibility) {\n        this.setXAxisAccessibility();\n        this.shouldSetXAxisAccessibility = false;\n      }\n      if (this.shouldUpdateYAxis) {\n        this.drawYAxis();\n        this.shouldUpdateYAxis = false;\n      }\n      if (this.shouldSetYAxisAccessibility) {\n        this.setYAxisAccessibility();\n        this.shouldSetYAxisAccessibility = false;\n      }\n      this.onChangeHandler();\n      resolve('component did update');\n    }).then(() => this.drawEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  shouldValidateLocalizationProps() {\n    const windowInstances = getGlobalInstances();\n    const languageString = windowInstances.i18Next.language;\n    const languageObject = windowInstances.i18Next.getResourceBundle(languageString);\n    const numeralObject = windowInstances.numeral.localeData();\n    if (this.shouldValidateLocalization && !this.localization.skipValidation) {\n      this.shouldValidateLocalization = false;\n      validateLocalizationProps(this.chartID, {\n        ...this.localization,\n        language: languageObject,\n        numeralLocale: numeralObject\n      });\n    }\n  }\n\n  shouldValidateAccessibilityProps() {\n    if (this.shouldValidateAccessibility && !this.accessibility.disableValidation) {\n      this.shouldValidateAccessibility = false;\n      validateAccessibilityProps(\n        this.chartID,\n        { ...this.accessibility },\n        {\n          annotations: this.annotations,\n          data: this.data,\n          uniqueID: this.uniqueID,\n          context: {\n            mainTitle: this.mainTitle,\n            onClickEvent: this.suppressEvents ? undefined : this.clickEvent.emit\n          }\n        }\n      );\n    }\n  }\n\n  formatClickHighlight() {\n    if (this.clickHighlight) {\n      this.clickHighlight.map(d => {\n        if (!d['xAccessor'] || !d['yAccessor']) {\n          d['xAccessor'] =\n            d[this.xAccessor] instanceof Date\n              ? formatDate({\n                  date: d[this.xAccessor],\n                  format: this.xAxis.format,\n                  offsetTimezone: true\n                })\n              : d[this.xAccessor];\n\n          d['yAccessor'] =\n            d[this.yAccessor] instanceof Date\n              ? formatDate({\n                  date: d[this.yAccessor],\n                  format: this.yAxis.format,\n                  offsetTimezone: true\n                })\n              : d[this.yAccessor];\n        }\n      });\n    }\n  }\n\n  formatHoverHighlight() {\n    if (this.hoverHighlight) {\n      if (!this.hoverHighlight['xAccessor'] || !this.hoverHighlight['yAccessor']) {\n        this.hoverHighlight['xAccessor'] =\n          this.hoverHighlight[this.xAccessor] instanceof Date\n            ? formatDate({\n                date: this.hoverHighlight[this.xAccessor],\n                format: this.xAxis.format,\n                offsetTimezone: true\n              })\n            : this.hoverHighlight[this.xAccessor];\n        this.hoverHighlight['yAccessor'] =\n          this.hoverHighlight[this.yAccessor] instanceof Date\n            ? formatDate({\n                date: this.hoverHighlight[this.yAccessor],\n                format: this.yAxis.format,\n                offsetTimezone: true\n              })\n            : this.hoverHighlight[this.yAccessor];\n      }\n    }\n  }\n\n  getLanguageString() {\n    return getActiveLanguageString(this.localization);\n  }\n\n  setLocalizationConfig() {\n    configLocalization(this.localization);\n  }\n\n  setDimensions() {\n    this.padding = typeof this.padding === 'string' ? getPadding(this.padding) : this.padding;\n\n    // before we render/load we need to set our height and width based on props\n    this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n    this.innerWidth = this.width - this.margin.left - this.margin.right;\n\n    this.innerPaddedHeight = this.innerHeight - this.padding.top - this.padding.bottom;\n    this.innerPaddedWidth = this.innerWidth - this.padding.left - this.padding.right;\n  }\n\n  validateInteractionKeys() {\n    if (this.interactionKeys && this.interactionKeys.length) {\n      if (this.interactionKeys.includes(this.xAccessor) || this.interactionKeys.includes(this.yAccessor)) {\n        const checkInteractionKeys = [];\n        this.interactionKeys.map(k => {\n          const newKey = k === this.xAccessor ? 'xAccessor' : k === this.yAccessor ? 'yAccessor' : k;\n          checkInteractionKeys.push(newKey);\n        });\n        this.innerInteractionKeys = checkInteractionKeys;\n      }\n    } else {\n      // initialize interacrtionKeys prop\n      this.innerInteractionKeys = ['xAccessor', 'yAccessor'];\n    }\n  }\n\n  prepareScales() {\n    const minMapValue =\n      (this.minValueOverride || this.minValueOverride === 0) &&\n      this.minValueOverride < min(this.preppedData, d => d.valueAccessor)\n        ? this.minValueOverride\n        : min(this.preppedData, d => d.valueAccessor);\n    const maxMapValue =\n      (this.maxValueOverride || this.maxValueOverride === 0) &&\n      this.maxValueOverride > max(this.preppedData, d => d.valueAccessor)\n        ? this.maxValueOverride\n        : max(this.preppedData, d => d.valueAccessor);\n\n    this.x = scaleBand()\n      .domain(this.xKeyOrder ? this.xKeyOrder : this.preppedData.map(d => d.xAccessor))\n      .range([0, this.innerPaddedWidth]);\n    this.x.padding(this.strokeWidth ? this.strokeWidth / this.x.bandwidth() : 0);\n    this.y = scaleBand()\n      .domain(this.yKeyOrder ? this.yKeyOrder : this.preppedData.map(d => d.yAccessor))\n      .range([0, this.innerPaddedHeight]);\n\n    this.y.padding(this.strokeWidth ? this.strokeWidth / this.y.bandwidth() : 0);\n\n    this.heat = scaleQuantize().domain([minMapValue, maxMapValue]);\n\n    const strokeColors = [];\n    const backgroundColors = [];\n    let i = 0;\n    const half = Math.ceil(this.preparedColors.length / 2);\n    const isDiverging = this.colorPalette && this.colorPalette.includes('diverging');\n    const isDark = this.colorPalette && this.colorPalette.includes('dark');\n    this.preparedColors.forEach(color => {\n      const colorsMatchingScheme = prepareStrokeColorsFromScheme(\n        color,\n        i,\n        this.preparedColors,\n        isDiverging ? 'diverging' : 'sequential'\n      );\n      if (isDiverging) {\n        const fillLuminance = calculateLuminance(colorsMatchingScheme.fillColor);\n        const strokeLuminance = calculateLuminance(colorsMatchingScheme.textureColor);\n        const darkerColor =\n          fillLuminance > strokeLuminance ? colorsMatchingScheme.textureColor : colorsMatchingScheme.fillColor;\n        const lighterColor =\n          fillLuminance < strokeLuminance ? colorsMatchingScheme.textureColor : colorsMatchingScheme.fillColor;\n        if (this.preparedColors.length % 2 && i === (this.preparedColors.length - 1) / 2) {\n          backgroundColors.push(isDark ? darkerColor : lighterColor);\n          strokeColors.push(isDark ? lighterColor : darkerColor);\n        } else {\n          strokeColors.push(isDark ? darkerColor : lighterColor);\n          backgroundColors.push(isDark ? lighterColor : darkerColor);\n        }\n      } else {\n        if (i + 1 < half) {\n          backgroundColors.push(this.preparedColors[0]);\n          strokeColors.push(this.preparedColors[this.preparedColors.length - 1]);\n        } else {\n          strokeColors.push(this.preparedColors[0]);\n          backgroundColors.push(this.preparedColors[this.preparedColors.length - 1]);\n        }\n      }\n      i++;\n    });\n\n    this.fillColors = scaleQuantize()\n      .domain([minMapValue, maxMapValue])\n      .range(backgroundColors);\n\n    this.strokeColors = scaleQuantize()\n      .domain([minMapValue, maxMapValue])\n      .range(strokeColors);\n\n    this.rawHeat = scaleQuantize()\n      .domain([minMapValue, maxMapValue])\n      .range(this.preparedColors);\n\n    this.updateCheck = true;\n  }\n\n  setSubTitleElements() {\n    setSubTitle({\n      root: this.subTitleG,\n      subTitle: this.subTitle\n    });\n  }\n\n  setColors() {\n    this.preparedColors = this.colors ? convertVisaColor(this.colors) : getColors(this.colorPalette, this.colorSteps);\n  }\n\n  setTextures() {\n    const scheme = this.colorPalette && this.colorPalette.includes('diverging') ? 'diverging' : 'sequential';\n    const limit = scheme === 'diverging' ? 11 : 9;\n    if (this.accessibility.hideTextures || this.colorSteps > limit || !this.accessibility.showExperimentalTextures) {\n      this.colorArr = this.preparedColors;\n    } else {\n      const textures = convertColorsToTextures({\n        colors: this.preparedColors,\n        rootSVG: this.svg.node(),\n        id: this.chartID,\n        scheme,\n        disableTransitions: !this.duration\n      });\n      this.colorArr = textures;\n    }\n    this.heat.range(this.colorArr);\n  }\n\n  setStrokes() {\n    // technically the user could pass hoverstyle/clickstyle.color and we want to make sure that we intercept that\n    // heatmap does not use this prop, since color is bound intrinsically to value in the data\n    const clickStyle = { ...this.clickStyle, color: undefined };\n    const hoverStyle = { ...this.hoverStyle, color: undefined };\n    this.strokes = buildStrokes({\n      root: this.svg.node(),\n      id: this.chartID,\n      colors:\n        !this.accessibility.hideTextures && this.accessibility.showExperimentalTextures\n          ? this.fillColors.range()\n          : this.preparedColors, // this.fillColors.range(), // this.divergingColors && this.divergingColors.fills.length && !this.accessibility.hideTextures ? this.divergingColors.fills : this.preparedColors,\n      clickStyle,\n      hoverStyle,\n      strokeOverride:\n        !this.accessibility.hideTextures && this.accessibility.showExperimentalTextures\n          ? this.strokeColors.range()\n          : undefined\n    });\n  }\n\n  setTableData() {\n    // generate scoped and formatted data for data-table component\n    const keys = scopeDataKeys(this, chartAccessors, 'heat-map');\n    this.tableData = getScopedData(this.data, keys);\n    this.tableColumns = Object.keys(keys);\n  }\n\n  prepareData() {\n    // copy data to preppedData for data manipulation\n    // check data format & offset time object, create new keys for modified xAccessor, yAccessor, valueAccessor values\n    // this allows heatmap to share same data entries across different dimensions\n    if (this.updateCheck) {\n      this.interpolating = this.preppedData;\n      const oldXDomain = this.x.domain();\n      const oldXRange = this.x.range();\n      const oldYDomain = this.y.domain();\n      const oldYRange = this.y.range();\n      this.interpolating.x = scaleBand()\n        .domain(oldXDomain)\n        .range(oldXRange);\n      this.interpolating.y = scaleBand()\n        .domain(oldYDomain)\n        .range(oldYRange);\n    }\n    this.preppedData = this.data.map(d => {\n      const newRow = { ...d };\n      newRow['valueAccessor'] = parseFloat(d[this.valueAccessor]);\n      newRow['xAccessor'] =\n        d[this.xAccessor] instanceof Date\n          ? formatDate({\n              date: d[this.xAccessor],\n              format: this.xAxis.format,\n              offsetTimezone: true\n            })\n          : d[this.xAccessor];\n      newRow['yAccessor'] =\n        d[this.yAccessor] instanceof Date\n          ? formatDate({\n              date: d[this.yAccessor],\n              format: this.yAxis.format,\n              offsetTimezone: true\n            })\n          : d[this.yAccessor];\n\n      return newRow;\n    });\n\n    // groups each row of the heatmap to make keyboard navigation easier for accessibility\n    this.nest = nest()\n      .key(d => d[this.yAccessor])\n      .entries(this.preppedData);\n\n    // Get all item categories\n    this.datakeys = this.nest.map(d => d.key);\n  }\n\n  // reset graph size based on window size\n  reSetRoot() {\n    const changeSvg = prepareRenderChange({\n      selection: this.svg,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeSvg\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    const changeRoot = prepareRenderChange({\n      selection: this.root,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRoot.attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n\n    const changeRootG = prepareRenderChange({\n      selection: this.rootG,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRootG.attr('transform', `translate(${this.padding.left}, ${this.padding.top})`);\n\n    setAccessibilityDescriptionWidth(this.chartID, this.width);\n  }\n\n  drawXAxis(swapping?: boolean) {\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.xAccessor]\n        ? this.dataKeyNames[this.xAccessor]\n        : this.xAxis.label;\n    // draw axes\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.x,\n      top: this.xAxis.placement === 'top',\n      wrapLabel: this.wrapLabel ? this.x.bandwidth() : '',\n      format: this.xAxis.format,\n      tickInterval: this.xAxis.tickInterval,\n      label: axisLabel, // this.xAxis.label,\n      padding: this.padding,\n      hide: swapping || !this.xAxis.visible,\n      duration: this.duration,\n      hidePath: this.hideAxisPath\n    });\n  }\n\n  drawYAxis(swapping?: boolean) {\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.yAccessor]\n        ? this.dataKeyNames[this.yAccessor]\n        : this.yAxis.label;\n\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.y,\n      left: this.yAxis.placement !== 'right',\n      right: this.yAxis.placement === 'right',\n      format: this.yAxis.format,\n      wrapLabel: this.wrapLabel ? this.padding.left || 100 : '',\n      tickInterval: this.yAxis.tickInterval,\n      label: axisLabel, // this.yAxis.label,\n      padding: this.padding,\n      hide: swapping || !this.yAxis.visible,\n      duration: this.duration,\n      hidePath: this.hideAxisPath\n    });\n  }\n\n  setXAxisAccessibility() {\n    const axisLabel =\n      this.xAxis.label || this.xAxis.label === ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.xAccessor]\n        ? this.dataKeyNames[this.xAccessor]\n        : this.xAxis.label;\n\n    setAccessXAxis({\n      rootEle: this.heatMapEl,\n      hasXAxis: this.xAxis ? this.xAxis.visible : false,\n      xAxis: this.x || false, // this is optional for some charts, if hasXAxis is always false\n      xAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasXAxis is always false\n    });\n  }\n\n  setYAxisAccessibility() {\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[this.yAccessor]\n        ? this.dataKeyNames[this.yAccessor]\n        : this.yAxis.label;\n\n    setAccessYAxis({\n      rootEle: this.heatMapEl,\n      hasYAxis: this.yAxis ? this.yAxis.visible : false,\n      yAxis: this.y || false, // this is optional for some charts, if hasXAxis is always false\n      yAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasYAxis is always false\n    });\n  }\n\n  renderRootElements() {\n    this.svg = select(this.heatMapEl)\n      .select('.visa-viz-d3-heat-map-container')\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    this.root = this.svg.append('g').attr('id', 'visa-viz-margin-container-g-' + this.chartID);\n    this.rootG = this.root.append('g').attr('id', 'visa-viz-padding-container-g-' + this.chartID);\n    this.map = this.rootG.append('g').attr('class', 'map-group');\n    this.labelG = this.rootG.append('g').attr('class', 'heat-map-dataLabel-group');\n    this.legendG = select(this.heatMapEl)\n      .select('.heat-map-legend')\n      .append('svg');\n    this.subTitleG = select(this.heatMapEl).select('.heat-sub-title');\n    this.tooltipG = select(this.heatMapEl).select('.heat-map-tooltip');\n  }\n\n  setGlobalSelections() {\n    this.xAxisElement = this.rootG.selectAll('.bottom');\n    const dataBoundToGroups = this.map.selectAll('.row').data(this.nest, d => d.key);\n\n    this.enterRowWrappers = dataBoundToGroups.enter().append('g');\n    this.exitRowWrappers = dataBoundToGroups.exit();\n    this.updateRowWrappers = dataBoundToGroups.merge(this.enterRowWrappers);\n\n    const dataBoundToGeometries = this.updateRowWrappers\n      .selectAll('.grid')\n      .data(d => d.values, d => d.xAccessor + d.yAccessor);\n\n    this.enter = dataBoundToGeometries.enter().append('rect');\n    this.exit = dataBoundToGeometries.exit();\n    this.update = dataBoundToGeometries.merge(this.enter);\n\n    this.exitSize = this.exit.size();\n    this.enterSize = this.enter.size();\n\n    this.exitSize += this.exitRowWrappers.selectAll('.grid').size();\n\n    const dataBoundToLabelGroups = this.labelG.selectAll('g').data(this.nest, d => d.key);\n\n    this.enteringLabelGroups = dataBoundToLabelGroups.enter().append('g');\n    this.exitingLabelGroups = dataBoundToLabelGroups.exit();\n    this.updatingLabelGroups = dataBoundToLabelGroups.merge(this.enteringLabelGroups);\n\n    const dataBoundToLabels = this.updatingLabelGroups\n      .selectAll('text')\n      .data(d => d.values, d => d.xAccessor + d.yAccessor);\n    this.enterLabels = dataBoundToLabels.enter().append('text');\n    this.exitLabels = dataBoundToLabels.exit();\n    this.updateLabels = dataBoundToLabels.merge(this.enterLabels);\n  }\n\n  setTestingAttributes() {\n    if (this.unitTest) {\n      select(this.heatMapEl)\n        .select('.visa-viz-d3-heat-map-container')\n        .attr('data-testid', 'chart-container');\n      select(this.heatMapEl)\n        .select('.heat-main-title')\n        .attr('data-testid', 'main-title');\n      select(this.heatMapEl)\n        .select('.heat-sub-title')\n        .attr('data-testid', 'sub-title');\n      this.svg.attr('data-testid', 'root-svg');\n      this.root.attr('data-testid', 'margin-container');\n      this.rootG.attr('data-testid', 'padding-container');\n      this.legendG.attr('data-testid', 'legend-container');\n      this.tooltipG.attr('data-testid', 'tooltip-container');\n      this.map.attr('data-testid', 'map-group');\n      this.labelG.attr('data-testid', 'dataLabel-group');\n      this.svg.select('defs').attr('data-testid', 'pattern-defs');\n\n      this.updateRowWrappers.attr('data-testid', 'map-row').attr('data-id', d => `row-${d.key}`);\n      this.updateLabels\n        .attr('data-testid', 'dataLabel')\n        .attr('data-id', d => `label-${d[this.xAccessor]}-${d[this.yAccessor]}`);\n      this.update\n        .attr('data-testid', 'marker')\n        .attr('data-id', d => `marker-${d[this.xAccessor]}-${d[this.yAccessor]}`);\n    } else {\n      select(this.heatMapEl)\n        .select('.visa-viz-d3-heat-map-container')\n        .attr('data-testid', null);\n      select(this.heatMapEl)\n        .select('.heat-main-title')\n        .attr('data-testid', null);\n      select(this.heatMapEl)\n        .select('.heat-sub-title')\n        .attr('data-testid', null);\n      this.svg.attr('data-testid', null);\n      this.root.attr('data-testid', null);\n      this.rootG.attr('data-testid', null);\n      this.legendG.attr('data-testid', null);\n      this.tooltipG.attr('data-testid', null);\n      this.map.attr('data-testid', null);\n      this.labelG.attr('data-testid', null);\n      this.svg.select('defs').attr('data-testid', null);\n\n      this.updateRowWrappers.attr('data-testid', null).attr('data-id', null);\n      this.updateLabels.attr('data-testid', null).attr('data-id', null);\n      this.update.attr('data-testid', null).attr('data-id', null);\n    }\n  }\n\n  // draw heat map\n  enterGeometries() {\n    this.enter.interrupt();\n\n    this.enterRowWrappers\n      .attr('class', 'row')\n      .classed('entering', true)\n      .each((_, i, n) => {\n        // we bind accessible interactivity and semantics here (role, tabindex, etc)\n        initializeElementAccess(n[i]);\n      });\n\n    this.enter\n      .attr('class', 'grid')\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .each((_d, i, n) => {\n        initializeElementAccess(n[i]);\n      })\n      .on(\n        'click',\n        !this.suppressEvents\n          ? (d, i, n) => {\n              this.onClickHandler(d, n[i]);\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents\n          ? (d, i, n) => {\n              this.onHoverHandler(d, n[i]);\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .attr('opacity', 0)\n      .attr('y', d => {\n        if (this.interpolating && this.interpolating.y(d.yAccessor) === undefined) {\n          let shift = this.y(d.yAccessor);\n          shift = shift + this.y.bandwidth() * (shift / this.y(this.y.domain()[0]));\n          return shift;\n        } else if (this.interpolating) {\n          return this.interpolating.y(d.yAccessor);\n        }\n        return this.y(d.yAccessor);\n      })\n      .attr('height', d => {\n        if (this.interpolating && this.interpolating.y(d.yAccessor) === undefined) {\n          return 0;\n        } else if (this.interpolating) {\n          return this.interpolating.y.bandwidth();\n        }\n        return this.y.bandwidth();\n      })\n      .attr('x', d => {\n        if (this.interpolating && this.interpolating.x(d.xAccessor) === undefined) {\n          let shift = this.x(d.xAccessor);\n          shift = shift + this.x.bandwidth() * (shift / this.x(this.x.domain()[this.x.domain().length - 1]));\n          return shift;\n        } else if (this.interpolating) {\n          return this.interpolating.x(d.xAccessor);\n        }\n        return this.x(d.xAccessor);\n      })\n      .attr('width', d => {\n        if (this.interpolating && this.interpolating.x(d.xAccessor) === undefined) {\n          return 0;\n        } else if (this.interpolating) {\n          return this.interpolating.x.bandwidth();\n        }\n        return this.x.bandwidth();\n      })\n      .attr('rx', this.shape === 'circle' ? this.x.bandwidth() : 0)\n      .attr('ry', this.shape === 'circle' ? this.y.bandwidth() : 0);\n\n    this.update.order();\n    this.enterRowWrappers.order();\n  }\n\n  updateGeometries() {\n    this.update.interrupt();\n\n    this.update\n      .transition('opacity')\n      .duration((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          select(n[i]).classed('entering', false);\n          return this.duration;\n        }\n        return 0;\n      })\n      .ease(easeCircleIn)\n      .attr('opacity', d => {\n        return checkInteraction(\n          d,\n          1,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        );\n      });\n  }\n\n  exitGeometries() {\n    this.exit.interrupt();\n\n    this.exit\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .attr('y', (d, i, n) => {\n        if (this.y(d.yAccessor) === undefined) {\n          const self = select(n[i]);\n          let shift = +self.attr('y');\n          shift = shift + +self.attr('height') * (shift / this.y(this.y.domain()[0]));\n          return shift;\n        }\n        return this.y(d.yAccessor);\n      })\n      .attr('height', d => {\n        if (this.y(d.yAccessor) === undefined) {\n          return 0;\n        }\n        return this.y.bandwidth();\n      })\n      .attr('x', (d, i, n) => {\n        if (this.x(d.xAccessor) === undefined) {\n          const self = select(n[i]);\n          let shift = +self.attr('x');\n          shift = shift + +self.attr('width') * (shift / this.x(this.x.domain()[this.x.domain().length - 1]));\n          return shift;\n        }\n        return this.x(d.xAccessor);\n      })\n      .attr('width', d => {\n        if (this.x(d.xAccessor) === undefined) {\n          return 0;\n        }\n        return this.x.bandwidth();\n      });\n\n    this.exitRowWrappers\n      .selectAll('.grid')\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .attr('y', (_, i, n) => {\n        const self = select(n[i]);\n        let shift = +self.attr('y');\n        shift = shift + +self.attr('height') * (shift / this.y(this.y.domain()[0]));\n        return shift;\n      })\n      .attr('height', 0)\n      .attr('x', (d, i, n) => {\n        if (this.x(d.xAccessor) === undefined) {\n          const self = select(n[i]);\n          let shift = +self.attr('x');\n          shift = shift + +self.attr('width') * (shift / this.x(this.x.domain()[this.x.domain().length - 1]));\n          return shift;\n        }\n        return this.x(d.xAccessor);\n      })\n      .attr('width', d => {\n        if (this.x(d.xAccessor) === undefined) {\n          return 0;\n        }\n        return this.x.bandwidth();\n      });\n\n    // this new transtition ensures that the chart counts and all labels\n    // correctly reflect the newest information\n    this.update\n      .transition('accessibilityAfterExit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        // before we exit geometries, we need to check if a focus exists or not\n        const focusDidExist = checkAccessFocus(this.rootG.node());\n        // then we must remove the exiting elements\n        this.exit.remove();\n        this.exitRowWrappers.remove();\n        // then our util can count geometries\n        this.setChartCountAccessibility();\n        // our group's label should update with new counts too\n        this.setGroupAccessibilityID();\n        // since items exited, labels must receive updated values\n        this.setGeometryAriaLabels();\n        // and also make sure the user's focus isn't lost\n        retainAccessFocus({\n          parentGNode: this.rootG.node(),\n          focusDidExist\n        });\n      });\n  }\n\n  drawGeometries() {\n    this.updateRowWrappers\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        this.updateRowWrappers.classed('entering', false);\n      });\n\n    const updateTransition = this.update\n      .classed('geometryIsMoving', (d, i, n) => {\n        const geometryIsUpdating = checkAttributeTransitions(select(n[i]), [\n          {\n            attr: 'y',\n            numeric: true,\n            newValue: this.y(d.yAccessor)\n          },\n          {\n            attr: 'height',\n            numeric: true,\n            newValue: this.y.bandwidth()\n          },\n          {\n            attr: 'x',\n            numeric: true,\n            newValue: this.x(d.xAccessor)\n          },\n          {\n            attr: 'width',\n            numeric: true,\n            newValue: this.x.bandwidth()\n          },\n          {\n            attr: 'rx',\n            numeric: true,\n            newValue: this.shape === 'circle' ? this.x.bandwidth() : 0\n          },\n          {\n            attr: 'ry',\n            numeric: true,\n            newValue: this.shape === 'circle' ? this.y.bandwidth() : 0\n          }\n        ]);\n        return geometryIsUpdating;\n      })\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('y', d => this.y(d.yAccessor))\n      .attr('height', this.y.bandwidth())\n      .attr('x', d => this.x(d.xAccessor))\n      .attr('width', this.x.bandwidth())\n      .attr('rx', this.shape === 'circle' ? this.x.bandwidth() : 0)\n      .attr('ry', this.shape === 'circle' ? this.y.bandwidth() : 0);\n\n    if (this.accessibility.hideTextures || !this.accessibility.showExperimentalTextures) {\n      updateTransition.attr('fill', d => {\n        return this.heat(d[this.valueAccessor]);\n      });\n    }\n\n    updateTransition.call(transitionEndAll, () => {\n      this.update.classed('geometryIsMoving', false);\n\n      this.updateInteractionState();\n\n      // we must make sure if geometries move, that our focus indicator does too\n      retainAccessFocus({\n        parentGNode: this.rootG.node()\n      });\n\n      // now we can emit the event that transitions are complete\n      this.transitionEndEvent.emit({ chartID: this.chartID });\n    });\n  }\n\n  updateInteractionState() {\n    removeHoverStrokes(this.svg.node());\n\n    // we use this.update and this.labelCurrent from setGlobalSelection here\n    // the lifecycle state does not matter (enter/update/exit)\n    // since interaction state can happen at any time\n\n    this.update\n      .attr('fill', d => {\n        return this.heat(d[this.valueAccessor]);\n      })\n      .attr('opacity', d => {\n        return checkInteraction(\n          d,\n          1,\n          this.hoverOpacity,\n          this.hoverHighlight,\n          this.clickHighlight,\n          this.innerInteractionKeys\n        );\n      })\n      .attr('filter', (d, i, n) => {\n        if (!this.accessibility.hideStrokes && !select(n[i]).classed('geometryIsMoving')) {\n          const clicked =\n            this.clickHighlight &&\n            this.clickHighlight.length > 0 &&\n            checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n          const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n          const baseColor =\n            !this.accessibility.hideTextures && this.accessibility.showExperimentalTextures\n              ? this.fillColors(d[this.valueAccessor])\n              : this.rawHeat(d[this.valueAccessor]);\n          const strokeOverride =\n            !this.accessibility.hideTextures && this.accessibility.showExperimentalTextures\n              ? this.strokeColors(d[this.valueAccessor])\n              : undefined;\n          const state = clicked ? 'click' : hovered && !select(n[i]).classed('geometryIsMoving') ? 'hover' : 'rest';\n          if (state === 'hover') {\n            drawHoverStrokes({\n              inputElement: n[i],\n              id: this.chartID,\n              key: d[this.xAccessor] + d[this.yAccessor],\n              strokeWidth: this.hoverStyle.strokeWidth,\n              fill: baseColor,\n              strokeOverride\n            });\n          }\n          return this.strokes[state + baseColor];\n        }\n        return null;\n      });\n\n    // in case the fill/stroke contents change, we want to update our focus indicator to match\n    // (the focus indicator copies the whole element being focused to place it on top)\n    retainAccessFocus({\n      parentGNode: this.rootG.node()\n    });\n\n    // since elements may have changed fill, we update labels to match\n    this.updateLabels.attr('fill', this.textTreatmentHandler);\n  }\n\n  setLabelOpacity() {\n    this.processLabelOpacity(this.updateLabels);\n  }\n\n  processLabelOpacity(selection, isATransition?) {\n    const opacity = this.dataLabel.visible ? 1 : 0;\n    const dimensions = {\n      width: this.x.bandwidth(),\n      height: this.y.bandwidth()\n    };\n    const parseText = d => {\n      let text = this.dataLabel.labelAccessor ? d[this.dataLabel.labelAccessor] : d.valueAccessor;\n      text =\n        text instanceof Date\n          ? formatDate({\n              date: text,\n              format: this.dataLabel.format,\n              offsetTimezone: true\n            })\n          : formatStats(text, this.dataLabel.format);\n      const hasRoom =\n        this.accessibility.showSmallLabels ||\n        verifyTextHasSpace({\n          text,\n          dimensions,\n          fontSize: 14\n        });\n      return hasRoom\n        ? checkInteraction(\n            d,\n            opacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n          ? 0\n          : 1\n        : 0;\n    };\n    if (isATransition) {\n      selection.attr('opacity', parseText);\n    } else {\n      selection.each((d, i, n) => {\n        if (!select(n[i]).classed('entering')) {\n          select(n[i]).attr('opacity', () => parseText(d));\n        }\n      });\n    }\n  }\n\n  textTreatmentHandler = (d, i, n) => {\n    const bgColor =\n      !this.accessibility.hideTextures && this.accessibility.showExperimentalTextures\n        ? this.fillColors(d.valueAccessor)\n        : this.rawHeat(d.valueAccessor);\n    const color = autoTextColor(bgColor);\n    const me = select(n[i]);\n    me.attr(\n      'filter',\n      !me.classed('textIsMoving')\n        ? createTextStrokeFilter({\n            root: this.svg.node(),\n            id: this.chartID,\n            color: bgColor\n          })\n        : null\n    );\n    return color;\n  };\n\n  setSelectedClass() {\n    this.update.classed('highlight', (d, i, n) => {\n      let selected = checkInteraction(d, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n      selected = this.clickHighlight && this.clickHighlight.length ? selected : false;\n      const selectable = this.accessibility.elementsAreInterface;\n      setElementInteractionAccessState(n[i], selected, selectable);\n      return selected;\n    });\n  }\n\n  updateCursor() {\n    this.update.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    this.updateLabels.attr('cursor', !this.suppressEvents ? this.cursor : null);\n  }\n\n  bindInteractivity() {\n    this.update\n      .on(\n        'click',\n        !this.suppressEvents\n          ? (d, i, n) => {\n              this.onClickHandler(d, n[i]);\n            }\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents\n          ? (d, i, n) => {\n              this.onHoverHandler(d, n[i]);\n            }\n          : null\n      )\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    this.updateLabels\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  enterDataLabels() {\n    this.enteringLabelGroups.attr('class', 'heat-map-label-wrapper');\n\n    this.enterLabels\n      .attr('class', 'heat-map-dataLabel entering')\n      .attr('opacity', 0)\n      .attr('fill', this.textTreatmentHandler)\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n\n    placeDataLabels({\n      root: this.enterLabels,\n      xScale: this.x,\n      yScale: this.y,\n      ordinalAccessor: 'xAccessor',\n      valueAccessor: 'yAccessor',\n      chartType: 'heat-map'\n    });\n  }\n\n  updateDataLabels() {\n    const updateTransition = this.updateLabels\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          return this.duration / 2;\n        }\n        return 0;\n      })\n      .delay((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          return this.duration / 2;\n        }\n        return 0;\n      });\n\n    this.processLabelOpacity(updateTransition, true);\n    updateTransition.call(transitionEndAll, () => {\n      this.updateLabels.classed('entering', false);\n    });\n    // this.updatingLabelGroups\n    //   .transition('opacity')\n    //   .duration(this.duration)\n    //   .ease(easeCircleIn)\n    //   .attr('opacity', d => {\n    //     return checkInteraction(\n    //       d,\n    //       this.dataLabel.visible ? 1 : 0,\n    //       this.hoverOpacity,\n    //       this.hoverHighlight,\n    //       this.clickHighlight,\n    //       this.innerInteractionKeys\n    //     ) < 1\n    //       ? 0\n    //       : 1;\n    //   })\n    //   .call(transitionEndAll, () => {\n    //     this.updatingLabelGroups.classed('entering', false);\n    //   });\n  }\n\n  exitDataLabels() {\n    this.exitLabels\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .attr('opacity', 0)\n      .remove();\n\n    this.exitingLabelGroups\n      .selectAll('text')\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .attr('opacity', 0)\n      .call(transitionEndAll, () => {\n        this.exitingLabelGroups.remove();\n      });\n  }\n\n  drawDataLabels() {\n    this.updateLabels.attr('fill', this.textTreatmentHandler).text(d => {\n      const text = this.dataLabel.labelAccessor ? d[this.dataLabel.labelAccessor] : d.valueAccessor;\n      return text instanceof Date\n        ? formatDate({\n            date: text,\n            format: this.dataLabel.format,\n            offsetTimezone: true\n          })\n        : formatStats(text, this.dataLabel.format);\n    });\n\n    const placeLabels = this.updateLabels\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration);\n\n    placeDataLabels({\n      root: placeLabels,\n      xScale: this.x,\n      yScale: this.y,\n      ordinalAccessor: 'xAccessor',\n      valueAccessor: 'yAccessor',\n      chartType: 'heat-map'\n    });\n  }\n\n  drawLegendElements() {\n    drawLegend({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      width: this.innerPaddedWidth,\n      height: this.margin.bottom + 60,\n      colorArr: this.legend && this.legend.type !== 'gradient' ? this.colorArr : this.preparedColors,\n      baseColorArr: !(this.colorPalette && this.colorPalette.includes('diverging'))\n        ? [this.preparedColors[this.preparedColors.length - 1]]\n        : this.strokeColors.range(),\n      hideStrokes: this.accessibility.hideStrokes,\n      scale: this.heat,\n      steps: this.colorSteps,\n      margin: this.margin,\n      padding: this.padding,\n      duration: this.duration,\n      type: this.legend.type,\n      fontSize: 12,\n      label: this.legend.labels,\n      format: this.legend.format,\n      hide: !this.legend.visible\n    });\n  }\n\n  drawAnnotations() {\n    annotate({\n      source: this.rootG.node(),\n      data: this.annotations,\n      xScale: this.x,\n      xAccessor: this.xAccessor,\n      yScale: this.y,\n      yAccessor: this.yAccessor\n    });\n  }\n\n  setAnnotationAccessibility() {\n    setAccessAnnotation(this.getLanguageString(), this.heatMapEl, this.annotations, undefined);\n  }\n  // new accessibility functions added here\n  setTagLevels() {\n    this.topLevel = findTagLevel(this.highestHeadingLevel);\n    this.bottomLevel = findTagLevel(this.highestHeadingLevel, 3);\n  }\n\n  setChartDescriptionWrapper() {\n    // this initializes the accessibility description section of the chart\n    initializeDescriptionRoot({\n      language: this.getLanguageString(),\n      rootEle: this.heatMapEl,\n      title: this.accessibility.title || this.mainTitle,\n      chartTag: 'heat-map',\n      uniqueID: this.chartID,\n      highestHeadingLevel: this.highestHeadingLevel,\n      redraw: this.shouldRedrawWrapper,\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      hideDataTable: this.accessibility.hideDataTableButton\n    });\n    this.shouldRedrawWrapper = false;\n  }\n\n  setParentSVGAccessibility() {\n    // this sets the accessibility features of the root SVG element\n    setAccessibilityController({\n      chartTag: 'heat-map',\n      language: this.getLanguageString(),\n      node: this.svg.node(),\n      title: this.accessibility.title || this.mainTitle,\n      description: this.subTitle,\n      uniqueID: this.chartID,\n      geomType: 'cell',\n      includeKeyNames: this.accessibility.includeDataKeyNames,\n      dataKeys: scopeDataKeys(this, chartAccessors, 'heat-map'),\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.yAccessor,\n      groupName: 'row',\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled\n    });\n  }\n\n  setGeometryAccessibilityAttributes() {\n    // this makes sure every geom element has correct event handlers + semantics (role, tabindex, etc)\n    this.update.each((_d, i, n) => {\n      initializeElementAccess(n[i]);\n    });\n  }\n\n  setGeometryAriaLabels() {\n    // this adds an ARIA label to each geom (a description read by screen readers)\n    const keys = scopeDataKeys(this, chartAccessors, 'heat-map');\n    this.update.each((_d, i, n) => {\n      setElementFocusHandler({\n        chartTag: 'heat-map',\n        language: this.getLanguageString(),\n        node: n[i],\n        geomType: 'cell',\n        includeKeyNames: this.accessibility.includeDataKeyNames,\n        dataKeys: keys,\n        dataKeyNames: this.dataKeyNames,\n        groupName: 'row',\n        uniqueID: this.chartID,\n        disableKeyNav:\n          this.suppressEvents &&\n          this.accessibility.elementsAreInterface === false &&\n          this.accessibility.keyboardNavConfig &&\n          this.accessibility.keyboardNavConfig.disabled\n      });\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setGroupAccessibilityID() {\n    // this sets an ARIA label on all the g elements in the chart\n    this.updateRowWrappers.each((_, i, n) => {\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setChartAccessibilityTitle() {\n    setAccessTitle(this.getLanguageString(), this.heatMapEl, this.accessibility.title || this.mainTitle);\n  }\n\n  setChartAccessibilitySubtitle() {\n    setAccessSubtitle(this.getLanguageString(), this.heatMapEl, this.subTitle);\n  }\n\n  setChartAccessibilityLongDescription() {\n    setAccessLongDescription(this.getLanguageString(), this.heatMapEl, this.accessibility.longDescription);\n  }\n\n  setChartAccessibilityExecutiveSummary() {\n    setAccessExecutiveSummary(this.getLanguageString(), this.heatMapEl, this.accessibility.executiveSummary);\n  }\n\n  setChartAccessibilityPurpose() {\n    setAccessPurpose(this.getLanguageString(), this.heatMapEl, this.accessibility.purpose);\n  }\n\n  setChartAccessibilityContext() {\n    setAccessContext(this.getLanguageString(), this.heatMapEl, this.accessibility.contextExplanation);\n  }\n\n  setChartAccessibilityStatisticalNotes() {\n    setAccessStatistics(this.getLanguageString(), this.heatMapEl, this.accessibility.statisticalNotes);\n  }\n\n  setChartCountAccessibility() {\n    // this is our automated section that describes the chart contents\n    // (like geometry and group counts, etc)\n    setAccessChartCounts({\n      rootEle: this.heatMapEl,\n      parentGNode: this.map.node(), // pass the wrapper to <g> or geometries here, should be single node selection\n      chartTag: 'heat-map',\n      geomType: 'cell',\n      groupName: 'row'\n    });\n  }\n\n  setChartAccessibilityStructureNotes() {\n    setAccessStructure(this.getLanguageString(), this.heatMapEl, this.accessibility.structureNotes);\n  }\n  // new accessibility stuff ends here\n\n  onChangeHandler() {\n    if (this.accessibility && typeof this.accessibility.onChangeFunc === 'function') {\n      const d = {\n        updated: this.updated,\n        added: this.enterSize,\n        removed: this.exitSize\n      };\n      this.accessibility.onChangeFunc(d);\n    }\n    this.updated = false;\n    this.enterSize = 0;\n    this.exitSize = 0;\n  }\n\n  onClickHandler(d, n) {\n    this.clickEvent.emit({ data: d, target: n });\n  }\n\n  onHoverHandler(d, n) {\n    overrideTitleTooltip(this.chartID, true);\n    this.hoverEvent.emit({ data: d, target: n });\n    if (this.showTooltip) {\n      this.eventsTooltip({ data: d, evt: event, isToShow: true });\n    }\n  }\n\n  onMouseOutHandler() {\n    overrideTitleTooltip(this.chartID, false);\n    this.mouseOutEvent.emit();\n    if (this.showTooltip) {\n      this.eventsTooltip({ isToShow: false });\n    }\n  }\n\n  // set initial style (instead of copying css class across the lib)\n  setTooltipInitialStyle() {\n    initTooltipStyle(this.tooltipG);\n  }\n\n  // tooltip\n  eventsTooltip({ data, evt, isToShow }: { data?: any; evt?: any; isToShow: boolean }) {\n    drawTooltip({\n      root: this.tooltipG,\n      data,\n      event: evt,\n      isToShow,\n      tooltipLabel: this.tooltipLabel,\n      xAxis: this.xAxis,\n      yAxis: this.yAxis,\n      dataLabel: this.dataLabel,\n      dataKeyNames: this.dataKeyNames,\n      valueAccessor: this.valueAccessor,\n      xAccessor: this.xAccessor,\n      yAccessor: this.yAccessor,\n      chartType: 'heat-map'\n    });\n  }\n\n  render() {\n    this.drawStartEvent.emit({ chartID: this.chartID });\n    // everything between this comment and the third should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n    this.init();\n    if (this.shouldSetLocalizationConfig) {\n      this.setLocalizationConfig();\n      this.shouldSetLocalizationConfig = false;\n    }\n    if (this.shouldSetTagLevels) {\n      this.setTagLevels();\n      this.shouldSetTagLevels = false;\n    }\n    if (this.shouldUpdateData) {\n      this.prepareData();\n      this.shouldUpdateData = false;\n    }\n    if (this.shouldSetDimensions) {\n      this.setDimensions();\n      this.shouldSetDimensions = false;\n    }\n    if (this.shouldSetColors) {\n      this.setColors();\n      this.shouldSetColors = false;\n    }\n    if (this.shouldUpdateScales) {\n      this.prepareScales();\n      this.shouldUpdateScales = false;\n    }\n    if (this.shouldFormatClickHighlight) {\n      this.formatClickHighlight();\n      this.shouldFormatClickHighlight = false;\n    }\n    if (this.shouldFormatHoverHighlight) {\n      this.formatHoverHighlight();\n      this.shouldFormatHoverHighlight = false;\n    }\n    if (this.shouldValidateInteractionKeys) {\n      this.validateInteractionKeys();\n      this.shouldValidateInteractionKeys = false;\n    }\n    if (this.shouldUpdateTableData) {\n      this.setTableData();\n      this.shouldUpdateTableData = false;\n    }\n    if (this.shouldValidate) {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.shouldValidate = false;\n    }\n    // Everything between this comment and the first should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n\n    return (\n      <div class={`o-layout`}>\n        <div class=\"o-layout--chart\">\n          <this.topLevel class=\"heat-main-title vcl-main-title\">{this.mainTitle}</this.topLevel>\n          <this.bottomLevel class=\"visa-ui-text--instructions heat-sub-title vcl-sub-title\" />\n          <div class=\"heat-map-legend vcl-legend\" style={{ display: this.legend.visible ? 'block' : 'none' }} />\n          <keyboard-instructions\n            uniqueID={this.chartID}\n            geomType={'cell'}\n            groupName={'row'} // taken from initializeDescriptionRoot, on bar this should be \"bar group\", stacked bar is \"stack\", and clustered is \"cluster\"\n            language={this.getLanguageString()}\n            chartTag={'heat-map'}\n            width={this.width - (this.margin ? this.margin.right || 0 : 0)}\n            isInteractive={this.accessibility.elementsAreInterface}\n            hasCousinNavigation\n            disabled={\n              this.suppressEvents &&\n              this.accessibility.elementsAreInterface === false &&\n              this.accessibility.keyboardNavConfig &&\n              this.accessibility.keyboardNavConfig.disabled\n            } // the chart is \"simple\"\n          />\n          <div class=\"visa-viz-d3-heat-map-container\" />\n          <div class=\"heat-map-tooltip vcl-tooltip\" style={{ display: this.showTooltip ? 'block' : 'none' }} />\n          <data-table\n            uniqueID={this.chartID}\n            isCompact\n            language={this.getLanguageString()}\n            tableColumns={this.tableColumns}\n            data={this.tableData}\n            dataKeyNames={this.dataKeyNames}\n            padding={this.padding}\n            margin={this.margin}\n            hideDataTable={this.accessibility.hideDataTableButton}\n            unitTest={this.unitTest}\n          />\n        </div>\n      </div>\n    );\n  }\n  private init() {\n    // reading properties\n    const keys = Object.keys(HeatMapDefaultValues);\n    let i = 0;\n    // accept 0 or false as default value\n    const exceptions = {\n      strokeWidth: {\n        exception: 0\n      },\n      showTooltip: {\n        exception: false\n      },\n      mainTitle: {\n        exception: ''\n      },\n      subTitle: {\n        exception: ''\n      },\n      wrapLabel: {\n        exception: false\n      },\n      hoverOpacity: {\n        exception: 0\n      }\n    };\n    for (i = 0; i < keys.length; i++) {\n      const exception = !exceptions[keys[i]] ? false : this[keys[i]] === exceptions[keys[i]].exception;\n      this[keys[i]] = this[keys[i]] || exception ? this[keys[i]] : HeatMapDefaultValues[keys[i]];\n    }\n  }\n}\n\n// incorporate OSS licenses into build\nwindow['VisaChartsLibOSSLicenses'] = getLicenses(); // tslint:disable-line no-string-literal\n"],"mappings":"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","ignoreList":[]}