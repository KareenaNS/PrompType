{"version":3,"names":["sum","values","valueof","undefined","_i","values_1","length","value","index","_a","values_2","propDefaultValues","Utils","StackedBarChartDefaultValues","mainTitle","subTitle","text","height","width","margin","top","bottom","right","left","padding","localization","normalized","showTotalValue","showZeroLabels","ordinalAccessor","valueAccessor","groupAccessor","layout","accessibility","animationConfig","highestHeadingLevel","sortOrder","xAxis","yAxis","wrapLabel","colorPalette","colorPaletteCategorical","hoverStyle","clickStyle","referenceStyle","cursor","roundedCorner","barIntervalRatio","hoverOpacity","dataLabel","dataLabelMiddle","legend","categoryLegend","tooltipLabel","showTooltip","suppressEvents","referenceLines","annotations","clickHighlight","stackedBarChartCss","StackedBarChartStyle0","getGlobalInstances","configLocalization","getActiveLanguageString","getBrowser","verifyTextHasSpace","checkAttributeTransitions","createTextStrokeFilter","drawHoverStrokes","removeHoverStrokes","buildStrokes","convertColorsToTextures","findTagLevel","prepareRenderChange","initializeDescriptionRoot","initializeElementAccess","setElementFocusHandler","setElementAccessID","setAccessibilityController","hideNonessentialGroups","setAccessTitle","setAccessSubtitle","setAccessLongDescription","setAccessExecutiveSummary","setAccessPurpose","setAccessContext","setAccessStatistics","setAccessChartCounts","setAccessXAxis","setAccessYAxis","setAccessStructure","setAccessAnnotation","retainAccessFocus","checkAccessFocus","setElementInteractionAccessState","setAccessibilityDescriptionWidth","autoTextColor","annotate","chartAccessors","checkInteraction","checkClicked","checkHovered","convertVisaColor","drawAxis","drawGrid","drawLegend","setLegendInteractionState","drawTooltip","formatStats","formatDate","formatDataLabel","getPadding","getColors","getLicenses","getScopedData","initTooltipStyle","overrideTitleTooltip","placeDataLabels","transitionEndAll","scopeDataKeys","visaColors","validateAccessibilityProps","validateLocalizationProps","roundTo","resolveLabelCollision","setSubTitle","setReferenceLine","StackedBarChart","this","shouldValidateAccessibility","shouldValidateLocalization","series","extent","datakeys","updated","shouldValidateInteractionKeys","shouldValidate","shouldUpdateData","shouldSetDimensions","shouldUpdateTableData","shouldSetColors","shouldSetSubTitle","shouldValidateAxes","shouldValidateClickHighlight","shouldUpdateScales","shouldUpdateAnnotations","shouldResetRoot","shouldEnterUpdateExit","shouldSetGlobalSelections","shouldSetTestingAttributes","shouldUpdateGeometries","shouldCheckValueAxis","shouldCheckLabelAxis","shouldUpdateXAxis","shouldUpdateYAxis","shouldUpdateXGrid","shouldUpdateYGrid","shouldUpdateBaseline","shouldSetSelectionClass","shouldUpdateCursor","shouldUpdateCorners","shouldUpdateLegendData","shouldValidateLabelPlacement","shouldValidateDataLabelAccessor","shouldUpdateLegend","shouldUpdateLegendInteractivity","shouldUpdateReferenceLines","shouldDrawInteractionState","shouldBindInteractivity","shouldSetLabelOpacity","shouldUpdateLabels","shouldUpdateTotalLabels","shouldCheckLabelColor","shouldUpdateDescriptionWrapper","shouldSetChartAccessibilityTitle","shouldSetChartAccessibilitySubtitle","shouldSetChartAccessibilityLongDescription","shouldSetChartAccessibilityExecutiveSummary","shouldSetChartAccessibilityStatisticalNotes","shouldSetChartAccessibilityStructureNotes","shouldSetParentSVGAccessibility","shouldSetGeometryAccessibilityAttributes","shouldSetGeometryAriaLabels","shouldSetGroupAccessibilityLabel","shouldSetChartAccessibilityPurpose","shouldSetChartAccessibilityContext","shouldRedrawWrapper","shouldSetTagLevels","shouldSetChartAccessibilityCount","shouldSetYAxisAccessibility","shouldSetXAxisAccessibility","shouldSetAnnotationAccessibility","shouldSetTextures","shouldSetStrokes","shouldSetLocalizationConfig","isSafari","strokes","textStrokes","topLevel","bottomLevel","textTreatmentHandler","d","i","n","me","select","bgColor","_this","innerInteractionKeys","color","hoverHighlight","preparedColors","classed","filter_1","attr","setTimeout","prototype","dataWatcher","_newData","_oldData","idWatcher","newID","_oldID","console","error","headingWatcher","_newVal","_oldVal","titleWatcher","subtitleWatcher","dimensionWatcher","layoutWatcher","interpolating","ordinalAccessorWatcher","interactionKeys","valueAccessorWatcher","groupAccessorWatcher","sortWatcher","xAxisWatcher","newGridVal","gridVisible","oldGridVal","newTickInterval","tickInterval","oldTickInterval","yAxisWatcher","wrapLabelWatcher","normalizedWatcher","paletteWatcher","colorsWatcher","hoverStyleWatcher","clickStyleWatcher","referenceWatcher","cursorWatcher","cornerWatcher","intervalRatioWatcher","hoverOpacityWatcher","labelWatcher","newPlacementVal","placement","oldPlacementVal","newVisibleVal","visible","oldVisibleVal","newAccessor","labelAccessor","oldAccessor","showTotalValueWatcher","showTooltipWatcher","tooltipLabelWatcher","localizationWatcher","newLanguage","language","oldLanguage","newNumeralLocale","numeralLocale","oldNumeralLocale","accessibilityWatcher","newTitle","title","oldTitle","newExecutiveSummary","executiveSummary","oldExecutiveSummary","newPurpose","purpose","oldPurpose","newLongDescription","longDescription","oldLongDescription","newContext","contextExplanation","oldContext","newStatisticalNotes","statisticalNotes","oldStatisticalNotes","newStructureNotes","structureNotes","oldStructureNotes","newincludeDataKeyNames","includeDataKeyNames","oldincludeDataKeyNames","newElementDescriptionAccessor","elementDescriptionAccessor","oldElementDescriptionAccessor","newTextures","hideTextures","oldTextures","newSmallValue","showSmallLabels","oldSmallValue","newStrokes","hideStrokes","oldStrokes","newKeyNav","keyboardNavConfig","disabled","oldKeyNav","newInterface","elementsAreInterface","oldInterface","showZeroLabelsWatcher","legendWatcher","newInteractiveVal","interactive","oldInteractiveVal","annotationsWatcher","valueOverrideWatcher","interactionWatcher","dataKeyNamesWatcher","hoverWatcher","clickWatcher","suppressWatcher","unitTestWatcher","componentWillLoad","chartID","uniqueID","uuid","initialLoadEvent","emit","Promise","resolve","duration","defaults","stackedBarChartEl","id","setLocalizationConfig","setTagLevels","prepareData","prepareLegendData","setDimensions","prepareScales","validateClickHighlight","validateInteractionKeys","validateDataLabelAccessor","validateAxes","setTableData","shouldValidateAccessibilityProps","shouldValidateLocalizationProps","setColors","componentWillUpdate","componentDidLoad","renderRootElements","setTooltipInitialStyle","setChartDescriptionWrapper","setChartAccessibilityTitle","setChartAccessibilitySubtitle","setChartAccessibilityLongDescription","setChartAccessibilityExecutiveSummary","setChartAccessibilityPurpose","setChartAccessibilityContext","setChartAccessibilityStatisticalNotes","setChartAccessibilityStructureNotes","setParentSVGAccessibility","reSetRoot","setTextures","setStrokes","setSubTitleElements","drawXGrid","drawYGrid","setGlobalSelections","setTestingAttributes","enterGeometries","updateGeometries","exitGeometries","setRoundedCorners","drawGeometries","enterDataLabels","updateDataLabels","exitDataLabels","enterTotalDataLabels","updateTotalDataLabels","exitTotalDataLabels","setChartCountAccessibility","setGeometryAccessibilityAttributes","setGeometryAriaLabels","drawLegendElements","bindLegendInteractivity","validateLabelPlacement","drawDataLabels","drawTotalDataLabels","drawReferenceLines","setSelectedClass","checkLabelColorAgainstBackground","updateCursor","bindInteractivity","drawAnnotations","setAnnotationAccessibility","drawXAxis","setXAxisAccessibility","drawYAxis","setYAxisAccessibility","drawBaseline","root","node","barG","setGroupAccessibilityID","onChangeHandler","then","initialLoadEndEvent","componentDidUpdate","updateInteractionState","setLabelOpacity","drawEndEvent","windowInstances","languageString","i18Next","languageObject","getResourceBundle","numeralObject","numeral","localeData","skipValidation","Object","assign","disableValidation","data","context","onClickEvent","clickEvent","misc","innerLabelAccessor","innerXAxis","innerYAxis","getLanguageString","modifier","getSum","innerHeight","innerWidth","innerPaddedHeight","innerPaddedWidth","dataCopy","forEach","keys","item","key","Date","getTime","push","nestData","nest","parseFloat","date","format","offsetTimezone","entries","stackOrder","ordinalValues","stackDiverging","nestedArray","j","output","row","k","runSum","sumAboveZero","base","positive","negative","v","l","s","previous","stackEnd","stackStart","group","enteringStackStart","interpolateGroup_1","findInterpolation_1","preceedingElement","nextPrevious","sumMessage","__spreadArray","sort","a","b","legendData","map","flattenedNest","val","label_1","dataKeyNames","concat","tableData","tableColumns","subTitleG","colors","colorsArray","range","colorArr","colorsToConvert","textures","rootSVG","svg","scheme","disableTransitions","copy","stacked","minBarValue","minValueOverride","maxBarValue","maxValueOverride","domain","oldXDomain","x","oldXRange","oldYDomain","y","oldYRange","scaleBand","scaleLinear","append","rootG","gridG","labelG","totalLabels","legendG","tooltipG","referencesG","unitTest","updateBarWrappers","update","updateLabelWrappers","updateLabels","updateTotalLabels","selectAll","changeSvg","selection","namespace","easing","easeCircleIn","changeRoot","changeRootG","axisAccessor","axisLabel","label","axisScale","bandwidth","dateFormat","hide","rootEle","hasXAxis","xAxisLabel","hasYAxis","yAxisLabel","markOffset","dataBoundToBarGroups","enterBarWrappers","enter","exitBarWrappers","exit","merge","dataBoundToGeometries","exitSize","size","enterSize","dataBoundToLabelWrappers","enterLabelWrappers","exitLabelWrappers","dataBoundToLabels","enterLabels","exitLabels","dataBoundToTotalLabels","enterTotalLabels","exitTotalLabels","interrupt","ordinalAxis","ordinalDimension","valueAxis","valueDimension","each","_d","on","onClickHandler","onHoverHandler","onMouseOutHandler","clicked","hovered","baseColor","scale","direction","_","shift","order","transition","ease","call","self","focusDidExist","remove","parentGNode","geometryIsUpdating","numeric","newValue","transitionEndEvent","state","inputElement","strokeWidth","fill","filter_2","addCollisionClass","collisionHideOnly","hideOnly","textHeight","textElement","style","getComputedStyle","fontSize","Math","max","processLabelOpacity","labelsAdded","filter","labelsRemoved","collisionSettings","vertical","validPositions","offsets","middle","horizontal","collisionPlacement","boundsScope","bitmaps","labelSelection","avoidMarks","accessors","removeOnly","xScale","yScale","chartType","avoidCollision","runOccupancyBitmap","suppressMarkDraw","opacity","prevOpacity","styleVisibility","dimensions","hasRoom","targetOpacity","Number","EPSILON","selected","selectable","updatingLabels","stack","labelUpdate","textIsMoving","groupDimension","sumDimension","dark_text","totalValueOpacity","totalLabelSelection","groupName","ordinalScale","valueScale","maxDate","minDate","min","scaleTime","source","xAccessor","yAccessor","baseColorArr","type","labelKey","labels","hoverEvent","target","chartTag","redraw","disableKeyNav","hideDataTable","hideDataTableButton","description","geomType","includeKeyNames","dataKeys","groupKeys","onChangeFunc","added","removed","eventsTooltip","evt","event","isToShow","mouseOutEvent","render","drawStartEvent","theme","init","h","class","display","isInteractive","hasCousinNavigation","isCompact","exceptions","exception","window"],"sources":["node_modules/d3-array/src/sum.js","src/components/stacked-bar-chart/stacked-bar-chart-default-values.ts","src/components/stacked-bar-chart/stacked-bar-chart.scss?tag=stacked-bar-chart","src/components/stacked-bar-chart/stacked-bar-chart.tsx"],"sourcesContent":["export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport Utils from '@visa/visa-charts-utils';\n\nconst { propDefaultValues } = Utils;\nexport class StackedBarChartDefaultValues {\n  static readonly mainTitle = 'Stacked Bar Chart Title';\n  static readonly subTitle = propDefaultValues.subTitle.text;\n  static readonly height = 280;\n  static readonly width = 700;\n  static readonly margin = {\n    top: 400 * 0.01,\n    bottom: 400 * 0.01,\n    right: 400 * 0.01,\n    left: 400 * 0.01\n  };\n  static readonly padding = {\n    top: 20,\n    bottom: 50,\n    right: 50,\n    left: 50\n  };\n\n  static readonly localization = propDefaultValues.localization;\n\n  static readonly normalized = false;\n  static readonly showTotalValue = true;\n  static readonly showZeroLabels = false;\n\n  static readonly ordinalAccessor = 'label';\n  static readonly valueAccessor = 'value';\n  static readonly groupAccessor = 'item';\n\n  static readonly layout = propDefaultValues.layout;\n  static readonly accessibility = propDefaultValues.accessibility;\n  static readonly animationConfig = propDefaultValues.animationConfig;\n  static readonly highestHeadingLevel = propDefaultValues.highestHeadingLevel;\n  static readonly sortOrder = propDefaultValues.sortOrder;\n  static readonly xAxis = propDefaultValues.xAxis;\n\n  static readonly yAxis = propDefaultValues.yAxis;\n  static readonly wrapLabel = propDefaultValues.wrapLabel;\n  static readonly colorPalette = propDefaultValues.colorPaletteCategorical;\n\n  static readonly hoverStyle = propDefaultValues.hoverStyle;\n  static readonly clickStyle = propDefaultValues.clickStyle;\n\n  static readonly referenceStyle = propDefaultValues.referenceStyle;\n  static readonly cursor = propDefaultValues.cursor;\n  static readonly roundedCorner = propDefaultValues.roundedCorner;\n  static readonly barIntervalRatio = propDefaultValues.barIntervalRatio;\n  static readonly hoverOpacity = propDefaultValues.hoverOpacity;\n\n  static readonly dataLabel = propDefaultValues.dataLabelMiddle;\n  static readonly dataKeyNames;\n  static readonly legend = propDefaultValues.categoryLegend;\n  static readonly tooltipLabel = propDefaultValues.tooltipLabel;\n\n  static readonly showTooltip = propDefaultValues.showTooltip;\n  static readonly suppressEvents = propDefaultValues.suppressEvents;\n  static readonly referenceLines = propDefaultValues.referenceLines;\n  static readonly annotations = propDefaultValues.annotations;\n\n  static readonly hoverHighlight;\n  static readonly clickHighlight = propDefaultValues.clickHighlight;\n}\n","/**\n * Copyright (c) 2020, 2021, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nstacked-bar-chart {\n  .annotations {\n    pointer-events: none;\n    .handle {\n      pointer-events: all;\n    }\n  }\n\n  .screen-reader-info {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  }\n\n  .data-table-link {\n    color: #767676;\n    text-decoration: none;\n    font-size: 12px;\n    margin-left: 5%;\n  }\n\n  .hidden {\n    display: none;\n  }\n  cursor: default;\n  #visa-viz-d3-stacked-bar-container {\n    clear: both;\n  }\n\n  .stacked-bar-legend {\n    font-size: 1em;\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    flex-wrap: wrap;\n    .legend {\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-start;\n      margin-right: 10px;\n    }\n\n    .key-dot {\n      margin: 3px 8px;\n    }\n  }\n\n  .light {\n    .grid {\n      line {\n        stroke: #c9c9c9;\n        stroke-opacity: 1;\n        stroke-width: 0.8;\n        // shape-rendering: crispEdges;\n        // stroke-dasharray: 4, 4;\n      }\n      path {\n        stroke-width: 0;\n      }\n    }\n\n    .axis {\n      font-size: 12px;\n      .tick {\n        text {\n          fill: #767676;\n        }\n        line {\n          stroke: #767676;\n        }\n      }\n\n      &-label {\n        // axis label\n        text-anchor: middle;\n        font: 1rem sans-serif;\n      }\n\n      &-mark {\n        // axis mark\n        color: #949494;\n        stroke-width: 2px;\n      }\n    }\n\n    .y.axis {\n      path {\n        stroke: #767676;\n        opacity: 0;\n      }\n    }\n    .x.axis {\n      path {\n        stroke: transparent;\n      }\n    }\n\n    .o-layout--chart {\n      .bar-dataLabel-vertical {\n        font-size: 1rem;\n        fill: #767676;\n        font-weight: 550;\n      }\n      .bar-dataLabel-horizontal {\n        font-size: 1rem;\n        fill: #767676;\n        font-weight: 550;\n      }\n    }\n  }\n  .dark {\n    .grid {\n      line {\n        stroke: lightgrey;\n        stroke-opacity: 0.7;\n        shape-rendering: crispEdges;\n      }\n      path {\n        stroke-width: 0;\n      }\n    }\n    .axis {\n      font-size: 12px;\n      .tick {\n        line {\n          stroke: lightgrey;\n        }\n        text {\n          fill: grey;\n        }\n      }\n      path {\n        stroke: black;\n      }\n\n      &-label {\n        text-anchor: middle;\n        font: 1rem sans-serif;\n      }\n    }\n    .o-layout--chart svg {\n      background: black;\n      .bar-dataLabel-vertical {\n        fill: #767676;\n        text-anchor: middle;\n      }\n      .bar-dataLabel-horizontal {\n        fill: #767676;\n        text-anchor: start;\n      }\n    }\n  }\n\n  //TBD: add color based on scheme\n  // .r.axis circle {\n  //   stroke: #cccccc;\n  //   stroke-width: 1px;\n  //   fill: none;\n  // }\n\n  //Text alignment, not impacted by color theme\n  // .a.axis text {\n  //   text-anchor: middle;\n  //   font-size: 10pt;\n  // }\n  //\n  // .r.axis text {\n  //   text-anchor: end;\n  //   font-size: 8pt;\n  // }\n}\n","/**\n * Copyright (c) 2020, 2021, 2022, 2023, 2024 Visa, Inc.\n *\n * This source code is licensed under the MIT license\n * https://github.com/visa/visa-chart-components/blob/master/LICENSE\n *\n **/\nimport { Component, Element, Prop, Watch, h, Event, EventEmitter } from '@stencil/core';\nimport { select, event } from 'd3-selection';\nimport { scaleBand, scaleLinear, scaleTime } from 'd3-scale';\nimport { nest } from 'd3-collection';\nimport { max, min, sum } from 'd3-array';\nimport { easeCircleIn } from 'd3-ease';\nimport 'd3-transition';\nimport { v4 as uuid } from 'uuid';\nimport Utils from '@visa/visa-charts-utils';\nimport {\n  IBoxModelType,\n  ILocalizationType,\n  IHoverStyleType,\n  IClickStyleType,\n  IAxisType,\n  IReferenceStyleType,\n  IDataLabelType,\n  ITooltipLabelType,\n  IAccessibilityType,\n  IAnimationConfig,\n  ILegendType,\n  ISubTitleType\n} from '@visa/charts-types';\nimport { StackedBarChartDefaultValues } from './stacked-bar-chart-default-values';\nconst {\n  getGlobalInstances,\n  configLocalization,\n  getActiveLanguageString,\n  getBrowser,\n  verifyTextHasSpace,\n  checkAttributeTransitions,\n  createTextStrokeFilter,\n  drawHoverStrokes,\n  removeHoverStrokes,\n  buildStrokes,\n  convertColorsToTextures,\n  findTagLevel,\n  prepareRenderChange,\n  initializeDescriptionRoot,\n  initializeElementAccess,\n  setElementFocusHandler,\n  setElementAccessID,\n  setAccessibilityController,\n  hideNonessentialGroups,\n  setAccessTitle,\n  setAccessSubtitle,\n  setAccessLongDescription,\n  setAccessExecutiveSummary,\n  setAccessPurpose,\n  setAccessContext,\n  setAccessStatistics,\n  setAccessChartCounts,\n  setAccessXAxis,\n  setAccessYAxis,\n  setAccessStructure,\n  setAccessAnnotation,\n  retainAccessFocus,\n  checkAccessFocus,\n  setElementInteractionAccessState,\n  setAccessibilityDescriptionWidth,\n  autoTextColor,\n  annotate,\n  chartAccessors,\n  checkInteraction,\n  checkClicked,\n  checkHovered,\n  convertVisaColor,\n  drawAxis,\n  drawGrid,\n  drawLegend,\n  setLegendInteractionState,\n  drawTooltip,\n  formatStats,\n  formatDate,\n  formatDataLabel,\n  getPadding,\n  getColors,\n  getLicenses,\n  getScopedData,\n  initTooltipStyle,\n  overrideTitleTooltip,\n  placeDataLabels,\n  transitionEndAll,\n  scopeDataKeys,\n  visaColors,\n  validateAccessibilityProps,\n  validateLocalizationProps,\n  roundTo,\n  resolveLabelCollision,\n  setSubTitle,\n  setReferenceLine\n} = Utils;\n@Component({\n  tag: 'stacked-bar-chart',\n  styleUrl: 'stacked-bar-chart.scss'\n})\nexport class StackedBarChart {\n  @Event() clickEvent: EventEmitter;\n  @Event() hoverEvent: EventEmitter;\n  @Event() mouseOutEvent: EventEmitter;\n  @Event() initialLoadEvent: EventEmitter;\n  @Event() initialLoadEndEvent: EventEmitter;\n  @Event() drawStartEvent: EventEmitter;\n  @Event() drawEndEvent: EventEmitter;\n  @Event() transitionEndEvent: EventEmitter;\n  // Chart Attributes (1/7)\n  @Prop({ mutable: true }) mainTitle: string = StackedBarChartDefaultValues.mainTitle;\n  @Prop({ mutable: true }) subTitle: string | ISubTitleType = StackedBarChartDefaultValues.subTitle;\n  @Prop({ mutable: true }) height: number = StackedBarChartDefaultValues.height;\n  @Prop({ mutable: true }) width: number = StackedBarChartDefaultValues.width;\n  @Prop({ mutable: true }) layout: string = StackedBarChartDefaultValues.layout;\n  @Prop({ mutable: true }) highestHeadingLevel: string | number = StackedBarChartDefaultValues.highestHeadingLevel;\n  @Prop({ mutable: true }) margin: IBoxModelType = StackedBarChartDefaultValues.margin;\n  @Prop({ mutable: true }) padding: IBoxModelType = StackedBarChartDefaultValues.padding;\n\n  // Data (2/7)\n  @Prop() data: object[];\n  @Prop() uniqueID: string;\n  @Prop({ mutable: true }) localization: ILocalizationType = StackedBarChartDefaultValues.localization;\n  @Prop({ mutable: true }) ordinalAccessor: string = StackedBarChartDefaultValues.ordinalAccessor;\n  @Prop({ mutable: true }) valueAccessor: string = StackedBarChartDefaultValues.valueAccessor;\n  @Prop({ mutable: true }) groupAccessor: string = StackedBarChartDefaultValues.groupAccessor;\n  @Prop({ mutable: true }) sortOrder: string = StackedBarChartDefaultValues.sortOrder;\n\n  // Axis (3/7)\n  @Prop({ mutable: true }) xAxis: IAxisType = StackedBarChartDefaultValues.xAxis;\n  @Prop({ mutable: true }) yAxis: IAxisType = StackedBarChartDefaultValues.yAxis;\n  @Prop({ mutable: true }) wrapLabel: boolean = StackedBarChartDefaultValues.wrapLabel;\n  @Prop({ mutable: true }) normalized: boolean = StackedBarChartDefaultValues.normalized;\n\n  // Color & Shape (4/7)\n  @Prop({ mutable: true }) colorPalette: string = StackedBarChartDefaultValues.colorPalette;\n  @Prop({ mutable: true }) colors: string[];\n  @Prop({ mutable: true }) hoverStyle: IHoverStyleType = StackedBarChartDefaultValues.hoverStyle;\n  @Prop({ mutable: true }) clickStyle: IClickStyleType = StackedBarChartDefaultValues.clickStyle;\n  @Prop({ mutable: true }) referenceStyle: IReferenceStyleType = StackedBarChartDefaultValues.referenceStyle;\n  @Prop({ mutable: true }) cursor: string = StackedBarChartDefaultValues.cursor;\n  @Prop({ mutable: true }) roundedCorner: number = StackedBarChartDefaultValues.roundedCorner;\n  @Prop({ mutable: true }) barIntervalRatio: number = StackedBarChartDefaultValues.barIntervalRatio;\n  @Prop({ mutable: true }) hoverOpacity: number = StackedBarChartDefaultValues.hoverOpacity;\n  @Prop({ mutable: true }) animationConfig: IAnimationConfig = StackedBarChartDefaultValues.animationConfig;\n\n  // Data label (5/7)\n  @Prop({ mutable: true }) dataLabel: IDataLabelType = StackedBarChartDefaultValues.dataLabel;\n  @Prop({ mutable: true }) dataKeyNames: object;\n  @Prop({ mutable: true }) showTotalValue: boolean = StackedBarChartDefaultValues.showTotalValue;\n  @Prop({ mutable: true }) showTooltip: boolean = StackedBarChartDefaultValues.showTooltip;\n  @Prop({ mutable: true }) tooltipLabel: ITooltipLabelType = StackedBarChartDefaultValues.tooltipLabel;\n  @Prop({ mutable: true }) accessibility: IAccessibilityType = StackedBarChartDefaultValues.accessibility;\n  @Prop({ mutable: true }) legend: ILegendType = StackedBarChartDefaultValues.legend;\n  @Prop({ mutable: true }) annotations: object[] = StackedBarChartDefaultValues.annotations;\n  @Prop({ mutable: true }) showZeroLabels: boolean = StackedBarChartDefaultValues.showZeroLabels;\n\n  // Calculation (6/7)\n  @Prop({ mutable: true }) minValueOverride: number;\n  @Prop({ mutable: true }) maxValueOverride: number;\n  @Prop({ mutable: true }) referenceLines: object[] = StackedBarChartDefaultValues.referenceLines;\n\n  // Interactivity (7/7)\n  @Prop({ mutable: true }) suppressEvents: boolean = StackedBarChartDefaultValues.suppressEvents;\n  @Prop({ mutable: true }) hoverHighlight: object;\n  @Prop({ mutable: true }) clickHighlight: object[] = StackedBarChartDefaultValues.clickHighlight;\n  @Prop({ mutable: true }) interactionKeys: string[];\n\n  // Testing (8/7)\n  @Prop() unitTest: boolean = false;\n  //  @Prop() debugMode: boolean = false;\n\n  // Element\n  @Element()\n  stackedBarChartEl: HTMLElement;\n  shouldValidateAccessibility: boolean = true;\n  shouldValidateLocalization: boolean = true;\n  svg: any;\n  root: any;\n  rootG: any;\n  gridG: any;\n  barG: any;\n  bars: any;\n  labelG: any;\n  labels: any;\n  totalLabels: any;\n  defaults: boolean;\n  current: any;\n  enter: any;\n  exit: any;\n  update: any;\n  enterBarWrappers: any;\n  exitBarWrappers: any;\n  updateBarWrappers: any;\n  x: any;\n  y: any;\n  innerHeight: number;\n  innerWidth: number;\n  innerPaddedHeight: number;\n  innerPaddedWidth: number;\n  innerXAxis: any;\n  innerYAxis: any;\n  series: any = [];\n  extent: any = [];\n  datakeys: any = [];\n  colorArr: any;\n  preparedColors: any;\n  duration: any;\n  referencesG: any;\n  legendG: any;\n  subTitleG: any;\n  tooltipG: any;\n  interpolating: any;\n  stackOrder: any;\n  updated: boolean = true;\n  enterSize: number;\n  exitSize: number;\n  enterLabels: any;\n  exitLabels: any;\n  updateLabels: any;\n  enterLabelWrappers: any;\n  updateLabelWrappers: any;\n  exitLabelWrappers: any;\n  enterTotalLabels: any;\n  updateTotalLabels: any;\n  exitTotalLabels: any;\n  tableData: any;\n  tableColumns: any;\n  chartID: string;\n  innerInteractionKeys: any;\n  innerLabelAccessor: string;\n  legendData: any;\n  shouldValidateInteractionKeys: boolean = false;\n  shouldValidate: boolean = false;\n  shouldUpdateData: boolean = false;\n  shouldSetDimensions: boolean = false;\n  shouldUpdateTableData: boolean = false;\n  shouldSetColors: boolean = false;\n  shouldSetSubTitle: boolean = false;\n  shouldValidateAxes: boolean = false;\n  shouldValidateClickHighlight: boolean = false;\n  shouldUpdateScales: boolean = false;\n  shouldUpdateAnnotations: boolean = false;\n  shouldResetRoot: boolean = false;\n  shouldEnterUpdateExit: boolean = false;\n  shouldSetGlobalSelections: boolean = false;\n  shouldSetTestingAttributes: boolean = false;\n  shouldUpdateGeometries: boolean = false;\n  shouldCheckValueAxis: boolean = false;\n  shouldCheckLabelAxis: boolean = false;\n  shouldUpdateXAxis: boolean = false;\n  shouldUpdateYAxis: boolean = false;\n  shouldUpdateXGrid: boolean = false;\n  shouldUpdateYGrid: boolean = false;\n  shouldUpdateBaseline: boolean = false;\n  shouldSetSelectionClass: boolean = false;\n  shouldUpdateCursor: boolean = false;\n  shouldUpdateCorners: boolean = false;\n  shouldUpdateLegendData: boolean = false;\n  shouldValidateLabelPlacement: boolean = false;\n  shouldValidateDataLabelAccessor: boolean = false;\n  shouldUpdateLegend: boolean = false;\n  shouldUpdateLegendInteractivity: boolean = false;\n  shouldUpdateReferenceLines: boolean = false;\n  shouldDrawInteractionState: boolean = false;\n  shouldBindInteractivity: boolean = false;\n  shouldSetLabelOpacity: boolean = false;\n  shouldUpdateLabels: boolean = false;\n  shouldUpdateTotalLabels: boolean = false;\n  shouldCheckLabelColor: boolean = false;\n  shouldUpdateDescriptionWrapper: boolean = false;\n  shouldSetChartAccessibilityTitle: boolean = false;\n  shouldSetChartAccessibilitySubtitle: boolean = false;\n  shouldSetChartAccessibilityLongDescription: boolean = false;\n  shouldSetChartAccessibilityExecutiveSummary: boolean = false;\n  shouldSetChartAccessibilityStatisticalNotes: boolean = false;\n  shouldSetChartAccessibilityStructureNotes: boolean = false;\n  shouldSetParentSVGAccessibility: boolean = false;\n  shouldSetGeometryAccessibilityAttributes: boolean = false;\n  shouldSetGeometryAriaLabels: boolean = false;\n  shouldSetGroupAccessibilityLabel: boolean = false;\n  shouldSetChartAccessibilityPurpose: boolean = false;\n  shouldSetChartAccessibilityContext: boolean = false;\n  shouldRedrawWrapper: boolean = false;\n  shouldSetTagLevels: boolean = false;\n  shouldSetChartAccessibilityCount: boolean = false;\n  shouldSetYAxisAccessibility: boolean = false;\n  shouldSetXAxisAccessibility: boolean = false;\n  shouldSetAnnotationAccessibility: boolean = false;\n  shouldSetTextures: boolean = false;\n  shouldSetStrokes: boolean = false;\n  shouldSetLocalizationConfig: boolean = false;\n  isSafari: boolean = getBrowser() === 'Safari'; // this is necessary for handling redraw when filter attributes change\n  strokes: any = {};\n  textStrokes: any = {};\n  topLevel: string = 'h2';\n  bottomLevel: string = 'p';\n  bitmaps: any;\n\n  @Watch('data')\n  dataWatcher(_newData, _oldData) {\n    this.updated = true;\n    this.shouldUpdateData = true;\n    this.shouldValidateClickHighlight = true;\n    this.shouldSetColors = true;\n    this.shouldSetTextures = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateLegendData = true;\n    this.shouldValidate = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateLabels = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('uniqueID')\n  idWatcher(newID, _oldID) {\n    console.error(\n      'Change detected in prop uniqueID from value ' +\n        _oldID +\n        ' to value ' +\n        newID +\n        '. This prop cannot be changed after component has loaded.'\n    );\n    // this.chartID = newID;\n    // this.stackedBarChartEl.id = this.chartID;\n    // this.shouldValidate = true;\n    // this.shouldUpdateDescriptionWrapper = true;\n    // this.shouldSetParentSVGAccessibility = true;\n    // this.shouldUpdateLegend = true;\n    // this.shouldSetTextures = true;\n    // this.shouldCheckLabelColor = true;\n    // this.shouldDrawInteractionState = true;\n    // this.shouldSetStrokes = true;\n  }\n\n  @Watch('highestHeadingLevel')\n  headingWatcher(_newVal, _oldVal) {\n    this.shouldRedrawWrapper = true;\n    this.shouldSetTagLevels = true;\n    this.shouldSetChartAccessibilityCount = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetAnnotationAccessibility = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('mainTitle')\n  titleWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('subTitle')\n  subtitleWatcher(_newVal, _oldVal) {\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetParentSVGAccessibility = true;\n  }\n\n  @Watch('height')\n  @Watch('width')\n  @Watch('padding')\n  @Watch('margin')\n  dimensionWatcher(_newVal, _oldVal) {\n    this.shouldSetDimensions = true;\n    this.shouldUpdateScales = true;\n    this.shouldResetRoot = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('layout')\n  layoutWatcher(_newVal, _oldVal) {\n    this.interpolating = false;\n    this.shouldValidateLabelPlacement = true;\n    this.shouldUpdateScales = true;\n    this.shouldValidateAxes = true;\n    this.shouldResetRoot = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateXGrid = true;\n    this.shouldUpdateYGrid = true;\n    this.shouldUpdateXAxis = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateLegend = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('ordinalAccessor')\n  ordinalAccessorWatcher(_newVal, _oldVal) {\n    this.shouldSetGlobalSelections = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateData = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateLegendData = true;\n    this.shouldSetColors = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateLegend = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n    this.shouldCheckValueAxis = true;\n  }\n\n  @Watch('valueAccessor')\n  valueAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldValidateClickHighlight = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetColors = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldValidateDataLabelAccessor = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldCheckValueAxis = true;\n  }\n\n  @Watch('groupAccessor')\n  groupAccessorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldValidateClickHighlight = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldCheckLabelAxis = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateReferenceLines = true;\n    if (!(this.interactionKeys && this.interactionKeys.length)) {\n      this.shouldValidateInteractionKeys = true;\n      this.shouldSetSelectionClass = true;\n    }\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n  }\n\n  @Watch('sortOrder')\n  sortWatcher(_newVal, _oldVal) {\n    this.updated = true;\n    this.shouldUpdateData = true;\n    this.shouldSetGlobalSelections = true;\n    this.shouldSetTestingAttributes = true;\n    this.shouldEnterUpdateExit = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAccessibilityAttributes = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldCheckLabelAxis = true;\n  }\n\n  @Watch('xAxis')\n  xAxisWatcher(_newVal, _oldVal) {\n    this.shouldValidateAxes = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateXAxis = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateXGrid = true;\n    }\n  }\n\n  @Watch('yAxis')\n  yAxisWatcher(_newVal, _oldVal) {\n    this.shouldValidateAxes = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    const newGridVal = _newVal && _newVal.gridVisible;\n    const oldGridVal = _oldVal && _oldVal.gridVisible;\n    const newTickInterval = _newVal && _newVal.tickInterval ? _newVal.tickInterval : 0;\n    const oldTickInterval = _oldVal && _oldVal.tickInterval ? _oldVal.tickInterval : 0;\n    if (newGridVal !== oldGridVal || newTickInterval !== oldTickInterval) {\n      this.shouldUpdateYGrid = true;\n    }\n  }\n\n  @Watch('wrapLabel')\n  wrapLabelWatcher(_newVal, _oldVal) {\n    this.shouldCheckLabelAxis = true;\n  }\n\n  @Watch('normalized')\n  normalizedWatcher(_newVal, _oldVal) {\n    this.shouldUpdateData = true;\n    this.shouldValidateClickHighlight = true;\n    this.shouldUpdateScales = true;\n    this.shouldSetColors = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldCheckValueAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateTableData = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n  }\n\n  @Watch('colorPalette')\n  paletteWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n  }\n\n  @Watch('colors')\n  colorsWatcher(_newVal, _oldVal) {\n    this.shouldSetColors = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldUpdateLegend = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetStrokes = true;\n    this.shouldSetTextures = true;\n  }\n\n  @Watch('hoverStyle')\n  hoverStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('clickStyle')\n  clickStyleWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetStrokes = true;\n  }\n\n  @Watch('referenceLines')\n  @Watch('referenceStyle')\n  referenceWatcher(_newVal, _oldVal) {\n    this.shouldUpdateReferenceLines = true;\n  }\n\n  @Watch('cursor')\n  cursorWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCursor = true;\n  }\n\n  @Watch('roundedCorner')\n  cornerWatcher(_newVal, _oldVal) {\n    this.shouldUpdateCorners = true;\n  }\n\n  @Watch('barIntervalRatio')\n  intervalRatioWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldCheckLabelAxis = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('hoverOpacity')\n  hoverOpacityWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('dataLabel')\n  labelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateGeometries = true; // draw geometries has the transition end all callback in it which we need for labels\n    this.shouldUpdateTableData = true;\n    const newPlacementVal = _newVal && _newVal.placement ? _newVal.placement : false;\n    const oldPlacementVal = _oldVal && _oldVal.placement ? _oldVal.placement : false;\n    const newVisibleVal = _newVal && _newVal.visible;\n    const oldVisibleVal = _oldVal && _oldVal.visible;\n    const newAccessor = _newVal && _newVal.labelAccessor ? _newVal.labelAccessor : false;\n    const oldAccessor = _oldVal && _oldVal.labelAccessor ? _oldVal.labelAccessor : false;\n    if (newVisibleVal !== oldVisibleVal) {\n      this.shouldSetLabelOpacity = true;\n    }\n    if (newPlacementVal !== oldPlacementVal) {\n      this.shouldSetLabelOpacity = true;\n      this.shouldValidateLabelPlacement = true;\n      this.shouldCheckLabelColor = true;\n    }\n    if (newAccessor !== oldAccessor) {\n      this.shouldValidateDataLabelAccessor = true;\n    }\n  }\n\n  @Watch('showTotalValue')\n  showTotalValueWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('showTooltip')\n  showTooltipWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n  }\n\n  @Watch('tooltipLabel')\n  tooltipLabelWatcher(_newVal, _oldVal) {\n    this.shouldUpdateTableData = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('localization')\n  localizationWatcher(_newVal, _oldVal) {\n    // language\n    const newLanguage = _newVal && _newVal.language ? _newVal.language : false;\n    const oldLanguage = _oldVal && _oldVal.language ? _oldVal.language : false;\n    if (newLanguage !== oldLanguage) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldCheckLabelColor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n\n    // numeralLocale\n    const newNumeralLocale = _newVal && _newVal.numeralLocale ? _newVal.numeralLocale : false;\n    const oldNumeralLocale = _oldVal && _oldVal.numeralLocale ? _oldVal.numeralLocale : false;\n    if (newNumeralLocale !== oldNumeralLocale) {\n      this.shouldSetLocalizationConfig = true;\n      this.shouldUpdateTableData = true;\n      this.shouldValidateDataLabelAccessor = true;\n      this.shouldCheckLabelColor = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityCount = true;\n      this.shouldSetYAxisAccessibility = true;\n      this.shouldSetXAxisAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n  }\n\n  @Watch('accessibility')\n  accessibilityWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    const newTitle = _newVal && _newVal.title ? _newVal.title : false;\n    const oldTitle = _oldVal && _oldVal.title ? _oldVal.title : false;\n    if (newTitle !== oldTitle) {\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newExecutiveSummary = _newVal && _newVal.executiveSummary ? _newVal.executiveSummary : false;\n    const oldExecutiveSummary = _oldVal && _oldVal.executiveSummary ? _oldVal.executiveSummary : false;\n    if (newExecutiveSummary !== oldExecutiveSummary) {\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n    }\n    const newPurpose = _newVal && _newVal.purpose ? _newVal.purpose : false;\n    const oldPurpose = _oldVal && _oldVal.purpose ? _oldVal.purpose : false;\n    if (newPurpose !== oldPurpose) {\n      this.shouldSetChartAccessibilityPurpose = true;\n    }\n    const newLongDescription = _newVal && _newVal.longDescription ? _newVal.longDescription : false;\n    const oldLongDescription = _oldVal && _oldVal.longDescription ? _oldVal.longDescription : false;\n    if (newLongDescription !== oldLongDescription) {\n      this.shouldSetChartAccessibilityLongDescription = true;\n    }\n    const newContext = _newVal && _newVal.contextExplanation ? _newVal.contextExplanation : false;\n    const oldContext = _oldVal && _oldVal.contextExplanation ? _oldVal.contextExplanation : false;\n    if (newContext !== oldContext) {\n      this.shouldSetChartAccessibilityContext = true;\n    }\n    const newStatisticalNotes = _newVal && _newVal.statisticalNotes ? _newVal.statisticalNotes : false;\n    const oldStatisticalNotes = _oldVal && _oldVal.statisticalNotes ? _oldVal.statisticalNotes : false;\n    if (newStatisticalNotes !== oldStatisticalNotes) {\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n    }\n    const newStructureNotes = _newVal && _newVal.structureNotes ? _newVal.structureNotes : false;\n    const oldStructureNotes = _oldVal && _oldVal.structureNotes ? _oldVal.structureNotes : false;\n    if (newStructureNotes !== oldStructureNotes) {\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    const newincludeDataKeyNames = _newVal && _newVal.includeDataKeyNames;\n    const oldincludeDataKeyNames = _oldVal && _oldVal.includeDataKeyNames;\n    const newElementDescriptionAccessor =\n      _newVal && _newVal.elementDescriptionAccessor ? _newVal.elementDescriptionAccessor : false;\n    const oldElementDescriptionAccessor =\n      _oldVal && _oldVal.elementDescriptionAccessor ? _oldVal.elementDescriptionAccessor : false;\n    if (\n      newincludeDataKeyNames !== oldincludeDataKeyNames ||\n      newElementDescriptionAccessor !== oldElementDescriptionAccessor\n    ) {\n      if (newincludeDataKeyNames !== oldincludeDataKeyNames) {\n        // this one is tricky because it needs to run after the lifecycle\n        // AND it could run in the off-chance this prop is changed\n        this.shouldSetGroupAccessibilityLabel = true;\n      }\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n    }\n    const newTextures = _newVal && _newVal.hideTextures ? _newVal.hideTextures : false;\n    const oldTextures = _oldVal && _oldVal.hideTextures ? _oldVal.hideTextures : false;\n    if (newTextures !== oldTextures) {\n      this.shouldSetTextures = true;\n      this.shouldUpdateLegend = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newSmallValue = _newVal && _newVal.showSmallLabels ? _newVal.showSmallLabels : false;\n    const oldSmallValue = _oldVal && _oldVal.showSmallLabels ? _oldVal.showSmallLabels : false;\n    if (newSmallValue !== oldSmallValue) {\n      this.shouldSetLabelOpacity = true;\n    }\n    const newStrokes = _newVal && _newVal.hideStrokes ? _newVal.hideStrokes : false;\n    const oldStrokes = _oldVal && _oldVal.hideStrokes ? _oldVal.hideStrokes : false;\n    if (newStrokes !== oldStrokes) {\n      this.shouldSetStrokes = true;\n      this.shouldUpdateLegend = true;\n      this.shouldDrawInteractionState = true;\n    }\n    const newKeyNav =\n      _newVal && _newVal.keyboardNavConfig && _newVal.keyboardNavConfig.disabled\n        ? _newVal.keyboardNavConfig.disabled\n        : false;\n    const oldKeyNav =\n      _oldVal && _oldVal.keyboardNavConfig && _oldVal.keyboardNavConfig.disabled\n        ? _oldVal.keyboardNavConfig.disabled\n        : false;\n    const newInterface = _newVal && _newVal.elementsAreInterface ? _newVal.elementsAreInterface : false;\n    const oldInterface = _oldVal && _oldVal.elementsAreInterface ? _oldVal.elementsAreInterface : false;\n    if (newKeyNav !== oldKeyNav || newInterface !== oldInterface) {\n      this.shouldSetGeometryAriaLabels = true;\n      this.shouldSetParentSVGAccessibility = true;\n      this.shouldUpdateDescriptionWrapper = true;\n      this.shouldRedrawWrapper = true;\n      this.shouldSetChartAccessibilityTitle = true;\n      this.shouldSetChartAccessibilitySubtitle = true;\n      this.shouldSetChartAccessibilityLongDescription = true;\n      this.shouldSetChartAccessibilityContext = true;\n      this.shouldSetChartAccessibilityExecutiveSummary = true;\n      this.shouldSetChartAccessibilityPurpose = true;\n      this.shouldSetChartAccessibilityStatisticalNotes = true;\n      this.shouldSetChartAccessibilityStructureNotes = true;\n    }\n    if (newInterface !== oldInterface) {\n      this.shouldSetSelectionClass = true;\n    }\n  }\n\n  @Watch('showZeroLabels')\n  showZeroLabelsWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLabels = true;\n  }\n\n  @Watch('legend')\n  legendWatcher(_newVal, _oldVal) {\n    this.shouldUpdateLegend = true;\n    const newInteractiveVal = _newVal && _newVal.interactive;\n    const oldInteractiveVal = _oldVal && _oldVal.interactive;\n    if (newInteractiveVal !== oldInteractiveVal) {\n      this.shouldUpdateLegendInteractivity = true;\n    }\n  }\n\n  @Watch('annotations')\n  annotationsWatcher(_newVal, _oldVal) {\n    this.shouldValidate = true;\n    this.shouldUpdateAnnotations = true;\n    this.shouldSetAnnotationAccessibility = true;\n  }\n\n  @Watch('maxValueOverride')\n  @Watch('minValueOverride')\n  valueOverrideWatcher(_newVal, _oldVal) {\n    this.shouldUpdateScales = true;\n    this.shouldCheckValueAxis = true;\n    this.shouldUpdateGeometries = true;\n    this.shouldUpdateLabels = true;\n    this.shouldUpdateTotalLabels = true;\n    this.shouldUpdateReferenceLines = true;\n    this.shouldUpdateBaseline = true;\n    this.shouldUpdateAnnotations = true;\n  }\n\n  @Watch('interactionKeys')\n  interactionWatcher(_newVal, _oldVal) {\n    this.shouldValidateInteractionKeys = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n    this.shouldSetSelectionClass = true;\n    this.shouldUpdateTableData = true;\n    this.shouldSetGeometryAriaLabels = true;\n  }\n\n  @Watch('dataKeyNames')\n  dataKeyNamesWatcher(_newVal, _oldVal) {\n    this.shouldUpdateXAxis = true;\n    this.shouldSetXAxisAccessibility = true;\n    this.shouldUpdateYAxis = true;\n    this.shouldSetYAxisAccessibility = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldSetGroupAccessibilityLabel = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldUpdateTableData = true;\n  }\n\n  @Watch('hoverHighlight')\n  hoverWatcher(_newVal, _oldVal) {\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('clickHighlight')\n  clickWatcher(_newVal, _oldVal) {\n    this.shouldValidateClickHighlight = true;\n    this.shouldDrawInteractionState = true;\n    this.shouldCheckLabelColor = true;\n    this.shouldSetLabelOpacity = true;\n  }\n\n  @Watch('suppressEvents')\n  suppressWatcher(_newVal, _oldVal) {\n    this.shouldBindInteractivity = true;\n    this.shouldUpdateCursor = true;\n    this.shouldUpdateLegendInteractivity = true;\n    this.shouldSetGeometryAriaLabels = true;\n    this.shouldSetParentSVGAccessibility = true;\n    this.shouldUpdateDescriptionWrapper = true;\n    this.shouldRedrawWrapper = true;\n    this.shouldValidate = true;\n    this.shouldSetSubTitle = true;\n    this.shouldSetChartAccessibilityTitle = true;\n    this.shouldSetChartAccessibilitySubtitle = true;\n    this.shouldSetChartAccessibilityLongDescription = true;\n    this.shouldSetChartAccessibilityContext = true;\n    this.shouldSetChartAccessibilityExecutiveSummary = true;\n    this.shouldSetChartAccessibilityPurpose = true;\n    this.shouldSetChartAccessibilityStatisticalNotes = true;\n    this.shouldSetChartAccessibilityStructureNotes = true;\n  }\n\n  @Watch('unitTest')\n  unitTestWatcher(_newVal, _oldVal) {\n    this.shouldSetTestingAttributes = true;\n  }\n\n  componentWillLoad() {\n    const chartID = this.uniqueID || 'stacked-bar-chart-' + uuid();\n    this.initialLoadEvent.emit({ chartID: chartID });\n    // contrary to componentWillUpdate, this method appears safe to use for\n    // any calculations we need. Keeping them here reduces future refactor,\n    // since componentWillUpdate should eventually mirror this method\n    return new Promise(resolve => {\n      this.duration = 0;\n      this.defaults = true;\n      this.chartID = chartID;\n      this.stackedBarChartEl.id = this.chartID;\n      this.setLocalizationConfig();\n      this.setTagLevels();\n      this.prepareData();\n      this.prepareLegendData();\n      this.setDimensions();\n      this.prepareScales();\n      this.validateClickHighlight();\n      this.validateInteractionKeys();\n      this.validateDataLabelAccessor();\n      this.validateAxes();\n      this.setTableData();\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.setColors();\n      resolve('component will load');\n    });\n  }\n\n  componentWillUpdate() {\n    // NEVER put items in this method that rely on props (until stencil bug is resolved)\n    // All items that belong here are currently at the top of render\n    // see: https://github.com/ionic-team/stencil/issues/2061#issuecomment-578282178\n    return new Promise(resolve => {\n      resolve('component will update');\n    });\n  }\n\n  componentDidLoad() {\n    return new Promise(resolve => {\n      this.renderRootElements();\n      this.setTooltipInitialStyle();\n      this.setChartDescriptionWrapper();\n      this.setChartAccessibilityTitle();\n      this.setChartAccessibilitySubtitle();\n      this.setChartAccessibilityLongDescription();\n      this.setChartAccessibilityExecutiveSummary();\n      this.setChartAccessibilityPurpose();\n      this.setChartAccessibilityContext();\n      this.setChartAccessibilityStatisticalNotes();\n      this.setChartAccessibilityStructureNotes();\n      this.setParentSVGAccessibility();\n      this.reSetRoot();\n      this.setTextures();\n      this.setStrokes();\n      this.setSubTitleElements();\n      this.drawXGrid();\n      this.drawYGrid();\n      this.setGlobalSelections();\n      this.setTestingAttributes();\n      this.enterGeometries();\n      this.updateGeometries();\n      this.exitGeometries();\n      this.setRoundedCorners();\n      this.drawGeometries();\n      this.enterDataLabels();\n      this.updateDataLabels();\n      this.exitDataLabels();\n      this.enterTotalDataLabels();\n      this.updateTotalDataLabels();\n      this.exitTotalDataLabels();\n      this.setChartCountAccessibility();\n      this.setGeometryAccessibilityAttributes();\n      this.setGeometryAriaLabels();\n      this.drawLegendElements();\n      this.bindLegendInteractivity();\n      this.validateLabelPlacement();\n      this.drawDataLabels();\n      this.drawTotalDataLabels();\n      this.drawReferenceLines();\n      this.setSelectedClass();\n      // this.updateInteractionState();\n      // this.setLabelOpacity();\n      this.checkLabelColorAgainstBackground();\n      this.updateCursor();\n      this.bindInteractivity();\n      this.drawAnnotations();\n      this.setAnnotationAccessibility();\n      this.drawXAxis();\n      this.setXAxisAccessibility();\n      this.drawYAxis();\n      this.setYAxisAccessibility();\n      this.drawBaseline();\n      // we want to hide all child <g> of this.root BUT we want to make sure not to hide the\n      // parent<g> that contains our geometries! In a subGroup chart (like stacked bars),\n      // we want to pass the PARENT of all the <g>s that contain bars\n      hideNonessentialGroups(this.root.node(), this.barG.node());\n      this.setGroupAccessibilityID();\n      this.onChangeHandler();\n      this.defaults = false;\n      resolve('component did load');\n    }).then(() => this.initialLoadEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  componentDidUpdate() {\n    return new Promise(resolve => {\n      this.duration = !this.animationConfig || !this.animationConfig.disabled ? 750 : 0;\n      if (this.shouldUpdateDescriptionWrapper) {\n        this.setChartDescriptionWrapper();\n        this.shouldUpdateDescriptionWrapper = false;\n      }\n      if (this.shouldSetChartAccessibilityCount) {\n        this.setChartCountAccessibility();\n        this.shouldSetChartAccessibilityCount = false;\n      }\n      if (this.shouldSetChartAccessibilityTitle) {\n        this.setChartAccessibilityTitle();\n        this.shouldSetChartAccessibilityTitle = false;\n      }\n      if (this.shouldSetChartAccessibilitySubtitle) {\n        this.setChartAccessibilitySubtitle();\n        this.shouldSetChartAccessibilitySubtitle = false;\n      }\n      if (this.shouldSetChartAccessibilityLongDescription) {\n        this.setChartAccessibilityLongDescription();\n        this.shouldSetChartAccessibilityLongDescription = false;\n      }\n      if (this.shouldSetChartAccessibilityExecutiveSummary) {\n        this.setChartAccessibilityExecutiveSummary();\n        this.shouldSetChartAccessibilityExecutiveSummary = false;\n      }\n      if (this.shouldSetChartAccessibilityPurpose) {\n        this.setChartAccessibilityPurpose();\n        this.shouldSetChartAccessibilityPurpose = false;\n      }\n      if (this.shouldSetChartAccessibilityContext) {\n        this.setChartAccessibilityContext();\n        this.shouldSetChartAccessibilityContext = false;\n      }\n      if (this.shouldSetChartAccessibilityStatisticalNotes) {\n        this.setChartAccessibilityStatisticalNotes();\n        this.shouldSetChartAccessibilityStatisticalNotes = false;\n      }\n      if (this.shouldSetChartAccessibilityStructureNotes) {\n        this.setChartAccessibilityStructureNotes();\n        this.shouldSetChartAccessibilityStructureNotes = false;\n      }\n      if (this.shouldSetParentSVGAccessibility) {\n        this.setParentSVGAccessibility();\n        this.shouldSetParentSVGAccessibility = false;\n      }\n      if (this.shouldResetRoot) {\n        this.reSetRoot();\n        this.shouldResetRoot = false;\n      }\n      if (this.shouldSetTextures) {\n        this.setTextures();\n        this.shouldSetTextures = false;\n      }\n      if (this.shouldSetStrokes) {\n        this.setStrokes();\n        this.shouldSetStrokes = false;\n      }\n      if (this.shouldSetGlobalSelections) {\n        this.setGlobalSelections();\n        this.shouldSetGlobalSelections = false;\n      }\n      if (this.shouldSetTestingAttributes) {\n        this.setTestingAttributes();\n        this.shouldSetTestingAttributes = false;\n      }\n      if (this.shouldSetSubTitle) {\n        this.setSubTitleElements();\n        this.shouldSetSubTitle = false;\n      }\n      if (this.shouldUpdateXGrid) {\n        this.drawXGrid();\n        this.shouldUpdateXGrid = false;\n      }\n      if (this.shouldUpdateYGrid) {\n        this.drawYGrid();\n        this.shouldUpdateYGrid = false;\n      }\n      if (this.shouldEnterUpdateExit) {\n        this.enterGeometries();\n        this.updateGeometries();\n        this.exitGeometries();\n        this.enterDataLabels();\n        this.updateDataLabels();\n        this.exitDataLabels();\n        this.enterTotalDataLabels();\n        this.updateTotalDataLabels();\n        this.exitTotalDataLabels();\n        this.shouldEnterUpdateExit = false;\n      }\n      if (this.shouldUpdateCorners) {\n        this.setRoundedCorners();\n        this.shouldUpdateCorners = false;\n      }\n      if (this.shouldUpdateGeometries) {\n        this.drawGeometries();\n        this.shouldUpdateGeometries = false;\n      }\n      if (this.shouldSetGeometryAccessibilityAttributes) {\n        this.setGeometryAccessibilityAttributes();\n        this.shouldSetGeometryAccessibilityAttributes = false;\n      }\n      if (this.shouldSetGeometryAriaLabels) {\n        this.setGeometryAriaLabels();\n        this.shouldSetGeometryAriaLabels = false;\n      }\n      if (this.shouldSetGroupAccessibilityLabel) {\n        this.setGroupAccessibilityID();\n        this.shouldSetGroupAccessibilityLabel = false;\n      }\n      if (this.shouldUpdateLegend) {\n        this.drawLegendElements();\n        this.shouldUpdateLegend = false;\n      }\n      if (this.shouldUpdateLabels) {\n        this.drawDataLabels();\n        this.shouldUpdateLabels = false;\n      }\n      if (this.shouldUpdateTotalLabels) {\n        this.drawTotalDataLabels();\n        this.shouldUpdateTotalLabels = false;\n      }\n      if (this.shouldUpdateReferenceLines) {\n        this.drawReferenceLines();\n        this.shouldUpdateReferenceLines = false;\n      }\n      if (this.shouldDrawInteractionState) {\n        this.updateInteractionState();\n        this.shouldDrawInteractionState = false;\n      }\n      if (this.shouldSetLabelOpacity) {\n        this.setLabelOpacity();\n        this.shouldSetLabelOpacity = false;\n      }\n      if (this.shouldCheckLabelColor) {\n        this.checkLabelColorAgainstBackground();\n        this.shouldCheckLabelColor = false;\n      }\n      if (this.shouldSetSelectionClass) {\n        this.setSelectedClass();\n        this.shouldSetSelectionClass = false;\n      }\n      if (this.shouldUpdateLegendInteractivity) {\n        this.bindLegendInteractivity();\n        this.shouldUpdateLegendInteractivity = false;\n      }\n      if (this.shouldUpdateCursor) {\n        this.updateCursor();\n        this.shouldUpdateCursor = false;\n      }\n      if (this.shouldBindInteractivity) {\n        this.bindInteractivity();\n        this.shouldBindInteractivity = false;\n      }\n      if (this.shouldUpdateAnnotations) {\n        this.drawAnnotations();\n        this.shouldUpdateAnnotations = false;\n      }\n      if (this.shouldSetAnnotationAccessibility) {\n        this.setAnnotationAccessibility();\n        this.shouldSetAnnotationAccessibility = false;\n      }\n      if (this.shouldUpdateXAxis) {\n        this.drawXAxis();\n        this.shouldUpdateXAxis = false;\n      }\n      if (this.shouldSetXAxisAccessibility) {\n        this.setXAxisAccessibility();\n        this.shouldSetXAxisAccessibility = false;\n      }\n      if (this.shouldUpdateYAxis) {\n        this.drawYAxis();\n        this.shouldUpdateYAxis = false;\n      }\n      if (this.shouldSetYAxisAccessibility) {\n        this.setYAxisAccessibility();\n        this.shouldSetYAxisAccessibility = false;\n      }\n      if (this.shouldUpdateBaseline) {\n        this.drawBaseline();\n        this.shouldUpdateBaseline = false;\n      }\n      this.onChangeHandler();\n      resolve('component did update');\n    }).then(() => this.drawEndEvent.emit({ chartID: this.chartID }));\n  }\n\n  shouldValidateLocalizationProps() {\n    const windowInstances = getGlobalInstances();\n    const languageString = windowInstances.i18Next.language;\n    const languageObject = windowInstances.i18Next.getResourceBundle(languageString);\n    const numeralObject = windowInstances.numeral.localeData();\n    if (this.shouldValidateLocalization && !this.localization.skipValidation) {\n      this.shouldValidateLocalization = false;\n      validateLocalizationProps(this.chartID, {\n        ...this.localization,\n        language: languageObject,\n        numeralLocale: numeralObject\n      });\n    }\n  }\n\n  shouldValidateAccessibilityProps() {\n    if (this.shouldValidateAccessibility && !this.accessibility.disableValidation) {\n      this.shouldValidateAccessibility = false;\n      validateAccessibilityProps(this.chartID, this.accessibility, {\n        annotations: this.annotations,\n        data: this.data,\n        uniqueID: this.uniqueID,\n        context: {\n          mainTitle: this.mainTitle,\n          onClickEvent: this.suppressEvents ? undefined : this.clickEvent.emit,\n          tooltipLabel: this.tooltipLabel,\n          dataLabel: this.dataLabel,\n          valueAccessor: this.valueAccessor\n        },\n        misc: {\n          normalized: this.normalized\n        }\n      });\n    }\n  }\n\n  validateLabelPlacement() {\n    // check data label placement assignment based on layout\n    if (this.layout === 'vertical') {\n      if (\n        !(\n          this.dataLabel.placement === 'top' ||\n          this.dataLabel.placement === 'middle' ||\n          this.dataLabel.placement === 'bottom' ||\n          this.dataLabel.placement === 'auto'\n        )\n      ) {\n        this.dataLabel.placement = 'middle';\n      }\n    } else {\n      if (\n        !(\n          this.dataLabel.placement === 'end' ||\n          this.dataLabel.placement === 'middle' ||\n          this.dataLabel.placement === 'base' ||\n          this.dataLabel.placement === 'auto'\n        )\n      ) {\n        this.dataLabel.placement = 'middle';\n      }\n    }\n  }\n\n  validateInteractionKeys() {\n    this.innerInteractionKeys =\n      this.interactionKeys && this.interactionKeys.length ? this.interactionKeys : [this.ordinalAccessor];\n  }\n\n  validateDataLabelAccessor() {\n    this.innerLabelAccessor = this.dataLabel.labelAccessor ? this.dataLabel.labelAccessor : this.valueAccessor;\n  }\n\n  validateAxes() {\n    // check whether we are going to display axis and then update props\n    this.innerXAxis = { ...this.xAxis, gridVisible: !(this.layout === 'vertical') && this.xAxis.gridVisible };\n    this.innerYAxis = { ...this.yAxis, gridVisible: this.layout === 'vertical' && this.yAxis.gridVisible };\n  }\n\n  getLanguageString() {\n    return getActiveLanguageString(this.localization);\n  }\n\n  setLocalizationConfig() {\n    configLocalization(this.localization);\n  }\n\n  // if normalized and not 0 use getSum(), otherwise use 1\n  modifier(d) {\n    return !this.normalized || d.getSum() === 0 ? 1 : d.getSum();\n  }\n\n  setDimensions() {\n    this.padding = typeof this.padding === 'string' ? getPadding(this.padding) : this.padding;\n\n    // before we render/load we need to set our height and width based on props\n    this.innerHeight = this.height - this.margin.top - this.margin.bottom;\n    this.innerWidth = this.width - this.margin.left - this.margin.right;\n\n    this.innerPaddedHeight = this.innerHeight - this.padding.top - this.padding.bottom;\n    this.innerPaddedWidth = this.innerWidth - this.padding.left - this.padding.right;\n  }\n\n  prepareData() {\n    this.extent = [0, 0];\n    const dataCopy = [];\n\n    this.data.forEach(d => {\n      const keys = Object.keys(d);\n      const item = {};\n      keys.forEach(key => {\n        item[key] = !(d[key] instanceof Date) ? d[key] : new Date(d[key].getTime());\n      });\n      dataCopy.push(item);\n    });\n\n    // prepare flat data for stacked layout\n    const nestData = nest()\n      .key(d => {\n        d[this.valueAccessor] = parseFloat(d[this.valueAccessor]);\n        d[this.groupAccessor] =\n          d[this.groupAccessor] instanceof Date\n            ? formatDate({\n                date: d[this.groupAccessor],\n                format: this.layout === 'vertical' ? this.xAxis.format : this.yAxis.format,\n                offsetTimezone: true\n              })\n            : d[this.groupAccessor];\n        return d[this.groupAccessor];\n      })\n      .entries(dataCopy);\n\n    this.interpolating = this.series.length ? this.series : '';\n    if (this.interpolating) {\n      this.interpolating.stackOrder = this.stackOrder;\n    }\n    const ordinalValues = {};\n    const stackDiverging = nestedArray => {\n      let i = 0;\n      const j = nestedArray.length;\n      const output = [];\n      this.stackOrder = {};\n      for (i = 0; i < j; i++) {\n        const row = { ...nestedArray[i] };\n        let k = 0;\n        let runSum = 0;\n        let sumAboveZero = 0;\n        const base = {\n          positive: 0.0,\n          negative: 0.0\n        };\n        const v = nestedArray[i].values;\n        const l = v.length;\n        const s = sum(v, d => d[this.valueAccessor]);\n        row.values = [];\n        let previous = 0;\n        for (k = 0; k < l; k++) {\n          const item = { ...v[k] };\n          const value = item[this.valueAccessor];\n          if (value >= 0 && s !== 0) {\n            item.stackEnd = base.positive;\n            base.positive += value;\n            item.stackStart = base.positive;\n          } else if (value < 0) {\n            item.stackStart = base.negative;\n            base.negative += value;\n            item.stackEnd = base.negative;\n          } else {\n            // value === 0 and sum === 0\n            item.stackEnd = base.positive;\n            base.positive += 0.000001; // denominator needs to be bigger than data points we can handle\n            item.stackStart = base.positive;\n          }\n          let group = this.stackOrder[item[this.groupAccessor]];\n          if (!group) {\n            this.stackOrder[item[this.groupAccessor]] = {};\n            group = this.stackOrder[item[this.groupAccessor]];\n          }\n          if (!group[item[this.ordinalAccessor]]) {\n            group[item[this.ordinalAccessor]] = {\n              previous,\n              value,\n              stackStart: item.stackStart,\n              stackEnd: item.stackEnd\n            };\n          }\n          item.enteringStackStart = false;\n          if (this.interpolating && this.interpolating.stackOrder[item[this.groupAccessor]]) {\n            const interpolateGroup = this.interpolating.stackOrder[item[this.groupAccessor]];\n            const findInterpolation = preceedingElement => {\n              if (preceedingElement === 0) {\n                return 0;\n              } else if (interpolateGroup[preceedingElement]) {\n                if (value >= 0 && interpolateGroup[preceedingElement].value >= 0) {\n                  return interpolateGroup[preceedingElement].stackStart;\n                } else if (value < 0 && interpolateGroup[preceedingElement].value < 0) {\n                  return interpolateGroup[preceedingElement].stackEnd;\n                }\n              }\n              const nextPrevious = group[preceedingElement].previous;\n              return findInterpolation(nextPrevious);\n            };\n            if (!interpolateGroup[item[this.ordinalAccessor]]) {\n              item.enteringStackStart = findInterpolation(previous);\n            }\n          }\n          previous = item[this.ordinalAccessor];\n          item.getSum = () => row.sum;\n          runSum += value;\n          if (value > 0) {\n            sumAboveZero += value;\n          }\n          if (!ordinalValues[item[this.ordinalAccessor]]) {\n            ordinalValues[item[this.ordinalAccessor]] = 1;\n          }\n          row.values.push(item);\n        }\n        if (base.positive > this.extent[1]) {\n          this.extent[1] = base.positive;\n        }\n        if (base.negative < this.extent[0]) {\n          this.extent[0] = base.negative;\n        }\n        row.sum = runSum;\n        row.sumMessage = 'Sum ' + runSum;\n        row.sumAboveZero = sumAboveZero;\n        output.push(row);\n      }\n      return output;\n    };\n    stackDiverging(nestData);\n\n    // Get all item categories (ordinal accessor)\n    this.datakeys = Object.keys(ordinalValues);\n    this.series = stackDiverging(nestData);\n    if (this.sortOrder === 'asc') {\n      this.series = [...this.series].sort((a, b) => a.sum - b.sum);\n    } else if (this.sortOrder === 'desc') {\n      this.series = [...this.series].sort((a, b) => b.sum - a.sum);\n    }\n  }\n\n  prepareLegendData() {\n    this.legendData = this.series[0].values;\n  }\n\n  validateClickHighlight() {\n    // format clickHighlight data row if there is date and data in clickHighlight\n    if (this.clickHighlight && this.clickHighlight.length > 0) {\n      this.clickHighlight.map(d => {\n        d[this.groupAccessor] =\n          d[this.groupAccessor] instanceof Date\n            ? formatDate({\n                date: d[this.groupAccessor],\n                format: this.layout === 'vertical' ? this.xAxis.format : this.yAxis.format,\n                offsetTimezone: true\n              })\n            : d[this.groupAccessor];\n      });\n    }\n  }\n\n  setTableData() {\n    const flattenedNest = [];\n    this.series.forEach(s => {\n      s.values.forEach(val => {\n        // val['rowSum'] = val.getSum();\n        flattenedNest.push(val);\n      });\n    });\n    // generate scoped and formatted data for data-table component\n    const keys = scopeDataKeys(this, chartAccessors, 'stacked-bar-chart');\n    if (this.normalized) {\n      const label =\n        this.dataKeyNames && (this.dataKeyNames[`${this.valueAccessor}`] || this.dataKeyNames[`${this.valueAccessor}%`])\n          ? this.dataKeyNames[`${this.valueAccessor}%`] || this.dataKeyNames[`${this.valueAccessor}`] + ' (%)'\n          : `${this.valueAccessor}%`;\n      keys[label] = '0[.][0][0]%';\n      flattenedNest.forEach(i => {\n        i[label] = i[`${this.valueAccessor}`] / i.getSum();\n      });\n    }\n    this.tableData = getScopedData(flattenedNest, keys);\n    this.tableColumns = Object.keys(keys);\n  }\n\n  setSubTitleElements() {\n    setSubTitle({\n      root: this.subTitleG,\n      subTitle: this.subTitle\n    });\n  }\n\n  setColors() {\n    this.preparedColors = this.colors\n      ? convertVisaColor(this.colors)\n      : getColors(this.colorPalette, this.datakeys.length);\n  }\n\n  setTextures() {\n    const colorsArray = this.preparedColors.range ? this.preparedColors.range() : this.preparedColors;\n    if (this.accessibility.hideTextures || colorsArray.length > 6) {\n      this.colorArr = this.preparedColors;\n    } else {\n      const colorsToConvert = colorsArray;\n      const textures = convertColorsToTextures({\n        colors: colorsToConvert,\n        rootSVG: this.svg.node(),\n        id: this.chartID,\n        scheme: 'categorical',\n        disableTransitions: !this.duration\n      });\n      this.colorArr = this.preparedColors.range ? this.preparedColors.copy().range(textures) : textures;\n    }\n  }\n\n  setStrokes() {\n    const colors = this.preparedColors.range ? this.preparedColors.range() : this.preparedColors;\n    this.strokes = buildStrokes({\n      root: this.svg.node(),\n      id: this.chartID,\n      colors,\n      clickStyle: this.clickStyle,\n      hoverStyle: this.hoverStyle,\n      stacked: true\n    });\n    this.textStrokes = {};\n    colors.forEach(color => {\n      this.textStrokes[color] = createTextStrokeFilter({\n        root: this.svg.node(),\n        id: this.chartID,\n        color\n      });\n    });\n    if (this.clickStyle && this.clickStyle.color) {\n      this.textStrokes[this.clickStyle.color] = createTextStrokeFilter({\n        root: this.svg.node(),\n        id: this.chartID,\n        color: this.clickStyle.color\n      });\n    }\n    if (this.hoverStyle && this.hoverStyle.color) {\n      this.textStrokes[this.hoverStyle.color] = createTextStrokeFilter({\n        root: this.svg.node(),\n        id: this.chartID,\n        color: this.hoverStyle.color\n      });\n    }\n  }\n\n  prepareScales() {\n    const minBarValue =\n      this.minValueOverride && this.minValueOverride < this.extent[0] ? this.minValueOverride : this.extent[0];\n    const maxBarValue = this.maxValueOverride || this.extent[1];\n    const domain = this.normalized ? [0, 1] : [minBarValue, maxBarValue];\n\n    if (this.interpolating) {\n      this.interpolating.oldXDomain = this.x.domain();\n      this.interpolating.oldXRange = this.x.range();\n      this.interpolating.oldYDomain = this.y.domain();\n      this.interpolating.oldYRange = this.y.range();\n    }\n    // scale band based on layout of chart\n    if (this.layout === 'vertical') {\n      if (this.interpolating) {\n        this.interpolating.padding = this.x.padding();\n        this.interpolating.x = scaleBand()\n          .domain(this.interpolating.oldXDomain)\n          .range(this.interpolating.oldXRange)\n          .padding(this.interpolating.padding);\n        this.interpolating.y = scaleLinear()\n          .domain(this.interpolating.oldYDomain)\n          .range(this.interpolating.oldYRange);\n      }\n      this.y = scaleLinear()\n        .domain(domain)\n        .range([this.innerPaddedHeight, 0]);\n\n      this.x = scaleBand()\n        .domain(this.series.map(d => d.key))\n        .range([0, this.innerPaddedWidth])\n        .padding(this.barIntervalRatio);\n    } else if (this.layout === 'horizontal') {\n      if (this.interpolating) {\n        this.interpolating.padding = this.y.padding();\n        this.interpolating.x = scaleLinear()\n          .domain(this.interpolating.oldXDomain)\n          .range(this.interpolating.oldXRange);\n        this.interpolating.y = scaleBand()\n          .domain(this.interpolating.oldYDomain)\n          .range(this.interpolating.oldYRange)\n          .padding(this.interpolating.padding);\n      }\n      this.x = scaleLinear()\n        .domain(domain)\n        .range([0, this.innerPaddedWidth]);\n\n      this.y = scaleBand()\n        .domain(this.series.map(d => d.key))\n        .range([0, this.innerPaddedHeight])\n        .padding(this.barIntervalRatio);\n    }\n  }\n\n  renderRootElements() {\n    this.svg = select(this.stackedBarChartEl)\n      .select('.visa-viz-d3-stacked-bar-container')\n      .append('svg')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    this.root = this.svg.append('g').attr('id', 'visa-viz-margin-container-g-' + this.chartID);\n    this.rootG = this.root.append('g').attr('id', 'visa-viz-padding-container-g-' + this.chartID);\n\n    this.gridG = this.rootG.append('g').attr('class', 'grid-group');\n    this.barG = this.rootG.append('g').attr('class', 'stacked-bar-group');\n\n    this.labelG = this.rootG.append('g').attr('class', 'stacked-bar-dataLabel-group');\n    this.totalLabels = this.rootG.append('g').attr('class', 'bar-dataLabel-group');\n    this.legendG = select(this.stackedBarChartEl)\n      .select('.stacked-bar-legend')\n      .append('svg');\n\n    this.subTitleG = select(this.stackedBarChartEl).select('.stacked-bar-sub-title');\n    this.tooltipG = select(this.stackedBarChartEl).select('.stacked-bar-tooltip');\n    this.referencesG = this.rootG.append('g').attr('class', 'stacked-bar-reference-line-group');\n  }\n\n  setTestingAttributes() {\n    if (this.unitTest) {\n      select(this.stackedBarChartEl)\n        .select('.visa-viz-d3-stacked-bar-container')\n        .attr('data-testid', 'chart-container');\n      select(this.stackedBarChartEl)\n        .select('.stacked-bar-main-title')\n        .attr('data-testid', 'main-title');\n      select(this.stackedBarChartEl)\n        .select('.stacked-bar-sub-title')\n        .attr('data-testid', 'sub-title');\n\n      this.svg.attr('data-testid', 'root-svg');\n      this.root.attr('data-testid', 'margin-container');\n      this.rootG.attr('data-testid', 'padding-container');\n      this.legendG.attr('data-testid', 'legend-container');\n      this.tooltipG.attr('data-testid', 'tooltip-container');\n\n      this.barG.attr('data-testid', 'stacked-bar-group');\n      this.updateBarWrappers\n        .attr('data-testid', 'stacked-bar-wrapper')\n        .attr('data-id', d => `stacked-bar-wrapper-${d.key}`);\n      this.update\n        .attr('data-testid', 'bar')\n        .attr('data-id', d => `bar-${d[this.groupAccessor]}-${d[this.ordinalAccessor]}`);\n\n      this.labelG.attr('data-testid', 'stacked-bar-dataLabel-group');\n      this.updateLabelWrappers\n        .attr('data-testid', 'stacked-bar-dataLabel-wrapper')\n        .attr('data-id', d => `stacked-bar-dataLabel-wrapper-${d.key}`);\n      this.updateLabels\n        .attr('data-testid', 'dataLabel')\n        .attr('data-id', d => `dataLabel-${d[this.groupAccessor]}-${d[this.ordinalAccessor]}`);\n\n      this.totalLabels.attr('data-testid', 'stacked-bar-totalLabel-group');\n      this.updateTotalLabels.attr('data-testid', 'totalLabel').attr('data-id', d => `totalLabel-${d.key}`);\n\n      this.referencesG.attr('data-testid', 'reference-line-group');\n      this.svg.select('defs').attr('data-testid', 'pattern-defs');\n\n      // reference lines do not have global selections\n      this.referencesG.selectAll('.stacked-bar-reference-line').attr('data-testid', 'reference-line');\n\n      this.referencesG.selectAll('.stacked-bar-reference-line-label').attr('data-testid', 'reference-line-label');\n    } else {\n      select(this.stackedBarChartEl)\n        .select('.visa-viz-d3-stacked-bar-container')\n        .attr('data-testid', null);\n      select(this.stackedBarChartEl)\n        .select('.stacked-bar-main-title')\n        .attr('data-testid', null);\n      select(this.stackedBarChartEl)\n        .select('.stacked-bar-sub-title')\n        .attr('data-testid', null);\n      this.svg.attr('data-testid', null);\n      this.root.attr('data-testid', null);\n      this.rootG.attr('data-testid', null);\n      this.legendG.attr('data-testid', null);\n      this.tooltipG.attr('data-testid', null);\n\n      this.barG.attr('data-testid', null);\n      this.updateBarWrappers.attr('data-testid', null).attr('data-id', null);\n      this.update.attr('data-testid', null).attr('data-id', null);\n\n      this.labelG.attr('data-testid', null);\n      this.updateLabelWrappers.attr('data-testid', null).attr('data-id', null);\n      this.updateLabels.attr('data-testid', null).attr('data-id', null);\n\n      this.totalLabels.attr('data-testid', null);\n      this.updateTotalLabels.attr('data-testid', null).attr('data-id', null);\n\n      this.referencesG.attr('data-testid', null);\n      this.svg.select('defs').attr('data-testid', null);\n\n      // reference lines do not have global selections\n      this.referencesG.selectAll('.stacked-bar-reference-line').attr('data-testid', null);\n\n      this.referencesG.selectAll('.stacked-bar-reference-line-label').attr('data-testid', null);\n    }\n  }\n\n  // reset graph size based on window size\n  reSetRoot() {\n    const changeSvg = prepareRenderChange({\n      selection: this.svg,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeSvg\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .attr('viewBox', '0 0 ' + this.width + ' ' + this.height);\n\n    const changeRoot = prepareRenderChange({\n      selection: this.root,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRoot.attr('transform', `translate(${this.margin.left}, ${this.margin.top})`);\n\n    const changeRootG = prepareRenderChange({\n      selection: this.rootG,\n      duration: this.duration,\n      namespace: 'root_reset',\n      easing: easeCircleIn\n    });\n\n    changeRootG.attr('transform', `translate(${this.padding.left}, ${this.padding.top})`);\n\n    setAccessibilityDescriptionWidth(this.chartID, this.width);\n  }\n\n  drawXAxis() {\n    const axisAccessor = this.layout === 'vertical' ? this.groupAccessor : this.valueAccessor;\n    const axisLabel =\n      this.xAxis.label && this.xAxis.label !== ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.xAxis.label;\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.x,\n      left: false,\n      wrapLabel: this.wrapLabel && this.layout === 'vertical' ? this.x.bandwidth() : '',\n      format: this.xAxis.format,\n      dateFormat: this.xAxis.format,\n      tickInterval: this.xAxis.tickInterval,\n      label: axisLabel, // this.xAxis.label,\n      padding: this.padding,\n      hide: !this.innerXAxis.visible,\n      duration: this.duration\n    });\n  }\n\n  drawYAxis() {\n    const axisAccessor = this.layout === 'vertical' ? this.valueAccessor : this.groupAccessor;\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.yAxis.label;\n\n    drawAxis({\n      root: this.rootG,\n      height: this.innerPaddedHeight,\n      width: this.innerPaddedWidth,\n      axisScale: this.y,\n      left: true,\n      wrapLabel: this.wrapLabel ? this.padding.left || 100 : '',\n      format: this.yAxis.format,\n      dateFormat: this.yAxis.format,\n      tickInterval: this.yAxis.tickInterval,\n      label: axisLabel, // this.yAxis.label,\n      padding: this.padding,\n      hide: !this.innerYAxis.visible,\n      duration: this.duration\n    });\n  }\n\n  setXAxisAccessibility() {\n    const axisAccessor = this.layout === 'vertical' ? this.groupAccessor : this.valueAccessor;\n    const axisLabel =\n      this.xAxis.label && this.xAxis.label !== ''\n        ? this.xAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.xAxis.label;\n\n    setAccessXAxis({\n      rootEle: this.stackedBarChartEl,\n      hasXAxis: this.innerXAxis ? this.innerXAxis.visible : false,\n      xAxis: this.layout === 'vertical' ? this.x || false : this.y || false, // this is optional for some charts, if hasXAxis is always false\n      xAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasXAxis is always false\n    });\n  }\n\n  setYAxisAccessibility() {\n    const axisAccessor = this.layout === 'vertical' ? this.valueAccessor : this.groupAccessor;\n    const axisLabel =\n      this.yAxis.label && this.yAxis.label !== ''\n        ? this.yAxis.label\n        : this.dataKeyNames && this.dataKeyNames[axisAccessor]\n        ? this.dataKeyNames[axisAccessor]\n        : this.yAxis.label;\n\n    setAccessYAxis({\n      rootEle: this.stackedBarChartEl,\n      hasYAxis: this.innerYAxis ? this.innerYAxis.visible : false,\n      yAxis: this.layout === 'vertical' ? this.y || false : this.x || false, // this is optional for some charts, if hasXAxis is always false\n      yAxisLabel: axisLabel ? axisLabel : '' // this is optional for some charts, if hasXAxis is always false\n    });\n  }\n\n  drawBaseline() {\n    if (this.layout === 'vertical') {\n      drawAxis({\n        root: this.rootG,\n        height: this.innerPaddedHeight,\n        width: this.innerPaddedWidth,\n        axisScale: this.x,\n        left: false,\n        padding: this.padding,\n        markOffset: this.y(0) || -1,\n        duration: this.duration\n      });\n    }\n    if (this.layout === 'horizontal') {\n      drawAxis({\n        root: this.rootG,\n        height: this.innerPaddedHeight,\n        width: this.innerPaddedWidth,\n        axisScale: this.y,\n        left: true,\n        padding: this.padding,\n        markOffset: this.x(0) || -1,\n        duration: this.duration\n      });\n    }\n  }\n\n  // dashed line grid for chart\n  drawXGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.x,\n      false,\n      !this.innerXAxis.gridVisible,\n      this.xAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  drawYGrid() {\n    drawGrid(\n      this.gridG,\n      this.innerPaddedHeight,\n      this.innerPaddedWidth,\n      this.y,\n      true,\n      !this.innerYAxis.gridVisible,\n      this.yAxis.tickInterval,\n      this.duration\n    );\n  }\n\n  setGlobalSelections() {\n    const dataBoundToBarGroups = this.barG.selectAll('.stacked-bar-series').data(this.series, d => d.key);\n\n    this.enterBarWrappers = dataBoundToBarGroups.enter().append('g');\n    this.exitBarWrappers = dataBoundToBarGroups.exit();\n    this.updateBarWrappers = dataBoundToBarGroups.merge(this.enterBarWrappers);\n\n    const dataBoundToGeometries = this.updateBarWrappers\n      .selectAll('.stacked-bar')\n      .data(d => d.values, d => d[this.ordinalAccessor]);\n\n    this.enter = dataBoundToGeometries.enter().append('rect');\n    this.exit = dataBoundToGeometries.exit();\n    this.update = dataBoundToGeometries.merge(this.enter);\n\n    this.exitSize = this.exit.size();\n    this.enterSize = this.enter.size();\n\n    const dataBoundToLabelWrappers = this.labelG\n      .selectAll('.stacked-bar-dataLabel-series')\n      .data(this.series, d => d.key);\n    this.enterLabelWrappers = dataBoundToLabelWrappers.enter().append('g');\n    this.exitLabelWrappers = dataBoundToLabelWrappers.exit();\n    this.updateLabelWrappers = dataBoundToLabelWrappers.merge(this.enterLabelWrappers);\n\n    const dataBoundToLabels = this.updateLabelWrappers\n      .selectAll('.stacked-bar-dataLabel')\n      .data(d => d.values, d => d[this.ordinalAccessor]);\n    this.enterLabels = dataBoundToLabels.enter().append('text');\n    this.exitLabels = dataBoundToLabels.exit();\n    this.updateLabels = dataBoundToLabels.merge(this.enterLabels);\n\n    const dataBoundToTotalLabels = this.totalLabels\n      .selectAll('.bar-dataLabel-group text')\n      .data(this.series, d => d.key);\n    this.enterTotalLabels = dataBoundToTotalLabels.enter().append('text');\n    this.exitTotalLabels = dataBoundToTotalLabels.exit();\n    this.updateTotalLabels = dataBoundToTotalLabels.merge(this.enterTotalLabels);\n  }\n\n  enterGeometries() {\n    this.enter.interrupt();\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    const padding = this.layout === 'vertical' ? 'innerPaddedWidth' : 'innerPaddedHeight';\n\n    this.enter\n      .attr('class', 'stacked-bar')\n      .attr('cursor', !this.suppressEvents ? this.cursor : null)\n      .each((_d, i, n) => {\n        initializeElementAccess(n[i]);\n      })\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null)\n      .attr('fill', (d, i) => {\n        const clicked =\n          this.clickHighlight &&\n          this.clickHighlight.length > 0 &&\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n        const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n        const baseColor = this.colorArr[i];\n        return clicked && this.clickStyle.color\n          ? visaColors[this.clickStyle.color] || this.clickStyle.color\n          : clicked\n          ? baseColor\n          : hovered && this.hoverStyle.color\n          ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n          : baseColor;\n      })\n      .attr('opacity', 0)\n      .attr(valueAxis, d => {\n        let scale = this[valueAxis];\n        if (this.interpolating) {\n          scale = this.interpolating[valueAxis];\n        }\n        let direction = d.stackEnd;\n        if (d.stackEnd < 0) {\n          direction = d.stackStart;\n        }\n        if (typeof d.enteringStackStart === 'number') {\n          direction = d.enteringStackStart;\n        }\n        return scale(direction / this.modifier(d));\n      })\n      .attr(valueDimension, 0)\n      .attr(ordinalAxis, d => {\n        let scale = this[ordinalAxis];\n        if (this.interpolating) {\n          scale = this.interpolating[ordinalAxis];\n        }\n        return scale(d[this.groupAccessor]);\n      })\n      .attr(ordinalDimension, () => {\n        let scale = this[ordinalAxis];\n        if (this.interpolating) {\n          scale = this.interpolating[ordinalAxis];\n        }\n        return scale.bandwidth();\n      });\n\n    this.enterBarWrappers\n      .attr('class', 'stacked-bar-series entering')\n      .each((_, i, n) => {\n        // we bind accessible interactivity and semantics here (role, tabindex, etc)\n        initializeElementAccess(n[i]);\n      })\n      .selectAll('.stacked-bar')\n      .attr(valueDimension, d => {\n        return this.layout === 'vertical'\n          ? this.y(d.stackEnd / this.modifier(d)) - this.y(d.stackStart / this.modifier(d))\n          : this.x(d.stackStart / this.modifier(d)) - this.x(d.stackEnd / this.modifier(d));\n      });\n\n    this.enterBarWrappers\n      .selectAll('.stacked-bar')\n      .attr(valueAxis, d => {\n        return this.layout === 'vertical'\n          ? this.y(d.stackStart / this.modifier(d))\n          : this.x(d.stackEnd / this.modifier(d));\n      })\n      .attr(ordinalAxis, d => {\n        let shift = this[ordinalAxis](d[this.groupAccessor]) + this[ordinalAxis].bandwidth() / 2;\n        shift =\n          this[ordinalAxis](d[this.groupAccessor]) +\n          (this[ordinalAxis].bandwidth() / 2) * (shift / (this[padding] / 2));\n        return shift;\n      })\n      .attr(ordinalDimension, 0);\n\n    this.enterBarWrappers.order();\n    this.enter.order();\n  }\n\n  updateGeometries() {\n    this.update.interrupt();\n\n    this.update\n      .transition('opacity')\n      .duration((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          select(n[i]).classed('entering', false);\n          return this.duration;\n        }\n        return 0;\n      })\n      .ease(easeCircleIn)\n      .attr('opacity', d =>\n        checkInteraction(d, 1, this.hoverOpacity, this.hoverHighlight, this.clickHighlight, this.innerInteractionKeys)\n      )\n      .call(transitionEndAll, () => {\n        this.update.classed('entering', false);\n      });\n  }\n\n  exitGeometries() {\n    this.exit.interrupt();\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    const padding = this.layout === 'vertical' ? 'innerPaddedWidth' : 'innerPaddedHeight';\n\n    this.exit\n      .attr('filter', null)\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr(valueDimension, 0)\n      .attr(valueAxis, d => {\n        let direction = d.stackEnd;\n        if (d.stackEnd < 0) {\n          direction = d.stackStart;\n        }\n        return this[valueAxis](direction / this.modifier(d));\n      })\n      .attr(ordinalAxis, d => this[ordinalAxis](d[this.groupAccessor]));\n\n    this.exitBarWrappers\n      .selectAll('.stacked-bar')\n      .attr('filter', null)\n      .transition('exit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('opacity', 0)\n      .attr(valueAxis, (_, i, n) => select(n[i]).attr(valueAxis))\n      .attr(ordinalAxis, (_d, i, n) => {\n        const self = select(n[i]);\n        let shift = +self.attr(ordinalAxis) + +self.attr(ordinalDimension) / 2;\n        shift = +self.attr(ordinalAxis) + (+self.attr(ordinalDimension) / 2) * (shift / (this[padding] / 2));\n        return shift;\n      })\n      .attr(valueDimension, (_, i, n) => select(n[i]).attr(valueDimension))\n      .attr(ordinalDimension, 0);\n\n    // this new transtition ensures that the chart counts and all labels\n    // correctly reflect the newest information\n    this.update\n      .transition('accessibilityAfterExit')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        // before we exit geometries, we need to check if a focus exists or not\n        const focusDidExist = checkAccessFocus(this.rootG.node());\n        // then we must remove the exiting elements\n        this.exit.remove();\n        this.exitBarWrappers.remove();\n        // then our util can count geometries\n        this.setChartCountAccessibility();\n        // our group's label should update with new counts too\n        this.setGroupAccessibilityID();\n        // since items exited, labels must receive updated values\n        this.setGeometryAriaLabels();\n        // and also make sure the user's focus isn't lost\n        retainAccessFocus({\n          parentGNode: this.rootG.node(),\n          focusDidExist\n          // recursive: true\n        });\n      });\n  }\n\n  drawGeometries() {\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n    // const padding = this.layout === 'vertical' ? 'innerPaddedWidth' : 'innerPaddedHeight';\n\n    this.updateBarWrappers\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        this.updateBarWrappers.classed('entering', false);\n      });\n\n    this.update\n      .classed('geometryIsMoving', (d, i, n) => {\n        const geometryIsUpdating = checkAttributeTransitions(select(n[i]), [\n          {\n            attr: ordinalAxis,\n            numeric: true,\n            newValue: this[ordinalAxis](d[this.groupAccessor])\n          },\n          {\n            attr: ordinalDimension,\n            numeric: true,\n            newValue: this[ordinalAxis].bandwidth()\n          },\n          {\n            attr: valueAxis,\n            numeric: true,\n            newValue:\n              this.layout === 'vertical'\n                ? this.y(d.stackStart / this.modifier(d))\n                : this.x(d.stackEnd / this.modifier(d))\n          },\n          {\n            attr: valueDimension,\n            numeric: true,\n            newValue:\n              this.layout === 'vertical'\n                ? this.y(d.stackEnd / this.modifier(d)) - this.y(d.stackStart / this.modifier(d))\n                : this.x(d.stackStart / this.modifier(d)) - this.x(d.stackEnd / this.modifier(d))\n          }\n        ]);\n        return geometryIsUpdating;\n      })\n      .attr(`data-${ordinalAxis}`, d => this[ordinalAxis](d[this.groupAccessor]))\n      .attr(`data-${ordinalDimension}`, this[ordinalAxis].bandwidth())\n      .attr(`data-${valueAxis}`, d => {\n        return this.layout === 'vertical'\n          ? this.y(d.stackStart / this.modifier(d))\n          : this.x(d.stackEnd / this.modifier(d));\n      })\n      .attr(`data-${valueDimension}`, d => {\n        return this.layout === 'vertical'\n          ? this.y(d.stackEnd / this.modifier(d)) - this.y(d.stackStart / this.modifier(d))\n          : this.x(d.stackStart / this.modifier(d)) - this.x(d.stackEnd / this.modifier(d));\n      })\n      .attr('data-translate-x', this.padding.left + this.margin.left)\n      .attr('data-translate-y', this.padding.top + this.margin.top)\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr(valueAxis, d => {\n        return this.layout === 'vertical'\n          ? this.y(d.stackStart / this.modifier(d))\n          : this.x(d.stackEnd / this.modifier(d));\n      })\n      .attr(valueDimension, d => {\n        return this.layout === 'vertical'\n          ? this.y(d.stackEnd / this.modifier(d)) - this.y(d.stackStart / this.modifier(d))\n          : this.x(d.stackStart / this.modifier(d)) - this.x(d.stackEnd / this.modifier(d));\n      })\n      .attr(ordinalAxis, d => this[ordinalAxis](d[this.groupAccessor]))\n      .attr(ordinalDimension, this[ordinalAxis].bandwidth())\n      .call(transitionEndAll, () => {\n        setTimeout(() => {\n          this.update.classed('geometryIsMoving', false);\n          this.updateInteractionState();\n\n          this.updateLabels.classed('textIsMoving', false);\n          this.checkLabelColorAgainstBackground();\n        }, 0); // 33 is the magic number: it is approx 1 frame at 30fps, so the largest, least-noticable timeout\n        // we must make sure if geometries move, that our focus indicator does too\n        retainAccessFocus({\n          parentGNode: this.rootG.node()\n        });\n\n        // now we can emit the event that transitions are complete\n        this.transitionEndEvent.emit({ chartID: this.chartID });\n      });\n  }\n\n  updateInteractionState() {\n    removeHoverStrokes(this.svg.node());\n    // we created an \"opacity\" transition namespace in update's transition\n    // we override it here to instantly display opacity state (below)\n    this.update.interrupt('opacity');\n    this.updateLabels.interrupt('opacity');\n\n    // we use this.update and this.labelCurrent from setGlobalSelection here\n    // the lifecycle state does not matter (enter/update/exit)\n    // since interaction state can happen at any time\n\n    this.update\n      .attr('opacity', d =>\n        checkInteraction(d, 1, this.hoverOpacity, this.hoverHighlight, this.clickHighlight, this.innerInteractionKeys)\n      )\n      .attr('fill', (d, i) => {\n        const clicked =\n          this.clickHighlight &&\n          this.clickHighlight.length > 0 &&\n          checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n        const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n        const baseColor = this.colorArr[i];\n        return clicked && this.clickStyle.color\n          ? visaColors[this.clickStyle.color] || this.clickStyle.color\n          : clicked\n          ? baseColor\n          : hovered && this.hoverStyle.color\n          ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n          : baseColor;\n      })\n      .each((d, i, n) => {\n        const me = select(n[i]);\n        if (!this.accessibility.hideStrokes && !me.classed('geometryIsMoving')) {\n          const clicked =\n            this.clickHighlight &&\n            this.clickHighlight.length > 0 &&\n            checkClicked(d, this.clickHighlight, this.innerInteractionKeys);\n          const hovered = this.hoverHighlight && checkHovered(d, this.hoverHighlight, this.innerInteractionKeys);\n          const baseColor = this.preparedColors[i];\n          const state = clicked ? 'click' : hovered ? 'hover' : 'rest';\n          const color =\n            clicked && this.clickStyle.color\n              ? visaColors[this.clickStyle.color] || this.clickStyle.color\n              : clicked\n              ? baseColor\n              : hovered && this.hoverStyle.color\n              ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n              : baseColor;\n          if (state === 'hover') {\n            drawHoverStrokes({\n              inputElement: n[i],\n              id: this.chartID,\n              key: d[this.ordinalAccessor] + d[this.groupAccessor],\n              strokeWidth: this.hoverStyle.strokeWidth,\n              fill: color\n            });\n          }\n          const filter = this.strokes[state + color];\n          if (filter !== me.attr('filter')) {\n            // this setTimeout is actually related to a browser bug in safari (it won't draw\n            // updates if the filter changes from one type to another). we must remove the\n            // filter and then add the right one in a different scope of execution\n            if (this.isSafari) {\n              me.attr('filter', null);\n              setTimeout(() => {\n                me.attr('filter', filter);\n              }, 0);\n            } else {\n              me.attr('filter', filter);\n            }\n          }\n        } else {\n          me.attr('filter', null);\n        }\n      });\n    // in case the fill/stroke contents change, we want to update our focus indicator to match\n    // (the focus indicator copies the whole element being focused to place it on top)\n    retainAccessFocus({\n      parentGNode: this.rootG.node()\n    });\n\n    setLegendInteractionState({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.ordinalAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.hoverStyle,\n      clickStyle: this.clickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  setLabelOpacity() {\n    const addCollisionClass = this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly;\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n    let textHeight = 15; // default label is usually 15\n\n    this.updateLabels\n      // .interrupt('opacity')\n      .each((_, i, n) => {\n        if (i === 0) {\n          // we just need to check this on one element\n          const textElement = n[i];\n          const style = getComputedStyle(textElement);\n          const fontSize = parseFloat(style.fontSize);\n          textHeight = Math.max(fontSize - 1, 1); // clone.getBBox().height;\n        }\n      });\n    this.processLabelOpacity(this.updateLabels, addCollisionClass);\n    this.updateTotalLabels.attr('opacity', this.showTotalValue && !this.normalized ? 1 : 0);\n\n    if (addCollisionClass) {\n      const labelsAdded = this.updateLabels.filter((_, i, n) => select(n[i]).classed('collision-added'));\n      const labelsRemoved = this.updateLabels\n        .filter((_, i, n) => select(n[i]).classed('collision-removed'))\n        .attr('data-use-dx', hideOnly) // need to add this for remove piece of collision below\n        .attr('data-use-dy', hideOnly); // .transition().duration(0);\n\n      const collisionSettings = {\n        vertical: {\n          top: {\n            validPositions: ['bottom'],\n            offsets: [5]\n          },\n          middle: {\n            validPositions: ['middle'],\n            offsets: [1]\n          },\n          bottom: {\n            validPositions: ['top'],\n            offsets: [textHeight / 2]\n          }\n        },\n        horizontal: {\n          right: {\n            validPositions: ['left'],\n            offsets: [8]\n          },\n          middle: {\n            validPositions: ['middle'],\n            offsets: [1]\n          },\n          left: {\n            validPositions: ['right'],\n            offsets: [20]\n          }\n        }\n      };\n\n      const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n      const boundsScope =\n        collisionPlacement && collisionSettings[this.layout][collisionPlacement] // check whether placement provided maps correctly\n          ? this.dataLabel.collisionPlacement\n          : this.layout === 'vertical'\n          ? 'top' // if we don't have collisionPlacement\n          : 'right';\n\n      // we can now remove labels as well if we need to...\n      if (labelsRemoved.size() > 0) {\n        this.bitmaps = resolveLabelCollision({\n          bitmaps: this.bitmaps,\n          labelSelection: labelsRemoved,\n          avoidMarks: [],\n          validPositions: ['middle'],\n          offsets: [1],\n          accessors: ['key'],\n          size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n          hideOnly: false,\n          removeOnly: true\n        });\n\n        // remove temporary class now\n        labelsRemoved.classed('collision-removed', false);\n      }\n\n      // we can now add labels as well if we need to...\n      if (labelsAdded.size() > 0) {\n        this.bitmaps = placeDataLabels({\n          root: labelsAdded,\n          xScale: this.x,\n          yScale: this.y,\n          ordinalAccessor: this.groupAccessor,\n          valueAccessor: this.valueAccessor,\n          placement: this.dataLabel.placement,\n          layout: this.layout,\n          chartType: 'stacked',\n          normalized: this.normalized,\n          avoidCollision: {\n            runOccupancyBitmap: this.dataLabel.visible && this.dataLabel.placement === 'auto',\n            bitmaps: this.bitmaps,\n            labelSelection: labelsAdded,\n            avoidMarks: [this.update],\n            validPositions: hideOnly ? ['middle'] : collisionSettings[this.layout][boundsScope].validPositions,\n            offsets: hideOnly ? [1] : collisionSettings[this.layout][boundsScope].offsets,\n            accessors: [this.groupAccessor, this.ordinalAccessor, 'key'], // key is created for lines by nesting done in line,\n            size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n            boundsScope: hideOnly ? undefined : boundsScope,\n            hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly,\n            suppressMarkDraw: true\n          }\n        });\n\n        // remove temporary class now\n        labelsAdded.classed('collision-added', false);\n      }\n    }\n  }\n\n  processLabelOpacity(selection, addCollisionClass?) {\n    const opacity = this.dataLabel.visible ? 1 : 0;\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const ordinalDimension = this.layout === 'vertical' ? 'width' : 'height';\n    const valueDimension = this.layout === 'vertical' ? 'height' : 'width';\n\n    selection.attr('opacity', (d, i, n) => {\n      const prevOpacity = +select(n[i]).attr('opacity');\n      const styleVisibility = select(n[i]).style('visibility');\n      const dimensions = {};\n      dimensions[ordinalDimension] = this[ordinalAxis].bandwidth();\n      dimensions[valueDimension] =\n        this.layout === 'vertical'\n          ? this.y(d.stackEnd / this.modifier(d)) - this.y(d.stackStart / this.modifier(d))\n          : this.x(d.stackStart / this.modifier(d)) - this.x(d.stackEnd / this.modifier(d));\n      const hasRoom =\n        this.dataLabel.placement === 'auto' || // we ignore show small labels when running collision algorithm\n        this.dataLabel.collisionHideOnly ||\n        this.accessibility.showSmallLabels ||\n        verifyTextHasSpace({\n          text: formatDataLabel(d, this.innerLabelAccessor, this.dataLabel.format, this.normalized),\n          dimensions,\n          fontSize: 14\n        });\n      const targetOpacity = hasRoom\n        ? checkInteraction(\n            d,\n            opacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n          ? addCollisionClass\n            ? Number.EPSILON\n            : 0\n          : 1\n        : 0;\n      if (\n        ((targetOpacity === 1 && styleVisibility === 'hidden') || prevOpacity !== targetOpacity) &&\n        addCollisionClass\n      ) {\n        if (targetOpacity === 1) {\n          select(n[i])\n            .classed('collision-added', true)\n            .style('visibility', null);\n        } else {\n          select(n[i]).classed('collision-removed', true);\n        }\n      }\n      return targetOpacity;\n    });\n  }\n\n  checkLabelColorAgainstBackground() {\n    this.updateLabels.attr('fill', (d, i, n) => {\n      return this.textTreatmentHandler(d, i, n);\n    });\n  }\n\n  textTreatmentHandler = (d, i, n) => {\n    const me = select(n[i]);\n    const bgColor =\n      this.clickHighlight &&\n      this.clickHighlight.length > 0 &&\n      checkClicked(d, this.clickHighlight, this.innerInteractionKeys) &&\n      this.clickStyle.color\n        ? visaColors[this.clickStyle.color] || this.clickStyle.color\n        : this.hoverHighlight &&\n          checkHovered(d, this.hoverHighlight, this.innerInteractionKeys) &&\n          this.hoverStyle.color\n        ? visaColors[this.hoverStyle.color] || this.hoverStyle.color\n        : this.preparedColors[i];\n\n    const color = autoTextColor(bgColor);\n    if (!me.classed('textIsMoving')) {\n      const filter = this.textStrokes[bgColor];\n      if (filter !== me.attr('filter')) {\n        if (this.isSafari) {\n          me.attr('filter', null);\n          setTimeout(() => {\n            me.attr('filter', filter);\n          }, 0);\n        } else {\n          me.attr('filter', filter);\n        }\n      }\n    } else {\n      me.attr('filter', null);\n    }\n\n    return color;\n  };\n\n  bindInteractivity() {\n    this.update\n      .on('click', !this.suppressEvents ? (d, i, n) => this.onClickHandler(d, n[i]) : null)\n      .on('mouseover', !this.suppressEvents ? (d, i, n) => this.onHoverHandler(d, n[i]) : null)\n      .on('mouseout', !this.suppressEvents ? () => this.onMouseOutHandler() : null);\n  }\n\n  setRoundedCorners() {\n    this.update\n      .transition('shared_update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .attr('rx', this.roundedCorner)\n      .attr('ry', this.roundedCorner);\n  }\n\n  setSelectedClass() {\n    this.update.classed('highlight', (d, i, n) => {\n      let selected = checkInteraction(d, true, false, '', this.clickHighlight, this.innerInteractionKeys);\n      selected = this.clickHighlight && this.clickHighlight.length ? selected : false;\n      const selectable = this.accessibility.elementsAreInterface;\n      setElementInteractionAccessState(n[i], selected, selectable);\n      return selected;\n    });\n  }\n\n  updateCursor() {\n    this.update.attr('cursor', !this.suppressEvents ? this.cursor : null);\n    select(this.stackedBarChartEl)\n      .selectAll('.legend')\n      .style('cursor', !this.suppressEvents && this.legend.interactive && this.legend.visible ? this.cursor : null);\n  }\n\n  enterDataLabels() {\n    const opacity = this.dataLabel.visible ? 1 : 0;\n    this.enterLabelWrappers.attr('class', 'stacked-bar-dataLabel-series entering');\n\n    this.enterLabels\n      .attr('class', 'stacked-bar-dataLabel entering')\n      .style('pointer-events', 'none')\n      .classed('stacked-bar-dataLabel-' + this.layout, true)\n      .attr(\n        'opacity',\n        d =>\n          checkInteraction(\n            d,\n            opacity,\n            this.hoverOpacity,\n            this.hoverHighlight,\n            this.clickHighlight,\n            this.innerInteractionKeys\n          ) < 1\n            ? 0\n            : Number.EPSILON // we need this to be epsilon initially to enable auto placement algorithm to run on load\n      )\n      .attr('fill', this.textTreatmentHandler);\n\n    placeDataLabels({\n      root: this.enterLabels,\n      xScale: this.x,\n      yScale: this.y,\n      ordinalAccessor: this.groupAccessor,\n      valueAccessor: this.valueAccessor,\n      placement: this.dataLabel.placement,\n      layout: this.layout,\n      chartType: 'stacked',\n      normalized: this.normalized\n    });\n  }\n\n  updateDataLabels() {\n    this.updateLabels.interrupt();\n\n    this.updateLabelWrappers\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        this.updateLabelWrappers.classed('entering', false);\n      });\n\n    const updatingLabels = this.updateLabels\n      .transition('opacity')\n      .ease(easeCircleIn)\n      .duration((_, i, n) => {\n        if (select(n[i]).classed('entering')) {\n          select(n[i]).classed('entering', false);\n          return this.duration;\n        }\n        return 0;\n      });\n    this.processLabelOpacity(updatingLabels);\n    updatingLabels.call(transitionEndAll, () => {\n      this.updateLabels.classed('entering', false);\n    });\n  }\n\n  exitDataLabels() {\n    this.exitLabelWrappers\n      .selectAll('text')\n      .attr('filter', null)\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .attr('opacity', 0)\n      .call(transitionEndAll, () => {\n        this.exitLabelWrappers.remove();\n      });\n\n    this.exitLabels\n      .attr('filter', null)\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  drawDataLabels() {\n    let textHeight = 15; // default label is usually 15\n    const hideOnly = this.dataLabel.placement !== 'auto' && this.dataLabel.collisionHideOnly;\n\n    this.updateLabels\n      .classed('stacked-bar-dataLabel-horizontal', false)\n      .classed('stacked-bar-dataLabel-vertical', false)\n      .classed('stacked-bar-dataLabel-' + this.layout, true)\n      .text((d, i, n) => {\n        if (d[this.valueAccessor] === 0 && !this.showZeroLabels) {\n          return '';\n        }\n        if (i === 0) {\n          // we just need to check this on one element\n          const textElement = n[i];\n          const style = getComputedStyle(textElement);\n          const fontSize = parseFloat(style.fontSize);\n          textHeight = Math.max(fontSize - 1, 1); // clone.getBBox().height;\n        }\n        return formatDataLabel(d, this.innerLabelAccessor, this.dataLabel.format, this.normalized);\n      })\n      .style('visibility', (_, i, n) =>\n        this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly\n          ? select(n[i]).style('visibility')\n          : null\n      );\n\n    this.updateLabelWrappers\n      .transition('update')\n      .duration(this.duration)\n      .ease(easeCircleIn)\n      .call(transitionEndAll, () => {\n        this.updateLabelWrappers.classed('entering', false);\n      });\n\n    const ordinalAxis = this.layout === 'vertical' ? 'x' : 'y';\n    const valueAxis = this.layout === 'vertical' ? 'y' : 'x';\n    const stack = this.layout === 'vertical' ? 'stackStart' : 'stackEnd';\n\n    const labelUpdate = this.updateLabels\n      .classed('textIsMoving', d => {\n        if (!this.interpolating) {\n          return false;\n        }\n        const textIsMoving =\n          this.interpolating[ordinalAxis](d[this.groupAccessor]) !== this[ordinalAxis](d[this.groupAccessor]) ||\n          this.interpolating[valueAxis](d[stack] / this.modifier(d)) !== this[valueAxis](d[stack] / this.modifier(d));\n        return textIsMoving;\n      })\n      .attr('data-translate-x', this.padding.left + this.margin.left)\n      .attr('data-translate-y', this.padding.top + this.margin.top)\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration);\n\n    const collisionSettings = {\n      vertical: {\n        top: {\n          validPositions: ['bottom'],\n          offsets: [5]\n        },\n        middle: {\n          validPositions: ['middle'],\n          offsets: [1]\n        },\n        bottom: {\n          validPositions: ['top'],\n          offsets: [textHeight / 2]\n        }\n      },\n      horizontal: {\n        right: {\n          validPositions: ['left'],\n          offsets: [8]\n        },\n        middle: {\n          validPositions: ['middle'],\n          offsets: [1]\n        },\n        left: {\n          validPositions: ['right'],\n          offsets: [20]\n        }\n      }\n    };\n\n    const collisionPlacement = this.dataLabel && this.dataLabel.collisionPlacement;\n    const boundsScope =\n      collisionPlacement && collisionSettings[this.layout][collisionPlacement] // check whether placement provided maps correctly\n        ? this.dataLabel.collisionPlacement\n        : this.layout === 'vertical'\n        ? 'top' // if we don't have collisionPlacement\n        : 'right';\n\n    this.bitmaps = placeDataLabels({\n      root: labelUpdate,\n      xScale: this.x,\n      yScale: this.y,\n      ordinalAccessor: this.groupAccessor,\n      valueAccessor: this.valueAccessor,\n      placement: this.dataLabel.placement,\n      layout: this.layout,\n      chartType: 'stacked',\n      normalized: this.normalized,\n      avoidCollision: {\n        runOccupancyBitmap: this.dataLabel.visible && this.dataLabel.placement === 'auto',\n        labelSelection: labelUpdate,\n        avoidMarks: [this.update],\n        validPositions: hideOnly ? ['middle'] : collisionSettings[this.layout][boundsScope].validPositions,\n        offsets: hideOnly ? [1] : collisionSettings[this.layout][boundsScope].offsets,\n        accessors: [this.groupAccessor, this.ordinalAccessor, 'key'], // key is created for lines by nesting done in line,\n        size: [roundTo(this.width, 0), roundTo(this.height, 0)],\n        boundsScope: hideOnly ? undefined : boundsScope,\n        hideOnly: this.dataLabel.visible && this.dataLabel.collisionHideOnly\n      }\n    });\n  }\n  // draw total value dataLabel\n\n  enterTotalDataLabels() {\n    const groupDimension = this.layout === 'vertical' ? 'x' : 'y';\n    const sumDimension = this.layout === 'vertical' ? 'y' : 'x';\n\n    this.enterTotalLabels\n      .attr('class', 'bar-dataLabel-' + this.layout)\n      .attr('opacity', Number.EPSILON)\n      .attr('fill', visaColors.dark_text)\n      .attr(groupDimension, d => {\n        return this[groupDimension](d.key) + this[groupDimension].bandwidth() / 2;\n      })\n      .attr(sumDimension, d => {\n        return this[sumDimension](d.sumAboveZero) + 4;\n      });\n    // .attr('text-anchor', this.layout === 'vertical' ? 'middle' : 'start');\n  }\n\n  updateTotalDataLabels() {\n    const totalValueOpacity = this.showTotalValue && !this.normalized ? 1 : 0;\n\n    this.updateTotalLabels\n      .transition('total_opacity')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', totalValueOpacity);\n  }\n\n  exitTotalDataLabels() {\n    this.exitTotalLabels\n      .transition('exit')\n      .ease(easeCircleIn)\n      .duration(this.duration / 2)\n      .attr('opacity', 0)\n      .remove();\n  }\n\n  drawTotalDataLabels() {\n    const groupDimension = this.layout === 'vertical' ? 'x' : 'y';\n    const sumDimension = this.layout === 'vertical' ? 'y' : 'x';\n    const totalValueOpacity = this.showTotalValue && !this.normalized ? 1 : 0;\n\n    this.updateTotalLabels\n      .text(d => formatStats(d.sum, this.dataLabel.format))\n      .attr('text-anchor', this.layout === 'vertical' ? 'middle' : 'start');\n\n    const totalLabelSelection = this.updateTotalLabels\n      .classed('bar-dataLabel-horizontal', false)\n      .classed('bar-dataLabel-vertical', false)\n      .classed('bar-dataLabel-' + this.layout, true)\n      .attr(`data-${groupDimension}`, d => {\n        return this[groupDimension](d.key) + this[groupDimension].bandwidth() / 2;\n      })\n      .attr(`data-${sumDimension}`, d => {\n        return this[sumDimension](d.sumAboveZero); // 5 is a spacer for the collision placement using middle\n      })\n      .attr('data-use-dx', true)\n      .attr('data-use-dy', true)\n      .attr('data-translate-x', this.padding.left + this.margin.left)\n      .attr('data-translate-y', this.padding.top + this.margin.top)\n      .attr('dx', this.layout === 'vertical' ? '0' : '0.3em')\n      .attr('dy', this.layout === 'vertical' ? '-0.3em' : '.3em')\n      .style('visibility', (_, i, n) =>\n        this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly\n          ? select(n[i]).style('visibility')\n          : null\n      )\n      .transition('update')\n      .ease(easeCircleIn)\n      .duration(this.duration)\n      .attr('opacity', totalValueOpacity);\n\n    // for stacked we will only run this if data label props are true and show totals is visible\n    if (this.showTotalValue && (this.dataLabel.placement === 'auto' || this.dataLabel.collisionHideOnly)) {\n      // const validPositions = this.layout === 'vertical' ? ['middle', 'top'] : ['middle', 'right'];\n      this.bitmaps = resolveLabelCollision({\n        bitmaps: this.bitmaps,\n        labelSelection: totalLabelSelection,\n        avoidMarks: [this.update],\n        validPositions: ['middle'], // only do middle since we are forcing to collisionHideOnly\n        offsets: [1], // [1,1]\n        accessors: [this.ordinalAccessor],\n        // boundsScope: this.layout === 'vertical' ? 'top' : 'center',\n        size: [roundTo(this.width, 0), roundTo(this.height, 0)], // we need the whole width and height for pie\n        hideOnly: true\n      });\n\n      // since we are hardcoding hide only for these, we must apply x/y locations after collision\n      totalLabelSelection\n        .attr(groupDimension, d => {\n          return this[groupDimension](d.key) + this[groupDimension].bandwidth() / 2;\n        })\n        .attr(sumDimension, d => {\n          return this[sumDimension](d.sumAboveZero);\n        });\n    } else {\n      totalLabelSelection\n        .attr(groupDimension, d => {\n          return this[groupDimension](d.key) + this[groupDimension].bandwidth() / 2;\n        })\n        .attr(sumDimension, d => {\n          return this[sumDimension](d.sumAboveZero);\n        });\n    }\n  }\n\n  drawReferenceLines() {\n    setReferenceLine({\n      groupName: 'stack',\n      root: this.referencesG,\n      referenceLines: this.referenceLines,\n      referenceStyle: this.referenceStyle,\n      innerPaddedWidth: this.innerPaddedWidth,\n      innerPaddedHeight: this.innerPaddedHeight,\n      duration: this.duration,\n      layout: this.layout,\n      x: this.x,\n      y: this.y,\n      unitTest: this.unitTest\n    });\n  }\n\n  drawAnnotations() {\n    let ordinalScale = this.layout !== 'horizontal' ? this.x : this.y;\n    const valueScale = this.layout !== 'horizontal' ? this.y : this.x;\n    if (this.data[0][this.groupAccessor] instanceof Date) {\n      const maxDate = max(this.data, d => d[this.groupAccessor]);\n      const minDate = min(this.data, d => d[this.groupAccessor]);\n      const range = this.layout !== 'horizontal' ? [0, this.innerPaddedWidth] : [this.innerPaddedHeight, 0];\n\n      ordinalScale = scaleTime()\n        .domain([minDate, maxDate])\n        .range(range);\n    }\n    annotate({\n      source: this.rootG.node(),\n      data: this.annotations,\n      xScale: this.layout !== 'horizontal' ? ordinalScale : valueScale,\n      xAccessor: this.layout !== 'horizontal' ? this.groupAccessor : this.valueAccessor,\n      yScale: this.layout !== 'horizontal' ? valueScale : ordinalScale,\n      yAccessor: this.layout !== 'horizontal' ? this.valueAccessor : this.groupAccessor,\n      width: this.width,\n      height: this.height,\n      padding: this.padding,\n      margin: this.margin,\n      bitmaps: this.bitmaps\n    });\n  }\n\n  setAnnotationAccessibility() {\n    setAccessAnnotation(this.getLanguageString(), this.stackedBarChartEl, this.annotations, this.referenceLines);\n  }\n\n  drawLegendElements() {\n    drawLegend({\n      root: this.legendG,\n      uniqueID: this.chartID,\n      width: this.innerPaddedWidth,\n      height: this.margin.top + 20,\n      colorArr: this.colorArr,\n      baseColorArr: this.preparedColors,\n      hideStrokes: this.accessibility.hideStrokes,\n      margin: this.margin,\n      padding: this.padding,\n      duration: this.duration,\n      type: 'bar',\n      fontSize: 16,\n      data: this.legendData,\n      labelKey: this.ordinalAccessor,\n      label: this.legend.labels,\n      hide: !this.legend.visible,\n      interactionKeys: this.innerInteractionKeys,\n      groupAccessor: this.ordinalAccessor,\n      hoverHighlight: this.hoverHighlight,\n      clickHighlight: this.clickHighlight,\n      hoverStyle: this.hoverStyle,\n      clickStyle: this.clickStyle,\n      hoverOpacity: this.hoverOpacity\n    });\n  }\n\n  bindLegendInteractivity() {\n    select(this.stackedBarChartEl)\n      .selectAll('.legend')\n      .style('cursor', !this.suppressEvents && this.legend.interactive && this.legend.visible ? this.cursor : null)\n      .on(\n        'click',\n        !this.suppressEvents && this.legend.interactive && this.legend.visible\n          ? (d, i, n) => this.onClickHandler(d, n[i])\n          : null\n      )\n      .on(\n        'mouseover',\n        !this.suppressEvents && this.legend.interactive && this.legend.visible\n          ? (d, i, n) => {\n              this.hoverEvent.emit({ data: d, target: n[i] });\n            }\n          : null\n      )\n      .on(\n        'mouseout',\n        !this.suppressEvents && this.legend.interactive && this.legend.visible ? () => this.onMouseOutHandler() : null\n      );\n  }\n\n  // new accessibility functions added here\n  setTagLevels() {\n    this.topLevel = findTagLevel(this.highestHeadingLevel);\n    this.bottomLevel = findTagLevel(this.highestHeadingLevel, 3);\n  }\n\n  setChartDescriptionWrapper() {\n    // this initializes the accessibility description section of the chart\n    initializeDescriptionRoot({\n      language: this.getLanguageString(),\n      rootEle: this.stackedBarChartEl,\n      title: this.accessibility.title || this.mainTitle,\n      chartTag: 'stacked-bar-chart',\n      uniqueID: this.chartID,\n      highestHeadingLevel: this.highestHeadingLevel,\n      redraw: this.shouldRedrawWrapper,\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      hideDataTable: this.accessibility.hideDataTableButton\n    });\n    this.shouldRedrawWrapper = false;\n  }\n\n  setParentSVGAccessibility() {\n    setAccessibilityController({\n      chartTag: 'stacked-bar-chart',\n      language: this.getLanguageString(),\n      node: this.svg.node(),\n      title: this.accessibility.title || this.mainTitle,\n      description: this.subTitle,\n      uniqueID: this.chartID,\n      geomType: 'bar',\n      includeKeyNames: this.accessibility.includeDataKeyNames,\n      dataKeys: scopeDataKeys(this, chartAccessors, 'stacked-bar-chart'),\n      dataKeyNames: this.dataKeyNames,\n      groupAccessor: this.groupAccessor,\n      groupName: 'stack',\n      groupKeys: this.showTotalValue ? ['sumMessage'] : false, // for special group-level keys (typically not needed)\n      disableKeyNav:\n        this.suppressEvents &&\n        this.accessibility.elementsAreInterface === false &&\n        this.accessibility.keyboardNavConfig &&\n        this.accessibility.keyboardNavConfig.disabled,\n      // nested: '', // dumbbell only right now\n      // recursive: true // circle-pack only right now\n      normalized: this.normalized,\n      valueAccessor: this.valueAccessor\n    });\n  }\n\n  setGeometryAccessibilityAttributes() {\n    // this makes sure every geom element has correct event handlers + semantics (role, tabindex, etc)\n    this.update.each((_d, i, n) => {\n      initializeElementAccess(n[i]);\n    });\n  }\n\n  setGeometryAriaLabels() {\n    // this adds an ARIA label to each geom (a description read by screen readers)\n    const keys = scopeDataKeys(this, chartAccessors, 'stacked-bar-chart');\n    this.update.each((_d, i, n) => {\n      setElementFocusHandler({\n        chartTag: 'stacked-bar-chart',\n        language: this.getLanguageString(),\n        node: n[i],\n        geomType: 'bar',\n        includeKeyNames: this.accessibility.includeDataKeyNames,\n        dataKeys: keys,\n        dataKeyNames: this.dataKeyNames,\n        groupKeys: this.showTotalValue ? ['sumMessage'] : false,\n        groupName: 'stack',\n        uniqueID: this.chartID,\n        disableKeyNav:\n          this.suppressEvents &&\n          this.accessibility.elementsAreInterface === false &&\n          this.accessibility.keyboardNavConfig &&\n          this.accessibility.keyboardNavConfig.disabled,\n        normalized: this.normalized,\n        valueAccessor: this.valueAccessor\n      });\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setGroupAccessibilityID() {\n    // this sets an ARIA label on all the g elements in the chart\n    this.updateBarWrappers.each((_, i, n) => {\n      setElementAccessID({\n        node: n[i],\n        uniqueID: this.chartID\n      });\n    });\n  }\n\n  setChartAccessibilityTitle() {\n    setAccessTitle(this.getLanguageString(), this.stackedBarChartEl, this.accessibility.title || this.mainTitle);\n  }\n\n  setChartAccessibilitySubtitle() {\n    setAccessSubtitle(this.getLanguageString(), this.stackedBarChartEl, this.subTitle);\n  }\n\n  setChartAccessibilityLongDescription() {\n    setAccessLongDescription(this.getLanguageString(), this.stackedBarChartEl, this.accessibility.longDescription);\n  }\n\n  setChartAccessibilityExecutiveSummary() {\n    setAccessExecutiveSummary(this.getLanguageString(), this.stackedBarChartEl, this.accessibility.executiveSummary);\n  }\n\n  setChartAccessibilityPurpose() {\n    setAccessPurpose(this.getLanguageString(), this.stackedBarChartEl, this.accessibility.purpose);\n  }\n\n  setChartAccessibilityContext() {\n    setAccessContext(this.getLanguageString(), this.stackedBarChartEl, this.accessibility.contextExplanation);\n  }\n\n  setChartAccessibilityStatisticalNotes() {\n    setAccessStatistics(this.getLanguageString(), this.stackedBarChartEl, this.accessibility.statisticalNotes);\n  }\n\n  setChartCountAccessibility() {\n    // this is our automated section that describes the chart contents\n    // (like geometry and gorup counts, etc)\n    setAccessChartCounts({\n      rootEle: this.stackedBarChartEl,\n      parentGNode: this.barG.node(), // pass the wrapper to <g> or geometries here, should be single node selection\n      chartTag: 'stacked-bar-chart',\n      geomType: 'bars',\n      groupName: 'stacks'\n      // recursive: true\n    });\n  }\n\n  setChartAccessibilityStructureNotes() {\n    setAccessStructure(this.getLanguageString(), this.stackedBarChartEl, this.accessibility.structureNotes);\n  }\n  // new accessibility stuff ends here\n\n  onChangeHandler() {\n    if (this.accessibility && typeof this.accessibility.onChangeFunc === 'function') {\n      const d = {\n        updated: this.updated,\n        added: this.enterSize,\n        removed: this.exitSize\n      };\n      this.accessibility.onChangeFunc(d);\n    }\n    this.updated = false;\n    this.enterSize = 0;\n    this.exitSize = 0;\n  }\n\n  onClickHandler(d, n) {\n    this.clickEvent.emit({ data: d, target: n });\n  }\n\n  onHoverHandler(d, n) {\n    overrideTitleTooltip(this.chartID, true);\n    this.hoverEvent.emit({ data: d, target: n });\n    if (this.showTooltip && d) {\n      this.eventsTooltip({ data: d, evt: event, isToShow: true });\n    }\n  }\n\n  onMouseOutHandler() {\n    overrideTitleTooltip(this.chartID, false);\n    this.mouseOutEvent.emit();\n    if (this.showTooltip) {\n      this.eventsTooltip({ isToShow: false });\n    }\n  }\n\n  // set initial style (instead of copying css class across the lib)\n  setTooltipInitialStyle() {\n    initTooltipStyle(this.tooltipG);\n  }\n\n  // tooltip\n  eventsTooltip({ data, evt, isToShow }: { data?: any; evt?: any; isToShow: boolean }) {\n    drawTooltip({\n      root: this.tooltipG,\n      data,\n      event: evt,\n      isToShow,\n      tooltipLabel: this.tooltipLabel,\n      dataKeyNames: this.dataKeyNames,\n      xAxis: this.xAxis,\n      yAxis: this.yAxis,\n      dataLabel: this.dataLabel,\n      layout: this.layout,\n      ordinalAccessor: this.groupAccessor, // on purpose - to match tooltip util format\n      groupAccessor: this.ordinalAccessor, // on purpose - to match tooltip util format\n      valueAccessor: this.valueAccessor,\n      normalized: this.normalized,\n      chartType: 'stacked'\n    });\n  }\n\n  render() {\n    this.drawStartEvent.emit({ chartID: this.chartID });\n    // theme hardcoded until functionality is added\n    const theme = 'light';\n\n    // everything between this comment and the third should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n    this.init();\n    if (this.shouldSetLocalizationConfig) {\n      this.setLocalizationConfig();\n      this.shouldSetLocalizationConfig = false;\n    }\n    if (this.shouldSetTagLevels) {\n      this.setTagLevels();\n      this.shouldSetTagLevels = false;\n    }\n    if (this.shouldCheckValueAxis) {\n      if (this.layout === 'horizontal') {\n        this.shouldUpdateXAxis = true;\n        this.shouldSetXAxisAccessibility = true;\n        this.shouldUpdateXGrid = true;\n      } else if (this.layout === 'vertical') {\n        this.shouldUpdateYAxis = true;\n        this.shouldSetYAxisAccessibility = true;\n        this.shouldUpdateYGrid = true;\n      }\n      this.shouldCheckValueAxis = false;\n    }\n    if (this.shouldCheckLabelAxis) {\n      if (this.layout === 'vertical') {\n        this.shouldUpdateXAxis = true;\n        this.shouldSetXAxisAccessibility = true;\n      } else if (this.layout === 'horizontal') {\n        this.shouldUpdateYAxis = true;\n        this.shouldSetYAxisAccessibility = true;\n      }\n      this.shouldCheckLabelAxis = false;\n    }\n    if (this.shouldUpdateData) {\n      this.prepareData();\n      this.shouldUpdateData = false;\n    }\n    if (this.shouldUpdateLegendData) {\n      this.prepareLegendData();\n      this.shouldUpdateLegendData = false;\n    }\n    if (this.shouldSetDimensions) {\n      this.setDimensions();\n      this.shouldSetDimensions = false;\n    }\n    if (this.shouldUpdateScales) {\n      this.prepareScales();\n      this.shouldUpdateScales = false;\n    }\n    if (this.shouldValidateClickHighlight) {\n      this.validateClickHighlight();\n      this.shouldValidateClickHighlight = false;\n    }\n    if (this.shouldValidateInteractionKeys) {\n      this.validateInteractionKeys();\n      this.shouldValidateInteractionKeys = false;\n    }\n    if (this.shouldValidateDataLabelAccessor) {\n      this.validateDataLabelAccessor();\n      this.shouldValidateDataLabelAccessor = false;\n    }\n    if (this.shouldValidateAxes) {\n      this.validateAxes();\n      this.shouldValidateAxes = false;\n    }\n    if (this.shouldUpdateTableData) {\n      this.setTableData();\n      this.shouldUpdateTableData = false;\n    }\n    if (this.shouldValidate) {\n      this.shouldValidateAccessibilityProps();\n      this.shouldValidateLocalizationProps();\n      this.shouldValidate = false;\n    }\n    if (this.shouldSetColors) {\n      this.setColors();\n      this.shouldSetColors = false;\n    }\n    if (this.shouldValidateLabelPlacement) {\n      this.validateLabelPlacement();\n      this.shouldValidateLabelPlacement = false;\n    }\n    // Everything between this comment and the first should eventually\n    // be moved into componentWillUpdate (if the Stencil bug is fixed)\n\n    return (\n      <div class={`o-layout is--${this.layout} ${theme}`}>\n        <div class=\"o-layout--chart\">\n          <this.topLevel class=\"stacked-bar-main-title vcl-main-title\">{this.mainTitle}</this.topLevel>\n          <this.bottomLevel class=\"visa-ui-text--instructions stacked-bar-sub-title vcl-sub-title\" />\n          <div class=\"stacked-bar-legend vcl-legend\" style={{ display: this.legend.visible ? 'block' : 'none' }} />\n          <keyboard-instructions\n            uniqueID={this.chartID}\n            geomType={'bar'}\n            groupName={'stack'} // taken from initializeDescriptionRoot, on bar this should be \"bar group\", stacked bar is \"stack\", and clustered is \"cluster\"\n            language={this.getLanguageString()}\n            chartTag={'stacked-bar-chart'}\n            width={this.width - (this.margin ? this.margin.right || 0 : 0)}\n            isInteractive={this.accessibility.elementsAreInterface}\n            hasCousinNavigation\n            disabled={\n              this.suppressEvents &&\n              this.accessibility.elementsAreInterface === false &&\n              this.accessibility.keyboardNavConfig &&\n              this.accessibility.keyboardNavConfig.disabled\n            } // the chart is \"simple\"\n          />\n          <div class=\"visa-viz-d3-stacked-bar-container\" />\n          <div class=\"stacked-bar-tooltip vcl-tooltip\" style={{ display: this.showTooltip ? 'block' : 'none' }} />\n          <data-table\n            uniqueID={this.chartID}\n            isCompact\n            language={this.getLanguageString()}\n            tableColumns={this.tableColumns}\n            dataKeyNames={this.dataKeyNames}\n            data={this.tableData}\n            padding={this.padding}\n            margin={this.margin}\n            hideDataTable={this.accessibility.hideDataTableButton}\n            unitTest={this.unitTest}\n          />\n        </div>\n        {/* <canvas id=\"bitmap-render\" /> */}\n      </div>\n    );\n  }\n  private init() {\n    // reading properties\n    const keys = Object.keys(StackedBarChartDefaultValues);\n    let i = 0;\n    // accept 0 or false as default value\n    const exceptions = {\n      mainTitle: {\n        exception: ''\n      },\n      subTitle: {\n        exception: ''\n      },\n      showTooltip: {\n        exception: false\n      },\n      wrapLabel: {\n        exception: false\n      },\n      showTotalValue: {\n        exception: false\n      },\n      barIntervalRatio: {\n        exception: 0\n      },\n      hoverOpacity: {\n        exception: 0\n      }\n    };\n    for (i = 0; i < keys.length; i++) {\n      const exception = !exceptions[keys[i]] ? false : this[keys[i]] === exceptions[keys[i]].exception;\n      this[keys[i]] = this[keys[i]] || exception ? this[keys[i]] : StackedBarChartDefaultValues[keys[i]];\n    }\n  }\n}\n\n// incorporate OSS licenses into build\nwindow['VisaChartsLibOSSLicenses'] = getLicenses(); // tslint:disable-line no-string-literal\n"],"mappings":"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","ignoreList":[]}