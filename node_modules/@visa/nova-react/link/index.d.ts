import { ElementType, ForwardedRef, HTMLAttributes, ReactElement } from 'react';
export type LinkProperties = {
    /** Alternate color scheme */
    alternate?: boolean;
    /** @ignore */
    className?: string;
    /** Disabled */
    disabled?: HTMLAttributes<HTMLElement>['aria-disabled'];
    /** No Underline */
    noUnderline?: boolean;
    /** Skip Link */
    skipLink?: boolean;
} & ({
    /** Cloned Element (not compatible with tag property) */
    element?: never;
    /** Tag (not compatible with element property) */
    tag?: ElementType;
} | {
    /** Cloned Element (not compatible with tag property) */
    element?: ReactElement;
    /** Tag (not compatible with element property) */
    tag?: never;
});
/**
 * Text-based navigation elements that directs users to another destination.
 * @docs {@link https://design.visa.com/react/components/link | See Docs}
 * @vgar TODO
 * @wcag TODO
 */
declare const _default: <HTMLElementType = HTMLAnchorElement>(props: {
    children?: import("react").ReactNode | import("react").ReactNode[];
    ref?: ForwardedRef<HTMLElementType> | undefined;
} & import("react").AllHTMLAttributes<HTMLElementType> & (import("react").SVGAttributes<HTMLElementType> & LinkProperties)) => ReactElement;
export default _default;
