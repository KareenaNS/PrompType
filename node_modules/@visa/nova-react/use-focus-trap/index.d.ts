/**
 *              Â© 2025 Visa
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *         http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 **/
import { KeyboardEvent, MutableRefObject } from 'react';
export type UseFocusTrapOptions<HTMLElementType extends HTMLElement = HTMLDialogElement> = {
    /** Document object */
    document?: Document;
    /** DOM elements selector */
    querySelector?: string;
    /** Ref object to use if ref isn't supplied in properties. */
    ref?: MutableRefObject<HTMLElementType | null>;
};
/**
 * @docs {@link https://design.visa.com/react/hooks/use-focus-trap | See Docs}
 * @description This hook is used to trap focus inside a container.
 * @related dialog, panel
 */
export declare const useFocusTrap: {
    <HTMLElementType extends HTMLElement = HTMLDialogElement>(useFocusTrapOptions?: UseFocusTrapOptions<HTMLElementType>): {
        /** Function that handles on key down for navigation */
        onKeyNavigation: (e: KeyboardEvent, open?: boolean) => void;
        /** Ref object to use if ref isn't supplied in props */
        ref: MutableRefObject<HTMLElementType | null>;
    };
    displayName: string;
    defaultProps: {
        querySelector: string;
    };
};
export default useFocusTrap;
