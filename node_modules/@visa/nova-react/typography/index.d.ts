import { ElementType, ForwardedRef } from 'react';
export type TypographyProperties = {
    /** @ignore */
    className?: string;
    /** Color variant */
    colorScheme?: 'default' | 'subtle' | 'active' | 'on-active';
    /** Tag of Component */
    tag?: ElementType;
} & ({
    /** @deprecated Migrate to `colorScheme` prop */
    variant?: 'color-default' | 'color-subtle';
} | {
    /** Style variant */
    variant?: 'body-1' | 'body-2-bold' | 'body-2-link' | 'body-2-medium' | 'body-2' | 'body-3' | 'button-large' | 'button-medium' | 'button-small' | 'display-1' | 'display-2' | 'headline-1' | 'headline-2' | 'headline-3' | 'headline-4' | 'label-active' | 'label-large-active' | 'label-large' | 'label-small' | 'label' | 'overline' | 'subtitle-1' | 'subtitle-2' | 'subtitle-3';
});
/**
 * Styles text in a consistent manner.
 * @docs {@link https://design.visa.com/react/components/typography | See Docs}
 * @vgar TODO
 * @wcag TODO
 */
declare const _default: <HTMLElementType = HTMLParagraphElement>(props: {
    children?: import("react").ReactNode | import("react").ReactNode[];
    ref?: ForwardedRef<HTMLElementType> | undefined;
} & import("react").AllHTMLAttributes<HTMLElementType> & (import("react").SVGAttributes<HTMLElementType> & TypographyProperties)) => import("react").ReactElement;
export default _default;
