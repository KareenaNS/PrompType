import { ElementType, ForwardedRef } from 'react';
export type CheckboxProperties = {
    /** @ignore */
    children?: never;
    /** @ignore */
    className?: string;
} & ({
    /** Whether a checkbox is indeterminate state, only allowable on "input" tag types. This should only be set to true if checked is false. */
    indeterminate?: never;
    /** Tag of Component */
    tag: Exclude<ElementType, 'input'>;
} | {
    /** Whether a checkbox is indeterminate state, only allowable on "input" tag types. This should only be set to true if checked is false. */
    indeterminate?: boolean;
    /** Tag of Component */
    tag?: 'input';
});
/**
 * Interactive element enabling users to select one or more independent options from a group.
 * @docs {@link https://design.visa.com/react/components/checkbox | See Docs}
 * @vgar TODO
 * @wcag TODO
 * @related checkbox-panel
 */
declare const _default: <HTMLElementType = HTMLInputElement>(props: {
    children?: import("react").ReactNode | import("react").ReactNode[];
    ref?: ForwardedRef<HTMLElementType> | undefined;
} & import("react").AllHTMLAttributes<HTMLElementType> & (import("react").SVGAttributes<HTMLElementType> & CheckboxProperties)) => import("react").ReactElement;
export default _default;
